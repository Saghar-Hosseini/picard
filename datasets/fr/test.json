[{"db_id":"dog_kennels","query":"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","query_toks":["SELECT","professional_id",",","last_name",",","cell_number","FROM","Professionals","WHERE","state","=","'Indiana","'","UNION","SELECT","T1.professional_id",",","T1.last_name",",","T1.cell_number","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id","GROUP","BY","T1.professional_id","HAVING","count","(","*",")",">","2"],"query_toks_no_value":["select","professional_id",",","last_name",",","cell_number","from","professionals","where","state","=","value","union","select","t1",".","professional_id",",","t1",".","last_name",",","t1",".","cell_number","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id","group","by","t1",".","professional_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,40,false],null]],[0,[0,[0,43,false],null]]]],"union":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,33,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,40,false],null]],[0,[0,[0,43,false],null]]]],"union":null,"where":[]},"where":[[false,2,[0,[0,38,false],null],"\"Indiana\"",null]]},"question_toks":["C'est","quels","professionnels","habitent","dans","l'\u00c9tat","d'Indiana","qui","a","compl\u00e9t\u00e9","des","traitements","sur","plus","de","2","traitements","?","Listez","son","identifiant",",","son","nom","de","famille","et","son","t\u00e9l\u00e9phone","cellulaire","."],"question":"C'est quels professionnels habitent dans l'\u00c9tat d'Indiana qui a compl\u00e9t\u00e9 des traitements sur plus de 2 traitements? Listez son identifiant, son nom de famille et son t\u00e9l\u00e9phone cellulaire."},{"db_id":"wta_1","query":"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","winner_name",",","winner_rank_points","FROM","matches","GROUP","BY","winner_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","winner_name",",","winner_rank_points","from","matches","group","by","winner_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,34,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,36,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nom","du","vainqueur","qui","a","remport\u00e9","le","plus","de","matchs","et","combien","de","points","de","classement","ce","joueur","poss\u00e8de-t-il","?"],"question":"Quel est le nom du vainqueur qui a remport\u00e9 le plus de matchs et combien de points de classement ce joueur poss\u00e8de-t-il?"},{"db_id":"dog_kennels","query":"SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1","query_toks":["SELECT","cost_of_treatment","FROM","Treatments","ORDER","BY","date_of_treatment","DESC","LIMIT","1"],"query_toks_no_value":["select","cost_of_treatment","from","treatments","order","by","date_of_treatment","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,48,false],null]]],"select":[false,[[0,[0,[0,49,false],null]]]],"union":null,"where":[]},"question_toks":["Montre-moi","le","co\u00fbt","du","dernier","traitement","effectu\u00e9","."],"question":"Montre-moi le co\u00fbt du dernier traitement effectu\u00e9."},{"db_id":"dog_kennels","query":"SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs","query_toks":["SELECT","first_name","FROM","Professionals","UNION","SELECT","first_name","FROM","Owners","EXCEPT","SELECT","name","FROM","Dogs"],"query_toks_no_value":["select","first_name","from","professionals","union","select","first_name","from","owners","except","select","name","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]]]],"union":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"where":[]},"question_toks":["Quels","pr\u00e9noms","sont","utilis\u00e9s","pour","les","professionnels","ou","les","propri\u00e9taires","mais","ne","sont","pas","utilis\u00e9s","comme","pr\u00e9noms","de","chien","?"],"question":"Quels pr\u00e9noms sont utilis\u00e9s pour les professionnels ou les propri\u00e9taires mais ne sont pas utilis\u00e9s comme pr\u00e9noms de chien?"},{"db_id":"orchestra","query":"SELECT count(DISTINCT Nationality) FROM conductor","query_toks":["SELECT","count","(","DISTINCT","Nationality",")","FROM","conductor"],"query_toks_no_value":["select","count","(","distinct","nationality",")","from","conductor"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,4,true],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","nationalit\u00e9s","diff\u00e9rentes","les","conducteurs","ont-ils","?"],"question":"Combien de nationalit\u00e9s diff\u00e9rentes les conducteurs ont-ils?"},{"db_id":"concert_singer","query":"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","query_toks":["SELECT","T2.name",",","T2.location","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","WHERE","T1.Year","=","2014","INTERSECT","SELECT","T2.name",",","T2.location","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","WHERE","T1.Year","=","2015"],"query_toks_no_value":["select","t2",".","name",",","t2",".","location","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","where","t1",".","year","=","value","intersect","select","t2",".","name",",","t2",".","location","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","where","t1",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2015.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2014.0,null]]},"question_toks":["Trouve","le","nom","et","l'emplacement","des","stades","ou","quelques","concerts","ont","eu","lieu","dans","les","ann\u00e9es","2014","et","2015","."],"question":"Trouve le nom et l'emplacement des stades ou quelques concerts ont eu lieu dans les ann\u00e9es 2014 et 2015."},{"db_id":"wta_1","query":"SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016","query_toks":["SELECT","winner_name","FROM","matches","WHERE","YEAR","=","2013","INTERSECT","SELECT","winner_name","FROM","matches","WHERE","YEAR","=","2016"],"query_toks_no_value":["select","winner_name","from","matches","where","year","=","value","intersect","select","winner_name","from","matches","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],2016.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],2013.0,null]]},"question_toks":["\u00c9num\u00e8re","les","noms","de","tous","les","gagnants","qui","ont","jou\u00e9","en","2013","et","2016","."],"question":"\u00c9num\u00e8re les noms de tous les gagnants qui ont jou\u00e9 en 2013 et 2016."},{"db_id":"world_1","query":"SELECT count(DISTINCT LANGUAGE) FROM countrylanguage","query_toks":["SELECT","count","(","DISTINCT","LANGUAGE",")","FROM","countrylanguage"],"query_toks_no_value":["select","count","(","distinct","language",")","from","countrylanguage"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,24,true],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nombre","de","langues","distinctes","utilis\u00e9es","dans","le","monde","?"],"question":"Quel est le nombre de langues distinctes utilis\u00e9es dans le monde?"},{"db_id":"course_teach","query":"SELECT Name FROM teacher WHERE Hometown != \"Little Lever Urban Distric\"","query_toks":["SELECT","Name","FROM","teacher","WHERE","Hometown","!","=","``","Little","Lever","Urban","Distric","''"],"query_toks_no_value":["select","name","from","teacher","where","hometown","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,7,[0,[0,7,false],null],"\"Little Lever Urban Distric\"",null]]},"question_toks":["``","Quels","sont","les","noms","des","enseignants","dont","la","ville","natale","n'est","pas","''","``","Little","Lever","Urban","District","''","``","?","''"],"question":"\"Quels sont les noms des enseignants dont la ville natale n'est pas\" \"Little Lever Urban District\" \"?\""},{"db_id":"car_1","query":"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;","query_toks":["SELECT","DISTINCT","T1.model","FROM","MODEL_LIST","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.model","=","T2.model","JOIN","CARS_DATA","AS","T3","ON","T2.MakeId","=","T3.id","WHERE","T3.year",">","1980",";"],"query_toks_no_value":["select","distinct","t1",".","model","from","model_list","as","t1","join","car_names","as","t2","on","t1",".","model","=","t2",".","model","join","cars_data","as","t3","on","t2",".","makeid","=","t3",".","id","where","t3",".","year",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,14,false],null]],"table_units":[["table_unit",3],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,3,[0,[0,23,false],null],1980.0,null]]},"question_toks":["C'est","quoi","les","diff\u00e9rent","mod\u00e8les","des","cartes","produits","apr\u00e8s","1980","?"],"question":"C'est quoi les diff\u00e9rent mod\u00e8les des cartes produits apr\u00e8s 1980?"},{"db_id":"orchestra","query":"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company","query_toks":["SELECT","Record_Company",",","COUNT","(","*",")","FROM","orchestra","GROUP","BY","Record_Company"],"query_toks_no_value":["select","record_company",",","count","(","*",")","from","orchestra","group","by","record_company"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Veuillez","indiquer","les","diff\u00e9rentes","maisons","de","disques","et","le","nombre","d'orchestres","correspondant","."],"question":"Veuillez indiquer les diff\u00e9rentes maisons de disques et le nombre d'orchestres correspondant."},{"db_id":"car_1","query":"SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;","query_toks":["SELECT","mpg","FROM","CARS_DATA","WHERE","Cylinders","=","8","OR","YEAR","<","1980","ORDER","BY","mpg","DESC","LIMIT","1",";"],"query_toks_no_value":["select","mpg","from","cars_data","where","cylinders","=","value","or","year","<","value","order","by","mpg","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,17,false],null]]],"select":[false,[[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],8.0,null],"or",[false,4,[0,[0,23,false],null],1980.0,null]]},"question_toks":["Quel","est","le","kilom\u00e9trage","maximum","par","gallon","de","la","voiture","\u00e0","8","cylindres","ou","produite","avant","1980","?"],"question":"Quel est le kilom\u00e9trage maximum par gallon de la voiture \u00e0 8 cylindres ou produite avant 1980?"},{"db_id":"flight_2","query":"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"","query_toks":["SELECT","T1.FlightNo","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.SourceAirport","=","T2.AirportCode","WHERE","T2.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","t1",".","flightno","from","flights","as","t1","join","airports","as","t2","on","t1",".","sourceairport","=","t2",".","airportcode","where","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["``","Quels","sont","les","num\u00e9ros","de","vol","au","d\u00e9part","de","la","ville","''","``","Aberdeen","''","``","?","''"],"question":"\"Quels sont les num\u00e9ros de vol au d\u00e9part de la ville\" \"Aberdeen\" \"?\""},{"db_id":"course_teach","query":"SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1","query_toks":["SELECT","Hometown","FROM","teacher","ORDER","BY","Age","ASC","LIMIT","1"],"query_toks_no_value":["select","hometown","from","teacher","order","by","age","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["C'est","quoi","la","ville","natale","du","plus","jeune","professeur","."],"question":"C'est quoi la ville natale du plus jeune professeur."},{"db_id":"orchestra","query":"SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Record_Company","FROM","orchestra","GROUP","BY","Record_Company","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","record_company","from","orchestra","group","by","record_company","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Indique","la","maison","de","disques","partag\u00e9e","par","le","plus","grand","nombre","d'orchestres","."],"question":"Indique la maison de disques partag\u00e9e par le plus grand nombre d'orchestres."},{"db_id":"network_1","query":"SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2","query_toks":["SELECT","T2.name","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","name","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,6,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["C'est","quoi","les","noms","des","\u00e9tudiants","qui","ont","deux","ou","plus","d'aim\u00e9s","."],"question":"C'est quoi les noms des \u00e9tudiants qui ont deux ou plus d'aim\u00e9s. "},{"db_id":"voter_1","query":"SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'","query_toks":["SELECT","count","(","*",")","FROM","votes","WHERE","state","=","'NY","'","OR","state","=","'CA","'"],"query_toks_no_value":["select","count","(","*",")","from","votes","where","state","=","value","or","state","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"NY\"",null],"or",[false,2,[0,[0,7,false],null],"\"CA\"",null]]},"question_toks":["Quel","est","le","nombre","de","votes","de","l'\u00c9tat","\u00ab","NY","\u00bb","ou","\u00ab","CA","\u00bb","?"],"question":"Quel est le nombre de votes de l'\u00c9tat \u00abNY\u00bb ou \u00abCA\u00bb?"},{"db_id":"world_1","query":"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District","query_toks":["SELECT","count","(","*",")",",","District","FROM","city","WHERE","Population",">","(","SELECT","avg","(","Population",")","FROM","city",")","GROUP","BY","District"],"query_toks_no_value":["select","count","(","*",")",",","district","from","city","where","population",">","(","select","avg","(","population",")","from","city",")","group","by","district"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,3,[0,[0,5,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,5,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Combien","de","villes","dans","chaque","district","ont","une","population","sup\u00e9rieure","\u00e0","la","population","moyenne","de","toutes","les","villes","?"],"question":"Combien de villes dans chaque district ont une population sup\u00e9rieure \u00e0 la population moyenne de toutes les villes?"},{"db_id":"flight_2","query":"SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"","query_toks":["SELECT","Country","FROM","AIRLINES","WHERE","Airline","=","``","JetBlue","Airways","''"],"query_toks_no_value":["select","country","from","airlines","where","airline","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"JetBlue Airways\"",null]]},"question_toks":["\u00c0","quel","pays","est","affili\u00e9e","Jetblue","Airways","?"],"question":"\u00c0 quel pays est affili\u00e9e Jetblue Airways?"},{"db_id":"dog_kennels","query":"SELECT count(DISTINCT professional_id) FROM Treatments","query_toks":["SELECT","count","(","DISTINCT","professional_id",")","FROM","Treatments"],"query_toks_no_value":["select","count","(","distinct","professional_id",")","from","treatments"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,46,true],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","num\u00e9ro","des","professionnels","qui","ont","trait\u00e9","seulement","des","chiens","."],"question":"Trouve le num\u00e9ro des professionnels qui ont trait\u00e9 seulement des chiens."},{"db_id":"wta_1","query":"SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016","query_toks":["SELECT","count","(","*",")","FROM","matches","WHERE","YEAR","=","2013","OR","YEAR","=","2016"],"query_toks_no_value":["select","count","(","*",")","from","matches","where","year","=","value","or","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],2013.0,null],"or",[false,2,[0,[0,38,false],null],2016.0,null]]},"question_toks":["Indique","le","nombre","de","tous","les","matches","qui","ont","jou\u00e9","au","cours","des","ann\u00e9es","2013","ou","2016","."],"question":"Indique le nombre de tous les matches qui ont jou\u00e9 au cours des ann\u00e9es 2013 ou 2016."},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","JOIN","AIRLINES","AS","T3","ON","T3.uid","=","T1.Airline","WHERE","T2.City","=","``","Aberdeen","''","AND","T3.Airline","=","``","United","Airlines","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","join","airlines","as","t3","on","t3",".","uid","=","t1",".","airline","where","t2",".","city","=","value","and","t3",".","airline","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null],"and",[false,2,[0,[0,2,false],null],"\"United Airlines\"",null]]},"question_toks":["Comptez","le","nombre","de","vols","United","Airlines","qui","arrivent","\u00e0","Aberdeen","."],"question":"Comptez le nombre de vols United Airlines qui arrivent \u00e0 Aberdeen."},{"db_id":"orchestra","query":"SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC","query_toks":["SELECT","Record_Company","FROM","orchestra","ORDER","BY","Year_of_Founded","DESC"],"query_toks_no_value":["select","record_company","from","orchestra","order","by","year_of_founded","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,10,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Quelles","sont","les","maisons","de","disques","des","orchestres","par","ordre","d\u00e9croissant","d'ann\u00e9es","de","cr\u00e9ation","?"],"question":"Quelles sont les maisons de disques des orchestres par ordre d\u00e9croissant d'ann\u00e9es de cr\u00e9ation?"},{"db_id":"orchestra","query":"SELECT Name FROM conductor WHERE Nationality != 'USA'","query_toks":["SELECT","Name","FROM","conductor","WHERE","Nationality","!","=","'USA","'"],"query_toks_no_value":["select","name","from","conductor","where","nationality","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,7,[0,[0,4,false],null],"\"USA\"",null]]},"question_toks":["``","Rapport","les","noms","des","conducteurs","qui","n'ont","pas","la","citoyennet\u00e9","``","''","EUA","''","''",".","''"],"question":"\"Rapport les noms des conducteurs qui n'ont pas la citoyennet\u00e9 \"\"EUA\"\".\""},{"db_id":"tvshow","query":"SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";","query_toks":["SELECT","Title","FROM","Cartoon","WHERE","Directed_by","=","``","Ben","Jones","''","OR","Directed_by","=","``","Brandon","Vietti","''",";"],"query_toks_no_value":["select","title","from","cartoon","where","directed_by","=","value","or","directed_by","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null],"or",[false,2,[0,[0,21,false],null],"\"Brandon Vietti\"",null]]},"question_toks":["``","\u00c9num\u00e8re","le","titre","de","tous","les","dessins","anim\u00e9s","r\u00e9alis\u00e9s","par","''","``","Ben","Jones","''","``","ou","''","``","Brandon","Vietti","''","``",".","''"],"question":"\"\u00c9num\u00e8re le titre de tous les dessins anim\u00e9s r\u00e9alis\u00e9s par\" \"Ben Jones\" \"ou\" \"Brandon Vietti\" \".\""},{"db_id":"car_1","query":"SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;","query_toks":["SELECT","count","(","*",")","FROM","CARS_DATA","WHERE","YEAR","=","1980",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],1980.0,null]]},"question_toks":["combien","de","voitures","ont","\u00e9t\u00e9","produites","en","1980","?"],"question":"combien de voitures ont \u00e9t\u00e9 produites en 1980?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"","query_toks":["SELECT","document_id",",","template_id",",","Document_Description","FROM","Documents","WHERE","document_name","=","``","Robbin","CV","''"],"query_toks_no_value":["select","document_id",",","template_id",",","document_description","from","documents","where","document_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Robbin CV\"",null]]},"question_toks":["Renvoyez","l'identifiant","du","document",",","l'ID","du","mod\u00e8le","et","la","description","du","document","avec","le","nom","Robbin","CV","."],"question":"Renvoyez l'identifiant du document, l'ID du mod\u00e8le et la description du document avec le nom Robbin CV."},{"db_id":"tvshow","query":"SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";","query_toks":["SELECT","Content","FROM","TV_Channel","WHERE","series_name","=","``","Sky","Radio","''",";"],"query_toks_no_value":["select","content","from","tv_channel","where","series_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Sky Radio\"",null]]},"question_toks":["C'est","quoi","le","contenu","du","s\u00e9rie","Sky","Radio","?"],"question":"C'est quoi le contenu du s\u00e9rie Sky Radio?"},{"db_id":"dog_kennels","query":"SELECT DISTINCT breed_code ,  size_code FROM dogs","query_toks":["SELECT","DISTINCT","breed_code",",","size_code","FROM","dogs"],"query_toks_no_value":["select","distinct","breed_code",",","size_code","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,23,false],null]],[0,[0,[0,24,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","type","de","race","unique","et","la","grandeur","des","chiens","."],"question":"Trouve le type de race unique et la grandeur des chiens."},{"db_id":"pets_1","query":"SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'","query_toks":["SELECT","T2.petid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","WHERE","T1.Lname","=","'Smith","'"],"query_toks_no_value":["select","t2",".","petid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","where","t1",".","lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Smith\"",null]]},"question_toks":["Trouvez","l'identifiant","de","l'animal","de","compagnie","appartenant","\u00e0","l'\u00e9l\u00e8ve","dont","le","nom","de","famille","est","\u00ab","Smith","\u00bb","."],"question":"Trouvez l'identifiant de l'animal de compagnie appartenant \u00e0 l'\u00e9l\u00e8ve dont le nom de famille est \u00abSmith\u00bb."},{"db_id":"concert_singer","query":"SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014","query_toks":["SELECT","name","FROM","stadium","EXCEPT","SELECT","T2.name","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","WHERE","T1.year","=","2014"],"query_toks_no_value":["select","name","from","stadium","except","select","t2",".","name","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","where","t1",".","year","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2014.0,null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","les","noms","de","tous","les","stades","sauf","les","stades","qui","ont","eu","un","concert","en","2014","."],"question":"Montre les noms de tous les stades sauf les stades qui ont eu un concert en 2014. "},{"db_id":"employee_hire_evaluation","query":"SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000","query_toks":["SELECT","district","FROM","shop","WHERE","Number_products","<","3000","INTERSECT","SELECT","district","FROM","shop","WHERE","Number_products",">","10000"],"query_toks_no_value":["select","district","from","shop","where","number_products","<","value","intersect","select","district","from","shop","where","number_products",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],10000.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,4,[0,[0,9,false],null],3000.0,null]]},"question_toks":["Quel","quartier","ont","deux","des","magasins","avec","moins","de","3000","produits","et","des","magasins","de","plus","de","10000","produits","?"],"question":"Quel quartier ont deux des magasins avec moins de 3000 produits et des magasins de plus de 10000 produits?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","query_toks":["SELECT","T1.first_name",",","T1.middle_name",",","T1.last_name",",","T1.student_id","FROM","Students","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.student_id","=","T2.student_id","GROUP","BY","T1.student_id","HAVING","count","(","*",")","=","2"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","middle_name",",","t1",".","last_name",",","t1",".","student_id","from","students","as","t1","join","student_enrolment","as","t2","on","t1",".","student_id","=","t2",".","student_id","group","by","t1",".","student_id","having","count","(","*",")","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,47,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,32,false]],"having":[[false,2,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","la","majeure","et","l'\u00e2ge","des","\u00e9l\u00e8ves","qui","n'ont","pas","d'animaux","de","compagnie","."],"question":"Trouve la majeure et l'\u00e2ge des \u00e9l\u00e8ves qui n'ont pas d'animaux de compagnie."},{"db_id":"pets_1","query":"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","query_toks":["SELECT","major",",","age","FROM","student","WHERE","stuid","NOT","IN","(","SELECT","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'",")"],"query_toks_no_value":["select","major",",","age","from","student","where","stuid","not","in","(","select","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null]]},null]]},"question_toks":["Trouvez","la","majeure","et","l'\u00e2ge","des","\u00e9l\u00e8ves","qui","n'ont","pas","d'animaux","de","compagnie","."],"question":"Trouvez la majeure et l'\u00e2ge des \u00e9l\u00e8ves qui n'ont pas d'animaux de compagnie."},{"db_id":"dog_kennels","query":"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","query_toks":["SELECT","T1.date_of_treatment",",","T2.first_name","FROM","Treatments","AS","T1","JOIN","Professionals","AS","T2","ON","T1.professional_id","=","T2.professional_id"],"query_toks_no_value":["select","t1",".","date_of_treatment",",","t2",".","first_name","from","treatments","as","t1","join","professionals","as","t2","on","t1",".","professional_id","=","t2",".","professional_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,46,false],null],[0,33,false],null]],"table_units":[["table_unit",7],["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,48,false],null]],[0,[0,[0,35,false],null]]]],"union":null,"where":[]},"question_toks":["C'est","quoi","la","date","et","le","pr\u00e9nom","du","professionnel","de","l","\u2019","exploitation","pour","chaque","traitement","?"],"question":"C'est quoi la date et le pr\u00e9nom du professionnel de l\u2019exploitation pour chaque traitement?"},{"db_id":"dog_kennels","query":"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","query_toks":["SELECT","DISTINCT","T1.first_name",",","T1.last_name","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","WHERE","cost_of_treatment","<","(","SELECT","avg","(","cost_of_treatment",")","FROM","Treatments",")"],"query_toks_no_value":["select","distinct","t1",".","first_name",",","t1",".","last_name","from","professionals","as","t1","join","treatments","as","t2","where","cost_of_treatment","<","(","select","avg","(","cost_of_treatment",")","from","treatments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,35,false],null]],[0,[0,[0,40,false],null]]]],"union":null,"where":[[false,4,[0,[0,49,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,49,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["C'est","quoi","le","pr\u00e9nom","et","le","nom","de","famille","des","professionnels","qui","ont","eu","un","traitement","en-dessous","des","prix","moyen","."],"question":"C'est quoi le pr\u00e9nom et le nom de famille des professionnels qui ont eu un traitement en-dessous des prix moyen. "},{"db_id":"student_transcripts_tracking","query":"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","query_toks":["SELECT","T1.course_name",",","T1.course_id","FROM","Courses","AS","T1","JOIN","Sections","AS","T2","ON","T1.course_id","=","T2.course_id","GROUP","BY","T1.course_id","HAVING","count","(","*",")","<","=","2"],"query_toks_no_value":["select","t1",".","course_name",",","t1",".","course_id","from","courses","as","t1","join","sections","as","t2","on","t1",".","course_id","=","t2",".","course_id","group","by","t1",".","course_id","having","count","(","*",")","<","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,24,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[[0,10,false]],"having":[[false,6,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","et","identifiants","de","chaque","cours","avec","moins","de","2","sections","?"],"question":"Quels sont les noms et identifiants de chaque cours avec moins de 2 sections? "},{"db_id":"orchestra","query":"SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)","query_toks":["SELECT","Orchestra","FROM","orchestra","WHERE","Orchestra_ID","NOT","IN","(","SELECT","Orchestra_ID","FROM","performance",")"],"query_toks_no_value":["select","orchestra","from","orchestra","where","orchestra_id","not","in","(","select","orchestra_id","from","performance",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[true,8,[0,[0,6,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Liste","les","noms","des","orchestres","qui","n'ont","aucune","performance","."],"question":"Liste les noms des orchestres qui n'ont aucune performance."},{"db_id":"concert_singer","query":"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","query_toks":["SELECT","song_name",",","song_release_year","FROM","singer","ORDER","BY","age","LIMIT","1"],"query_toks_no_value":["select","song_name",",","song_release_year","from","singer","order","by","age","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["C'est","quoi","les","noms","et","les","ann\u00e9es","de","publication","des","chansons","des","jeunes","chanteurs","?"],"question":"C'est quoi les noms et les ann\u00e9es de publication des chansons des jeunes chanteurs? "},{"db_id":"world_1","query":"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1","query_toks":["SELECT","T2.Language","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.Name","=","``","Aruba","''","ORDER","BY","Percentage","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","language","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","name","=","value","order","by","percentage","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,26,false],null]]],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Aruba\"",null]]},"question_toks":["Quelle","langue","est","la","plus","populaire","en","Aruba","?"],"question":"Quelle langue est la plus populaire en Aruba? "},{"db_id":"world_1","query":"SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","T1.Continent","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","GROUP","BY","T1.Continent","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","continent","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","group","by","t1",".","continent","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","continent","parle","le","plus","de","langues","?"],"question":"Quel continent parle le plus de langues? "},{"db_id":"museum_visit","query":"SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)","query_toks":["SELECT","name","FROM","museum","WHERE","num_of_staff",">","(","SELECT","min","(","num_of_staff",")","FROM","museum","WHERE","open_year",">","2010",")"],"query_toks_no_value":["select","name","from","museum","where","num_of_staff",">","(","select","min","(","num_of_staff",")","from","museum","where","open_year",">","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,3,[0,[0,3,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,3,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],2010.0,null]]},null]]},"question_toks":["trouve","les","noms","des","mus\u00e9e","qui","ont","plus","de","personnel","que","le","personnel","minimum","de","toutes","les","mus\u00e9es","ouvert","apr\u00e8s","2010","."],"question":"trouve les noms des mus\u00e9e qui ont plus de personnel que le personnel minimum de toutes les mus\u00e9es ouvert apr\u00e8s 2010."},{"db_id":"wta_1","query":"SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","country_code","FROM","players","GROUP","BY","country_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","country_code","from","players","group","by","country_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["trouve","le","code","du","pays","o\u00f9","a","le","plus","grand","nombre","de","joueurs","."],"question":"trouve le code du pays o\u00f9 a le plus grand nombre de joueurs."},{"db_id":"wta_1","query":"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","query_toks":["SELECT","T1.country_code",",","T1.first_name","FROM","players","AS","T1","JOIN","matches","AS","T2","ON","T1.player_id","=","T2.winner_id","WHERE","T2.tourney_name","=","'WTA","Championships","'","INTERSECT","SELECT","T1.country_code",",","T1.first_name","FROM","players","AS","T1","JOIN","matches","AS","T2","ON","T1.player_id","=","T2.winner_id","WHERE","T2.tourney_name","=","'Australian","Open","'"],"query_toks_no_value":["select","t1",".","country_code",",","t1",".","first_name","from","players","as","t1","join","matches","as","t2","on","t1",".","player_id","=","t2",".","winner_id","where","t2",".","tourney_name","=","value","intersect","select","t1",".","country_code",",","t1",".","first_name","from","players","as","t1","join","matches","as","t2","on","t1",".","player_id","=","t2",".","winner_id","where","t2",".","tourney_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,32,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,32,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,27,false],null],"\"Australian Open\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,27,false],null],"\"WTA Championships\"",null]]},"question_toks":["Quels","sont","le","code","de","pays","et","le","pr\u00e9nom","des","joueurs","qui","ont","gagn\u00e9","\u00e0","la","fois","au","tournoi","WTA","Championship","et","\u00e0","l'Open","d'Australie","?"],"question":"Quels sont le code de pays et le pr\u00e9nom des joueurs qui ont gagn\u00e9 \u00e0 la fois au tournoi WTA Championship et \u00e0 l'Open d'Australie?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"","query_toks":["SELECT","T2.document_name","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id","WHERE","T1.template_type_code","=","``","BK","''"],"query_toks_no_value":["select","t2",".","document_name","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id","where","t1",".","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"BK\"",null]]},"question_toks":["Afficher","tous","les","noms","de","documents","\u00e0","l'aide","de","mod\u00e8les","avec","le","code","de","type","de","mod\u00e8le","BK","."],"question":"Afficher tous les noms de documents \u00e0 l'aide de mod\u00e8les avec le code de type de mod\u00e8le BK."},{"db_id":"world_1","query":"SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000","query_toks":["SELECT","name","FROM","city","WHERE","Population","BETWEEN","160000","AND","900000"],"query_toks_no_value":["select","name","from","city","where","population","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,1,[0,[0,5,false],null],160000.0,900000.0]]},"question_toks":["Quelles","sont","les","villes","dont","la","population","se","situe","entre","160000","et","900000","?"],"question":"Quelles sont les villes dont la population se situe entre 160000 et 900000?"},{"db_id":"car_1","query":"SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;","query_toks":["SELECT","avg","(","mpg",")","FROM","CARS_DATA","WHERE","Cylinders","=","4",";"],"query_toks_no_value":["select","avg","(","mpg",")","from","cars_data","where","cylinders","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,17,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],4.0,null]]},"question_toks":["Quel","est","le","kilom\u00e9trage","moyen","par","gallon","de","toutes","les","cartes","\u00e0","4","cylindres","?"],"question":"Quel est le kilom\u00e9trage moyen par gallon de toutes les cartes \u00e0 4 cylindres?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id ,  document_name ,  document_description FROM Documents","query_toks":["SELECT","document_id",",","document_name",",","document_description","FROM","Documents"],"query_toks_no_value":["select","document_id",",","document_name",",","document_description","from","documents"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["R\u00e9pertoriez","les","identifiants","de","document",",","les","noms","de","document","et","les","descriptions","de","document","pour","tous","les","documents","."],"question":"R\u00e9pertoriez les identifiants de document, les noms de document et les descriptions de document pour tous les documents."},{"db_id":"network_1","query":"SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id","query_toks":["SELECT","name","FROM","Highschooler","EXCEPT","SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id"],"query_toks_no_value":["select","name","from","highschooler","except","select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","\u00e9tudiants","qui","n'ont","pas","d'amis","?"],"question":"Quels sont les noms des \u00e9tudiants qui n'ont pas d'amis?"},{"db_id":"car_1","query":"SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;","query_toks":["SELECT","COUNT","(","*",")","FROM","CARS_DATA","WHERE","Cylinders",">","6",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","cylinders",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],6.0,null]]},"question_toks":["Quel","est","le","nombre","de","voitures","de","plus","de","6","cylindres","?"],"question":"Quel est le nombre de voitures de plus de 6 cylindres?"},{"db_id":"wta_1","query":"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date","query_toks":["SELECT","first_name",",","last_name","FROM","players","WHERE","hand","=","'L","'","ORDER","BY","birth_date"],"query_toks_no_value":["select","first_name",",","last_name","from","players","where","hand","=","value","order","by","birth_date"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"L\"",null]]},"question_toks":["Listez","le","pr\u00e9nom","et","le","nom","de","toutes","les","joueurs","qui","sont","gauchier","\/","G","par","l'ordre","de","son","date","de","naissance","."],"question":"Listez le pr\u00e9nom et le nom de toutes les joueurs qui sont gauchier \/ G par l'ordre de son date de naissance. "},{"db_id":"tvshow","query":"SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";","query_toks":["SELECT","Weekly_Rank","FROM","TV_series","WHERE","Episode","=","``","A","Love","of","a","Lifetime","''",";"],"query_toks_no_value":["select","weekly_rank","from","tv_series","where","episode","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"A Love of a Lifetime\"",null]]},"question_toks":["``","Quelle","est","le","rang","de","l'\u00e9pisode","``","A","Love","of","a","Lifetime","''","?","''"],"question":"\"Quelle est le rang de l'\u00e9pisode \"A Love of a Lifetime\"?\""},{"db_id":"tvshow","query":"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","query_toks":["SELECT","count","(","*",")",",","Directed_by","FROM","cartoon","GROUP","BY","Directed_by"],"query_toks_no_value":["select","count","(","*",")",",","directed_by","from","cartoon","group","by","directed_by"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,21,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,21,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","bandes","dessines","chaque","directeur","\u00e0","cr\u00e9er","?"],"question":"Combien de bandes dessines chaque directeur \u00e0 cr\u00e9er? "},{"db_id":"world_1","query":"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"","query_toks":["SELECT","COUNT","(","T2.Language",")","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.Name","=","``","Aruba","''"],"query_toks_no_value":["select","count","(","t2",".","language",")","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Aruba\"",null]]},"question_toks":["Quelle","est","le","total","des","langages","utilis\u00e9s","en","Aruba","?"],"question":"Quelle est le total des langages utilis\u00e9s en Aruba?"},{"db_id":"wta_1","query":"SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1","query_toks":["SELECT","winner_name","FROM","matches","WHERE","tourney_name","=","'Australian","Open","'","ORDER","BY","winner_rank_points","DESC","LIMIT","1"],"query_toks_no_value":["select","winner_name","from","matches","where","tourney_name","=","value","order","by","winner_rank_points","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,36,false],null]]],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,27,false],null],"\"Australian Open\"",null]]},"question_toks":["Trouvez","le","nom","du","gagnant","qui","a","la","plus","haute","points","et","qui","a","particip\u00e9","au","tournoi","de","l'Open","d'Australie","."],"question":"Trouvez le nom du gagnant qui a la plus haute points et qui a particip\u00e9 au tournoi de l'Open d'Australie."},{"db_id":"wta_1","query":"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","query_toks":["SELECT","T1.country_code",",","T1.first_name","FROM","players","AS","T1","JOIN","rankings","AS","T2","ON","T1.player_id","=","T2.player_id","ORDER","BY","T2.tours","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","country_code",",","t1",".","first_name","from","players","as","t1","join","rankings","as","t2","on","t1",".","player_id","=","t2",".","player_id","order","by","t2",".","tours","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,41,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,43,false],null]]],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","pr\u00e9nom","et","le","code","du","pays","du","joueur","qui","a","le","plus","de","tours","?"],"question":"Quel est le pr\u00e9nom et le code du pays du joueur qui a le plus de tours? "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1","query_toks":["SELECT","template_id","FROM","Documents","GROUP","BY","template_id","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","template_id","from","documents","group","by","template_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,10,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Afficher","les","identifiants","de","tous","les","mod\u00e8les","utilis\u00e9s","par","plus","qu'un","document","."],"question":"Afficher les identifiants de tous les mod\u00e8les utilis\u00e9s par plus qu'un document."},{"db_id":"car_1","query":"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","query_toks":["SELECT","T2.Make",",","T1.Year","FROM","CARS_DATA","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Id","=","T2.MakeId","WHERE","T1.Year","=","(","SELECT","min","(","YEAR",")","FROM","CARS_DATA",")",";"],"query_toks_no_value":["select","t2",".","make",",","t1",".","year","from","cars_data","as","t1","join","car_names","as","t2","on","t1",".","id","=","t2",".","makeid","where","t1",".","year","=","(","select","min","(","year",")","from","cars_data",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,13,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,23,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Trouver","la","marque","et","le","temps","de","production","des","voitures","produites","au","d\u00e9but","de","l'ann\u00e9e","?"],"question":"Trouver la marque et le temps de production des voitures produites au d\u00e9but de l'ann\u00e9e?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code ,  template_type_description FROM Ref_template_types","query_toks":["SELECT","template_type_code",",","template_type_description","FROM","Ref_template_types"],"query_toks_no_value":["select","template_type_code",",","template_type_description","from","ref_template_types"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Afficher","tous","les","codes","et","descriptions","des","types","de","mod\u00e8les","."],"question":"Afficher tous les codes et descriptions des types de mod\u00e8les."},{"db_id":"wta_1","query":"SELECT first_name ,  last_name FROM players ORDER BY birth_date","query_toks":["SELECT","first_name",",","last_name","FROM","players","ORDER","BY","birth_date"],"query_toks_no_value":["select","first_name",",","last_name","from","players","order","by","birth_date"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Listez","le","pr\u00e9nom","et","le","nom","de","tous","les","joueurs","dans","l'ordre","de","leur","date","de","naissance","."],"question":"Listez le pr\u00e9nom et le nom de tous les joueurs dans l'ordre de leur date de naissance."},{"db_id":"dog_kennels","query":"SELECT charge_type ,  charge_amount FROM Charges","query_toks":["SELECT","charge_type",",","charge_amount","FROM","Charges"],"query_toks_no_value":["select","charge_type",",","charge_amount","from","charges"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","co\u00fbt","chaque","type","de","frais","?","Indiquez","le","type","de","frais","et","le","montant","."],"question":"Combien co\u00fbt chaque type de frais? Indiquez le type de frais et le montant."},{"db_id":"world_1","query":"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"","query_toks":["SELECT","avg","(","LifeExpectancy",")","FROM","country","WHERE","Region","=","``","Central","Africa","''"],"query_toks_no_value":["select","avg","(","lifeexpectancy",")","from","country","where","region","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Central Africa\"",null]]},"question_toks":["Quelle","est","l","\u2019","esp\u00e9rance","de","vie","moyenne","des","habitants","en","Afrique","centrale","?"],"question":"Quelle est l\u2019esp\u00e9rance de vie moyenne des habitants en Afrique centrale?"},{"db_id":"world_1","query":"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")","query_toks":["SELECT","Name","FROM","country","WHERE","SurfaceArea",">","(","SELECT","min","(","SurfaceArea",")","FROM","country","WHERE","Continent","=","``","Europe","''",")"],"query_toks_no_value":["select","name","from","country","where","surfacearea",">","(","select","min","(","surfacearea",")","from","country","where","continent","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,3,[0,[0,12,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Europe\"",null]]},null]]},"question_toks":["Quels","sont","les","pays","qui","ont","une","plus","grande","superficie","que","n'importe","quel","pays","en","Europe","?"],"question":"Quels sont les pays qui ont une plus grande superficie que n'importe quel pays en Europe?"},{"db_id":"real_estate_properties","query":"SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code","query_toks":["SELECT","T2.property_type_description","FROM","Properties","AS","T1","JOIN","Ref_Property_Types","AS","T2","ON","T1.property_type_code","=","T2.property_type_code","GROUP","BY","T1.property_type_code"],"query_toks_no_value":["select","t2",".","property_type_description","from","properties","as","t1","join","ref_property_types","as","t2","on","t1",".","property_type_code","=","t2",".","property_type_code","group","by","t1",".","property_type_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,3,false],null]],"table_units":[["table_unit",3],["table_unit",1]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Montrer","les","descriptions","des","types","de","propri\u00e9t\u00e9s","qui","appartiennent","\u00e0","ce","code","."],"question":"Montrer les descriptions des types de propri\u00e9t\u00e9s qui appartiennent \u00e0 ce code."},{"db_id":"employee_hire_evaluation","query":"SELECT count(*) ,  city FROM employee GROUP BY city","query_toks":["SELECT","count","(","*",")",",","city","FROM","employee","GROUP","BY","city"],"query_toks_no_value":["select","count","(","*",")",",","city","from","employee","group","by","city"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nombre","d'employ\u00e9es","de","chaque","ville","?"],"question":"Quel est le nombre d'employ\u00e9es de chaque ville?"},{"db_id":"student_transcripts_tracking","query":"SELECT avg(transcript_date) FROM Transcripts","query_toks":["SELECT","avg","(","transcript_date",")","FROM","Transcripts"],"query_toks_no_value":["select","avg","(","transcript_date",")","from","transcripts"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",9]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,53,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","moyenne","date","de","transcription","?"],"question":"Quelle est la moyenne date de transcription?"},{"db_id":"poker_player","query":"SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000","query_toks":["SELECT","T1.Name","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","WHERE","T2.Earnings",">","300000"],"query_toks_no_value":["select","t1",".","name","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","where","t2",".","earnings",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,3,[0,[0,6,false],null],300000.0,null]]},"question_toks":["Quels","sont","les","noms","des","joueurs","de","poker","qui","ont","des","profits","sup\u00e9rieurs","\u00e0","300000","?"],"question":"Quels sont les noms des joueurs de poker qui ont des profits sup\u00e9rieurs \u00e0 300000?"},{"db_id":"network_1","query":"SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","grade","FROM","Highschooler","GROUP","BY","grade","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","grade","from","highschooler","group","by","grade","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","niveau","\u00e0","le","plus","des","\u00e9tudiants","de","secondaire","?"],"question":"Quel niveau \u00e0 le plus des \u00e9tudiants de secondaire? "},{"db_id":"flight_2","query":"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"","query_toks":["SELECT","T1.FlightNo","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","WHERE","T2.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","t1",".","flightno","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","where","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Donner","les","num\u00e9ros","de","vol","des","vols","qui","arrivent","\u00e0","Aberdeen","."],"question":"Donner les num\u00e9ros de vol des vols qui arrivent \u00e0 Aberdeen."},{"db_id":"dog_kennels","query":"SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )","query_toks":["SELECT","count","(","*",")","FROM","Dogs","WHERE","age","<","(","SELECT","avg","(","age",")","FROM","Dogs",")"],"query_toks_no_value":["select","count","(","*",")","from","dogs","where","age","<","(","select","avg","(","age",")","from","dogs",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,4,[0,[0,26,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,26,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Comptez","le","nombre","de","chiens","qui","sont","inf\u00e9rieur","\u00e0","l'\u00e2ge","moyenne","."],"question":"Comptez le nombre de chiens qui sont inf\u00e9rieur \u00e0 l'\u00e2ge moyenne."},{"db_id":"student_transcripts_tracking","query":"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","query_toks":["SELECT","transcript_date",",","other_details","FROM","Transcripts","ORDER","BY","transcript_date","ASC","LIMIT","1"],"query_toks_no_value":["select","transcript_date",",","other_details","from","transcripts","order","by","transcript_date","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",9]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,53,false],null]]],"select":[false,[[0,[0,[0,53,false],null]],[0,[0,[0,54,false],null]]]],"union":null,"where":[]},"question_toks":["Quand","la","premi\u00e8re","transcription","est","sortie","?","Listez","la","date","et","les","d\u00e9tails","."],"question":"Quand la premi\u00e8re transcription est sortie? Listez la date et les d\u00e9tails."},{"db_id":"student_transcripts_tracking","query":"SELECT course_description FROM Courses WHERE course_name  =  'math'","query_toks":["SELECT","course_description","FROM","Courses","WHERE","course_name","=","'math","'"],"query_toks_no_value":["select","course_description","from","courses","where","course_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"math\"",null]]},"question_toks":["Quelles","sont","les","descriptions","de","tous","les","cours","de","math\u00e9matique","?"],"question":"Quelles sont les descriptions de tous les cours de math\u00e9matique?"},{"db_id":"wta_1","query":"SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'","query_toks":["SELECT","count","(","DISTINCT","winner_name",")","FROM","matches","WHERE","tourney_name","=","'WTA","Championships","'","AND","winner_hand","=","'L","'"],"query_toks_no_value":["select","count","(","distinct","winner_name",")","from","matches","where","tourney_name","=","value","and","winner_hand","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,34,true],null]]]],"union":null,"where":[[false,2,[0,[0,27,false],null],"\"WTA Championships\"",null],"and",[false,2,[0,[0,30,false],null],"\"L\"",null]]},"question_toks":["Trouvez","le","nombre","de","gagnants","gauchers","qui","ont","particip\u00e9","au","championnats","de","la","WTA","."],"question":"Trouvez le nombre de gagnants gauchers qui ont particip\u00e9 au championnats de la WTA."},{"db_id":"flight_2","query":"SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"","query_toks":["SELECT","Country","FROM","AIRLINES","WHERE","Airline","=","``","JetBlue","Airways","''"],"query_toks_no_value":["select","country","from","airlines","where","airline","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"JetBlue Airways\"",null]]},"question_toks":["``","Quel","pays","appartient","la","compagnie","a\u00e9rienne","``","''","JetBlue","Airways","''","''","?","''"],"question":"\"Quel pays appartient la compagnie a\u00e9rienne \"\"JetBlue Airways\"\"?\""},{"db_id":"orchestra","query":"SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008","query_toks":["SELECT","T1.Name","FROM","conductor","AS","T1","JOIN","orchestra","AS","T2","ON","T1.Conductor_ID","=","T2.Conductor_ID","WHERE","Year_of_Founded",">","2008"],"query_toks_no_value":["select","t1",".","name","from","conductor","as","t1","join","orchestra","as","t2","on","t1",".","conductor_id","=","t2",".","conductor_id","where","year_of_founded",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,3,[0,[0,10,false],null],2008.0,null]]},"question_toks":["Quels","sont","les","noms","des","chefs","d'orchestre","qui","ont","dirig\u00e9","des","orchestres","qui","sont","fond\u00e9s","apr\u00e8s","l'ann\u00e9e","2008","?"],"question":"Quels sont les noms des chefs d'orchestre qui ont dirig\u00e9 des orchestres qui sont fond\u00e9s apr\u00e8s l'ann\u00e9e 2008?"},{"db_id":"poker_player","query":"SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)","query_toks":["SELECT","Name","FROM","people","WHERE","People_ID","NOT","IN","(","SELECT","People_ID","FROM","poker_player",")"],"query_toks_no_value":["select","name","from","people","where","people_id","not","in","(","select","people_id","from","poker_player",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[true,8,[0,[0,7,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Listez","les","noms","des","personnes","qui","ne","sont","pas","des","joueurs","de","poker","."],"question":"Listez les noms des personnes qui ne sont pas des joueurs de poker."},{"db_id":"student_transcripts_tracking","query":"SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id","query_toks":["SELECT","DISTINCT","T1.course_name","FROM","Courses","AS","T1","JOIN","Student_Enrolment_Courses","AS","T2","ON","T1.course_id","=","T2.course_id"],"query_toks_no_value":["select","distinct","t1",".","course_name","from","courses","as","t1","join","student_enrolment_courses","as","t2","on","t1",".","course_id","=","t2",".","course_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,50,false],null]],"table_units":[["table_unit",1],["table_unit",8]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","titres","de","cours","que","les","\u00e9tudiants","sont","inscrits","?"],"question":"Quels sont les titres de cours que les \u00e9tudiants sont inscrits?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT DISTINCT template_type_code FROM Templates","query_toks":["SELECT","DISTINCT","template_type_code","FROM","Templates"],"query_toks_no_value":["select","distinct","template_type_code","from","templates"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","diff\u00e9rents","types","de","codes","de","mod\u00e8le","?"],"question":"Quels sont les diff\u00e9rents types de codes de mod\u00e8le?"},{"db_id":"car_1","query":"SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;","query_toks":["SELECT","T1.CountryName","FROM","COUNTRIES","AS","T1","JOIN","CONTINENTS","AS","T2","ON","T1.Continent","=","T2.ContId","JOIN","CAR_MAKERS","AS","T3","ON","T1.CountryId","=","T3.Country","WHERE","T2.Continent","=","'europe","'","GROUP","BY","T1.CountryName","HAVING","count","(","*",")",">","=","3",";"],"query_toks_no_value":["select","t1",".","countryname","from","countries","as","t1","join","continents","as","t2","on","t1",".","continent","=","t2",".","contid","join","car_makers","as","t3","on","t1",".","countryid","=","t3",".","country","where","t2",".","continent","=","value","group","by","t1",".","countryname","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[[false,5,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"europe\"",null]]},"question_toks":["Quels","pays","en","Europe","ont","au","moins","trois","fabricants","d'automobiles","?"],"question":"Quels pays en Europe ont au moins trois fabricants d'automobiles?"},{"db_id":"car_1","query":"SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;","query_toks":["SELECT","count","(","*",")","FROM","CARS_DATA","WHERE","YEAR","=","1980",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],1980.0,null]]},"question_toks":["En","1980",",","combien","de","voitures","\u00e9tait","fabriqu\u00e9","?"],"question":"En 1980, combien de voitures \u00e9tait fabriqu\u00e9? "},{"db_id":"concert_singer","query":"SELECT DISTINCT country FROM singer WHERE age  >  20","query_toks":["SELECT","DISTINCT","country","FROM","singer","WHERE","age",">","20"],"query_toks_no_value":["select","distinct","country","from","singer","where","age",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],20.0,null]]},"question_toks":["Quels","sont","tous","les","pays","distincts","d'o\u00f9","viennent","les","chanteurs","\u00e2g\u00e9s","plus","de","20","ans","?"],"question":"Quels sont tous les pays distincts d'o\u00f9 viennent les chanteurs \u00e2g\u00e9s plus de 20 ans?"},{"db_id":"employee_hire_evaluation","query":"SELECT name FROM employee ORDER BY age","query_toks":["SELECT","name","FROM","employee","ORDER","BY","age"],"query_toks_no_value":["select","name","from","employee","order","by","age"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,3,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Trier","les","noms","des","employ\u00e9s","par","leur","\u00e2ge","en","ordre","croissant","."],"question":"Trier les noms des employ\u00e9s par leur \u00e2ge en ordre croissant."},{"db_id":"world_1","query":"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"","query_toks":["SELECT","*","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","AND","IsOfficial","=","``","T","''","UNION","SELECT","*","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","Dutch","''","AND","IsOfficial","=","``","T","''"],"query_toks_no_value":["select","*","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","isofficial","=","value","union","select","*","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,0,false],null]]]],"union":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Dutch\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"where":[[false,2,[0,[0,24,false],null],"\"English\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Quels","sont","les","pays","qui","ont","l'anglais","ou","le","n\u00e9erlandais","comme","langue","officielle","?"],"question":"Quels sont les pays qui ont l'anglais ou le n\u00e9erlandais comme langue officielle?"},{"db_id":"tvshow","query":"SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2","query_toks":["SELECT","id","FROM","tv_channel","GROUP","BY","country","HAVING","count","(","*",")",">","2"],"query_toks_no_value":["select","id","from","tv_channel","group","by","country","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","identifiants","de","tous","les","canaux","de","t\u00e9l\u00e9vision","qui","ont","plus","que","deux","cha\u00eenes","de","t\u00e9l\u00e9vision","?"],"question":"Quels sont les identifiants de tous les canaux de t\u00e9l\u00e9vision qui ont plus que deux cha\u00eenes de t\u00e9l\u00e9vision?"},{"db_id":"orchestra","query":"SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","T1.Name","FROM","conductor","AS","T1","JOIN","orchestra","AS","T2","ON","T1.Conductor_ID","=","T2.Conductor_ID","GROUP","BY","T2.Conductor_ID","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","conductor","as","t1","join","orchestra","as","t2","on","t1",".","conductor_id","=","t2",".","conductor_id","group","by","t2",".","conductor_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Donner","le","nom","du","chef","d'orchestre","qui","a","dirig\u00e9","le","plus","grand","nombre","d'orchestres","."],"question":"Donner le nom du chef d'orchestre qui a dirig\u00e9 le plus grand nombre d'orchestres."},{"db_id":"world_1","query":"SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"","query_toks":["SELECT","Name","FROM","country","WHERE","continent","=","``","Europe","''","AND","Population","=","``","80000","''"],"query_toks_no_value":["select","name","from","country","where","continent","=","value","and","population","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Europe\"",null],"and",[false,2,[0,[0,14,false],null],"\"80000\"",null]]},"question_toks":["Quels","sont","les","noms","des","pays","qui","sont","dans","le","continent","europ\u00e9en","et","qui","ont","une","population","de","80000","?"],"question":"Quels sont les noms des pays qui sont dans le continent europ\u00e9en et qui ont une population de 80000?"},{"db_id":"car_1","query":"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","query_toks":["SELECT","T2.Make",",","T1.Year","FROM","CARS_DATA","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Id","=","T2.MakeId","WHERE","T1.Year","=","(","SELECT","min","(","YEAR",")","FROM","CARS_DATA",")",";"],"query_toks_no_value":["select","t2",".","make",",","t1",".","year","from","cars_data","as","t1","join","car_names","as","t2","on","t1",".","id","=","t2",".","makeid","where","t1",".","year","=","(","select","min","(","year",")","from","cars_data",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,13,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,23,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quel","est","le","fabricant","du","carr","qui","est","produit","au","cours","de","la","premi\u00e8re","ann\u00e9e","et","en","quelle","ann\u00e9e","c'\u00e9tait","?"],"question":"Quel est le fabricant du carr qui est produit au cours de la premi\u00e8re ann\u00e9e et en quelle ann\u00e9e c'\u00e9tait?"},{"db_id":"poker_player","query":"SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made","query_toks":["SELECT","T1.Name","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T2.Final_Table_Made"],"query_toks_no_value":["select","t1",".","name","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t2",".","final_table_made"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,3,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Listez","les","noms","des","joueurs","de","poker","tri\u00e9","par","les","tables","finales","faites","dans","l'ordre","croissant","."],"question":"Listez les noms des joueurs de poker tri\u00e9 par les tables finales faites dans l'ordre croissant."},{"db_id":"museum_visit","query":"SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'","query_toks":["SELECT","Num_of_Staff",",","Open_Year","FROM","museum","WHERE","name","=","'Plaza","Museum","'"],"query_toks_no_value":["select","num_of_staff",",","open_year","from","museum","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Plaza Museum\"",null]]},"question_toks":["Quelle","est","l'ann\u00e9e","d'ouverture","et","le","nombre","d'employ\u00e9s","du","mus\u00e9e","nomm\u00e9","'Plaza","Museum","'","?"],"question":"Quelle est l'ann\u00e9e d'ouverture et le nombre d'employ\u00e9s du mus\u00e9e nomm\u00e9 'Plaza Museum'?"},{"db_id":"tvshow","query":"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","query_toks":["SELECT","T1.series_name",",","T1.country","FROM","TV_Channel","AS","T1","JOIN","cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.directed_by","=","'Michael","Chang","'","INTERSECT","SELECT","T1.series_name",",","T1.country","FROM","TV_Channel","AS","T1","JOIN","cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.directed_by","=","'Ben","Jones","'"],"query_toks_no_value":["select","t1",".","series_name",",","t1",".","country","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","directed_by","=","value","intersect","select","t1",".","series_name",",","t1",".","country","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","directed_by","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Michael Chang\"",null]]},"question_toks":["Quel","est","le","nom","de","la","s\u00e9rie","et","le","pays","de","toutes","les","cha\u00eenes","de","t\u00e9l\u00e9vision","qui","diffusent","les","dessins","anim\u00e9s","r\u00e9alis\u00e9s","par","Ben","Jones","et","les","dessins","anim\u00e9s","r\u00e9alis\u00e9s","par","Michael","Chang"],"question":"Quel est le nom de la s\u00e9rie et le pays de toutes les cha\u00eenes de t\u00e9l\u00e9vision qui diffusent les dessins anim\u00e9s r\u00e9alis\u00e9s par Ben Jones et les dessins anim\u00e9s r\u00e9alis\u00e9s par Michael Chang "},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.DestAirport","=","``","AHD","''"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","destairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"AHD\"",null]]},"question_toks":["Quelles","compagnies","a\u00e9riennes","ont","un","vol","avec","la","destination","de","l","\u2019","a\u00e9roport","AHD","?"],"question":"Quelles compagnies a\u00e9riennes ont un vol avec la destination de l\u2019a\u00e9roport AHD?"},{"db_id":"wta_1","query":"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","query_toks":["SELECT","winner_name",",","loser_name","FROM","matches","ORDER","BY","minutes","DESC","LIMIT","1"],"query_toks_no_value":["select","winner_name",",","loser_name","from","matches","order","by","minutes","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","du","gagnant","et","du","perdant","qui","ont","jou\u00e9","le","plus","long","match","?"],"question":"Quels sont les noms du gagnant et du perdant qui ont jou\u00e9 le plus long match?"},{"db_id":"course_teach","query":"SELECT Name FROM teacher ORDER BY Age ASC","query_toks":["SELECT","Name","FROM","teacher","ORDER","BY","Age","ASC"],"query_toks_no_value":["select","name","from","teacher","order","by","age","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","professeurs","tri\u00e9s","par","\u00e2ge","croissant","?"],"question":"Quels sont les noms des professeurs tri\u00e9s par \u00e2ge croissant?"},{"db_id":"network_1","query":"SELECT name FROM Highschooler WHERE grade  =  10","query_toks":["SELECT","name","FROM","Highschooler","WHERE","grade","=","10"],"query_toks_no_value":["select","name","from","highschooler","where","grade","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],10.0,null]]},"question_toks":["Montre","les","noms","de","tous","les","lyc\u00e9ens","en","secondaire","."],"question":"Montre les noms de tous les lyc\u00e9ens en secondaire. "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"","query_toks":["SELECT","template_id","FROM","Templates","WHERE","template_type_code","=","``","PP","''","OR","template_type_code","=","``","PPT","''"],"query_toks_no_value":["select","template_id","from","templates","where","template_type_code","=","value","or","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"PP\"",null],"or",[false,2,[0,[0,5,false],null],"\"PPT\"",null]]},"question_toks":["Retournez","les","identifiants","des","mod\u00e8les","qui","ont","le","code","PP","ou","PPT","."],"question":"Retournez les identifiants des mod\u00e8les qui ont le code PP ou PPT."},{"db_id":"dog_kennels","query":"SELECT state FROM Owners INTERSECT SELECT state FROM Professionals","query_toks":["SELECT","state","FROM","Owners","INTERSECT","SELECT","state","FROM","Professionals"],"query_toks_no_value":["select","state","from","owners","intersect","select","state","from","professionals"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,38,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","\u00c9tats","ont","des","propri\u00e9taires","et","des","professionnels","qui","y","vivent","?"],"question":"Quels \u00c9tats ont des propri\u00e9taires et des professionnels qui y vivent?"},{"db_id":"tvshow","query":"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";","query_toks":["SELECT","count","(","*",")","FROM","TV_Channel","WHERE","LANGUAGE","=","``","English","''",";"],"query_toks_no_value":["select","count","(","*",")","from","tv_channel","where","language","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"English\"",null]]},"question_toks":["Combien","de","cha\u00eenes","de","t\u00e9l\u00e9vision","utilisent","la","langue","anglaise","?"],"question":"Combien de cha\u00eenes de t\u00e9l\u00e9vision utilisent la langue anglaise?"},{"db_id":"flight_2","query":"SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"","query_toks":["SELECT","AirportName","FROM","AIRPORTS","WHERE","City","=","``","Aberdeen","''"],"query_toks_no_value":["select","airportname","from","airports","where","city","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Quels","sont","les","noms","des","a\u00e9roports","en","Aberdeen","?"],"question":"Quels sont les noms des a\u00e9roports en Aberdeen?"},{"db_id":"tvshow","query":"SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2","query_toks":["SELECT","id","FROM","tv_channel","GROUP","BY","country","HAVING","count","(","*",")",">","2"],"query_toks_no_value":["select","id","from","tv_channel","group","by","country","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["trouve","l'identifiant","des","cha\u00eenes","de","t\u00e9l\u00e9vision","qui","des","pays","o\u00f9","il","y","a","plus","de","deux","cha\u00eenes","de","t\u00e9l\u00e9vision","."],"question":"trouve l'identifiant des cha\u00eenes de t\u00e9l\u00e9vision qui des pays o\u00f9 il y a plus de deux cha\u00eenes de t\u00e9l\u00e9vision."},{"db_id":"student_transcripts_tracking","query":"SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1","query_toks":["SELECT","transcript_date","FROM","Transcripts","ORDER","BY","transcript_date","DESC","LIMIT","1"],"query_toks_no_value":["select","transcript_date","from","transcripts","order","by","transcript_date","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",9]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,53,false],null]]],"select":[false,[[0,[0,[0,53,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","derni\u00e8re","date","de","publication","de","la","transcription","?"],"question":"Quelle est la derni\u00e8re date de publication de la transcription?"},{"db_id":"car_1","query":"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;","query_toks":["SELECT","T1.Model","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","ORDER","BY","T2.horsepower","ASC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","model","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","order","by","t2",".","horsepower","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","mod\u00e8le","d'automobile","avec","la","plus","basse","nombre","de","chevaux","?"],"question":"Quel est le mod\u00e8le d'automobile avec la plus basse nombre de chevaux?"},{"db_id":"car_1","query":"SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;","query_toks":["SELECT","Count","(","*",")",",","T2.FullName",",","T2.id","FROM","MODEL_LIST","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.Maker","=","T2.Id","GROUP","BY","T2.id",";"],"query_toks_no_value":["select","count","(","*",")",",","t2",".","fullname",",","t2",".","id","from","model_list","as","t1","join","car_makers","as","t2","on","t1",".","maker","=","t2",".","id","group","by","t2",".","id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,8,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","mod\u00e8les","d'automobiles","sont","construits","par","chaque","fabricant","?","Listez","le","total","et","le","nom","complet","du","fabricant","."],"question":"Combien de mod\u00e8les d'automobiles sont construits par chaque fabricant? Listez le total et le nom complet du fabricant."},{"db_id":"tvshow","query":"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";","query_toks":["SELECT","T2.Title","FROM","TV_Channel","AS","T1","JOIN","Cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T1.series_name","=","``","Sky","Radio","''",";"],"query_toks_no_value":["select","t2",".","title","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t1",".","series_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Sky Radio\"",null]]},"question_toks":["``","Liste","le","titre","de","tous","les","dessins","anim\u00e9s","diffus\u00e9s","sur","la","cha\u00eene","de","t\u00e9l\u00e9vision","avec","le","nom","de","la","s\u00e9rie","``","''","Radio","du","Ciel","''","''",".","''"],"question":"\"Liste le titre de tous les dessins anim\u00e9s diffus\u00e9s sur la cha\u00eene de t\u00e9l\u00e9vision avec le nom de la s\u00e9rie \"\"Radio du Ciel\"\".\""},{"db_id":"voter_1","query":"SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'","query_toks":["SELECT","contestant_name","FROM","contestants","WHERE","contestant_name","!","=","'Jessie","Alloway","'"],"query_toks_no_value":["select","contestant_name","from","contestants","where","contestant_name","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,7,[0,[0,4,false],null],"\"Jessie Alloway\"",null]]},"question_toks":["Quels","sont","les","noms","des","concurrents","dont","les","noms","ne","sont","pas","'Jessie","Alloway","'"],"question":"Quels sont les noms des concurrents dont les noms ne sont pas 'Jessie Alloway'"},{"db_id":"orchestra","query":"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company","query_toks":["SELECT","Record_Company",",","COUNT","(","*",")","FROM","orchestra","GROUP","BY","Record_Company"],"query_toks_no_value":["select","record_company",",","count","(","*",")","from","orchestra","group","by","record_company"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","d'orchestres","chaque","maison","de","disques","g\u00e8re-t-elle","?"],"question":"Combien d'orchestres chaque maison de disques g\u00e8re-t-elle?"},{"db_id":"network_1","query":"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","query_toks":["SELECT","T2.name",",","count","(","*",")","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","lyc\u00e9ens","qui","ont","deslies","et","combien","de","likes","chacun","a-t-il","?"],"question":"Quels sont les noms des lyc\u00e9ens qui ont deslies et combien de likes chacun a-t-il?"},{"db_id":"singer","query":"SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949","query_toks":["SELECT","Name","FROM","singer","WHERE","Birth_Year","=","1948","OR","Birth_Year","=","1949"],"query_toks_no_value":["select","name","from","singer","where","birth_year","=","value","or","birth_year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],1948.0,null],"or",[false,2,[0,[0,3,false],null],1949.0,null]]},"question_toks":["Montre","le","nom","des","chanteurs","dont","l'ann\u00e9e","de","naissance","est","1948","ou","1949","?"],"question":"Montre le nom des chanteurs dont l'ann\u00e9e de naissance est 1948 ou 1949?"},{"db_id":"orchestra","query":"SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008","query_toks":["SELECT","T1.Name","FROM","conductor","AS","T1","JOIN","orchestra","AS","T2","ON","T1.Conductor_ID","=","T2.Conductor_ID","WHERE","Year_of_Founded",">","2008"],"query_toks_no_value":["select","t1",".","name","from","conductor","as","t1","join","orchestra","as","t2","on","t1",".","conductor_id","=","t2",".","conductor_id","where","year_of_founded",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,3,[0,[0,10,false],null],2008.0,null]]},"question_toks":["Montre","s'il","te","plait","le","nom","du","chef","d'orchestre","qui","a","dirig\u00e9","des","orchestres","fond\u00e9s","apr\u00e8s","2008","."],"question":"Montre s'il te plait le nom du chef d'orchestre qui a dirig\u00e9 des orchestres fond\u00e9s apr\u00e8s 2008."},{"db_id":"tvshow","query":"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'","query_toks":["SELECT","Pixel_aspect_ratio_PAR",",","country","FROM","tv_channel","WHERE","LANGUAGE","!","=","'English","'"],"query_toks_no_value":["select","pixel_aspect_ratio_par",",","country","from","tv_channel","where","language","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,7,[0,[0,4,false],null],"\"English\"",null]]},"question_toks":["Quel","est","le","format","d'image","et","le","pays","d'origine","pour","toutes","les","cha\u00eenes","de","t\u00e9l\u00e9vision","qui","n","\u2019","utilise","pas","l'anglais","?"],"question":"Quel est le format d'image et le pays d'origine pour toutes les cha\u00eenes de t\u00e9l\u00e9vision qui n\u2019utilise pas l'anglais?"},{"db_id":"pets_1","query":"SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)","query_toks":["SELECT","avg","(","age",")","FROM","student","WHERE","stuid","NOT","IN","(","SELECT","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid",")"],"query_toks_no_value":["select","avg","(","age",")","from","student","where","stuid","not","in","(","select","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quel","est","la","moyenne","\u00e2ge","des","\u00e9tudiants","qui","n'ont","pas","des","animaux","?"],"question":"Quel est la moyenne \u00e2ge des \u00e9tudiants qui n'ont pas des animaux? "},{"db_id":"concert_singer","query":"SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015","query_toks":["SELECT","count","(","*",")","FROM","concert","WHERE","YEAR","=","2014","OR","YEAR","=","2015"],"query_toks_no_value":["select","count","(","*",")","from","concert","where","year","=","value","or","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2014.0,null],"or",[false,2,[0,[0,19,false],null],2015.0,null]]},"question_toks":["combien","de","concerts","ont","eu","lieu","en","2014","ou","2015","?"],"question":"combien de concerts ont eu lieu en 2014 ou 2015?"},{"db_id":"dog_kennels","query":"SELECT date_arrived ,  date_departed FROM Dogs","query_toks":["SELECT","date_arrived",",","date_departed","FROM","Dogs"],"query_toks_no_value":["select","date_arrived",",","date_departed","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,30,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","date","d'arriv\u00e9e","et","la","date","de","d\u00e9part","de","tous","les","chiens","?"],"question":"Quelle est la date d'arriv\u00e9e et la date de d\u00e9part de tous les chiens?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.degree_summary_name","FROM","Degree_Programs","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.degree_program_id","=","T2.degree_program_id","GROUP","BY","T1.degree_summary_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","degree_summary_name","from","degree_programs","as","t1","join","student_enrolment","as","t2","on","t1",".","degree_program_id","=","t2",".","degree_program_id","group","by","t1",".","degree_summary_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[[0,20,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","type","de","programme","auquel","le","plus","grand","nombre","d'\u00e9tudiants","sont","inscrits","?"],"question":"Trouve le type de programme auquel le plus grand nombre d'\u00e9tudiants sont inscrits?"},{"db_id":"student_transcripts_tracking","query":"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","query_toks":["SELECT","T2.transcript_date",",","T1.transcript_id","FROM","Transcript_Contents","AS","T1","JOIN","Transcripts","AS","T2","ON","T1.transcript_id","=","T2.transcript_id","GROUP","BY","T1.transcript_id","ORDER","BY","count","(","*",")","ASC","LIMIT","1"],"query_toks_no_value":["select","t2",".","transcript_date",",","t1",".","transcript_id","from","transcript_contents","as","t1","join","transcripts","as","t2","on","t1",".","transcript_id","=","t2",".","transcript_id","group","by","t1",".","transcript_id","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,56,false],null],[0,52,false],null]],"table_units":[["table_unit",10],["table_unit",9]]},"groupBy":[[0,56,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,53,false],null]],[0,[0,[0,56,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","date","et","l'identifiant","de","la","transcription","avec","le","moins","nombre","de","r\u00e9sultats","?"],"question":"Quelle est la date et l'identifiant de la transcription avec le moins nombre de r\u00e9sultats?"},{"db_id":"wta_1","query":"SELECT count(*) ,  country_code FROM players GROUP BY country_code","query_toks":["SELECT","count","(","*",")",",","country_code","FROM","players","GROUP","BY","country_code"],"query_toks_no_value":["select","count","(","*",")",",","country_code","from","players","group","by","country_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","joueurs","sont","de","chaque","pays","?"],"question":"Combien de joueurs sont de chaque pays?"},{"db_id":"poker_player","query":"SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)","query_toks":["SELECT","Name","FROM","people","WHERE","People_ID","NOT","IN","(","SELECT","People_ID","FROM","poker_player",")"],"query_toks_no_value":["select","name","from","people","where","people_id","not","in","(","select","people_id","from","poker_player",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[true,8,[0,[0,7,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quels","sont","les","noms","des","personnes","qui","ne","jouent","pas","au","poker","?"],"question":"Quels sont les noms des personnes qui ne jouent pas au poker?"},{"db_id":"dog_kennels","query":"SELECT state FROM Owners INTERSECT SELECT state FROM Professionals","query_toks":["SELECT","state","FROM","Owners","INTERSECT","SELECT","state","FROM","Professionals"],"query_toks_no_value":["select","state","from","owners","intersect","select","state","from","professionals"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,38,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Trouvez","les","\u00c9tats","o\u00f9","vivent","les","propri\u00e9taires","et","les","professionnels","."],"question":"Trouvez les \u00c9tats o\u00f9 vivent les propri\u00e9taires et les professionnels."},{"db_id":"network_1","query":"SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)","query_toks":["SELECT","min","(","grade",")","FROM","Highschooler","WHERE","id","NOT","IN","(","SELECT","T1.student_id","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id",")"],"query_toks_no_value":["select","min","(","grade",")","from","highschooler","where","id","not","in","(","select","t1",".","student_id","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,3,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quelle","est","le","plus","bas","niveau","des","\u00e9l\u00e8ves","qui","n'ont","pas","d'amis","?"],"question":"Quelle est le plus bas niveau des \u00e9l\u00e8ves qui n'ont pas d'amis?"},{"db_id":"student_transcripts_tracking","query":"SELECT line_1 ,  line_2 FROM addresses","query_toks":["SELECT","line_1",",","line_2","FROM","addresses"],"query_toks_no_value":["select","line_1",",","line_2","from","addresses"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["quelles","sont","toutes","les","adresses","y","compris","la","ligne","1","et","la","ligne","2","?"],"question":"quelles sont toutes les adresses y compris la ligne 1 et la ligne 2?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"","query_toks":["SELECT","document_id",",","template_id",",","Document_Description","FROM","Documents","WHERE","document_name","=","``","Robbin","CV","''"],"query_toks_no_value":["select","document_id",",","template_id",",","document_description","from","documents","where","document_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Robbin CV\"",null]]},"question_toks":["``","Quel","est","l'identifiant","du","document",",","l'identifiant","du","mod\u00e8le","et","la","description","du","document","nomm\u00e9","``","''","Robbin","CV","''","''","?","''"],"question":"\"Quel est l'identifiant du document, l'identifiant du mod\u00e8le et la description du document nomm\u00e9 \"\"Robbin CV\"\"?\""},{"db_id":"concert_singer","query":"SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)","query_toks":["SELECT","name","FROM","stadium","WHERE","stadium_id","NOT","IN","(","SELECT","stadium_id","FROM","concert",")"],"query_toks_no_value":["select","name","from","stadium","where","stadium_id","not","in","(","select","stadium_id","from","concert",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Montrez","les","noms","des","stades","qui","n'ont","pas","de","concert","."],"question":"Montrez les noms des stades qui n'ont pas de concert."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Documents","query_toks":["SELECT","count","(","*",")","FROM","Documents"],"query_toks_no_value":["select","count","(","*",")","from","documents"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Compte","le","nombre","de","documents","."],"question":"Compte le nombre de documents."},{"db_id":"student_transcripts_tracking","query":"SELECT avg(transcript_date) FROM Transcripts","query_toks":["SELECT","avg","(","transcript_date",")","FROM","Transcripts"],"query_toks_no_value":["select","avg","(","transcript_date",")","from","transcripts"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",9]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,53,false],null]]]],"union":null,"where":[]},"question_toks":["En","moyenne",",","quand","les","transcriptions","ont-elles","\u00e9t\u00e9","imprim\u00e9es","?"],"question":"En moyenne, quand les transcriptions ont-elles \u00e9t\u00e9 imprim\u00e9es?"},{"db_id":"dog_kennels","query":"SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )","query_toks":["SELECT","name","FROM","Dogs","WHERE","dog_id","NOT","IN","(","SELECT","dog_id","FROM","Treatments","GROUP","BY","dog_id","HAVING","sum","(","cost_of_treatment",")",">","1000",")"],"query_toks_no_value":["select","name","from","dogs","where","dog_id","not","in","(","select","dog_id","from","treatments","group","by","dog_id","having","sum","(","cost_of_treatment",")",">","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[[true,8,[0,[0,20,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[[0,45,false]],"having":[[false,3,[0,[4,49,false],null],1000.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,45,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quels","sont","les","noms","des","chiens","pour","lesquels","le","propri\u00e9taire","a","d\u00e9pens\u00e9","plus","de","1000","pour","le","traitement","?"],"question":"Quels sont les noms des chiens pour lesquels le propri\u00e9taire a d\u00e9pens\u00e9 plus de 1000 pour le traitement?"},{"db_id":"wta_1","query":"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","query_toks":["SELECT","count","(","*",")",",","YEAR","FROM","matches","GROUP","BY","YEAR"],"query_toks_no_value":["select","count","(","*",")",",","year","from","matches","group","by","year"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,38,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,38,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","matchs","ont","\u00e9t\u00e9","jou\u00e9s","chaque","ann\u00e9e","?"],"question":"Combien de matchs ont \u00e9t\u00e9 jou\u00e9s chaque ann\u00e9e?"},{"db_id":"course_teach","query":"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID","query_toks":["SELECT","T3.Name",",","T2.Course","FROM","course_arrange","AS","T1","JOIN","course","AS","T2","ON","T1.Course_ID","=","T2.Course_ID","JOIN","teacher","AS","T3","ON","T1.Teacher_ID","=","T3.Teacher_ID"],"query_toks_no_value":["select","t3",".","name",",","t2",".","course","from","course_arrange","as","t1","join","course","as","t2","on","t1",".","course_id","=","t2",".","course_id","join","teacher","as","t3","on","t1",".","teacher_id","=","t3",".","teacher_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","les","noms","des","enseignants","et","les","cours","qu'ils","sont","cens\u00e9s","d'enseigner","."],"question":"Montre les noms des enseignants et les cours qu'ils sont cens\u00e9s d'enseigner. "},{"db_id":"car_1","query":"SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;","query_toks":["SELECT","avg","(","mpg",")","FROM","CARS_DATA","WHERE","Cylinders","=","4",";"],"query_toks_no_value":["select","avg","(","mpg",")","from","cars_data","where","cylinders","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,17,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],4.0,null]]},"question_toks":["Quel","est","le","kilom\u00e9trage","moyen","par","gallon","(","mpg",")","des","voitures","\u00e0","4","cylindres","?"],"question":"Quel est le kilom\u00e9trage moyen par gallon (mpg) des voitures \u00e0 4 cylindres?"},{"db_id":"museum_visit","query":"SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009","query_toks":["SELECT","avg","(","num_of_staff",")","FROM","museum","WHERE","open_year","<","2009"],"query_toks_no_value":["select","avg","(","num_of_staff",")","from","museum","where","open_year","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,3,false],null]]]],"union":null,"where":[[false,4,[0,[0,4,false],null],2009.0,null]]},"question_toks":["Trouvez","le","nombre","moyen","d'employ\u00e9s","travaillant","pour","les","mus\u00e9es","ouverts","avant","2009","."],"question":"Trouvez le nombre moyen d'employ\u00e9s travaillant pour les mus\u00e9es ouverts avant 2009."},{"db_id":"student_transcripts_tracking","query":"SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )","query_toks":["SELECT","semester_name","FROM","Semesters","WHERE","semester_id","NOT","IN","(","SELECT","semester_id","FROM","Student_Enrolment",")"],"query_toks_no_value":["select","semester_name","from","semesters","where","semester_id","not","in","(","select","semester_id","from","student_enrolment",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,29,false],null]]]],"union":null,"where":[[true,8,[0,[0,28,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,46,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quel","est","le","nom","du","semestre","sans","\u00e9tudiant","inscrit","?"],"question":"Quel est le nom du semestre sans \u00e9tudiant inscrit?"},{"db_id":"world_1","query":"SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"","query_toks":["SELECT","sum","(","SurfaceArea",")","FROM","country","WHERE","Region","=","``","Caribbean","''"],"query_toks_no_value":["select","sum","(","surfacearea",")","from","country","where","region","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Caribbean\"",null]]},"question_toks":["Quelle","est","la","superficie","totale","des","pays","de","la","r\u00e9gion","des","Cara\u00efbes","?"],"question":"Quelle est la superficie totale des pays de la r\u00e9gion des Cara\u00efbes?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","JOIN","AIRLINES","AS","T3","ON","T3.uid","=","T1.Airline","WHERE","T2.City","=","``","Aberdeen","''","AND","T3.Airline","=","``","United","Airlines","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","join","airlines","as","t3","on","t3",".","uid","=","t1",".","airline","where","t2",".","city","=","value","and","t3",".","airline","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null],"and",[false,2,[0,[0,2,false],null],"\"United Airlines\"",null]]},"question_toks":["Combien","de","vols","United","Airlines","partent","pour","la","ville","d'Aberdeen","?"],"question":"Combien de vols United Airlines partent pour la ville d'Aberdeen?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'","query_toks":["SELECT","document_id","FROM","Paragraphs","WHERE","paragraph_text","=","'Brazil","'","INTERSECT","SELECT","document_id","FROM","Paragraphs","WHERE","paragraph_text","=","'Ireland","'"],"query_toks_no_value":["select","document_id","from","paragraphs","where","paragraph_text","=","value","intersect","select","document_id","from","paragraphs","where","paragraph_text","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,16,false],null],"\"Ireland\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,16,false],null],"\"Brazil\"",null]]},"question_toks":["Quels","sont","les","identifiants","des","documents","contenant","le","texte","du","paragraphe","\u00ab","Br\u00e9sil","\u00bb","et","\u00ab","Irlande","\u00bb","?"],"question":"Quels sont les identifiants des documents contenant le texte du paragraphe \u00abBr\u00e9sil\u00bb et \u00abIrlande\u00bb?"},{"db_id":"tvshow","query":"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;","query_toks":["SELECT","count","(","DISTINCT","series_name",")",",","count","(","DISTINCT","content",")","FROM","TV_Channel",";"],"query_toks_no_value":["select","count","(","distinct","series_name",")",",","count","(","distinct","content",")","from","tv_channel"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,2,true],null]],[3,[0,[0,5,true],null]]]],"union":null,"where":[]},"question_toks":["Listez","le","nombre","de","noms","et","de","contenus","de","s\u00e9ries","diff\u00e9rents","dans","le","tableau","des","cha\u00eenes","de","t\u00e9l\u00e9vision","."],"question":"Listez le nombre de noms et de contenus de s\u00e9ries diff\u00e9rents dans le tableau des cha\u00eenes de t\u00e9l\u00e9vision."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"","query_toks":["SELECT","T1.template_type_code","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id","WHERE","T2.document_name","=","``","Data","base","''"],"query_toks_no_value":["select","t1",".","template_type_code","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id","where","t2",".","document_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Data base\"",null]]},"question_toks":["``","Quel","est","le","code","de","type","de","mod\u00e8le","du","mod\u00e8le","utilis\u00e9","par","le","document","avec","le","nom","''","``","Base","de","donn\u00e9es","''","``","?"],"question":"\"Quel est le code de type de mod\u00e8le du mod\u00e8le utilis\u00e9 par le document avec le nom\" \"Base de donn\u00e9es\" \"?"},{"db_id":"dog_kennels","query":"SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'","query_toks":["SELECT","email_address","FROM","Professionals","WHERE","state","=","'Hawaii","'","OR","state","=","'Wisconsin","'"],"query_toks_no_value":["select","email_address","from","professionals","where","state","=","value","or","state","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,41,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],"\"Hawaii\"",null],"or",[false,2,[0,[0,38,false],null],"\"Wisconsin\"",null]]},"question_toks":["\u00c9num\u00e9rez","les","courriels","des","professionnels","qui","vivent","dans","l'\u00c9tat","d'Hawa\u00ef","ou","l'\u00c9tat","du","Wisconsin","."],"question":"\u00c9num\u00e9rez les courriels des professionnels qui vivent dans l'\u00c9tat d'Hawa\u00ef ou l'\u00c9tat du Wisconsin."},{"db_id":"concert_singer","query":"SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.name",",","T2.capacity","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","WHERE","T1.year",">","=","2014","GROUP","BY","T2.stadium_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name",",","t2",".","capacity","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","where","t1",".","year",">","=","value","group","by","t2",".","stadium_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,5,[0,[0,19,false],null],2014.0,null]]},"question_toks":["Quel","est","le","nom","et","la","capacit\u00e9","du","stade","avec","le","plus","de","concerts","apr\u00e8s","2013","?"],"question":"Quel est le nom et la capacit\u00e9 du stade avec le plus de concerts apr\u00e8s 2013?"},{"db_id":"poker_player","query":"SELECT count(DISTINCT Nationality) FROM people","query_toks":["SELECT","count","(","DISTINCT","Nationality",")","FROM","people"],"query_toks_no_value":["select","count","(","distinct","nationality",")","from","people"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,8,true],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","nationalit\u00e9s","distinctes","existe-t-il","?"],"question":"Combien de nationalit\u00e9s distinctes existe-t-il?"},{"db_id":"tvshow","query":"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;","query_toks":["SELECT","Country",",","count","(","*",")","FROM","TV_Channel","GROUP","BY","Country","ORDER","BY","count","(","*",")","DESC","LIMIT","1",";"],"query_toks_no_value":["select","country",",","count","(","*",")","from","tv_channel","group","by","country","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","pays","poss\u00e8de","le","plus","de","cha\u00eenes","de","t\u00e9l\u00e9vision","?","Indique","le","pays","et","le","nombre","de","cha\u00eenes","de","t\u00e9l\u00e9vision","dont","il","dispose","."],"question":"Quel pays poss\u00e8de le plus de cha\u00eenes de t\u00e9l\u00e9vision? Indique le pays et le nombre de cha\u00eenes de t\u00e9l\u00e9vision dont il dispose."},{"db_id":"orchestra","query":"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"","query_toks":["SELECT","COUNT","(","*",")","FROM","orchestra","WHERE","Major_Record_Format","=","``","CD","''","OR","Major_Record_Format","=","``","DVD","''"],"query_toks_no_value":["select","count","(","*",")","from","orchestra","where","major_record_format","=","value","or","major_record_format","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"CD\"",null],"or",[false,2,[0,[0,11,false],null],"\"DVD\"",null]]},"question_toks":["``","Recherche","le","nombre","d'orchestres","dont","le","format","d'enregistrement","est","''","``","CD","''","``","ou","''","``","DVD","''","``",".","''"],"question":"\"Recherche le nombre d'orchestres dont le format d'enregistrement est\" \"CD\" \"ou\" \"DVD\" \".\""},{"db_id":"car_1","query":"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;","query_toks":["SELECT","T1.Model","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","ORDER","BY","T2.horsepower","ASC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","model","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","order","by","t2",".","horsepower","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","mod\u00e8le","de","voiture","a","la","puissance","minimale","?"],"question":"Quel mod\u00e8le de voiture a la puissance minimale?"},{"db_id":"employee_hire_evaluation","query":"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","query_toks":["SELECT","manager_name",",","district","FROM","shop","ORDER","BY","number_products","DESC","LIMIT","1"],"query_toks_no_value":["select","manager_name",",","district","from","shop","order","by","number_products","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nom","du","directeur","et","le","quartier","de","la","boutique","qui","vend","le","plus","grand","nombre","de","produits","?"],"question":"Quel est le nom du directeur et le quartier de la boutique qui vend le plus grand nombre de produits?"},{"db_id":"wta_1","query":"SELECT min(loser_rank) FROM matches","query_toks":["SELECT","min","(","loser_rank",")","FROM","matches"],"query_toks_no_value":["select","min","(","loser_rank",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Trouvez","le","rang","le","plus","\u00e9lev\u00e9","des","perdants","dans","tous","les","matchs","."],"question":"Trouvez le rang le plus \u00e9lev\u00e9 des perdants dans tous les matchs."},{"db_id":"course_teach","query":"SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Hometown","FROM","teacher","GROUP","BY","Hometown","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","hometown","from","teacher","group","by","hometown","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","les","villes","natales","les","plus","courantes","pour","les","enseignants","?"],"question":"Quelle est les villes natales les plus courantes pour les enseignants?"},{"db_id":"pets_1","query":"SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'","query_toks":["SELECT","DISTINCT","T1.Fname","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'","OR","T3.pettype","=","'dog","'"],"query_toks_no_value":["select","distinct","t1",".","fname","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value","or","t3",".","pettype","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null],"or",[false,2,[0,[0,12,false],null],"\"dog\"",null]]},"question_toks":["Quels","sont","les","pr\u00e9noms","de","chaque","\u00e9l\u00e8ve","qui","a","un","chat","ou","un","chien","comme","animal","de","compagnie","?"],"question":"Quels sont les pr\u00e9noms de chaque \u00e9l\u00e8ve qui a un chat ou un chien comme animal de compagnie?"},{"db_id":"wta_1","query":"SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1","query_toks":["SELECT","first_name",",","country_code","FROM","players","ORDER","BY","birth_date","LIMIT","1"],"query_toks_no_value":["select","first_name",",","country_code","from","players","order","by","birth_date","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","pr\u00e9nom","et","le","code","du","pays","du","joueur","le","plus","\u00e2g\u00e9","."],"question":"Trouve le pr\u00e9nom et le code du pays du joueur le plus \u00e2g\u00e9."},{"db_id":"world_1","query":"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"","query_toks":["SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","AND","T2.IsOfficial","=","``","T","''","INTERSECT","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","French","''","AND","T2.IsOfficial","=","``","T","''"],"query_toks_no_value":["select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","t2",".","isofficial","=","value","intersect","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","t2",".","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"French\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Quels","sont","les","noms","des","nations","o\u00f9","l'anglais","et","le","fran\u00e7ais","sont","les","langues","officielles","?"],"question":"Quels sont les noms des nations o\u00f9 l'anglais et le fran\u00e7ais sont les langues officielles?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","query_toks":["SELECT","T1.document_id",",","T2.document_name",",","count","(","*",")","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_id","=","T2.document_id","GROUP","BY","T1.document_id"],"query_toks_no_value":["select","t1",".","document_id",",","t2",".","document_name",",","count","(","*",")","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","group","by","t1",".","document_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,11,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","identifiants","et","les","noms","de","chaque","document",",","ainsi","que","le","nombre","de","paragraphes","dans","chacun","?"],"question":"Quels sont les identifiants et les noms de chaque document, ainsi que le nombre de paragraphes dans chacun?"},{"db_id":"concert_singer","query":"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","query_toks":["SELECT","name",",","country",",","age","FROM","singer","ORDER","BY","age","DESC"],"query_toks_no_value":["select","name",",","country",",","age","from","singer","order","by","age","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms",",","les","pays","et","les","\u00e2ges","de","chaque","chanteur","par","ordre","d\u00e9croissant","d'\u00e2ge","?"],"question":"Quels sont les noms, les pays et les \u00e2ges de chaque chanteur par ordre d\u00e9croissant d'\u00e2ge?"},{"db_id":"course_teach","query":"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID","query_toks":["SELECT","T3.Name",",","T2.Course","FROM","course_arrange","AS","T1","JOIN","course","AS","T2","ON","T1.Course_ID","=","T2.Course_ID","JOIN","teacher","AS","T3","ON","T1.Teacher_ID","=","T3.Teacher_ID"],"query_toks_no_value":["select","t3",".","name",",","t2",".","course","from","course_arrange","as","t1","join","course","as","t2","on","t1",".","course_id","=","t2",".","course_id","join","teacher","as","t3","on","t1",".","teacher_id","=","t3",".","teacher_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nom","de","chaque","enseignant","et","quel","cours","ils","enseignent","?"],"question":"Quel est le nom de chaque enseignant et quel cours ils enseignent?"},{"db_id":"flight_2","query":"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"","query_toks":["SELECT","T1.FlightNo","FROM","FLIGHTS","AS","T1","JOIN","AIRLINES","AS","T2","ON","T2.uid","=","T1.Airline","WHERE","T2.Airline","=","``","United","Airlines","''"],"query_toks_no_value":["select","t1",".","flightno","from","flights","as","t1","join","airlines","as","t2","on","t2",".","uid","=","t1",".","airline","where","t2",".","airline","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"United Airlines\"",null]]},"question_toks":["``","Quels","sont","les","num\u00e9ros","de","vol","de","la","compagnie","a\u00e9rienne","''","``","United","Airlines","''","``","?","''"],"question":"\"Quels sont les num\u00e9ros de vol de la compagnie a\u00e9rienne\" \"United Airlines\" \"?\""},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","GROUP","BY","T1.Airline","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","group","by","t1",".","airline","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","compagnie","a\u00e9rienne","dessert","le","plus","de","vols","?"],"question":"Quelle compagnie a\u00e9rienne dessert le plus de vols?"},{"db_id":"dog_kennels","query":"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id","query_toks":["SELECT","professional_id",",","role_code",",","email_address","FROM","Professionals","EXCEPT","SELECT","T1.professional_id",",","T1.role_code",",","T1.email_address","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id"],"query_toks_no_value":["select","professional_id",",","role_code",",","email_address","from","professionals","except","select","t1",".","professional_id",",","t1",".","role_code",",","t1",".","email_address","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,34,false],null]],[0,[0,[0,41,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,34,false],null]],[0,[0,[0,41,false],null]]]],"union":null,"where":[]},"question_toks":["Donne-moi","l'identifiant",",","le","r\u00f4le","et","l","'","e-mail","des","professionnels","qui","n'ont","effectu\u00e9","aucun","traitement","sur","les","chiens","."],"question":"Donne-moi l'identifiant, le r\u00f4le et l'e-mail des professionnels qui n'ont effectu\u00e9 aucun traitement sur les chiens."},{"db_id":"poker_player","query":"SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1","query_toks":["SELECT","Money_Rank","FROM","poker_player","ORDER","BY","Earnings","DESC","LIMIT","1"],"query_toks_no_value":["select","money_rank","from","poker_player","order","by","earnings","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoyez","le","rang","d'argent","du","joueur","avec","les","gains","les","plus","importants","."],"question":"Renvoyez le rang d'argent du joueur avec les gains les plus importants. "},{"db_id":"tvshow","query":"SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'","query_toks":["SELECT","country","FROM","TV_Channel","EXCEPT","SELECT","T1.country","FROM","TV_Channel","AS","T1","JOIN","cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.written_by","=","'Todd","Casey","'"],"query_toks_no_value":["select","country","from","tv_channel","except","select","t1",".","country","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","written_by","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],"\"Todd Casey\"",null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["les","cha\u00eenes","de","t\u00e9l\u00e9vision","de","quels","pays","ne","diffusent","aucune","bande","dessin\u00e9e","\u00e9crite","par","Todd","Casey","?"],"question":"les cha\u00eenes de t\u00e9l\u00e9vision de quels pays ne diffusent aucune bande dessin\u00e9e \u00e9crite par Todd Casey?"},{"db_id":"world_1","query":"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"","query_toks":["SELECT","Population",",","LifeExpectancy","FROM","country","WHERE","Name","=","``","Brazil","''"],"query_toks_no_value":["select","population",",","lifeexpectancy","from","country","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Brazil\"",null]]},"question_toks":["Donne-moi","la","population","et","l'esp\u00e9rance","de","vie","du","Br\u00e9sil","."],"question":"Donne-moi la population et l'esp\u00e9rance de vie du Br\u00e9sil."},{"db_id":"world_1","query":"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"","query_toks":["SELECT","avg","(","LifeExpectancy",")","FROM","country","WHERE","Continent","=","``","Africa","''","AND","GovernmentForm","=","``","Republic","''"],"query_toks_no_value":["select","avg","(","lifeexpectancy",")","from","country","where","continent","=","value","and","governmentform","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Africa\"",null],"and",[false,2,[0,[0,19,false],null],"\"Republic\"",null]]},"question_toks":["Quelle","est","l'esp\u00e9rance","de","vie","moyenne","dans","les","pays","africains","qui","sont","des","r\u00e9publiques","?"],"question":"Quelle est l'esp\u00e9rance de vie moyenne dans les pays africains qui sont des r\u00e9publiques?"},{"db_id":"tvshow","query":"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;","query_toks":["SELECT","Country",",","count","(","*",")","FROM","TV_Channel","GROUP","BY","Country","ORDER","BY","count","(","*",")","DESC","LIMIT","1",";"],"query_toks_no_value":["select","country",",","count","(","*",")","from","tv_channel","group","by","country","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","pays","avec","le","plus","de","cha\u00eenes","de","t\u00e9l\u00e9vision","et","combien","en","a-t-il","?"],"question":"Quel est le pays avec le plus de cha\u00eenes de t\u00e9l\u00e9vision et combien en a-t-il?"},{"db_id":"pets_1","query":"SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'","query_toks":["SELECT","T2.petid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","WHERE","T1.Lname","=","'Smith","'"],"query_toks_no_value":["select","t2",".","petid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","where","t1",".","lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Smith\"",null]]},"question_toks":["Quelle","est","l'identifiant","de","l'animal","de","compagnie","appartenant","\u00e0","l'\u00e9l\u00e8ve","dont","le","nom","de","famille","est","\u00ab","Smith","\u00bb","?"],"question":"Quelle est l'identifiant de l'animal de compagnie appartenant \u00e0 l'\u00e9l\u00e8ve dont le nom de famille est \u00abSmith\u00bb?"},{"db_id":"singer","query":"SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955","query_toks":["SELECT","Citizenship","FROM","singer","WHERE","Birth_Year","<","1945","INTERSECT","SELECT","Citizenship","FROM","singer","WHERE","Birth_Year",">","1955"],"query_toks_no_value":["select","citizenship","from","singer","where","birth_year","<","value","intersect","select","citizenship","from","singer","where","birth_year",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,3,[0,[0,3,false],null],1955.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,4,[0,[0,3,false],null],1945.0,null]]},"question_toks":["Montre","la","citoyennet\u00e9","partag\u00e9e","par","les","chanteurs","avec","l'ann\u00e9e","de","naissance","avant","1945","et","apr\u00e8s","1955","."],"question":"Montre la citoyennet\u00e9 partag\u00e9e par les chanteurs avec l'ann\u00e9e de naissance avant 1945 et apr\u00e8s 1955."},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","GROUP","BY","T1.Airline","HAVING","count","(","*",")","<","200"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","group","by","t1",".","airline","having","count","(","*",")","<","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[[false,4,[0,[3,0,false],null],200.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Trouvez","toutes","les","compagnies","a\u00e9riennes","qui","ont","moins","de","200","vols","."],"question":"Trouvez toutes les compagnies a\u00e9riennes qui ont moins de 200 vols."},{"db_id":"museum_visit","query":"SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1","query_toks":["SELECT","sum","(","t2.Total_spent",")","FROM","visitor","AS","t1","JOIN","visit","AS","t2","ON","t1.id","=","t2.visitor_id","WHERE","t1.Level_of_membership","=","1"],"query_toks_no_value":["select","sum","(","t2",".","total_spent",")","from","visitor","as","t1","join","visit","as","t2","on","t1",".","id","=","t2",".","visitor_id","where","t1",".","level_of_membership","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],1.0,null]]},"question_toks":["Quel","est","le","co\u00fbt","total","des","billets","des","visiteurs","dont","le","niveau","d'adh\u00e9sion","est","?"],"question":"Quel est le co\u00fbt total des billets des visiteurs dont le niveau d'adh\u00e9sion est?"},{"db_id":"wta_1","query":"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","query_toks":["SELECT","T1.first_name",",","T1.country_code",",","T1.birth_date","FROM","players","AS","T1","JOIN","matches","AS","T2","ON","T1.player_id","=","T2.winner_id","ORDER","BY","T2.winner_rank_points","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","country_code",",","t1",".","birth_date","from","players","as","t1","join","matches","as","t2","on","t1",".","player_id","=","t2",".","winner_id","order","by","t2",".","winner_rank_points","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,32,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,36,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,6,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","pr\u00e9nom",",","le","code","du","pays","et","la","date","de","naissance","du","joueur","avec","le","plus","de","points","de","classement","gagnant","dans","tous","les","matchs","?"],"question":"Quel est le pr\u00e9nom, le code du pays et la date de naissance du joueur avec le plus de points de classement gagnant dans tous les matchs?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id","query_toks":["SELECT","template_id",",","count","(","*",")","FROM","Documents","GROUP","BY","template_id"],"query_toks_no_value":["select","template_id",",","count","(","*",")","from","documents","group","by","template_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Afficher","tous","les","identifiants","de","mod\u00e8le","et","le","nombre","de","documents","utilisant","chaque","mod\u00e8le","."],"question":"Afficher tous les identifiants de mod\u00e8le et le nombre de documents utilisant chaque mod\u00e8le."},{"db_id":"car_1","query":"SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';","query_toks":["SELECT","T1.countryId",",","T1.CountryName","FROM","Countries","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.CountryId","=","T2.Country","GROUP","BY","T1.countryId","HAVING","count","(","*",")",">","3","UNION","SELECT","T1.countryId",",","T1.CountryName","FROM","Countries","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.CountryId","=","T2.Country","JOIN","MODEL_LIST","AS","T3","ON","T2.Id","=","T3.Maker","WHERE","T3.Model","=","'fiat","'",";"],"query_toks_no_value":["select","t1",".","countryid",",","t1",".","countryname","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country","group","by","t1",".","countryid","having","count","(","*",")",">","value","union","select","t1",".","countryid",",","t1",".","countryname","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country","join","model_list","as","t3","on","t2",".","id","=","t3",".","maker","where","t3",".","model","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,3,false]],"having":[[false,3,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"fiat\"",null]]},"where":[]},"question_toks":["Quels","sont","l'identifiant","et","le","nom","des","pays","qui","ont","plus","de","3","constructeurs","automobiles","ou","qui","produisent","le","mod\u00e8le","\u00ab","fiat","\u00bb","?"],"question":"Quels sont l'identifiant et le nom des pays qui ont plus de 3 constructeurs automobiles ou qui produisent le mod\u00e8le \u00abfiat\u00bb?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'","query_toks":["SELECT","Other_Details","FROM","Paragraphs","WHERE","paragraph_text","=","'Korea","'"],"query_toks_no_value":["select","other_details","from","paragraphs","where","paragraph_text","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,2,[0,[0,16,false],null],"\"Korea\"",null]]},"question_toks":["Affiche","les","d\u00e9tails","du","paragraphe","pour","le","paragraphe","avec","le","texte","\u00ab","Cor\u00e9e","\u00bb","."],"question":"Affiche les d\u00e9tails du paragraphe pour le paragraphe avec le texte \u00abCor\u00e9e\u00bb."},{"db_id":"singer","query":"SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1","query_toks":["SELECT","T1.Name","FROM","singer","AS","T1","JOIN","song","AS","T2","ON","T1.Singer_ID","=","T2.Singer_ID","GROUP","BY","T1.Name","HAVING","COUNT","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","name","from","singer","as","t1","join","song","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","group","by","t1",".","name","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,2,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","les","noms","des","chanteurs","qui","ont","plus","d'une","chanson","."],"question":"Montre les noms des chanteurs qui ont plus d'une chanson."},{"db_id":"orchestra","query":"SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC","query_toks":["SELECT","Major_Record_Format","FROM","orchestra","GROUP","BY","Major_Record_Format","ORDER","BY","COUNT","(","*",")","ASC"],"query_toks_no_value":["select","major_record_format","from","orchestra","group","by","major_record_format","order","by","count","(","*",")","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,11,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Veuillez","indiquer","les","formats","d'enregistrement","des","orchestres","par","ordre","croissant","de","d\u00e9compte","."],"question":"Veuillez indiquer les formats d'enregistrement des orchestres par ordre croissant de d\u00e9compte."},{"db_id":"dog_kennels","query":"SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'","query_toks":["SELECT","role_code",",","street",",","city",",","state","FROM","professionals","WHERE","city","LIKE","'","%","West","%","'"],"query_toks_no_value":["select","role_code",",","street",",","city",",","state","from","professionals","where","city","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]],[0,[0,[0,38,false],null]]]],"union":null,"where":[[false,9,[0,[0,37,false],null],"\"%West%\"",null]]},"question_toks":["Trouve","le","r\u00f4le",",","la","rue",",","la","ville","et","l'\u00e9tat","des","professionnels","vivant","dans","une","ville","qui","contient","la","sous-cha\u00eene","\u00ab","Ouest","\u00bb","."],"question":"Trouve le r\u00f4le, la rue, la ville et l'\u00e9tat des professionnels vivant dans une ville qui contient la sous-cha\u00eene \u00abOuest\u00bb."},{"db_id":"network_1","query":"SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nom","du","lyc\u00e9en","qui","a","le","plus","grand","nombre","d'amis","?"],"question":"Quel est le nom du lyc\u00e9en qui a le plus grand nombre d'amis?"},{"db_id":"world_1","query":"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1","query_toks":["SELECT","T2.Language","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.Continent","=","``","Asia","''","GROUP","BY","T2.Language","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","language","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","continent","=","value","group","by","t2",".","language","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,24,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Quelle","est","la","langue","utilis\u00e9e","par","le","plus","grand","nombre","de","nations","asiatiques","?"],"question":"Quelle est la langue utilis\u00e9e par le plus grand nombre de nations asiatiques?"},{"db_id":"battle_death","query":"SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'","query_toks":["SELECT","count","(","*",")","FROM","ship","WHERE","disposition_of_ship","=","'Captured","'"],"query_toks_no_value":["select","count","(","*",")","from","ship","where","disposition_of_ship","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"Captured\"",null]]},"question_toks":["Combien","de","navires","ont","fini","par","\u00eatre","\u00ab","captur\u00e9s","\u00bb","?"],"question":"Combien de navires ont fini par \u00eatre \u00abcaptur\u00e9s\u00bb?"},{"db_id":"world_1","query":"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","query_toks":["SELECT","sum","(","Population",")",",","avg","(","LifeExpectancy",")",",","Continent","FROM","country","GROUP","BY","Continent","HAVING","avg","(","LifeExpectancy",")","<","72"],"query_toks_no_value":["select","sum","(","population",")",",","avg","(","lifeexpectancy",")",",","continent","from","country","group","by","continent","having","avg","(","lifeexpectancy",")","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,10,false]],"having":[[false,4,[0,[5,15,false],null],72.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]],[5,[0,[0,15,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","l'esp\u00e9rance","de","vie","moyenne","et","la","population","totale","pour","chaque","continent","o\u00f9","l'esp\u00e9rance","de","vie","moyenne","est","inf\u00e9rieure","\u00e0","72","?"],"question":"Trouve l'esp\u00e9rance de vie moyenne et la population totale pour chaque continent o\u00f9 l'esp\u00e9rance de vie moyenne est inf\u00e9rieure \u00e0 72?"},{"db_id":"flight_2","query":"SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1","query_toks":["SELECT","T1.AirportCode","FROM","AIRPORTS","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.AirportCode","=","T2.DestAirport","OR","T1.AirportCode","=","T2.SourceAirport","GROUP","BY","T1.AirportCode","ORDER","BY","count","(","*",")","LIMIT","1"],"query_toks_no_value":["select","t1",".","airportcode","from","airports","as","t1","join","flights","as","t2","on","t1",".","airportcode","=","t2",".","destairport","or","t1",".","airportcode","=","t2",".","sourceairport","group","by","t1",".","airportcode","order","by","count","(","*",")","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,13,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","code","d'a\u00e9roport","qui","a","un","bas","num\u00e9ro","de","vols","?"],"question":"Quel est le code d'a\u00e9roport qui a un bas num\u00e9ro de vols?"},{"db_id":"flight_2","query":"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"","query_toks":["SELECT","AirportCode",",","AirportName","FROM","AIRPORTS","WHERE","city","=","``","Anthony","''"],"query_toks_no_value":["select","airportcode",",","airportname","from","airports","where","city","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Anthony\"",null]]},"question_toks":["Listez","le","code","et","le","nom","de","l'a\u00e9roport","dans","la","ville","d'Anthony","."],"question":"Listez le code et le nom de l'a\u00e9roport dans la ville d'Anthony."},{"db_id":"world_1","query":"SELECT count(*) FROM country WHERE continent  =  \"Asia\"","query_toks":["SELECT","count","(","*",")","FROM","country","WHERE","continent","=","``","Asia","''"],"query_toks_no_value":["select","count","(","*",")","from","country","where","continent","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Comptez","le","nombre","de","pays","en","Asie","."],"question":"Comptez le nombre de pays en Asie."},{"db_id":"world_1","query":"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1","query_toks":["SELECT","T2.Language","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.GovernmentForm","=","``","Republic","''","GROUP","BY","T2.Language","HAVING","COUNT","(","*",")","=","1"],"query_toks_no_value":["select","t2",".","language","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","governmentform","=","value","group","by","t2",".","language","having","count","(","*",")","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,24,false]],"having":[[false,2,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"Republic\"",null]]},"question_toks":["Quelles","langues","utilis\u00e9es","uniquement","par","un","seul","pays","avec","un","gouvernement","r\u00e9publique","?"],"question":"Quelles langues utilis\u00e9es uniquement par un seul pays avec un gouvernement r\u00e9publique?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'","query_toks":["SELECT","T1.first_name","FROM","Students","AS","T1","JOIN","Addresses","AS","T2","ON","T1.permanent_address_id","=","T2.address_id","WHERE","T2.country","=","'Haiti","'","UNION","SELECT","first_name","FROM","Students","WHERE","cell_mobile_number","=","'09700166582","'"],"query_toks_no_value":["select","t1",".","first_name","from","students","as","t1","join","addresses","as","t2","on","t1",".","permanent_address_id","=","t2",".","address_id","where","t2",".","country","=","value","union","select","first_name","from","students","where","cell_mobile_number","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,34,false],null],[0,1,false],null]],"table_units":[["table_unit",6],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]]]],"union":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],"\"09700166582\"",null]]},"where":[[false,2,[0,[0,8,false],null],"\"Haiti\"",null]]},"question_toks":["Trouvez","le","pr\u00e9nom","des","\u00e9tudiants","qui","vivent","en","permanence","dans","le","pays","Ha\u00efti","ou","qui","ont","le","num\u00e9ro","de","t\u00e9l\u00e9phone","portable","09700166582","."],"question":"Trouvez le pr\u00e9nom des \u00e9tudiants qui vivent en permanence dans le pays Ha\u00efti ou qui ont le num\u00e9ro de t\u00e9l\u00e9phone portable 09700166582."},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","GROUP","BY","T1.Airline","HAVING","count","(","*",")",">","10"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","group","by","t1",".","airline","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[[false,3,[0,[3,0,false],null],10.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Cherchez","pour","toutes","les","compagnies","a\u00e9riennes","qui","ont","au","moins","dix","vols","."],"question":"Cherchez pour toutes les compagnies a\u00e9riennes qui ont au moins dix vols."},{"db_id":"flight_2","query":"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"","query_toks":["SELECT","count","(","*",")","FROM","Flights","AS","T1","JOIN","Airports","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","WHERE","T2.city","=","``","Aberdeen","''","OR","T2.city","=","``","Abilene","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","where","t2",".","city","=","value","or","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null],"or",[false,2,[0,[0,5,false],null],"\"Abilene\"",null]]},"question_toks":["Combien","de","vols","atterrissent","\u00e0","Aberdeen","ou","Abilene","?"],"question":"Combien de vols atterrissent \u00e0 Aberdeen ou Abilene?"},{"db_id":"car_1","query":"SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';","query_toks":["SELECT","count","(","*",")","FROM","MODEL_LIST","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.Maker","=","T2.Id","JOIN","COUNTRIES","AS","T3","ON","T2.Country","=","T3.CountryId","WHERE","T3.CountryName","=","'usa","'",";"],"query_toks_no_value":["select","count","(","*",")","from","model_list","as","t1","join","car_makers","as","t2","on","t1",".","maker","=","t2",".","id","join","countries","as","t3","on","t2",".","country","=","t3",".","countryid","where","t3",".","countryname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"usa\"",null]]},"question_toks":["Quel","est","le","nombre","de","mod\u00e8les","de","voitures","produits","aux","\u00c9tats-Unis","?"],"question":"Quel est le nombre de mod\u00e8les de voitures produits aux \u00c9tats-Unis?"},{"db_id":"dog_kennels","query":"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","query_toks":["SELECT","DISTINCT","T1.first_name",",","T3.treatment_type_description","FROM","professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id","JOIN","Treatment_types","AS","T3","ON","T2.treatment_type_code","=","T3.treatment_type_code"],"query_toks_no_value":["select","distinct","t1",".","first_name",",","t3",".","treatment_type_description","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id","join","treatment_types","as","t3","on","t2",".","treatment_type_code","=","t3",".","treatment_type_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,35,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","le","pr\u00e9nom","de","chaque","professionnel","et","la","description","du","traitement","qu'il","a","r\u00e9alis\u00e9","?"],"question":"Quels sont le pr\u00e9nom de chaque professionnel et la description du traitement qu'il a r\u00e9alis\u00e9?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"","query_toks":["SELECT","T1.paragraph_text","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_id","=","T2.document_id","WHERE","T2.document_name","=","``","Customer","reviews","''"],"query_toks_no_value":["select","t1",".","paragraph_text","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","where","t2",".","document_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Customer reviews\"",null]]},"question_toks":["Quels","sont","les","paragraphes","du","document","nomm\u00e9","'Avis","clients","'","?"],"question":"Quels sont les paragraphes du document nomm\u00e9 'Avis clients'?"},{"db_id":"museum_visit","query":"SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1","query_toks":["SELECT","t1.id",",","t1.name",",","t1.age","FROM","visitor","AS","t1","JOIN","visit","AS","t2","ON","t1.id","=","t2.visitor_id","GROUP","BY","t1.id","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","id",",","t1",".","name",",","t1",".","age","from","visitor","as","t1","join","visit","as","t2","on","t1",".","id","=","t2",".","visitor_id","group","by","t1",".","id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[0,[0,[0,6,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["trouve","l'identifiant",",","le","nom","et","l'\u00e2ge","des","visiteurs","qui","ont","visit\u00e9","plusieurs","mus\u00e9es","plusieurs","fois","."],"question":"trouve l'identifiant, le nom et l'\u00e2ge des visiteurs qui ont visit\u00e9 plusieurs mus\u00e9es plusieurs fois."},{"db_id":"network_1","query":"SELECT grade FROM Highschooler","query_toks":["SELECT","grade","FROM","Highschooler"],"query_toks_no_value":["select","grade","from","highschooler"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","note","de","chaque","\u00e9tudiant","secondaire","?"],"question":"Quelle est la note de chaque \u00e9tudiant secondaire? "},{"db_id":"voter_1","query":"SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'","query_toks":["SELECT","T2.created",",","T2.state",",","T2.phone_number","FROM","contestants","AS","T1","JOIN","votes","AS","T2","ON","T1.contestant_number","=","T2.contestant_number","WHERE","T1.contestant_name","=","'Tabatha","Gehling","'"],"query_toks_no_value":["select","t2",".","created",",","t2",".","state",",","t2",".","phone_number","from","contestants","as","t1","join","votes","as","t2","on","t1",".","contestant_number","=","t2",".","contestant_number","where","t1",".","contestant_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,8,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,7,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Tabatha Gehling\"",null]]},"question_toks":["Quels","sont","les","dates","de","cr\u00e9ation",",","les","\u00e9tats","et","les","num\u00e9ros","de","t\u00e9l\u00e9phone","des","votes","qui","\u00e9taient","pour","le","candidat","nomm\u00e9","\u00ab","Tabatha","Gehling","\u00bb","?"],"question":"Quels sont les dates de cr\u00e9ation, les \u00e9tats et les num\u00e9ros de t\u00e9l\u00e9phone des votes qui \u00e9taient pour le candidat nomm\u00e9 \u00abTabatha Gehling\u00bb?"},{"db_id":"voter_1","query":"SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )","query_toks":["SELECT","count","(","*",")","FROM","contestants","WHERE","contestant_number","NOT","IN","(","SELECT","contestant_number","FROM","votes",")"],"query_toks_no_value":["select","count","(","*",")","from","contestants","where","contestant_number","not","in","(","select","contestant_number","from","votes",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,3,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Combien","de","concurrents","n","'","a","pas","\u00e9t\u00e9","vot\u00e9","pour","?"],"question":"Combien de concurrents n'a pas \u00e9t\u00e9 vot\u00e9 pour?"},{"db_id":"concert_singer","query":"SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.name",",","T2.capacity","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","WHERE","T1.year",">","=","2014","GROUP","BY","T2.stadium_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name",",","t2",".","capacity","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","where","t1",".","year",">","=","value","group","by","t2",".","stadium_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,5,[0,[0,19,false],null],2014.0,null]]},"question_toks":["Montrez","le","nom","et","la","capacit\u00e9","du","stade","avec","le","plus","de","concerts","en","2014","ou","apr\u00e8s","."],"question":"Montrez le nom et la capacit\u00e9 du stade avec le plus de concerts en 2014 ou apr\u00e8s."},{"db_id":"car_1","query":"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","query_toks":["SELECT","T1.ContId",",","T1.Continent",",","count","(","*",")","FROM","CONTINENTS","AS","T1","JOIN","COUNTRIES","AS","T2","ON","T1.ContId","=","T2.Continent","GROUP","BY","T1.ContId",";"],"query_toks_no_value":["select","t1",".","contid",",","t1",".","continent",",","count","(","*",")","from","continents","as","t1","join","countries","as","t2","on","t1",".","contid","=","t2",".","continent","group","by","t1",".","contid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,5,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","pays","compte","chaque","continent","?","Indique","l'identifiant","du","continent",",","le","nom","du","continent","et","le","nombre","de","pays","."],"question":"Combien de pays compte chaque continent? Indique l'identifiant du continent, le nom du continent et le nombre de pays."},{"db_id":"car_1","query":"SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );","query_toks":["SELECT","COUNT","(","*",")","FROM","(","SELECT","T1.CountryId",",","COUNT","(","*",")","FROM","COUNTRIES","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.CountryId","=","T2.Country","GROUP","BY","T1.CountryId","HAVING","count","(","*",")",">","2",")",";"],"query_toks_no_value":["select","count","(","*",")","from","(","select","t1",".","countryid",",","count","(","*",")","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country","group","by","t1",".","countryid","having","count","(","*",")",">","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["sql",{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,3,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]}]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","pays","ont","plus","que","deux","fabricants","d'automobile","."],"question":"Combien de pays ont plus que deux fabricants d'automobile."},{"db_id":"wta_1","query":"SELECT count(*) FROM matches","query_toks":["SELECT","count","(","*",")","FROM","matches"],"query_toks_no_value":["select","count","(","*",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Compte","le","nombre","de","correspondances","."],"question":"Compte le nombre de correspondances."},{"db_id":"orchestra","query":"SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID","query_toks":["SELECT","T1.Name",",","T2.Orchestra","FROM","conductor","AS","T1","JOIN","orchestra","AS","T2","ON","T1.Conductor_ID","=","T2.Conductor_ID"],"query_toks_no_value":["select","t1",".","name",",","t2",".","orchestra","from","conductor","as","t1","join","orchestra","as","t2","on","t1",".","conductor_id","=","t2",".","conductor_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Indiquez","les","noms","des","chefs","d'orchestre","et","des","orchestres","qu'ils","avaient","dirig\u00e9s","."],"question":"Indiquez les noms des chefs d'orchestre et des orchestres qu'ils avaient dirig\u00e9s."},{"db_id":"world_1","query":"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"","query_toks":["SELECT","sum","(","SurfaceArea",")","FROM","country","WHERE","Continent","=","``","Asia","''","OR","Continent","=","``","Europe","''"],"query_toks_no_value":["select","sum","(","surfacearea",")","from","country","where","continent","=","value","or","continent","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null],"or",[false,2,[0,[0,10,false],null],"\"Europe\"",null]]},"question_toks":["Donnez","la","superficie","couvert","par","les","pays","d'Asie","ou","D'Europe","."],"question":"Donnez la superficie couvert par les pays d'Asie ou D'Europe. "},{"db_id":"student_transcripts_tracking","query":"SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'","query_toks":["SELECT","department_description","FROM","Departments","WHERE","department_name","LIKE","'","%","computer","%","'"],"query_toks_no_value":["select","department_description","from","departments","where","department_name","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,9,[0,[0,15,false],null],"\"%computer%\"",null]]},"question_toks":["Quelle","est","la","description","du","d\u00e9partement","pour","celui","dont","le","nom","a","le","mot","ordinateur","?"],"question":"Quelle est la description du d\u00e9partement pour celui dont le nom a le mot ordinateur?"},{"db_id":"pets_1","query":"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","query_toks":["SELECT","pettype",",","weight","FROM","pets","ORDER","BY","pet_age","LIMIT","1"],"query_toks_no_value":["select","pettype",",","weight","from","pets","order","by","pet_age","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,12,false],null]],[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Trouvez","le","type","et","le","poids","de","l'animal","le","plus","jeune","."],"question":"Trouvez le type et le poids de l'animal le plus jeune. "},{"db_id":"car_1","query":"SELECT Maker ,  Model FROM MODEL_LIST;","query_toks":["SELECT","Maker",",","Model","FROM","MODEL_LIST",";"],"query_toks_no_value":["select","maker",",","model","from","model_list"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","fabricants","et","les","mod\u00e8les","?"],"question":"Quels sont les fabricants et les mod\u00e8les?"},{"db_id":"flight_2","query":"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"","query_toks":["SELECT","Airline","FROM","AIRLINES","WHERE","Abbreviation","=","``","UAL","''"],"query_toks_no_value":["select","airline","from","airlines","where","abbreviation","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],"\"UAL\"",null]]},"question_toks":["Quelle","compagnie","a\u00e9rienne","\u00e0","l'abr\u00e9viation","'UAL","'","?"],"question":"Quelle compagnie a\u00e9rienne \u00e0 l'abr\u00e9viation 'UAL'?"},{"db_id":"network_1","query":"SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.name","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Donnez","le","nom","de","l'\u00e9l\u00e8ve","avec","le","plus","d'aimer","."],"question":"Donnez le nom de l'\u00e9l\u00e8ve avec le plus d'aimer."},{"db_id":"student_transcripts_tracking","query":"SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'","query_toks":["SELECT","cell_mobile_number","FROM","Students","WHERE","first_name","=","'Timmothy","'","AND","last_name","=","'Ward","'"],"query_toks_no_value":["select","cell_mobile_number","from","students","where","first_name","=","value","and","last_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,38,false],null]]]],"union":null,"where":[[false,2,[0,[0,35,false],null],"\"Timmothy\"",null],"and",[false,2,[0,[0,37,false],null],"\"Ward\"",null]]},"question_toks":["Quel","est","le","num\u00e9ro","de","t\u00e9l\u00e9phone","portable","de","l'\u00e9l\u00e8ve","nomm\u00e9","Timothy","Ward","?"],"question":"Quel est le num\u00e9ro de t\u00e9l\u00e9phone portable de l'\u00e9l\u00e8ve nomm\u00e9 Timothy Ward?"},{"db_id":"pets_1","query":"SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'","query_toks":["SELECT","T1.lname","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pet_age","=","3","AND","T3.pettype","=","'cat","'"],"query_toks_no_value":["select","t1",".","lname","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pet_age","=","value","and","t3",".","pettype","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],3.0,null],"and",[false,2,[0,[0,12,false],null],"\"cat\"",null]]},"question_toks":["Quel","est","le","nom","de","l'\u00e9l\u00e8ve","qui","a","un","chat","de","trois","ans","?"],"question":"Quel est le nom de l'\u00e9l\u00e8ve qui a un chat de trois ans?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"","query_toks":["SELECT","document_name",",","template_id","FROM","Documents","WHERE","Document_Description","LIKE","``","%","w","%","''"],"query_toks_no_value":["select","document_name",",","template_id","from","documents","where","document_description","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,9,[0,[0,12,false],null],"\"%w%\"",null]]},"question_toks":["Renvoyez","les","noms","et","les","identifiants","de","mod\u00e8le","pour","les","documents","qui","contiennent","la","lettre","w","dans","leur","description","."],"question":"Renvoyez les noms et les identifiants de mod\u00e8le pour les documents qui contiennent la lettre w dans leur description."},{"db_id":"poker_player","query":"SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000","query_toks":["SELECT","max","(","Final_Table_Made",")","FROM","poker_player","WHERE","Earnings","<","200000"],"query_toks_no_value":["select","max","(","final_table_made",")","from","poker_player","where","earnings","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,3,false],null]]]],"union":null,"where":[[false,4,[0,[0,6,false],null],200000.0,null]]},"question_toks":["Quel","est","le","nombre","maximum","de","tables","finales","compl\u00e8te","parmi","les","joueurs","de","poker","avec","des","profits","moins","de","200000","?"],"question":"Quel est le nombre maximum de tables finales compl\u00e8te parmi les joueurs de poker avec des profits moins de 200000?"},{"db_id":"pets_1","query":"SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid","query_toks":["SELECT","count","(","*",")",",","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","GROUP","BY","T1.stuid"],"query_toks_no_value":["select","count","(","*",")",",","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","group","by","t1",".","stuid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Pour","les","\u00e9tudiants","qui","ont","des","animaux",",","combien","d'eux","poss\u00e8de","un","animal","?"],"question":"Pour les \u00e9tudiants qui ont des animaux, combien d'eux poss\u00e8de un animal?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"","query_toks":["SELECT","template_type_description","FROM","Ref_template_types","WHERE","template_type_code","=","``","AD","''"],"query_toks_no_value":["select","template_type_description","from","ref_template_types","where","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,1,false],null],"\"AD\"",null]]},"question_toks":["Renvoyez","la","description","du","type","de","mod\u00e8le","du","type","de","mod\u00e8le","avec","le","code","AD","."],"question":"Renvoyez la description du type de mod\u00e8le du type de mod\u00e8le avec le code AD."},{"db_id":"museum_visit","query":"SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4","query_toks":["SELECT","avg","(","age",")","FROM","visitor","WHERE","Level_of_membership","<","=","4"],"query_toks_no_value":["select","avg","(","age",")","from","visitor","where","level_of_membership","<","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,8,false],null]]]],"union":null,"where":[[false,6,[0,[0,7,false],null],4.0,null]]},"question_toks":["Quel","est","l'\u00e2ge","moyen","des","visiteurs","donc","le","niveau","d'adh\u00e9sion","n'est","pas","sup\u00e9rieur","\u00e0","quatre","?"],"question":"Quel est l'\u00e2ge moyen des visiteurs donc le niveau d'adh\u00e9sion n'est pas sup\u00e9rieur \u00e0 quatre?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.SourceAirport","=","T2.AirportCode","WHERE","T2.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","sourceairport","=","t2",".","airportcode","where","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Combien","de","vols","partent","de","City","Aberdeen","?"],"question":"Combien de vols partent de City Aberdeen?"},{"db_id":"museum_visit","query":"SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit","query_toks":["SELECT","avg","(","num_of_ticket",")",",","max","(","num_of_ticket",")","FROM","visit"],"query_toks_no_value":["select","avg","(","num_of_ticket",")",",","max","(","num_of_ticket",")","from","visit"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,11,false],null]],[1,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nombre","moyen","et","maximum","de","billets","achet\u00e9s","lors","de","toutes","les","visites","?"],"question":"Quel est le nombre moyen et maximum de billets achet\u00e9s lors de toutes les visites?"},{"db_id":"world_1","query":"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"","query_toks":["SELECT","CountryCode","FROM","countrylanguage","EXCEPT","SELECT","CountryCode","FROM","countrylanguage","WHERE","LANGUAGE","=","``","English","''"],"query_toks_no_value":["select","countrycode","from","countrylanguage","except","select","countrycode","from","countrylanguage","where","language","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","codes","de","pays","pour","les","pays","qui","ne","parlent","pas","anglais","?"],"question":"Quels sont les codes de pays pour les pays qui ne parlent pas anglais?"},{"db_id":"battle_death","query":"SELECT name ,  date FROM battle","query_toks":["SELECT","name",",","date","FROM","battle"],"query_toks_no_value":["select","name",",","date","from","battle"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Indique","le","nom",",","la","date","et","le","r\u00e9sultat","de","chaque","bataille","."],"question":"Indique le nom, la date et le r\u00e9sultat de chaque bataille."},{"db_id":"dog_kennels","query":"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'","query_toks":["SELECT","T1.first_name",",","T2.name","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id","WHERE","T1.state","=","'Virginia","'"],"query_toks_no_value":["select","t1",".","first_name",",","t2",".","name","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","where","t1",".","state","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,25,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"Virginia\"",null]]},"question_toks":["Quels","chiens","appartiennent","\u00e0","quelqu'un","qui","vit","en","Virginie","?","Indique","le","pr\u00e9nom","du","propri\u00e9taire","et","le","nom","du","chien","."],"question":"Quels chiens appartiennent \u00e0 quelqu'un qui vit en Virginie? Indique le pr\u00e9nom du propri\u00e9taire et le nom du chien."},{"db_id":"car_1","query":"SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';","query_toks":["SELECT","DISTINCT","T1.Maker","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","JOIN","CAR_NAMES","AS","T3","ON","T2.model","=","T3.model","JOIN","CARS_DATA","AS","T4","ON","T3.MakeId","=","T4.id","WHERE","T4.year","=","'1970","'",";"],"query_toks_no_value":["select","distinct","t1",".","maker","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","join","car_names","as","t3","on","t2",".","model","=","t3",".","model","join","cars_data","as","t4","on","t3",".","makeid","=","t4",".","id","where","t4",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],"\"1970\"",null]]},"question_toks":["Quel","est","le","nom","des","diff\u00e9rents","fabricants","d'automobiles","qui","ont","fabriqu\u00e9","les","automobiles","en","1970","?"],"question":"Quel est le nom des diff\u00e9rents fabricants d'automobiles qui ont fabriqu\u00e9 les automobiles en 1970?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"","query_toks":["SELECT","template_type_code","FROM","Ref_template_types","WHERE","template_type_description","=","``","Book","''"],"query_toks_no_value":["select","template_type_code","from","ref_template_types","where","template_type_description","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Book\"",null]]},"question_toks":["``","Retourner","le","type","de","code","du","type","de","mod\u00e8le","avec","la","description","``","''","Livre","''","''",".","''"],"question":"\"Retourner le type de code du type de mod\u00e8le avec la description \"\"Livre\"\".\""},{"db_id":"employee_hire_evaluation","query":"SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1","query_toks":["SELECT","t1.name","FROM","employee","AS","t1","JOIN","evaluation","AS","t2","ON","t1.Employee_ID","=","t2.Employee_ID","ORDER","BY","t2.bonus","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","employee","as","t1","join","evaluation","as","t2","on","t1",".","employee_id","=","t2",".","employee_id","order","by","t2",".","bonus","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,15,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,17,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","employ\u00e9","a","re\u00e7u","le","plus","gros","bonus","?","Donne-moi","le","nom","de","l'employ\u00e9","."],"question":"Quel employ\u00e9 a re\u00e7u le plus gros bonus? Donne-moi le nom de l'employ\u00e9."},{"db_id":"world_1","query":"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode","query_toks":["SELECT","count","(","*",")",",","max","(","Percentage",")","FROM","countrylanguage","WHERE","LANGUAGE","=","``","Spanish","''","GROUP","BY","CountryCode"],"query_toks_no_value":["select","count","(","*",")",",","max","(","percentage",")","from","countrylanguage","where","language","=","value","group","by","countrycode"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[1,[0,[0,26,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Spanish\"",null]]},"question_toks":["Compte","le","nombre","de","pays","pour","lesquels","l'espagnol","est","la","langue","principalement","parl\u00e9e","."],"question":"Compte le nombre de pays pour lesquels l'espagnol est la langue principalement parl\u00e9e."},{"db_id":"dog_kennels","query":"SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )","query_toks":["SELECT","T1.last_name","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id","WHERE","T2.age","=","(","SELECT","max","(","age",")","FROM","Dogs",")"],"query_toks_no_value":["select","t1",".","last_name","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","where","t2",".","age","=","(","select","max","(","age",")","from","dogs",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,26,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,26,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["\u00c0","qui","appartient","le","plus","jeune","chien","?","Donne-moi","son","nom","de","famille","."],"question":"\u00c0 qui appartient le plus jeune chien? Donne-moi son nom de famille."},{"db_id":"dog_kennels","query":"SELECT email_address ,  cell_number ,  home_phone FROM professionals","query_toks":["SELECT","email_address",",","cell_number",",","home_phone","FROM","professionals"],"query_toks_no_value":["select","email_address",",","cell_number",",","home_phone","from","professionals"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,41,false],null]],[0,[0,[0,43,false],null]],[0,[0,[0,42,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","l","'","e-mail",",","le","t\u00e9l\u00e9phone","portable","et","le","t\u00e9l\u00e9phone","personnel","de","chaque","professionnel","?"],"question":"Quels sont l'e-mail, le t\u00e9l\u00e9phone portable et le t\u00e9l\u00e9phone personnel de chaque professionnel?"},{"db_id":"tvshow","query":"SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')","query_toks":["SELECT","package_option","FROM","TV_Channel","WHERE","id","NOT","IN","(","SELECT","channel","FROM","cartoon","WHERE","directed_by","=","'Ben","Jones","'",")"],"query_toks_no_value":["select","package_option","from","tv_channel","where","id","not","in","(","select","channel","from","cartoon","where","directed_by","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null]]},null]]},"question_toks":["Quelles","sont","les","options","de","package","de","toutes","les","cha\u00eenes","de","t\u00e9l\u00e9vision","qui","ne","diffusent","pas","de","dessins","anim\u00e9s","r\u00e9alis\u00e9s","par","Ben","Jones","?"],"question":"Quelles sont les options de package de toutes les cha\u00eenes de t\u00e9l\u00e9vision qui ne diffusent pas de dessins anim\u00e9s r\u00e9alis\u00e9s par Ben Jones?"},{"db_id":"dog_kennels","query":"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.owner_id",",","T2.first_name",",","T2.last_name","FROM","Dogs","AS","T1","JOIN","Owners","AS","T2","ON","T1.owner_id","=","T2.owner_id","GROUP","BY","T1.owner_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","owner_id",",","t2",".","first_name",",","t2",".","last_name","from","dogs","as","t1","join","owners","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","group","by","t1",".","owner_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,21,false],null],[0,10,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[[0,21,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,21,false],null]],[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoie","l'identifiant","du","propri\u00e9taire",",","le","pr\u00e9nom","et","le","nom","du","propri\u00e9taire","qui","a","le","plus","de","chiens","."],"question":"Renvoie l'identifiant du propri\u00e9taire, le pr\u00e9nom et le nom du propri\u00e9taire qui a le plus de chiens."},{"db_id":"student_transcripts_tracking","query":"SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'","query_toks":["SELECT","DISTINCT","T2.semester_id","FROM","Degree_Programs","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.degree_program_id","=","T2.degree_program_id","WHERE","degree_summary_name","=","'Master","'","INTERSECT","SELECT","DISTINCT","T2.semester_id","FROM","Degree_Programs","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.degree_program_id","=","T2.degree_program_id","WHERE","degree_summary_name","=","'Bachelor","'"],"query_toks_no_value":["select","distinct","t2",".","semester_id","from","degree_programs","as","t1","join","student_enrolment","as","t2","on","t1",".","degree_program_id","=","t2",".","degree_program_id","where","degree_summary_name","=","value","intersect","select","distinct","t2",".","semester_id","from","degree_programs","as","t1","join","student_enrolment","as","t2","on","t1",".","degree_program_id","=","t2",".","degree_program_id","where","degree_summary_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,46,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"Bachelor\"",null]]},"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,46,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"Master\"",null]]},"question_toks":["Quel","est","l'identifiant","du","semestre","auquel","les","\u00e9tudiants","en","master","et","bachelier","\u00e9taient","inscrits","?"],"question":"Quel est l'identifiant du semestre auquel les \u00e9tudiants en master et bachelier \u00e9taient inscrits?"},{"db_id":"pets_1","query":"SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'","query_toks":["SELECT","count","(","*",")","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T2.petid","=","T3.petid","WHERE","T1.sex","=","'F","'","AND","T3.pettype","=","'dog","'"],"query_toks_no_value":["select","count","(","*",")","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t2",".","petid","=","t3",".","petid","where","t1",".","sex","=","value","and","t3",".","pettype","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"F\"",null],"and",[false,2,[0,[0,12,false],null],"\"dog\"",null]]},"question_toks":["Combien","d'animaux","de","compagnie","sont","\u00e9lev\u00e9s","par","des","\u00e9tudiantes","?"],"question":"Combien d'animaux de compagnie sont \u00e9lev\u00e9s par des \u00e9tudiantes?"},{"db_id":"voter_1","query":"SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC","query_toks":["SELECT","contestant_number",",","contestant_name","FROM","contestants","ORDER","BY","contestant_name","DESC"],"query_toks_no_value":["select","contestant_number",",","contestant_name","from","contestants","order","by","contestant_name","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,4,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["\u00c9num\u00e9rez","les","num\u00e9ros","et","noms","des","candidats",",","class\u00e9s","par","nom","de","candidat","d\u00e9croissant","."],"question":"\u00c9num\u00e9rez les num\u00e9ros et noms des candidats, class\u00e9s par nom de candidat d\u00e9croissant."},{"db_id":"poker_player","query":"SELECT avg(Earnings) FROM poker_player","query_toks":["SELECT","avg","(","Earnings",")","FROM","poker_player"],"query_toks_no_value":["select","avg","(","earnings",")","from","poker_player"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","revenu","moyen","des","joueurs","de","poker","?"],"question":"Quel est le revenu moyen des joueurs de poker?"},{"db_id":"world_1","query":"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","GROUP","BY","T1.Name","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","group","by","t1",".","name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Donne","le","nom","de","la","nation","qui","utilise","le","plus","de","langues","."],"question":"Donne le nom de la nation qui utilise le plus de langues."},{"db_id":"student_transcripts_tracking","query":"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.address_id",",","T1.line_1",",","T1.line_2","FROM","Addresses","AS","T1","JOIN","Students","AS","T2","ON","T1.address_id","=","T2.current_address_id","GROUP","BY","T1.address_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","address_id",",","t1",".","line_1",",","t1",".","line_2","from","addresses","as","t1","join","students","as","t2","on","t1",".","address_id","=","t2",".","current_address_id","group","by","t1",".","address_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,33,false],null]],"table_units":[["table_unit",0],["table_unit",6]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","l'identifiant",",","la","ligne","1","et","la","ligne","2","de","l'adresse","avec","le","plus","d'\u00e9tudiants","?"],"question":"Quel est l'identifiant, la ligne 1 et la ligne 2 de l'adresse avec le plus d'\u00e9tudiants?"},{"db_id":"dog_kennels","query":"SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )","query_toks":["SELECT","T1.last_name","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id","WHERE","T2.age","=","(","SELECT","max","(","age",")","FROM","Dogs",")"],"query_toks_no_value":["select","t1",".","last_name","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","where","t2",".","age","=","(","select","max","(","age",")","from","dogs",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,26,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,26,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Indique","le","nom","de","famille","du","propri\u00e9taire","du","plus","jeune","chien","."],"question":"Indique le nom de famille du propri\u00e9taire du plus jeune chien."},{"db_id":"orchestra","query":"SELECT Name FROM conductor ORDER BY Age ASC","query_toks":["SELECT","Name","FROM","conductor","ORDER","BY","Age","ASC"],"query_toks_no_value":["select","name","from","conductor","order","by","age","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,3,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["\u00c9num\u00e9rez","les","noms","des","chefs","d'orchestre","par","ordre","croissant","d'\u00e2ge","."],"question":"\u00c9num\u00e9rez les noms des chefs d'orchestre par ordre croissant d'\u00e2ge."},{"db_id":"flight_2","query":"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","query_toks":["SELECT","T1.Abbreviation",",","T1.Country","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","GROUP","BY","T1.Airline","ORDER","BY","count","(","*",")","LIMIT","1"],"query_toks_no_value":["select","t1",".","abbreviation",",","t1",".","country","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","group","by","t1",".","airline","order","by","count","(","*",")","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","l'abr\u00e9viation","et","le","pays","de","la","compagnie","a\u00e9rienne","qui","a","le","moins","de","vols","?"],"question":"Trouve l'abr\u00e9viation et le pays de la compagnie a\u00e9rienne qui a le moins de vols?"},{"db_id":"singer","query":"SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Citizenship","FROM","singer","GROUP","BY","Citizenship","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","citizenship","from","singer","group","by","citizenship","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Indique","s'il","te","plait","la","citoyennet\u00e9","la","plus","commune","des","chanteurs","."],"question":"Indique s'il te plait la citoyennet\u00e9 la plus commune des chanteurs."},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","APG","''","INTERSECT","SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","CVO","''"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value","intersect","select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"CVO\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"APG\"",null]]},"question_toks":["Quelles","compagnies","a\u00e9riennes","ont","des","vols","au","d\u00e9part","des","a\u00e9roports","APG","et","CVO","?"],"question":"Quelles compagnies a\u00e9riennes ont des vols au d\u00e9part des a\u00e9roports APG et CVO?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.document_id",",","T2.document_name","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_id","=","T2.document_id","GROUP","BY","T1.document_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","document_id",",","t2",".","document_name","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","group","by","t1",".","document_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoie","l'identifiant","et","le","nom","du","document","avec","le","plus","de","paragraphes","."],"question":"Renvoie l'identifiant et le nom du document avec le plus de paragraphes."},{"db_id":"singer","query":"SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC","query_toks":["SELECT","Name","FROM","singer","ORDER","BY","Net_Worth_Millions","ASC"],"query_toks_no_value":["select","name","from","singer","order","by","net_worth_millions","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,4,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["\u00c9num\u00e8re","le","nom","des","chanteurs","par","ordre","croissant","de","valeur","nette","."],"question":"\u00c9num\u00e8re le nom des chanteurs par ordre croissant de valeur nette."},{"db_id":"car_1","query":"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;","query_toks":["SELECT","T1.FullName",",","T1.Id","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","GROUP","BY","T1.Id","HAVING","count","(","*",")",">","3",";"],"query_toks_no_value":["select","t1",".","fullname",",","t1",".","id","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","group","by","t1",".","id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[[false,3,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","et","identifiants","de","tous","les","fabricants","avec","plus","de","3","mod\u00e8les","?"],"question":"Quels sont les noms et identifiants de tous les fabricants avec plus de 3 mod\u00e8les?"},{"db_id":"world_1","query":"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"","query_toks":["SELECT","Region","FROM","country","AS","T1","JOIN","city","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Name","=","``","Kabul","''"],"query_toks_no_value":["select","region","from","country","as","t1","join","city","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kabul\"",null]]},"question_toks":["Dans","quelle","r\u00e9gion","se","trouve","Kaboul","?"],"question":"Dans quelle r\u00e9gion se trouve Kaboul?"},{"db_id":"wta_1","query":"SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","YEAR","FROM","matches","GROUP","BY","YEAR","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","year","from","matches","group","by","year","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,38,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,38,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","ann\u00e9e","a","eu","le","plus","de","matchs","?"],"question":"Quelle ann\u00e9e a eu le plus de matchs?"},{"db_id":"wta_1","query":"SELECT avg(winner_rank) FROM matches","query_toks":["SELECT","avg","(","winner_rank",")","FROM","matches"],"query_toks_no_value":["select","avg","(","winner_rank",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,35,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","rang","moyen","des","gagnants","dans","tous","les","matchs","."],"question":"Trouve le rang moyen des gagnants dans tous les matchs."},{"db_id":"world_1","query":"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"","query_toks":["SELECT","DISTINCT","CountryCode","FROM","countrylanguage","WHERE","LANGUAGE","!","=","``","English","''"],"query_toks_no_value":["select","distinct","countrycode","from","countrylanguage","where","language","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,7,[0,[0,24,false],null],"\"English\"",null]]},"question_toks":["Donne","les","codes","de","pays","pour","les","pays","dans","lesquels","les","gens","parlent","des","langues","autres","que","l'anglais","."],"question":"Donne les codes de pays pour les pays dans lesquels les gens parlent des langues autres que l'anglais."},{"db_id":"pets_1","query":"SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20","query_toks":["SELECT","count","(","*",")","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","WHERE","T1.age",">","20"],"query_toks_no_value":["select","count","(","*",")","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","where","t1",".","age",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],20.0,null]]},"question_toks":["Trouve","le","nombre","d'animaux","de","compagnie","appartenant","\u00e0","des","\u00e9tudiants","de","plus","de","20","ans","."],"question":"Trouve le nombre d'animaux de compagnie appartenant \u00e0 des \u00e9tudiants de plus de 20 ans."},{"db_id":"concert_singer","query":"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","query_toks":["SELECT","name",",","capacity","FROM","stadium","ORDER","BY","average","DESC","LIMIT","1"],"query_toks_no_value":["select","name",",","capacity","from","stadium","order","by","average","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,7,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","le","nom","et","la","capacit\u00e9","du","stade","avec","la","fr\u00e9quentation","moyenne","la","plus","\u00e9lev\u00e9e","?"],"question":"Quels sont le nom et la capacit\u00e9 du stade avec la fr\u00e9quentation moyenne la plus \u00e9lev\u00e9e?"},{"db_id":"employee_hire_evaluation","query":"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","query_toks":["SELECT","count","(","*",")",",","t2.name","FROM","hiring","AS","t1","JOIN","shop","AS","t2","ON","t1.shop_id","=","t2.shop_id","GROUP","BY","t2.name"],"query_toks_no_value":["select","count","(","*",")",",","t2",".","name","from","hiring","as","t1","join","shop","as","t2","on","t1",".","shop_id","=","t2",".","shop_id","group","by","t2",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,5,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","nombre","d'employ\u00e9s","embauch\u00e9s","dans","chaque","magasin",";","montrer","\u00e9galement","le","nom","de","la","boutique","."],"question":"Trouve le nombre d'employ\u00e9s embauch\u00e9s dans chaque magasin; montrer \u00e9galement le nom de la boutique."},{"db_id":"poker_player","query":"SELECT count(DISTINCT Nationality) FROM people","query_toks":["SELECT","count","(","DISTINCT","Nationality",")","FROM","people"],"query_toks_no_value":["select","count","(","distinct","nationality",")","from","people"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,8,true],null]]]],"union":null,"where":[]},"question_toks":["Compte","le","nombre","de","nationalit\u00e9s","diff\u00e9rentes","."],"question":"Compte le nombre de nationalit\u00e9s diff\u00e9rentes."},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","JOIN","AIRPORTS","AS","T3","ON","T1.SourceAirport","=","T3.AirportCode","WHERE","T2.City","=","``","Ashley","''","AND","T3.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","join","airports","as","t3","on","t1",".","sourceairport","=","t3",".","airportcode","where","t2",".","city","=","value","and","t3",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Ashley\"",null],"and",[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Combien","de","vols","partent","de","la","ville","'Aberdeen","'","et","ont","pour","destination","la","ville","'Ashley","'","?"],"question":"Combien de vols partent de la ville 'Aberdeen' et ont pour destination la ville 'Ashley'?"},{"db_id":"employee_hire_evaluation","query":"SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)","query_toks":["SELECT","name","FROM","shop","WHERE","number_products",">","(","SELECT","avg","(","number_products",")","FROM","shop",")"],"query_toks_no_value":["select","name","from","shop","where","number_products",">","(","select","avg","(","number_products",")","from","shop",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,9,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Le","nombre","nombre","de","produits","de","quel","magasin","est","sup\u00e9rieur","\u00e0","la","moyenne","?","Donne-moi","les","noms","des","magasins","."],"question":"Le nombre nombre de produits de quel magasin est sup\u00e9rieur \u00e0 la moyenne? Donne-moi les noms des magasins."},{"db_id":"poker_player","query":"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","query_toks":["SELECT","Final_Table_Made",",","Best_Finish","FROM","poker_player"],"query_toks_no_value":["select","final_table_made",",","best_finish","from","poker_player"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Quelles","sont","les","tables","finales","et","les","meilleures","finitions","pour","tous","les","joueurs","de","poker","?"],"question":"Quelles sont les tables finales et les meilleures finitions pour tous les joueurs de poker?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Paragraphs","query_toks":["SELECT","count","(","*",")","FROM","Paragraphs"],"query_toks_no_value":["select","count","(","*",")","from","paragraphs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","paragraphes","au","total","?"],"question":"Combien de paragraphes au total?"},{"db_id":"world_1","query":"SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"","query_toks":["SELECT","count","(","*",")","FROM","country","WHERE","GovernmentForm","=","``","Republic","''"],"query_toks_no_value":["select","count","(","*",")","from","country","where","governmentform","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"Republic\"",null]]},"question_toks":["Combien","de","pays","ont","une","r\u00e9publique","comme","forme","de","gouvernement","?"],"question":"Combien de pays ont une r\u00e9publique comme forme de gouvernement?"},{"db_id":"pets_1","query":"SELECT count(DISTINCT pettype) FROM pets","query_toks":["SELECT","count","(","DISTINCT","pettype",")","FROM","pets"],"query_toks_no_value":["select","count","(","distinct","pettype",")","from","pets"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,12,true],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","nombre","de","types","d'animaux","de","compagnie","distincts","."],"question":"Trouve le nombre de types d'animaux de compagnie distincts."},{"db_id":"world_1","query":"SELECT Name FROM country ORDER BY Population ASC LIMIT 3","query_toks":["SELECT","Name","FROM","country","ORDER","BY","Population","ASC","LIMIT","3"],"query_toks_no_value":["select","name","from","country","order","by","population","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["asc",[[0,[0,14,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoie","les","noms","des","3","pays","avec","le","moins","de","personnes","."],"question":"Renvoie les noms des 3 pays avec le moins de personnes."},{"db_id":"dog_kennels","query":"SELECT max(charge_amount) FROM Charges","query_toks":["SELECT","max","(","charge_amount",")","FROM","Charges"],"query_toks_no_value":["select","max","(","charge_amount",")","from","charges"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","montant","des","frais","du","type","de","frais","le","plus","cher","?"],"question":"Quel est le montant des frais du type de frais le plus cher?"},{"db_id":"pets_1","query":"SELECT petid ,  weight FROM pets WHERE pet_age  >  1","query_toks":["SELECT","petid",",","weight","FROM","pets","WHERE","pet_age",">","1"],"query_toks_no_value":["select","petid",",","weight","from","pets","where","pet_age",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],1.0,null]]},"question_toks":["Quels","sont","l'identifiant","et","le","poids","de","chaque","animal","de","plus","de","1","an","?"],"question":"Quels sont l'identifiant et le poids de chaque animal de plus de 1 an?"},{"db_id":"employee_hire_evaluation","query":"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","query_toks":["SELECT","manager_name",",","district","FROM","shop","ORDER","BY","number_products","DESC","LIMIT","1"],"query_toks_no_value":["select","manager_name",",","district","from","shop","order","by","number_products","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","nom","du","g\u00e9rant","et","le","quartier","de","la","boutique","dont","le","nombre","de","produits","est","le","plus","important","."],"question":"Trouve le nom du g\u00e9rant et le quartier de la boutique dont le nombre de produits est le plus important."},{"db_id":"dog_kennels","query":"SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )","query_toks":["SELECT","count","(","*",")","FROM","Dogs","WHERE","age","<","(","SELECT","avg","(","age",")","FROM","Dogs",")"],"query_toks_no_value":["select","count","(","*",")","from","dogs","where","age","<","(","select","avg","(","age",")","from","dogs",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,4,[0,[0,26,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,26,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Combien","de","chiens","ont","un","\u00e2ge","inf\u00e9rieur","\u00e0","la","moyenne","?"],"question":"Combien de chiens ont un \u00e2ge inf\u00e9rieur \u00e0 la moyenne?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","template_type_code","FROM","Templates","GROUP","BY","template_type_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","template_type_code","from","templates","group","by","template_type_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","code","de","type","de","mod\u00e8le","contient","le","plus","de","mod\u00e8les","?"],"question":"Quel code de type de mod\u00e8le contient le plus de mod\u00e8les?"},{"db_id":"wta_1","query":"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date","query_toks":["SELECT","first_name",",","last_name","FROM","players","WHERE","hand","=","'L","'","ORDER","BY","birth_date"],"query_toks_no_value":["select","first_name",",","last_name","from","players","where","hand","=","value","order","by","birth_date"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"L\"",null]]},"question_toks":["Quels","sont","les","noms","complets","de","tous","les","joueurs","gauchers",",","par","ordre","de","date","de","naissance","?"],"question":"Quels sont les noms complets de tous les joueurs gauchers, par ordre de date de naissance?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.degree_program_id",",","T1.degree_summary_name","FROM","Degree_Programs","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.degree_program_id","=","T2.degree_program_id","GROUP","BY","T1.degree_program_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","degree_program_id",",","t1",".","degree_summary_name","from","degree_programs","as","t1","join","student_enrolment","as","t2","on","t1",".","degree_program_id","=","t2",".","degree_program_id","group","by","t1",".","degree_program_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","l'identifiant","du","programme","et","le","r\u00e9sum\u00e9","du","dipl\u00f4me","qui","a","le","plus","d'\u00e9tudiants","inscrits","?"],"question":"Quel est l'identifiant du programme et le r\u00e9sum\u00e9 du dipl\u00f4me qui a le plus d'\u00e9tudiants inscrits?"},{"db_id":"network_1","query":"SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes","query_toks":["SELECT","student_id","FROM","Friend","INTERSECT","SELECT","liked_id","FROM","Likes"],"query_toks_no_value":["select","student_id","from","friend","intersect","select","liked_id","from","likes"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","identifiants","des","\u00e9l\u00e8ves","qui","ont","des","amis","et","sont","aim\u00e9s","?"],"question":"Quels sont les identifiants des \u00e9l\u00e8ves qui ont des amis et sont aim\u00e9s?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"","query_toks":["SELECT","template_type_description","FROM","Ref_template_types","WHERE","template_type_code","=","``","AD","''"],"query_toks_no_value":["select","template_type_description","from","ref_template_types","where","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,1,false],null],"\"AD\"",null]]},"question_toks":["``","Quelles","sont","les","descriptions","de","type","de","mod\u00e8le","pour","le","code","de","type","de","mod\u00e8le","''","``","AD","''","``",".","''"],"question":"\"Quelles sont les descriptions de type de mod\u00e8le pour le code de type de mod\u00e8le\" \"AD\" \".\""},{"db_id":"orchestra","query":"SELECT Name FROM conductor ORDER BY Year_of_Work DESC","query_toks":["SELECT","Name","FROM","conductor","ORDER","BY","Year_of_Work","DESC"],"query_toks_no_value":["select","name","from","conductor","order","by","year_of_work","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Listez","les","noms","des","conducteurs","par","ordre","d\u00e9croissant","d'ann\u00e9es","de","travail","."],"question":"Listez les noms des conducteurs par ordre d\u00e9croissant d'ann\u00e9es de travail."},{"db_id":"wta_1","query":"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","query_toks":["SELECT","sum","(","ranking_points",")",",","T1.first_name","FROM","players","AS","T1","JOIN","rankings","AS","T2","ON","T1.player_id","=","T2.player_id","GROUP","BY","T1.first_name"],"query_toks_no_value":["select","sum","(","ranking_points",")",",","t1",".","first_name","from","players","as","t1","join","rankings","as","t2","on","t1",".","player_id","=","t2",".","player_id","group","by","t1",".","first_name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,41,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,42,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","total","des","points","de","classement","pour","chaque","joueur","et","leur","pr\u00e9nom","."],"question":"Trouve le total des points de classement pour chaque joueur et leur pr\u00e9nom."},{"db_id":"orchestra","query":"SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Record_Company","FROM","orchestra","GROUP","BY","Record_Company","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","record_company","from","orchestra","group","by","record_company","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","maison","de","disques","utilis\u00e9e","par","le","plus","grand","nombre","d'orchestres","?"],"question":"Quelle est la maison de disques utilis\u00e9e par le plus grand nombre d'orchestres?"},{"db_id":"employee_hire_evaluation","query":"SELECT count(DISTINCT LOCATION) FROM shop","query_toks":["SELECT","count","(","DISTINCT","LOCATION",")","FROM","shop"],"query_toks_no_value":["select","count","(","distinct","location",")","from","shop"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,7,true],null]]]],"union":null,"where":[]},"question_toks":["Combien","y","a-t-il","de","magasins","diff\u00e9rents","?"],"question":"Combien y a-t-il de magasins diff\u00e9rents?"},{"db_id":"student_transcripts_tracking","query":"SELECT line_1 ,  line_2 FROM addresses","query_toks":["SELECT","line_1",",","line_2","FROM","addresses"],"query_toks_no_value":["select","line_1",",","line_2","from","addresses"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","premi\u00e8re","et","la","deuxi\u00e8me","ligne","pour","toutes","les","adresses","?"],"question":"Quelle est la premi\u00e8re et la deuxi\u00e8me ligne pour toutes les adresses?"},{"db_id":"course_teach","query":"SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33","query_toks":["SELECT","Name","FROM","teacher","WHERE","Age","=","32","OR","Age","=","33"],"query_toks_no_value":["select","name","from","teacher","where","age","=","value","or","age","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],32.0,null],"or",[false,2,[0,[0,6,false],null],33.0,null]]},"question_toks":["Quels","sont","les","noms","des","enseignants","\u00e2g\u00e9s","de","32","ou","33","ans","?"],"question":"Quels sont les noms des enseignants \u00e2g\u00e9s de 32 ou 33 ans?"},{"db_id":"poker_player","query":"SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2","query_toks":["SELECT","Nationality","FROM","people","GROUP","BY","Nationality","HAVING","COUNT","(","*",")",">","=","2"],"query_toks_no_value":["select","nationality","from","people","group","by","nationality","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoyez","les","nationalit\u00e9s","pour","lesquelles","il","y","a","deux","personnes","ou","plus","."],"question":"Renvoyez les nationalit\u00e9s pour lesquelles il y a deux personnes ou plus."},{"db_id":"world_1","query":"SELECT Name FROM country ORDER BY Population DESC LIMIT 3","query_toks":["SELECT","Name","FROM","country","ORDER","BY","Population","DESC","LIMIT","3"],"query_toks_no_value":["select","name","from","country","order","by","population","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[0,14,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","pays","ayant","la","population","la","plus","peupl\u00e9e","?"],"question":"Quels sont les noms des pays ayant la population la plus peupl\u00e9e?"},{"db_id":"course_teach","query":"SELECT count(*) FROM teacher","query_toks":["SELECT","count","(","*",")","FROM","teacher"],"query_toks_no_value":["select","count","(","*",")","from","teacher"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nombre","total","d'enseignants","?"],"question":"Quel est le nombre total d'enseignants?"},{"db_id":"car_1","query":"SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';","query_toks":["SELECT","avg","(","T2.edispl",")","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","WHERE","T1.Model","=","'volvo","'",";"],"query_toks_no_value":["select","avg","(","t2",".","edispl",")","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","where","t1",".","model","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,19,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"volvo\"",null]]},"question_toks":["Quel","est","le","moyen","edispl","pour","tous","les","volvos","?"],"question":"Quel est le moyen edispl pour tous les volvos?"},{"db_id":"singer","query":"SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC","query_toks":["SELECT","Name","FROM","singer","ORDER","BY","Net_Worth_Millions","ASC"],"query_toks_no_value":["select","name","from","singer","order","by","net_worth_millions","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,4,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","chanteurs","class\u00e9s","par","valeur","nette","croissante","?"],"question":"Quels sont les noms des chanteurs class\u00e9s par valeur nette croissante?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(DISTINCT department_id) FROM Degree_Programs","query_toks":["SELECT","count","(","DISTINCT","department_id",")","FROM","Degree_Programs"],"query_toks_no_value":["select","count","(","distinct","department_id",")","from","degree_programs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,19,true],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","d\u00e9partements","offrent","un","dipl\u00f4me","?"],"question":"Combien de d\u00e9partements offrent un dipl\u00f4me?"},{"db_id":"employee_hire_evaluation","query":"SELECT count(DISTINCT LOCATION) FROM shop","query_toks":["SELECT","count","(","DISTINCT","LOCATION",")","FROM","shop"],"query_toks_no_value":["select","count","(","distinct","location",")","from","shop"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,7,true],null]]]],"union":null,"where":[]},"question_toks":["Comptez","les","nombres","de","location","de","magasins","unique","."],"question":"Comptez les nombres de location de magasins unique. "},{"db_id":"student_transcripts_tracking","query":"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","query_toks":["SELECT","first_name",",","middle_name",",","last_name","FROM","Students","ORDER","BY","date_first_registered","ASC","LIMIT","1"],"query_toks_no_value":["select","first_name",",","middle_name",",","last_name","from","students","order","by","date_first_registered","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,41,false],null]]],"select":[false,[[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]]]],"union":null,"where":[]},"question_toks":["Qui","est","le","premier","\u00e9tudiant","\u00e0","enregistr\u00e9","?","Listez","le","pr\u00e9nom",",","deuxi\u00e8me","pr\u00e9nom","et","le","nom","de","famille","."],"question":"Qui est le premier \u00e9tudiant \u00e0 enregistr\u00e9? Listez le pr\u00e9nom, deuxi\u00e8me pr\u00e9nom et le nom de famille."},{"db_id":"flight_2","query":"SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.AirportCode","FROM","AIRPORTS","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.AirportCode","=","T2.DestAirport","OR","T1.AirportCode","=","T2.SourceAirport","GROUP","BY","T1.AirportCode","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","airportcode","from","airports","as","t1","join","flights","as","t2","on","t1",".","airportcode","=","t2",".","destairport","or","t1",".","airportcode","=","t2",".","sourceairport","group","by","t1",".","airportcode","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,13,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","code","d'a\u00e9roport","qui","a","le","plus","de","vols","?"],"question":"Quel est le code d'a\u00e9roport qui a le plus de vols?"},{"db_id":"wta_1","query":"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","query_toks":["SELECT","count","(","*",")",",","YEAR","FROM","matches","GROUP","BY","YEAR"],"query_toks_no_value":["select","count","(","*",")",",","year","from","matches","group","by","year"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,38,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,38,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","nombre","de","matchs","qui","ont","eu","lieu","chaque","ann\u00e9e","."],"question":"Trouve le nombre de matchs qui ont eu lieu chaque ann\u00e9e."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID","query_toks":["SELECT","DISTINCT","T1.template_type_description","FROM","Ref_template_types","AS","T1","JOIN","Templates","AS","T2","ON","T1.template_type_code","=","T2.template_type_code","JOIN","Documents","AS","T3","ON","T2.Template_ID","=","T3.template_ID"],"query_toks_no_value":["select","distinct","t1",".","template_type_description","from","ref_template_types","as","t1","join","templates","as","t2","on","t1",".","template_type_code","=","t2",".","template_type_code","join","documents","as","t3","on","t2",".","template_id","=","t3",".","template_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,5,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quelles","sont","les","distincts","mod\u00e8les","type","description","qui","\u00e9tait","utilis\u00e9s","par","un","document","?"],"question":"Quelles sont les distincts mod\u00e8les type description qui \u00e9tait utilis\u00e9s par un document?"},{"db_id":"orchestra","query":"SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC","query_toks":["SELECT","Record_Company","FROM","orchestra","ORDER","BY","Year_of_Founded","DESC"],"query_toks_no_value":["select","record_company","from","orchestra","order","by","year_of_founded","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,10,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Retour","des","maisons","de","disques","d'orchestres",",","tri\u00e9es","par","ordre","d\u00e9croissant","selon","les","ann\u00e9es","de","leur","cr\u00e9ation","."],"question":"Retour des maisons de disques d'orchestres, tri\u00e9es par ordre d\u00e9croissant selon les ann\u00e9es de leur cr\u00e9ation. "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Templates","query_toks":["SELECT","count","(","*",")","FROM","Templates"],"query_toks_no_value":["select","count","(","*",")","from","templates"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","mod\u00e8les","avons-nous","?"],"question":"Combien de mod\u00e8les avons-nous?"},{"db_id":"network_1","query":"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id","query_toks":["SELECT","student_id",",","count","(","*",")","FROM","Likes","GROUP","BY","student_id"],"query_toks_no_value":["select","student_id",",","count","(","*",")","from","likes","group","by","student_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Comptez","le","nombre","d'aimer","pour","chaque","identifiant","d'\u00e9tudiant","."],"question":"Comptez le nombre d'aimer pour chaque identifiant d'\u00e9tudiant."},{"db_id":"wta_1","query":"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","query_toks":["SELECT","avg","(","ranking",")",",","T1.first_name","FROM","players","AS","T1","JOIN","rankings","AS","T2","ON","T1.player_id","=","T2.player_id","GROUP","BY","T1.first_name"],"query_toks_no_value":["select","avg","(","ranking",")",",","t1",".","first_name","from","players","as","t1","join","rankings","as","t2","on","t1",".","player_id","=","t2",".","player_id","group","by","t1",".","first_name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,41,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,40,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","classement","moyen","de","chaque","joueur","et","son","pr\u00e9nom","."],"question":"Trouve le classement moyen de chaque joueur et son pr\u00e9nom."},{"db_id":"world_1","query":"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")","query_toks":["SELECT","COUNT","(","*",")","FROM","(","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","INTERSECT","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","Dutch","''",")"],"query_toks_no_value":["select","count","(","*",")","from","(","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","intersect","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["sql",{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Dutch\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]}]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nombre","de","pays","qui","utilisent","l'anglais","et","le","n\u00e9erlandais","?"],"question":"Quel est le nombre de pays qui utilisent l'anglais et le n\u00e9erlandais?"},{"db_id":"student_transcripts_tracking","query":"SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'","query_toks":["SELECT","department_description","FROM","Departments","WHERE","department_name","LIKE","'","%","computer","%","'"],"query_toks_no_value":["select","department_description","from","departments","where","department_name","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,9,[0,[0,15,false],null],"\"%computer%\"",null]]},"question_toks":["Quelle","est","la","description","du","d\u00e9partement","dont","le","nom","a","la","sous-cha\u00eene","de","l'ordinateur","?"],"question":"Quelle est la description du d\u00e9partement dont le nom a la sous-cha\u00eene de l'ordinateur? "},{"db_id":"museum_visit","query":"SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1","query_toks":["SELECT","t2.visitor_id",",","t1.name",",","t1.Level_of_membership","FROM","visitor","AS","t1","JOIN","visit","AS","t2","ON","t1.id","=","t2.visitor_id","GROUP","BY","t2.visitor_id","ORDER","BY","sum","(","t2.Total_spent",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","visitor_id",",","t1",".","name",",","t1",".","level_of_membership","from","visitor","as","t1","join","visit","as","t2","on","t1",".","id","=","t2",".","visitor_id","group","by","t2",".","visitor_id","order","by","sum","(","t2",".","total_spent",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,12,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","est","l'identifiant",",","le","nom","et","le","niveau","d'adh\u00e9sion","des","visiteurs","qui","ont","d\u00e9pens\u00e9","le","plus","d'argent","en","total","dans","tous","les","billets","de","mus\u00e9e","?"],"question":"Quels est l'identifiant, le nom et le niveau d'adh\u00e9sion des visiteurs qui ont d\u00e9pens\u00e9 le plus d'argent en total dans tous les billets de mus\u00e9e?"},{"db_id":"flight_2","query":"SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.City","FROM","AIRPORTS","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.AirportCode","=","T2.DestAirport","GROUP","BY","T1.City","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","city","from","airports","as","t1","join","flights","as","t2","on","t1",".","airportcode","=","t2",".","destairport","group","by","t1",".","city","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,13,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","ville","a","le","plus","de","vols","\u00e0","l'arriv\u00e9e","?"],"question":"Quelle ville a le plus de vols \u00e0 l'arriv\u00e9e?"},{"db_id":"wta_1","query":"SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'","query_toks":["SELECT","first_name",",","birth_date","FROM","players","WHERE","country_code","=","'USA","'"],"query_toks_no_value":["select","first_name",",","birth_date","from","players","where","country_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"USA\"",null]]},"question_toks":["Quels","sont","les","pr\u00e9noms","et","les","dates","de","naissance","des","joueurs","de","l'\u00c9tats-Unis","?"],"question":"Quels sont les pr\u00e9noms et les dates de naissance des joueurs de l'\u00c9tats-Unis?"},{"db_id":"wta_1","query":"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","query_toks":["SELECT","sum","(","ranking_points",")",",","T1.first_name","FROM","players","AS","T1","JOIN","rankings","AS","T2","ON","T1.player_id","=","T2.player_id","GROUP","BY","T1.first_name"],"query_toks_no_value":["select","sum","(","ranking_points",")",",","t1",".","first_name","from","players","as","t1","join","rankings","as","t2","on","t1",".","player_id","=","t2",".","player_id","group","by","t1",".","first_name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,41,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,42,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","pr\u00e9noms","de","tous","les","joueurs",",","et","leur","total","de","points","de","classification","?"],"question":"Quels sont les pr\u00e9noms de tous les joueurs, et leur total de points de classification?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id ,  document_name ,  document_description FROM Documents","query_toks":["SELECT","document_id",",","document_name",",","document_description","FROM","Documents"],"query_toks_no_value":["select","document_id",",","document_name",",","document_description","from","documents"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","identifiants",",","noms","et","descriptions","de","tous","les","documents","?"],"question":"Quels sont les identifiants, noms et descriptions de tous les documents?"},{"db_id":"flight_2","query":"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"","query_toks":["SELECT","City",",","Country","FROM","AIRPORTS","WHERE","AirportName","=","``","Alton","''"],"query_toks_no_value":["select","city",",","country","from","airports","where","airportname","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"Alton\"",null]]},"question_toks":["Donne","la","ville","et","le","pays","pour","l'a\u00e9roport","\u00e0","Alton","."],"question":"Donne la ville et le pays pour l'a\u00e9roport \u00e0 Alton."},{"db_id":"car_1","query":"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';","query_toks":["SELECT","count","(","*",")","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","WHERE","T1.FullName","=","'American","Motor","Company","'",";"],"query_toks_no_value":["select","count","(","*",")","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","where","t1",".","fullname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"American Motor Company\"",null]]},"question_toks":["How","many","car","models","were","produced","by","the","maker","with","full","name","American","Motor","Company","?"],"question":"How many car models were produced by the maker with full name American Motor Company?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.template_id",",","T2.Template_Type_Code","FROM","Documents","AS","T1","JOIN","Templates","AS","T2","ON","T1.template_id","=","T2.template_id","GROUP","BY","T1.template_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","template_id",",","t2",".","template_type_code","from","documents","as","t1","join","templates","as","t2","on","t1",".","template_id","=","t2",".","template_id","group","by","t1",".","template_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoie","l'identifiant","et","le","code","de","type","du","mod\u00e8le","utilis\u00e9","pour","le","plus","grand","nombre","de","documents","."],"question":"Renvoie l'identifiant et le code de type du mod\u00e8le utilis\u00e9 pour le plus grand nombre de documents."},{"db_id":"world_1","query":"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"","query_toks":["SELECT","sum","(","SurfaceArea",")","FROM","country","WHERE","Continent","=","``","Asia","''","OR","Continent","=","``","Europe","''"],"query_toks_no_value":["select","sum","(","surfacearea",")","from","country","where","continent","=","value","or","continent","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null],"or",[false,2,[0,[0,10,false],null],"\"Europe\"",null]]},"question_toks":["Quelle","est","la","superficie","totale","des","continents","Asie","et","Europe","?"],"question":"Quelle est la superficie totale des continents Asie et Europe?"},{"db_id":"pets_1","query":"SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'","query_toks":["SELECT","T1.Fname","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'","INTERSECT","SELECT","T1.Fname","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'dog","'"],"query_toks_no_value":["select","t1",".","fname","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value","intersect","select","t1",".","fname","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"dog\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null]]},"question_toks":["Quels","sont","les","pr\u00e9noms","des","\u00e9l\u00e8ves","qui","ont","\u00e0","la","fois","des","chats","et","des","chiens","comme","animaux","de","compagnie","?"],"question":"Quels sont les pr\u00e9noms des \u00e9l\u00e8ves qui ont \u00e0 la fois des chats et des chiens comme animaux de compagnie?"},{"db_id":"orchestra","query":"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"","query_toks":["SELECT","max","(","SHARE",")",",","min","(","SHARE",")","FROM","performance","WHERE","TYPE","!","=","``","Live","final","''"],"query_toks_no_value":["select","max","(","share",")",",","min","(","share",")","from","performance","where","type","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,18,false],null]],[2,[0,[0,18,false],null]]]],"union":null,"where":[[false,7,[0,[0,14,false],null],"\"Live final\"",null]]},"question_toks":["``","Quelle","est","la","part","maximale","et","minimale","des","performances","dont","le","type","n'est","pas","''","``","Final","en","direct","''","``",".","''"],"question":"\"Quelle est la part maximale et minimale des performances dont le type n'est pas\" \"Final en direct\" \".\""},{"db_id":"network_1","query":"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","query_toks":["SELECT","student_id",",","count","(","*",")","FROM","Friend","GROUP","BY","student_id"],"query_toks_no_value":["select","student_id",",","count","(","*",")","from","friend","group","by","student_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","les","identifiants","des","\u00e9tudiants","et","le","nombre","d'amis","correspondant","\u00e0","chacun","."],"question":"Montre les identifiants des \u00e9tudiants et le nombre d'amis correspondant \u00e0 chacun."},{"db_id":"wta_1","query":"SELECT avg(loser_age) ,  avg(winner_age) FROM matches","query_toks":["SELECT","avg","(","loser_age",")",",","avg","(","winner_age",")","FROM","matches"],"query_toks_no_value":["select","avg","(","loser_age",")",",","avg","(","winner_age",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,9,false],null]],[5,[0,[0,28,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","\u00e2ges","moyens","des","perdants","et","des","gagnants","d'un","match","\u00e0","l'autre","?"],"question":"Quels sont les \u00e2ges moyens des perdants et des gagnants d'un match \u00e0 l'autre?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(DISTINCT department_id) FROM Degree_Programs","query_toks":["SELECT","count","(","DISTINCT","department_id",")","FROM","Degree_Programs"],"query_toks_no_value":["select","count","(","distinct","department_id",")","from","degree_programs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,19,true],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","d\u00e9partements","diff\u00e9rents","offrent","des","dipl\u00f4mes","?"],"question":"Combien de d\u00e9partements diff\u00e9rents offrent des dipl\u00f4mes?"},{"db_id":"orchestra","query":"SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1","query_toks":["SELECT","T1.Name","FROM","conductor","AS","T1","JOIN","orchestra","AS","T2","ON","T1.Conductor_ID","=","T2.Conductor_ID","GROUP","BY","T2.Conductor_ID","HAVING","COUNT","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","name","from","conductor","as","t1","join","orchestra","as","t2","on","t1",".","conductor_id","=","t2",".","conductor_id","group","by","t2",".","conductor_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,8,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","chefs","d'orchestre","qui","ont","dirig\u00e9","dans","plus","d'un","orchestre","?"],"question":"Quels sont les noms des chefs d'orchestre qui ont dirig\u00e9 dans plus d'un orchestre?"},{"db_id":"orchestra","query":"SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1","query_toks":["SELECT","T1.Name","FROM","conductor","AS","T1","JOIN","orchestra","AS","T2","ON","T1.Conductor_ID","=","T2.Conductor_ID","GROUP","BY","T2.Conductor_ID","HAVING","COUNT","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","name","from","conductor","as","t1","join","orchestra","as","t2","on","t1",".","conductor_id","=","t2",".","conductor_id","group","by","t2",".","conductor_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,8,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","les","noms","des","chefs","d'orchestre","qui","ont","dirig\u00e9","plus","d'un","orchestre","."],"question":"Montre les noms des chefs d'orchestre qui ont dirig\u00e9 plus d'un orchestre."},{"db_id":"tvshow","query":"SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";","query_toks":["SELECT","Title","FROM","Cartoon","WHERE","Directed_by","=","``","Ben","Jones","''","OR","Directed_by","=","``","Brandon","Vietti","''",";"],"query_toks_no_value":["select","title","from","cartoon","where","directed_by","=","value","or","directed_by","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null],"or",[false,2,[0,[0,21,false],null],"\"Brandon Vietti\"",null]]},"question_toks":["Quels","sont","les","titres","de","tous","les","dessins","anim\u00e9s","r\u00e9alis\u00e9s","par","Ben","Jones","ou","Brandon","Vietti","?"],"question":"Quels sont les titres de tous les dessins anim\u00e9s r\u00e9alis\u00e9s par Ben Jones ou Brandon Vietti?"},{"db_id":"employee_hire_evaluation","query":"SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1","query_toks":["SELECT","t1.name","FROM","employee","AS","t1","JOIN","evaluation","AS","t2","ON","t1.Employee_ID","=","t2.Employee_ID","ORDER","BY","t2.bonus","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","employee","as","t1","join","evaluation","as","t2","on","t1",".","employee_id","=","t2",".","employee_id","order","by","t2",".","bonus","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,15,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,17,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Trouvez","le","nom","de","l'employ\u00e9","qui","a","obtenu","la","prime","unique","la","plus","\u00e9lev\u00e9e","."],"question":"Trouvez le nom de l'employ\u00e9 qui a obtenu la prime unique la plus \u00e9lev\u00e9e."},{"db_id":"course_teach","query":"SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33","query_toks":["SELECT","Name","FROM","teacher","WHERE","Age","=","32","OR","Age","=","33"],"query_toks_no_value":["select","name","from","teacher","where","age","=","value","or","age","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],32.0,null],"or",[false,2,[0,[0,6,false],null],33.0,null]]},"question_toks":["Affiche","le","nom","des","enseignants","\u00e2g\u00e9s","de","32","ou","33","ans","?"],"question":"Affiche le nom des enseignants \u00e2g\u00e9s de 32 ou 33 ans?"},{"db_id":"course_teach","query":"SELECT count(*) FROM teacher","query_toks":["SELECT","count","(","*",")","FROM","teacher"],"query_toks_no_value":["select","count","(","*",")","from","teacher"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","y","a-t-il","d'enseignants","?"],"question":"Combien y a-t-il d'enseignants?"},{"db_id":"world_1","query":"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"","query_toks":["SELECT","*","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","AND","IsOfficial","=","``","T","''","UNION","SELECT","*","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","Dutch","''","AND","IsOfficial","=","``","T","''"],"query_toks_no_value":["select","*","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","isofficial","=","value","union","select","*","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,0,false],null]]]],"union":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Dutch\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"where":[[false,2,[0,[0,24,false],null],"\"English\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Quels","sont","les","pays","o\u00f9","l'anglais","ou","le","n\u00e9erlandais","est","la","langue","officielle","?"],"question":"Quels sont les pays o\u00f9 l'anglais ou le n\u00e9erlandais est la langue officielle?"},{"db_id":"car_1","query":"SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;","query_toks":["SELECT","T1.Id",",","T1.Maker","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","GROUP","BY","T1.Id","HAVING","count","(","*",")",">","=","2","INTERSECT","SELECT","T1.Id",",","T1.Maker","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","JOIN","CAR_NAMES","AS","T3","ON","T2.model","=","T3.model","GROUP","BY","T1.Id","HAVING","count","(","*",")",">","3",";"],"query_toks_no_value":["select","t1",".","id",",","t1",".","maker","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","group","by","t1",".","id","having","count","(","*",")",">","=","value","intersect","select","t1",".","id",",","t1",".","maker","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","join","car_names","as","t3","on","t2",".","model","=","t3",".","model","group","by","t1",".","id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[[false,3,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","constructeurs","automobiles","qui","produisent","au","moins","2","mod\u00e8les","et","plus","de","3","marques","automobiles","?","Listez","l'identifiant","et","le","fabricant","."],"question":"Quels sont les constructeurs automobiles qui produisent au moins 2 mod\u00e8les et plus de 3 marques automobiles? Listez l'identifiant et le fabricant."},{"db_id":"concert_singer","query":"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","query_toks":["SELECT","name",",","country",",","age","FROM","singer","ORDER","BY","age","DESC"],"query_toks_no_value":["select","name",",","country",",","age","from","singer","order","by","age","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Affiche","le","nom",",","le","pays","et","l'\u00e2ge","de","tous","les","chanteurs","class\u00e9s","par","\u00e2ge",",","du","plus","\u00e2g\u00e9","au","plus","jeune","."],"question":"Affiche le nom, le pays et l'\u00e2ge de tous les chanteurs class\u00e9s par \u00e2ge, du plus \u00e2g\u00e9 au plus jeune."},{"db_id":"car_1","query":"SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;","query_toks":["SELECT","avg","(","horsepower",")","FROM","CARS_DATA","WHERE","YEAR","<","1980",";"],"query_toks_no_value":["select","avg","(","horsepower",")","from","cars_data","where","year","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,20,false],null]]]],"union":null,"where":[[false,4,[0,[0,23,false],null],1980.0,null]]},"question_toks":["Quelle","est","la","puissance","moyenne","de","toutes","les","cartes","produites","avant","1980","?"],"question":"Quelle est la puissance moyenne de toutes les cartes produites avant 1980?"},{"db_id":"museum_visit","query":"SELECT count(*) FROM visitor WHERE age  <  30","query_toks":["SELECT","count","(","*",")","FROM","visitor","WHERE","age","<","30"],"query_toks_no_value":["select","count","(","*",")","from","visitor","where","age","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,4,[0,[0,8,false],null],30.0,null]]},"question_toks":["Combien","y","a-t-il","de","visiteurs","de","moins","de","30","ans","?"],"question":"Combien y a-t-il de visiteurs de moins de 30 ans?"},{"db_id":"tvshow","query":"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"","query_toks":["SELECT","package_option",",","series_name","FROM","TV_Channel","WHERE","hight_definition_TV","=","``","yes","''"],"query_toks_no_value":["select","package_option",",","series_name","from","tv_channel","where","hight_definition_tv","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"yes\"",null]]},"question_toks":["Quelles","sont","les","options","de","package","et","le","nom","de","la","s\u00e9rie","pour","la","cha\u00eene","de","t\u00e9l\u00e9vision","qui","prend","en","charge","la","t\u00e9l\u00e9vision","haute","d\u00e9finition","?"],"question":"Quelles sont les options de package et le nom de la s\u00e9rie pour la cha\u00eene de t\u00e9l\u00e9vision qui prend en charge la t\u00e9l\u00e9vision haute d\u00e9finition?"},{"db_id":"network_1","query":"SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2","query_toks":["SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","WHERE","T2.grade",">","5","GROUP","BY","T1.student_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","where","t2",".","grade",">","value","group","by","t1",".","student_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,3,[0,[0,3,false],null],5.0,null]]},"question_toks":["Montrez","le","nom","des","\u00e9l\u00e8ves","qui","ont","une","note","sup\u00e9rieure","\u00e0","5","et","qui","ont","au","moins","2","amis","."],"question":"Montrez le nom des \u00e9l\u00e8ves qui ont une note sup\u00e9rieure \u00e0 5 et qui ont au moins 2 amis."},{"db_id":"pets_1","query":"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","query_toks":["SELECT","DISTINCT","T1.fname",",","T1.age","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid"],"query_toks_no_value":["select","distinct","t1",".","fname",",","t1",".","age","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","diff\u00e9rents","pr\u00e9noms","et","\u00e2ges","des","\u00e9l\u00e8ves","qui","ont","des","animaux","?"],"question":"Quels sont les diff\u00e9rents pr\u00e9noms et \u00e2ges des \u00e9l\u00e8ves qui ont des animaux?"},{"db_id":"pets_1","query":"SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid","query_toks":["SELECT","count","(","*",")",",","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","GROUP","BY","T1.stuid"],"query_toks_no_value":["select","count","(","*",")",",","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","group","by","t1",".","stuid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Trouvez","le","nombre","d'animaux","de","compagnie","pour","chaque","\u00e9l\u00e8ve","qui","a","un","identifiant","animal","et","\u00e9l\u00e8ve","."],"question":"Trouvez le nombre d'animaux de compagnie pour chaque \u00e9l\u00e8ve qui a un identifiant animal et \u00e9l\u00e8ve."},{"db_id":"poker_player","query":"SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1","query_toks":["SELECT","T1.Birth_Date","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T2.Earnings","ASC","LIMIT","1"],"query_toks_no_value":["select","t1",".","birth_date","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t2",".","earnings","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoie","la","date","de","naissance","du","joueur","de","poker","avec","les","gains","les","plus","bas","."],"question":"Renvoie la date de naissance du joueur de poker avec les gains les plus bas."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT min(Version_Number) ,  template_type_code FROM Templates","query_toks":["SELECT","min","(","Version_Number",")",",","template_type_code","FROM","Templates"],"query_toks_no_value":["select","min","(","version_number",")",",","template_type_code","from","templates"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoie","le","num\u00e9ro","de","version","le","plus","bas",",","ainsi","que","son","code","de","type","de","mod\u00e8le","correspondant","."],"question":"Renvoie le num\u00e9ro de version le plus bas, ainsi que son code de type de mod\u00e8le correspondant."},{"db_id":"pets_1","query":"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","query_toks":["SELECT","avg","(","weight",")",",","pettype","FROM","pets","GROUP","BY","pettype"],"query_toks_no_value":["select","avg","(","weight",")",",","pettype","from","pets","group","by","pettype"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,14,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","poids","moyen","pour","chaque","type","d'animal","."],"question":"Trouve le poids moyen pour chaque type d'animal."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"","query_toks":["SELECT","template_type_code","FROM","Ref_template_types","WHERE","template_type_description","=","``","Book","''"],"query_toks_no_value":["select","template_type_code","from","ref_template_types","where","template_type_description","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Book\"",null]]},"question_toks":["``","Quel","est","le","code","de","type","de","mod\u00e8le","pour","la","description","du","type","de","mod\u00e8le","''","``","Livre","''","``",".","''"],"question":"\"Quel est le code de type de mod\u00e8le pour la description du type de mod\u00e8le\" \"Livre\" \".\""},{"db_id":"poker_player","query":"SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC","query_toks":["SELECT","Name",",","Birth_Date","FROM","people","ORDER","BY","Name","ASC"],"query_toks_no_value":["select","name",",","birth_date","from","people","order","by","name","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["\u00c9num\u00e9re","les","noms","et","les","dates","de","naissance","des","personnes","par","ordre","alphab\u00e9tique","croissant","de","nom","."],"question":"\u00c9num\u00e9re les noms et les dates de naissance des personnes par ordre alphab\u00e9tique croissant de nom."},{"db_id":"world_1","query":"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"","query_toks":["SELECT","COUNT","(","DISTINCT","Continent",")","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","Chinese","''"],"query_toks_no_value":["select","count","(","distinct","continent",")","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,10,true],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Chinese\"",null]]},"question_toks":["Combien","de","continents","parlent","chinois","?"],"question":"Combien de continents parlent chinois?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","JOIN","AIRPORTS","AS","T3","ON","T1.SourceAirport","=","T3.AirportCode","WHERE","T2.City","=","``","Ashley","''","AND","T3.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","join","airports","as","t3","on","t1",".","sourceairport","=","t3",".","airportcode","where","t2",".","city","=","value","and","t3",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Ashley\"",null],"and",[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Combien","de","vols","volent","de","Aberdeen","\u00e0","Ashley","?"],"question":"Combien de vols volent de Aberdeen \u00e0 Ashley?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRLINES","AS","T2","ON","T1.Airline","=","T2.uid","WHERE","T2.Airline","=","``","JetBlue","Airways","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airlines","as","t2","on","t1",".","airline","=","t2",".","uid","where","t2",".","airline","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"JetBlue Airways\"",null]]},"question_toks":["Indique","le","nombre","de","vols","Jetblue","Airways","."],"question":"Indique le nombre de vols Jetblue Airways."},{"db_id":"poker_player","query":"SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1","query_toks":["SELECT","T2.Money_Rank","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T1.Height","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","money_rank","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t1",".","height","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoie","le","rang","d'argent","du","joueur","de","poker","avec","la","plus","grande","taille","."],"question":"Renvoie le rang d'argent du joueur de poker avec la plus grande taille."},{"db_id":"tvshow","query":"SELECT Episode FROM TV_series ORDER BY rating","query_toks":["SELECT","Episode","FROM","TV_series","ORDER","BY","rating"],"query_toks_no_value":["select","episode","from","tv_series","order","by","rating"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","tous","les","\u00e9pisodes","class\u00e9s","par","notes","?"],"question":"Quels sont tous les \u00e9pisodes class\u00e9s par notes?"},{"db_id":"poker_player","query":"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","query_toks":["SELECT","Final_Table_Made",",","Best_Finish","FROM","poker_player"],"query_toks_no_value":["select","final_table_made",",","best_finish","from","poker_player"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","des","tables","finales","r\u00e9alis\u00e9es","et","des","meilleures","finitions","des","joueurs","de","poker","."],"question":"Liste des tables finales r\u00e9alis\u00e9es et des meilleures finitions des joueurs de poker."},{"db_id":"world_1","query":"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1","query_toks":["SELECT","Name",",","Population",",","LifeExpectancy","FROM","country","WHERE","Continent","=","``","Asia","''","ORDER","BY","SurfaceArea","DESC","LIMIT","1"],"query_toks_no_value":["select","name",",","population",",","lifeexpectancy","from","country","where","continent","=","value","order","by","surfacearea","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,12,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,14,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Trouve","le","nom",",","la","population","et","la","dur\u00e9e","de","vie","pr\u00e9vue","du","pays","asiatique","avec","la","plus","grande","superficie","?"],"question":"Trouve le nom, la population et la dur\u00e9e de vie pr\u00e9vue du pays asiatique avec la plus grande superficie?"},{"db_id":"car_1","query":"SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;","query_toks":["SELECT","count","(","*",")","FROM","CARS_DATA","WHERE","Cylinders",">","4",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","cylinders",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],4.0,null]]},"question_toks":["Combien","de","voitures","ont","plus","de","4","cylindres","?"],"question":"Combien de voitures ont plus de 4 cylindres?"},{"db_id":"wta_1","query":"SELECT count(*) FROM matches","query_toks":["SELECT","count","(","*",")","FROM","matches"],"query_toks_no_value":["select","count","(","*",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","nombre","total","de","correspondances","."],"question":"Trouve le nombre total de correspondances."},{"db_id":"dog_kennels","query":"SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )","query_toks":["SELECT","avg","(","age",")","FROM","Dogs","WHERE","dog_id","IN","(","SELECT","dog_id","FROM","Treatments",")"],"query_toks_no_value":["select","avg","(","age",")","from","dogs","where","dog_id","in","(","select","dog_id","from","treatments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,26,false],null]]]],"union":null,"where":[[false,8,[0,[0,20,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,45,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quel","est","l'\u00e2ge","moyen","des","chiens","qui","ont","subi","des","traitements","?"],"question":"Quel est l'\u00e2ge moyen des chiens qui ont subi des traitements?"},{"db_id":"concert_singer","query":"SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1","query_toks":["SELECT","count","(","*",")","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","ORDER","BY","T2.Capacity","DESC","LIMIT","1"],"query_toks_no_value":["select","count","(","*",")","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","order","by","t2",".","capacity","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,4,false],null]]],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nombre","de","concerts","qui","ont","eu","lieu","dans","le","stade","avec","la","plus","grande","capacit\u00e9","?"],"question":"Quel est le nombre de concerts qui ont eu lieu dans le stade avec la plus grande capacit\u00e9?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.template_type_code","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id","GROUP","BY","T1.template_type_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","template_type_code","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id","group","by","t1",".","template_type_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoie","le","code","du","type","de","mod\u00e8le","le","plus","couramment","utilis\u00e9","dans","les","documents","."],"question":"Renvoie le code du type de mod\u00e8le le plus couramment utilis\u00e9 dans les documents."},{"db_id":"student_transcripts_tracking","query":"SELECT first_name FROM Students WHERE current_address_id != permanent_address_id","query_toks":["SELECT","first_name","FROM","Students","WHERE","current_address_id","!","=","permanent_address_id"],"query_toks_no_value":["select","first_name","from","students","where","current_address_id","!","=","permanent_address_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]]]],"union":null,"where":[[false,7,[0,[0,33,false],null],[0,34,false],null]]},"question_toks":["Quel","est","le","pr\u00e9nom","de","l'\u00e9tudiant","dont","l'adresse","permanente","est","diff\u00e9rente","de","son","adresse","actuelle","?"],"question":"Quel est le pr\u00e9nom de l'\u00e9tudiant dont l'adresse permanente est diff\u00e9rente de son adresse actuelle? "},{"db_id":"student_transcripts_tracking","query":"SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'","query_toks":["SELECT","count","(","*",")","FROM","Departments","AS","T1","JOIN","Degree_Programs","AS","T2","ON","T1.department_id","=","T2.department_id","WHERE","T1.department_name","=","'engineer","'"],"query_toks_no_value":["select","count","(","*",")","from","departments","as","t1","join","degree_programs","as","t2","on","t1",".","department_id","=","t2",".","department_id","where","t1",".","department_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,14,false],null],[0,19,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"engineer\"",null]]},"question_toks":["Combien","de","dipl\u00f4mes","poss\u00e8de","le","d\u00e9partement","d'ing\u00e9nierie","?"],"question":"Combien de dipl\u00f4mes poss\u00e8de le d\u00e9partement d'ing\u00e9nierie?"},{"db_id":"network_1","query":"SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","grade","FROM","Highschooler","GROUP","BY","grade","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","grade","from","highschooler","group","by","grade","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Retourne","la","classe","qui","a","le","plus","grand","nombre","de","lyc\u00e9ens","."],"question":"Retourne la classe qui a le plus grand nombre de lyc\u00e9ens."},{"db_id":"dog_kennels","query":"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","query_toks":["SELECT","T1.name",",","T2.date_of_treatment","FROM","Dogs","AS","T1","JOIN","Treatments","AS","T2","ON","T1.dog_id","=","T2.dog_id","WHERE","T1.breed_code","=","(","SELECT","breed_code","FROM","Dogs","GROUP","BY","breed_code","ORDER","BY","count","(","*",")","ASC","LIMIT","1",")"],"query_toks_no_value":["select","t1",".","name",",","t2",".","date_of_treatment","from","dogs","as","t1","join","treatments","as","t2","on","t1",".","dog_id","=","t2",".","dog_id","where","t1",".","breed_code","=","(","select","breed_code","from","dogs","group","by","breed_code","order","by","count","(","*",")","asc","limit","value",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,20,false],null],[0,45,false],null]],"table_units":[["table_unit",5],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]],[0,[0,[0,48,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["\u00c9num\u00e9re","les","noms","des","chiens","de","la","race","la","plus","rare","et","leurs","dates","de","traitement","."],"question":"\u00c9num\u00e9re les noms des chiens de la race la plus rare et leurs dates de traitement."},{"db_id":"employee_hire_evaluation","query":"SELECT name FROM employee ORDER BY age","query_toks":["SELECT","name","FROM","employee","ORDER","BY","age"],"query_toks_no_value":["select","name","from","employee","order","by","age"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,3,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Listez","les","noms","des","employ\u00e9s","et","triez-les","en","ordre","croissant","par","rapport","\u00e0","l'\u00e2ge","."],"question":"Listez les noms des employ\u00e9s et triez-les en ordre croissant par rapport \u00e0 l'\u00e2ge."},{"db_id":"flight_2","query":"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"","query_toks":["SELECT","count","(","*",")","FROM","Flights","AS","T1","JOIN","Airports","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","WHERE","T2.city","=","``","Aberdeen","''","OR","T2.city","=","``","Abilene","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","where","t2",".","city","=","value","or","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null],"or",[false,2,[0,[0,5,false],null],"\"Abilene\"",null]]},"question_toks":["Recherchez","le","nombre","de","vols","atterrissant","dans","la","ville","d'Aberdeen","ou","d'Abilene","."],"question":"Recherchez le nombre de vols atterrissant dans la ville d'Aberdeen ou d'Abilene."},{"db_id":"car_1","query":"SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;","query_toks":["SELECT","T2.CountryName","FROM","CAR_MAKERS","AS","T1","JOIN","COUNTRIES","AS","T2","ON","T1.Country","=","T2.CountryId","GROUP","BY","T1.Country","ORDER","BY","Count","(","*",")","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t2",".","countryname","from","car_makers","as","t1","join","countries","as","t2","on","t1",".","country","=","t2",".","countryid","group","by","t1",".","country","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Lequel","des","pays","a","le","plus","de","constructeurs","automobiles","?","Indique","le","nom","du","pays","."],"question":"Lequel des pays a le plus de constructeurs automobiles? Indique le nom du pays. "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents","query_toks":["SELECT","template_id","FROM","Templates","EXCEPT","SELECT","template_id","FROM","Documents"],"query_toks_no_value":["select","template_id","from","templates","except","select","template_id","from","documents"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Affiche","les","identifiants","de","tous","les","mod\u00e8les","non","utilis\u00e9s","par","aucun","document","."],"question":"Affiche les identifiants de tous les mod\u00e8les non utilis\u00e9s par aucun document."},{"db_id":"network_1","query":"SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)","query_toks":["SELECT","avg","(","grade",")","FROM","Highschooler","WHERE","id","IN","(","SELECT","T1.student_id","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id",")"],"query_toks_no_value":["select","avg","(","grade",")","from","highschooler","where","id","in","(","select","t1",".","student_id","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,3,false],null]]]],"union":null,"where":[[false,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quelle","est","la","note","moyenne","des","\u00e9l\u00e8ves","qui","ont","des","amis","?"],"question":"Quelle est la note moyenne des \u00e9l\u00e8ves qui ont des amis?"},{"db_id":"car_1","query":"SELECT count(*) FROM COUNTRIES;","query_toks":["SELECT","count","(","*",")","FROM","COUNTRIES",";"],"query_toks_no_value":["select","count","(","*",")","from","countries"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","pays","existe","?"],"question":"Combien de pays existe? "},{"db_id":"student_transcripts_tracking","query":"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","query_toks":["SELECT","first_name",",","middle_name",",","last_name","FROM","Students","ORDER","BY","date_first_registered","ASC","LIMIT","1"],"query_toks_no_value":["select","first_name",",","middle_name",",","last_name","from","students","order","by","date_first_registered","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,41,false],null]]],"select":[false,[[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","pr\u00e9nom",",","le","deuxi\u00e8me","pr\u00e9nom","et","le","nom","de","famille","du","premier","\u00e9tudiant","\u00e0","s'inscrire","?"],"question":"Quel est le pr\u00e9nom, le deuxi\u00e8me pr\u00e9nom et le nom de famille du premier \u00e9tudiant \u00e0 s'inscrire?"},{"db_id":"pets_1","query":"SELECT weight FROM pets ORDER BY pet_age LIMIT 1","query_toks":["SELECT","weight","FROM","pets","ORDER","BY","pet_age","LIMIT","1"],"query_toks_no_value":["select","weight","from","pets","order","by","pet_age","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","p\u00e8se","le","plus","jeune","chien","?"],"question":"Combien p\u00e8se le plus jeune chien?"},{"db_id":"wta_1","query":"SELECT first_name ,  last_name FROM players ORDER BY birth_date","query_toks":["SELECT","first_name",",","last_name","FROM","players","ORDER","BY","birth_date"],"query_toks_no_value":["select","first_name",",","last_name","from","players","order","by","birth_date"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","complets","de","tous","les","joueurs",",","tri\u00e9s","par","leur","date","de","naissance","?"],"question":"Quels sont les noms complets de tous les joueurs, tri\u00e9s par leur date de naissance?"},{"db_id":"orchestra","query":"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"","query_toks":["SELECT","COUNT","(","*",")","FROM","orchestra","WHERE","Major_Record_Format","=","``","CD","''","OR","Major_Record_Format","=","``","DVD","''"],"query_toks_no_value":["select","count","(","*",")","from","orchestra","where","major_record_format","=","value","or","major_record_format","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"CD\"",null],"or",[false,2,[0,[0,11,false],null],"\"DVD\"",null]]},"question_toks":["Compte","le","nombre","d'orchestres","qui","ont","un","CD","ou","un","DVD","comme","format","d'enregistrement","."],"question":"Compte le nombre d'orchestres qui ont un CD ou un DVD comme format d'enregistrement."},{"db_id":"dog_kennels","query":"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","query_toks":["SELECT","T1.professional_id",",","T1.role_code",",","T1.first_name","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id","GROUP","BY","T1.professional_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","professional_id",",","t1",".","role_code",",","t1",".","first_name","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id","group","by","t1",".","professional_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,33,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,34,false],null]],[0,[0,[0,35,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","professionnels","ont","compl\u00e9t\u00e9","au","moins","deux","traitements","?","Indiquez","l'identifiant",",","le","r\u00f4le","et","le","pr\u00e9nom","du","professionnel","."],"question":"Quels professionnels ont compl\u00e9t\u00e9 au moins deux traitements? Indiquez l'identifiant, le r\u00f4le et le pr\u00e9nom du professionnel."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'","query_toks":["SELECT","count","(","*",")","FROM","Documents","AS","T1","JOIN","Templates","AS","T2","ON","T1.Template_ID","=","T2.Template_ID","WHERE","T2.Template_Type_Code","=","'PPT","'"],"query_toks_no_value":["select","count","(","*",")","from","documents","as","t1","join","templates","as","t2","on","t1",".","template_id","=","t2",".","template_id","where","t2",".","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"PPT\"",null]]},"question_toks":["Compte","le","nombre","de","documents","qui","utilisent","le","type","de","mod\u00e8le","PPT","."],"question":"Compte le nombre de documents qui utilisent le type de mod\u00e8le PPT."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","query_toks":["SELECT","T1.template_type_code",",","count","(","*",")","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id","GROUP","BY","T1.template_type_code"],"query_toks_no_value":["select","t1",".","template_type_code",",","count","(","*",")","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id","group","by","t1",".","template_type_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","diff\u00e9rents","codes","de","type","de","mod\u00e8le","et","combien","de","documents","utilisent","chaque","type","?"],"question":"Quels sont les diff\u00e9rents codes de type de mod\u00e8le et combien de documents utilisent chaque type?"},{"db_id":"concert_singer","query":"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","query_toks":["SELECT","avg","(","age",")",",","min","(","age",")",",","max","(","age",")","FROM","singer","WHERE","country","=","'France","'"],"query_toks_no_value":["select","avg","(","age",")",",","min","(","age",")",",","max","(","age",")","from","singer","where","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,13,false],null]],[2,[0,[0,13,false],null]],[1,[0,[0,13,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"France\"",null]]},"question_toks":["C'est","quoi","la","moyenne",",","minimum",",","et","maximum","d'\u00e2ge","pour","les","chanteurs","fran\u00e7ais","?"],"question":"C'est quoi la moyenne, minimum, et maximum d'\u00e2ge pour les chanteurs fran\u00e7ais?"},{"db_id":"student_transcripts_tracking","query":"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","query_toks":["SELECT","DISTINCT","T1.first_name",",","T1.middle_name",",","T1.last_name","FROM","Students","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.student_id","=","T2.student_id","JOIN","Degree_Programs","AS","T3","ON","T2.degree_program_id","=","T3.degree_program_id","WHERE","T3.degree_summary_name","=","'Bachelor","'"],"query_toks_no_value":["select","distinct","t1",".","first_name",",","t1",".","middle_name",",","t1",".","last_name","from","students","as","t1","join","student_enrolment","as","t2","on","t1",".","student_id","=","t2",".","student_id","join","degree_programs","as","t3","on","t2",".","degree_program_id","=","t3",".","degree_program_id","where","t3",".","degree_summary_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,47,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"Bachelor\"",null]]},"question_toks":["Qui","est","inscrit","dans","un","programme","de","licence","?","Indiquez","le","pr\u00e9nom",",","le","deuxi\u00e8me","pr\u00e9nom","et","le","nom","de","famille","."],"question":"Qui est inscrit dans un programme de licence? Indiquez le pr\u00e9nom, le deuxi\u00e8me pr\u00e9nom et le nom de famille."},{"db_id":"pets_1","query":"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","query_toks":["SELECT","T1.fname",",","T1.age","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'dog","'","AND","T1.stuid","NOT","IN","(","SELECT","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'",")"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","age","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value","and","t1",".","stuid","not","in","(","select","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"dog\"",null],"and",[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null]]},null]]},"question_toks":["Trouve","le","pr\u00e9nom","et","l'\u00e2ge","des","\u00e9l\u00e8ves","qui","ont","un","chien","mais","qui","n'ont","pas","de","chat","comme","animal","de","compagnie","."],"question":"Trouve le pr\u00e9nom et l'\u00e2ge des \u00e9l\u00e8ves qui ont un chien mais qui n'ont pas de chat comme animal de compagnie."},{"db_id":"employee_hire_evaluation","query":"SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)","query_toks":["SELECT","name","FROM","shop","WHERE","shop_id","NOT","IN","(","SELECT","shop_id","FROM","hiring",")"],"query_toks_no_value":["select","name","from","shop","where","shop_id","not","in","(","select","shop_id","from","hiring",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[true,8,[0,[0,5,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Trouve","le","nom","des","magasins","qui","n'embauchent","pas","d'employ\u00e9","."],"question":"Trouve le nom des magasins qui n'embauchent pas d'employ\u00e9."},{"db_id":"concert_singer","query":"SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)","query_toks":["SELECT","name","FROM","stadium","WHERE","stadium_id","NOT","IN","(","SELECT","stadium_id","FROM","concert",")"],"query_toks_no_value":["select","name","from","stadium","where","stadium_id","not","in","(","select","stadium_id","from","concert",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quels","sont","les","noms","des","stades","sans","concerts","?"],"question":"Quels sont les noms des stades sans concerts?"},{"db_id":"dog_kennels","query":"SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )","query_toks":["SELECT","count","(","*",")","FROM","Owners","WHERE","owner_id","NOT","IN","(","SELECT","owner_id","FROM","Dogs",")"],"query_toks_no_value":["select","count","(","*",")","from","owners","where","owner_id","not","in","(","select","owner_id","from","dogs",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,10,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,21,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Retrouvez","le","nombre","de","propri\u00e9taires","qui","ne","poss\u00e8dent","pas","de","chien","en","ce","moment","."],"question":"Retrouvez le nombre de propri\u00e9taires qui ne poss\u00e8dent pas de chien en ce moment."},{"db_id":"dog_kennels","query":"SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1","query_toks":["SELECT","name",",","age",",","weight","FROM","Dogs","WHERE","abandoned_yn","=","1"],"query_toks_no_value":["select","name",",","age",",","weight","from","dogs","where","abandoned_yn","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]],[0,[0,[0,26,false],null]],[0,[0,[0,29,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],1.0,null]]},"question_toks":["\u00c9num\u00e8re","le","nom",",","l'\u00e2ge","et","le","poids","des","chiens","qui","ont","\u00e9t\u00e9","abandonn\u00e9s",".","1","signifie","oui","et","0","signifie","non","."],"question":"\u00c9num\u00e8re le nom, l'\u00e2ge et le poids des chiens qui ont \u00e9t\u00e9 abandonn\u00e9s. 1 signifie oui et 0 signifie non."},{"db_id":"employee_hire_evaluation","query":"SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)","query_toks":["SELECT","name","FROM","shop","WHERE","number_products",">","(","SELECT","avg","(","number_products",")","FROM","shop",")"],"query_toks_no_value":["select","name","from","shop","where","number_products",">","(","select","avg","(","number_products",")","from","shop",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,9,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Trouve","les","noms","des","magasins","dont","le","nombre","de","produits","est","sup\u00e9rieur","au","nombre","moyen","de","produits","."],"question":"Trouve les noms des magasins dont le nombre de produits est sup\u00e9rieur au nombre moyen de produits."},{"db_id":"course_teach","query":"SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2","query_toks":["SELECT","Hometown","FROM","teacher","GROUP","BY","Hometown","HAVING","COUNT","(","*",")",">","=","2"],"query_toks_no_value":["select","hometown","from","teacher","group","by","hometown","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,7,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["De","quelles","villes","viennent","au","moins","deux","enseignants","?"],"question":"De quelles villes viennent au moins deux enseignants?"},{"db_id":"tvshow","query":"SELECT Title FROM Cartoon ORDER BY title","query_toks":["SELECT","Title","FROM","Cartoon","ORDER","BY","title"],"query_toks_no_value":["select","title","from","cartoon","order","by","title"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","titres","des","bandes","dessin\u00e9es","tri\u00e9","par","ordre","alphab\u00e9tique","?"],"question":"Quels sont les titres des bandes dessin\u00e9es tri\u00e9 par ordre alphab\u00e9tique?"},{"db_id":"dog_kennels","query":"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'","query_toks":["SELECT","T1.first_name",",","T2.name","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id","WHERE","T1.state","=","'Virginia","'"],"query_toks_no_value":["select","t1",".","first_name",",","t2",".","name","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","where","t1",".","state","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,25,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"Virginia\"",null]]},"question_toks":["Trouvez","les","pr\u00e9noms","des","propri\u00e9taires","qui","vivent","en","Virginie","et","les","noms","des","chiens","qu'ils","poss\u00e8dent","."],"question":"Trouvez les pr\u00e9noms des propri\u00e9taires qui vivent en Virginie et les noms des chiens qu'ils poss\u00e8dent."},{"db_id":"dog_kennels","query":"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","query_toks":["SELECT","T1.owner_id",",","T1.zip_code","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id","JOIN","Treatments","AS","T3","ON","T2.dog_id","=","T3.dog_id","GROUP","BY","T1.owner_id","ORDER","BY","sum","(","T3.cost_of_treatment",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","owner_id",",","t1",".","zip_code","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","join","treatments","as","t3","on","t2",".","dog_id","=","t3",".","dog_id","group","by","t1",".","owner_id","order","by","sum","(","t3",".","cost_of_treatment",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,49,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","propri\u00e9taire","a","pay\u00e9","le","plus","d'argent","au","total","pour","leurs","chiens","?","Afficher","l'ID","du","propri\u00e9taire","et","le","code","postal","."],"question":"Quel propri\u00e9taire a pay\u00e9 le plus d'argent au total pour leurs chiens? Afficher l'ID du propri\u00e9taire et le code postal."},{"db_id":"tvshow","query":"SELECT max(SHARE) , min(SHARE) FROM TV_series;","query_toks":["SELECT","max","(","SHARE",")",",","min","(","SHARE",")","FROM","TV_series",";"],"query_toks_no_value":["select","max","(","share",")",",","min","(","share",")","from","tv_series"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,14,false],null]],[2,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","part","maximale","et","minimale","de","la","s\u00e9rie","t\u00e9l\u00e9vis\u00e9e","?"],"question":"Quelle est la part maximale et minimale de la s\u00e9rie t\u00e9l\u00e9vis\u00e9e?"},{"db_id":"world_1","query":"SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1","query_toks":["SELECT","Name","FROM","country","WHERE","Continent","=","``","Asia","''","ORDER","BY","LifeExpectancy","LIMIT","1"],"query_toks_no_value":["select","name","from","country","where","continent","=","value","order","by","lifeexpectancy","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,15,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Donnez","le","nom","du","pays","d'Asie","dont","l'esp\u00e9rance","de","vie","est","la","plus","baisse","."],"question":"Donnez le nom du pays d'Asie dont l'esp\u00e9rance de vie est la plus baisse."},{"db_id":"student_transcripts_tracking","query":"SELECT section_name ,  section_description FROM Sections","query_toks":["SELECT","section_name",",","section_description","FROM","Sections"],"query_toks_no_value":["select","section_name",",","section_description","from","sections"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]],[0,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","et","descriptions","de","toutes","les","sections","?"],"question":"Quels sont les noms et descriptions de toutes les sections? "},{"db_id":"dog_kennels","query":"SELECT DISTINCT breed_code ,  size_code FROM dogs","query_toks":["SELECT","DISTINCT","breed_code",",","size_code","FROM","dogs"],"query_toks_no_value":["select","distinct","breed_code",",","size_code","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,23,false],null]],[0,[0,[0,24,false],null]]]],"union":null,"where":[]},"question_toks":["uelles","sont","tous","les","types","possibles","de","combinaisons","de","race","et","de","type","de","taille","?"],"question":"uelles sont tous les types possibles de combinaisons de race et de type de taille?"},{"db_id":"car_1","query":"SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';","query_toks":["SELECT","T1.countryId",",","T1.CountryName","FROM","Countries","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.CountryId","=","T2.Country","GROUP","BY","T1.countryId","HAVING","count","(","*",")",">","3","UNION","SELECT","T1.countryId",",","T1.CountryName","FROM","Countries","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.CountryId","=","T2.Country","JOIN","MODEL_LIST","AS","T3","ON","T2.Id","=","T3.Maker","WHERE","T3.Model","=","'fiat","'",";"],"query_toks_no_value":["select","t1",".","countryid",",","t1",".","countryname","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country","group","by","t1",".","countryid","having","count","(","*",")",">","value","union","select","t1",".","countryid",",","t1",".","countryname","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country","join","model_list","as","t3","on","t2",".","id","=","t3",".","maker","where","t3",".","model","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,3,false]],"having":[[false,3,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"fiat\"",null]]},"where":[]},"question_toks":["Quels","sont","les","identifiants","et","les","noms","de","tous","les","pays","qui","ont","plus","de","3","constructeurs","automobiles","ou","produisent","des","fiats","?"],"question":"Quels sont les identifiants et les noms de tous les pays qui ont plus de 3 constructeurs automobiles ou produisent des fiats?"},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRPORTS","query_toks":["SELECT","count","(","*",")","FROM","AIRPORTS"],"query_toks_no_value":["select","count","(","*",")","from","airports"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoie","le","nombre","d'a\u00e9roports","."],"question":"Renvoie le nombre d'a\u00e9roports."},{"db_id":"museum_visit","query":"SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)","query_toks":["SELECT","count","(","*",")","FROM","visitor","WHERE","id","NOT","IN","(","SELECT","t2.visitor_id","FROM","museum","AS","t1","JOIN","visit","AS","t2","ON","t1.Museum_ID","=","t2.Museum_ID","WHERE","t1.open_year",">","2010",")"],"query_toks_no_value":["select","count","(","*",")","from","visitor","where","id","not","in","(","select","t2",".","visitor_id","from","museum","as","t1","join","visit","as","t2","on","t1",".","museum_id","=","t2",".","museum_id","where","t1",".","open_year",">","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,5,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],2010.0,null]]},null]]},"question_toks":["Trouve","le","nombre","de","visiteurs","qui","n'ont","visit\u00e9","aucun","mus\u00e9e","ouvert","apr\u00e8s","2010","."],"question":"Trouve le nombre de visiteurs qui n'ont visit\u00e9 aucun mus\u00e9e ouvert apr\u00e8s 2010."},{"db_id":"concert_singer","query":"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","query_toks":["SELECT","T2.name",",","count","(","*",")","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","GROUP","BY","T1.stadium_id"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","group","by","t1",".","stadium_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Pour","chaque","stade",",","combien","de","concerts","jouent","l\u00e0-bas","?"],"question":"Pour chaque stade, combien de concerts jouent l\u00e0-bas?"},{"db_id":"dog_kennels","query":"SELECT charge_type ,  charge_amount FROM Charges","query_toks":["SELECT","charge_type",",","charge_amount","FROM","Charges"],"query_toks_no_value":["select","charge_type",",","charge_amount","from","charges"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["\u00c9num\u00e9re","chaque","type","de","frais","et","son","montant","."],"question":"\u00c9num\u00e9re chaque type de frais et son montant."},{"db_id":"car_1","query":"SELECT count(*) FROM CONTINENTS;","query_toks":["SELECT","count","(","*",")","FROM","CONTINENTS",";"],"query_toks_no_value":["select","count","(","*",")","from","continents"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","continents","a-t-il","?"],"question":"Combien de continents a-t-il? "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT DISTINCT template_type_code FROM Templates","query_toks":["SELECT","DISTINCT","template_type_code","FROM","Templates"],"query_toks_no_value":["select","distinct","template_type_code","from","templates"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Affiche","tous","les","codes","de","type","de","mod\u00e8le","distincts","pour","tous","les","mod\u00e8les","."],"question":"Affiche tous les codes de type de mod\u00e8le distincts pour tous les mod\u00e8les."},{"db_id":"student_transcripts_tracking","query":"SELECT course_description FROM Courses WHERE course_name  =  'math'","query_toks":["SELECT","course_description","FROM","Courses","WHERE","course_name","=","'math","'"],"query_toks_no_value":["select","course_description","from","courses","where","course_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"math\"",null]]},"question_toks":["Comment","est","d\u00e9crit","le","cours","de","math\u00e9matiques","?"],"question":"Comment est d\u00e9crit le cours de math\u00e9matiques?"},{"db_id":"flight_2","query":"SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.City","FROM","AIRPORTS","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.AirportCode","=","T2.SourceAirport","GROUP","BY","T1.City","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","city","from","airports","as","t1","join","flights","as","t2","on","t1",".","airportcode","=","t2",".","sourceairport","group","by","t1",".","city","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,12,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","ville","a","le","plus","grand","nombre","de","vols","qui","d\u00e9part","?"],"question":"Quelle ville a le plus grand nombre de vols qui d\u00e9part? "},{"db_id":"employee_hire_evaluation","query":"SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)","query_toks":["SELECT","name","FROM","shop","WHERE","shop_id","NOT","IN","(","SELECT","shop_id","FROM","hiring",")"],"query_toks_no_value":["select","name","from","shop","where","shop_id","not","in","(","select","shop_id","from","hiring",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[true,8,[0,[0,5,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quels","magasins","fonctionnent","sans","des","employ\u00e9s","?","Trouvez","les","noms","de","ces","magasins","."],"question":"Quels magasins fonctionnent sans des employ\u00e9s? Trouvez les noms de ces magasins."},{"db_id":"student_transcripts_tracking","query":"SELECT count(DISTINCT current_address_id) FROM Students","query_toks":["SELECT","count","(","DISTINCT","current_address_id",")","FROM","Students"],"query_toks_no_value":["select","count","(","distinct","current_address_id",")","from","students"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,33,true],null]]]],"union":null,"where":[]},"question_toks":["Quelles","sont","les","diff\u00e9rentes","adresses","o\u00f9","vivent","les","\u00e9tudiants","?"],"question":"Quelles sont les diff\u00e9rentes adresses o\u00f9 vivent les \u00e9tudiants?"},{"db_id":"employee_hire_evaluation","query":"SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)","query_toks":["SELECT","name","FROM","employee","WHERE","Employee_ID","NOT","IN","(","SELECT","Employee_ID","FROM","evaluation",")"],"query_toks_no_value":["select","name","from","employee","where","employee_id","not","in","(","select","employee_id","from","evaluation",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Trouve","les","noms","des","employ\u00e9s","qui","n'ont","jamais","remport\u00e9","de","prix","dans","l'\u00e9valuation","."],"question":"Trouve les noms des employ\u00e9s qui n'ont jamais remport\u00e9 de prix dans l'\u00e9valuation."},{"db_id":"battle_death","query":"SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10","query_toks":["SELECT","T1.id",",","T1.name","FROM","battle","AS","T1","JOIN","ship","AS","T2","ON","T1.id","=","T2.lost_in_battle","JOIN","death","AS","T3","ON","T2.id","=","T3.caused_by_ship_id","GROUP","BY","T1.id","HAVING","sum","(","T3.killed",")",">","10"],"query_toks_no_value":["select","t1",".","id",",","t1",".","name","from","battle","as","t1","join","ship","as","t2","on","t1",".","id","=","t2",".","lost_in_battle","join","death","as","t3","on","t2",".","id","=","t3",".","caused_by_ship_id","group","by","t1",".","id","having","sum","(","t3",".","killed",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[[false,3,[0,[4,17,false],null],10.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","identifiants","et","les","noms","des","batailles","qui","ont","fait","plus","de","10","morts","au","total","."],"question":"Quels sont les identifiants et les noms des batailles qui ont fait plus de 10 morts au total."},{"db_id":"network_1","query":"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id","query_toks":["SELECT","student_id",",","count","(","*",")","FROM","Likes","GROUP","BY","student_id"],"query_toks_no_value":["select","student_id",",","count","(","*",")","from","likes","group","by","student_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","d'aimer","qui","correspondent","\u00e0","chaque","identifiant","d'\u00e9tudiant","?"],"question":"Combien d'aimer qui correspondent \u00e0 chaque identifiant d'\u00e9tudiant?"},{"db_id":"singer","query":"SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000","query_toks":["SELECT","DISTINCT","T1.Name","FROM","singer","AS","T1","JOIN","song","AS","T2","ON","T1.Singer_ID","=","T2.Singer_ID","WHERE","T2.Sales",">","300000"],"query_toks_no_value":["select","distinct","t1",".","name","from","singer","as","t1","join","song","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","where","t2",".","sales",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],300000.0,null]]},"question_toks":["Quels","sont","les","diff\u00e9rents","noms","des","chanteurs","qui","ont","des","ventes","plus","de","300000","?"],"question":"Quels sont les diff\u00e9rents noms des chanteurs qui ont des ventes plus de 300000?"},{"db_id":"course_teach","query":"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"","query_toks":["SELECT","T3.Name","FROM","course_arrange","AS","T1","JOIN","course","AS","T2","ON","T1.Course_ID","=","T2.Course_ID","JOIN","teacher","AS","T3","ON","T1.Teacher_ID","=","T3.Teacher_ID","WHERE","T2.Course","=","``","Math","''"],"query_toks_no_value":["select","t3",".","name","from","course_arrange","as","t1","join","course","as","t2","on","t1",".","course_id","=","t2",".","course_id","join","teacher","as","t3","on","t1",".","teacher_id","=","t3",".","teacher_id","where","t2",".","course","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],"\"Math\"",null]]},"question_toks":["\u00c9num\u00e9rez","le","nom","de","l'enseignant","pour","le","cours","de","math\u00e9matiques","."],"question":"\u00c9num\u00e9rez le nom de l'enseignant pour le cours de math\u00e9matiques."},{"db_id":"singer","query":"SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1","query_toks":["SELECT","Name","FROM","singer","ORDER","BY","Net_Worth_Millions","DESC","LIMIT","1"],"query_toks_no_value":["select","name","from","singer","order","by","net_worth_millions","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,4,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nom","du","chanteur","avec","la","plus","grande","valeur","nette","?"],"question":"Quel est le nom du chanteur avec la plus grande valeur nette?"},{"db_id":"employee_hire_evaluation","query":"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","query_toks":["SELECT","count","(","*",")",",","LOCATION","FROM","shop","GROUP","BY","LOCATION"],"query_toks_no_value":["select","count","(","*",")",",","location","from","shop","group","by","location"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","num\u00e9ro","de","magasin","dans","chaque","endroit","."],"question":"Trouve le num\u00e9ro de magasin dans chaque endroit. "},{"db_id":"network_1","query":"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"","query_toks":["SELECT","count","(","*",")","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","WHERE","T2.name","=","``","Kyle","''"],"query_toks_no_value":["select","count","(","*",")","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Combien","de","likes","a","Kyle","?"],"question":"Combien de likes a Kyle?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","count","(","*",")",",","student_course_id","FROM","Transcript_Contents","GROUP","BY","student_course_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","count","(","*",")",",","student_course_id","from","transcript_contents","group","by","student_course_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",10]]},"groupBy":[[0,55,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,55,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nombre","maximal","de","fois","qu'un","cours","appara\u00eet","dans","diff\u00e9rents","relev\u00e9s","de","notes","et","quel","est","l'ID","d'inscription","de","ce","cours","?"],"question":"Quel est le nombre maximal de fois qu'un cours appara\u00eet dans diff\u00e9rents relev\u00e9s de notes et quel est l'ID d'inscription de ce cours?"},{"db_id":"battle_death","query":"SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'","query_toks":["SELECT","DISTINCT","T1.id",",","T1.name","FROM","battle","AS","T1","JOIN","ship","AS","T2","ON","T1.id","=","T2.lost_in_battle","WHERE","T2.ship_type","=","'Brig","'"],"query_toks_no_value":["select","distinct","t1",".","id",",","t1",".","name","from","battle","as","t1","join","ship","as","t2","on","t1",".","id","=","t2",".","lost_in_battle","where","t2",".","ship_type","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Brig\"",null]]},"question_toks":["Quels","sont","les","diff\u00e9rents","identifiants","et","noms","des","batailles","qui","ont","perdu","des","navires","de","type","\u00ab","Brig","\u00bb","?"],"question":"Quels sont les diff\u00e9rents identifiants et noms des batailles qui ont perdu des navires de type \u00abBrig\u00bb?"},{"db_id":"car_1","query":"SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;","query_toks":["SELECT","T2.MakeId",",","T2.Make","FROM","CARS_DATA","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Id","=","T2.MakeId","WHERE","T1.Horsepower",">","(","SELECT","min","(","Horsepower",")","FROM","CARS_DATA",")","AND","T1.Cylinders","<","=","3",";"],"query_toks_no_value":["select","t2",".","makeid",",","t2",".","make","from","cars_data","as","t1","join","car_names","as","t2","on","t1",".","id","=","t2",".","makeid","where","t1",".","horsepower",">","(","select","min","(","horsepower",")","from","cars_data",")","and","t1",".","cylinders","<","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,13,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,3,[0,[0,20,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,20,false],null]]]],"union":null,"where":[]},null],"and",[false,6,[0,[0,18,false],null],3.0,null]]},"question_toks":["Parmi","les","voitures","qui","n'ont","pas","la","puissance","minimale",",","quels","sont","les","identifiants","de","fabrication","et","les","noms","de","toutes","celles","de","moins","de","4","cylindres","?"],"question":"Parmi les voitures qui n'ont pas la puissance minimale, quels sont les identifiants de fabrication et les noms de toutes celles de moins de 4 cylindres?"},{"db_id":"singer","query":"SELECT Name FROM singer WHERE Citizenship != \"France\"","query_toks":["SELECT","Name","FROM","singer","WHERE","Citizenship","!","=","``","France","''"],"query_toks_no_value":["select","name","from","singer","where","citizenship","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,7,[0,[0,5,false],null],"\"France\"",null]]},"question_toks":["``","Indiquez","le","nom","des","chanteurs","dont","la","nationalit\u00e9","n'est","pas","''","``","France","''","``",".","''"],"question":"\"Indiquez le nom des chanteurs dont la nationalit\u00e9 n'est pas\" \"France\" \".\""},{"db_id":"concert_singer","query":"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","query_toks":["SELECT","T2.name",",","T2.location","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","WHERE","T1.Year","=","2014","INTERSECT","SELECT","T2.name",",","T2.location","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","WHERE","T1.Year","=","2015"],"query_toks_no_value":["select","t2",".","name",",","t2",".","location","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","where","t1",".","year","=","value","intersect","select","t2",".","name",",","t2",".","location","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","where","t1",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2015.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2014.0,null]]},"question_toks":["Quels","sont","les","noms","et","les","emplacements","des","stades","qui","ont","donn\u00e9","des","concerts","en","2014","et","2015","?"],"question":"Quels sont les noms et les emplacements des stades qui ont donn\u00e9 des concerts en 2014 et 2015?"},{"db_id":"poker_player","query":"SELECT count(*) FROM poker_player","query_toks":["SELECT","count","(","*",")","FROM","poker_player"],"query_toks_no_value":["select","count","(","*",")","from","poker_player"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Compte","le","nombre","de","joueurs","de","poker","."],"question":"Compte le nombre de joueurs de poker."},{"db_id":"battle_death","query":"SELECT name ,  tonnage FROM ship ORDER BY name DESC","query_toks":["SELECT","name",",","tonnage","FROM","ship","ORDER","BY","name","DESC"],"query_toks_no_value":["select","name",",","tonnage","from","ship","order","by","name","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["\u00c9num\u00e8re","le","nom","et","le","tonnage","class\u00e9s","par","ordre","alphab\u00e9tique","d\u00e9croissant","pour","les","noms","."],"question":"\u00c9num\u00e8re le nom et le tonnage class\u00e9s par ordre alphab\u00e9tique d\u00e9croissant pour les noms."},{"db_id":"car_1","query":"SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)","query_toks":["SELECT","T1.model","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","WHERE","T2.Weight","<","(","SELECT","avg","(","Weight",")","FROM","CARS_DATA",")"],"query_toks_no_value":["select","t1",".","model","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","where","t2",".","weight","<","(","select","avg","(","weight",")","from","cars_data",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,4,[0,[0,21,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,21,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Trouve","le","mod\u00e8le","de","la","voiture","dont","le","poids","est","inf\u00e9rieur","au","poids","moyen","."],"question":"Trouve le mod\u00e8le de la voiture dont le poids est inf\u00e9rieur au poids moyen."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id","query_toks":["SELECT","template_id",",","count","(","*",")","FROM","Documents","GROUP","BY","template_id"],"query_toks_no_value":["select","template_id",",","count","(","*",")","from","documents","group","by","template_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","diff\u00e9rents","identifiants","de","mod\u00e8le","utilis\u00e9s","pour","les","documents","et","combien","de","fois","chacun","d'eux","a-t-il","\u00e9t\u00e9","utilis\u00e9","?"],"question":"Quels sont les diff\u00e9rents identifiants de mod\u00e8le utilis\u00e9s pour les documents et combien de fois chacun d'eux a-t-il \u00e9t\u00e9 utilis\u00e9?"},{"db_id":"poker_player","query":"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality","query_toks":["SELECT","Nationality",",","COUNT","(","*",")","FROM","people","GROUP","BY","Nationality"],"query_toks_no_value":["select","nationality",",","count","(","*",")","from","people","group","by","nationality"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quelles","sont","les","diff\u00e9rentes","nationalit\u00e9s","des","personnes","et","le","nombre","correspondant","de","personnes","de","chaque","nation","?"],"question":"Quelles sont les diff\u00e9rentes nationalit\u00e9s des personnes et le nombre correspondant de personnes de chaque nation?"},{"db_id":"dog_kennels","query":"SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )","query_toks":["SELECT","count","(","*",")","FROM","Professionals","WHERE","professional_id","NOT","IN","(","SELECT","professional_id","FROM","Treatments",")"],"query_toks_no_value":["select","count","(","*",")","from","professionals","where","professional_id","not","in","(","select","professional_id","from","treatments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,33,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,46,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Combien","de","professionnels","n'ont","op\u00e9r\u00e9","aucun","traitement","sur","les","chiens","?"],"question":"Combien de professionnels n'ont op\u00e9r\u00e9 aucun traitement sur les chiens?"},{"db_id":"world_1","query":"SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"","query_toks":["SELECT","sum","(","Population",")",",","max","(","GNP",")","FROM","country","WHERE","Continent","=","``","Asia","''"],"query_toks_no_value":["select","sum","(","population",")",",","max","(","gnp",")","from","country","where","continent","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]],[1,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Quelle","est","la","population","totale","et","le","PNB","maximum","en","Asie","?"],"question":"Quelle est la population totale et le PNB maximum en Asie?"},{"db_id":"world_1","query":"SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')","query_toks":["SELECT","DISTINCT","T2.Name","FROM","country","AS","T1","JOIN","city","AS","T2","ON","T2.CountryCode","=","T1.Code","WHERE","T1.Continent","=","'Europe","'","AND","T1.Name","NOT","IN","(","SELECT","T3.Name","FROM","country","AS","T3","JOIN","countrylanguage","AS","T4","ON","T3.Code","=","T4.CountryCode","WHERE","T4.IsOfficial","=","'T","'","AND","T4.Language","=","'English","'",")"],"query_toks_no_value":["select","distinct","t2",".","name","from","country","as","t1","join","city","as","t2","on","t2",".","countrycode","=","t1",".","code","where","t1",".","continent","=","value","and","t1",".","name","not","in","(","select","t3",".","name","from","country","as","t3","join","countrylanguage","as","t4","on","t3",".","code","=","t4",".","countrycode","where","t4",".","isofficial","=","value","and","t4",".","language","=","value",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,8,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Europe\"",null],"and",[true,8,[0,[0,9,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"T\"",null],"and",[false,2,[0,[0,24,false],null],"\"English\"",null]]},null]]},"question_toks":["Quelles","villes","se","trouvent","dans","les","pays","europ\u00e9ens","o\u00f9","l'anglais","n'est","pas","la","langue","officielle","?"],"question":"Quelles villes se trouvent dans les pays europ\u00e9ens o\u00f9 l'anglais n'est pas la langue officielle?"},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"","query_toks":["SELECT","count","(","*",")","FROM","AIRLINES","WHERE","Country","=","``","USA","''"],"query_toks_no_value":["select","count","(","*",")","from","airlines","where","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"USA\"",null]]},"question_toks":["Retourne","le","num\u00e9ro","de","compagnie","a\u00e9rien","dans","l'\u00c9tats-Unis","."],"question":"Retourne le num\u00e9ro de compagnie a\u00e9rien dans l'\u00c9tats-Unis."},{"db_id":"world_1","query":"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"","query_toks":["SELECT","T2.Language","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.HeadOfState","=","``","Beatrix","''","AND","T2.IsOfficial","=","``","T","''"],"query_toks_no_value":["select","t2",".","language","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","headofstate","=","value","and","t2",".","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"Beatrix\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Quelle","est","la","langue","officielle","parl\u00e9e","dans","le","pays","dont","le","chef","d'Etat","est","Beatrix","?"],"question":"Quelle est la langue officielle parl\u00e9e dans le pays dont le chef d'Etat est Beatrix?"},{"db_id":"world_1","query":"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"","query_toks":["SELECT","COUNT","(","*",")","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.Name","=","``","Afghanistan","''","AND","IsOfficial","=","``","T","''"],"query_toks_no_value":["select","count","(","*",")","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","name","=","value","and","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Afghanistan\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Combien","de","langues","officielles","sont","parl\u00e9es","en","Afghanistan","?"],"question":"Combien de langues officielles sont parl\u00e9es en Afghanistan?"},{"db_id":"poker_player","query":"SELECT Name FROM people WHERE Nationality != \"Russia\"","query_toks":["SELECT","Name","FROM","people","WHERE","Nationality","!","=","``","Russia","''"],"query_toks_no_value":["select","name","from","people","where","nationality","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,7,[0,[0,8,false],null],"\"Russia\"",null]]},"question_toks":["Quels","est","les","noms","des","personnes","qui","ne","sont","pas","de","Russie","?"],"question":"Quels est les noms des personnes qui ne sont pas de Russie?"},{"db_id":"dog_kennels","query":"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","query_toks":["SELECT","T1.professional_id",",","T1.role_code",",","T1.first_name","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id","GROUP","BY","T1.professional_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","professional_id",",","t1",".","role_code",",","t1",".","first_name","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id","group","by","t1",".","professional_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,33,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,34,false],null]],[0,[0,[0,35,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","est","l'identifiant",",","le","r\u00f4le","et","le","pr\u00e9nom","des","professionnels","qui","ont","compl\u00e9t\u00e9","deux","traitements","ou","plus","?"],"question":"Quels est l'identifiant, le r\u00f4le et le pr\u00e9nom des professionnels qui ont compl\u00e9t\u00e9 deux traitements ou plus?"},{"db_id":"wta_1","query":"SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3","query_toks":["SELECT","DISTINCT","winner_name",",","winner_rank","FROM","matches","ORDER","BY","winner_age","LIMIT","3"],"query_toks_no_value":["select","distinct","winner_name",",","winner_rank","from","matches","order","by","winner_age","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["asc",[[0,[0,28,false],null]]],"select":[true,[[0,[0,[0,34,false],null]],[0,[0,[0,35,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","nom","et","le","rang","des","3","plus","jeunes","vainqueurs","de","tous","les","matchs","."],"question":"Trouve le nom et le rang des 3 plus jeunes vainqueurs de tous les matchs."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'","query_toks":["SELECT","Other_Details","FROM","Paragraphs","WHERE","paragraph_text","=","'Korea","'"],"query_toks_no_value":["select","other_details","from","paragraphs","where","paragraph_text","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,2,[0,[0,16,false],null],"\"Korea\"",null]]},"question_toks":["Quels","sont","les","d\u00e9tails","du","paragraphe","qui","comprend","le","texte","``","Cor\u00e9e","''","?"],"question":"Quels sont les d\u00e9tails du paragraphe qui comprend le texte \"Cor\u00e9e\"?"},{"db_id":"wta_1","query":"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","query_toks":["SELECT","avg","(","ranking",")",",","T1.first_name","FROM","players","AS","T1","JOIN","rankings","AS","T2","ON","T1.player_id","=","T2.player_id","GROUP","BY","T1.first_name"],"query_toks_no_value":["select","avg","(","ranking",")",",","t1",".","first_name","from","players","as","t1","join","rankings","as","t2","on","t1",".","player_id","=","t2",".","player_id","group","by","t1",".","first_name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,41,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,40,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","pr\u00e9noms","de","tous","les","joueurs","et","leur","classement","moyen","?"],"question":"Quels sont les pr\u00e9noms de tous les joueurs et leur classement moyen?"},{"db_id":"world_1","query":"SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")","query_toks":["SELECT","Name","FROM","country","WHERE","Continent","=","``","Africa","''","AND","population","<","(","SELECT","max","(","population",")","FROM","country","WHERE","Continent","=","``","Asia","''",")"],"query_toks_no_value":["select","name","from","country","where","continent","=","value","and","population","<","(","select","max","(","population",")","from","country","where","continent","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Africa\"",null],"and",[false,4,[0,[0,14,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},null]]},"question_toks":["Quels","sont","les","pays","africains","qui","ont","une","population","inf\u00e9rieure","\u00e0","n'importe","quel","pays","d'Asie","?"],"question":"Quels sont les pays africains qui ont une population inf\u00e9rieure \u00e0 n'importe quel pays d'Asie?"},{"db_id":"poker_player","query":"SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1","query_toks":["SELECT","Money_Rank","FROM","poker_player","ORDER","BY","Earnings","DESC","LIMIT","1"],"query_toks_no_value":["select","money_rank","from","poker_player","order","by","earnings","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","rang","d'argent","du","joueur","de","poker","avec","les","gains","les","plus","\u00e9lev\u00e9s","?"],"question":"Quel est le rang d'argent du joueur de poker avec les gains les plus \u00e9lev\u00e9s?"},{"db_id":"course_teach","query":"SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2","query_toks":["SELECT","Hometown","FROM","teacher","GROUP","BY","Hometown","HAVING","COUNT","(","*",")",">","=","2"],"query_toks_no_value":["select","hometown","from","teacher","group","by","hometown","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,7,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","les","villes","natales","partag\u00e9es","par","au","moins","deux","enseignants","."],"question":"Montre les villes natales partag\u00e9es par au moins deux enseignants."},{"db_id":"world_1","query":"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"","query_toks":["SELECT","Region","FROM","country","AS","T1","JOIN","city","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Name","=","``","Kabul","''"],"query_toks_no_value":["select","region","from","country","as","t1","join","city","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kabul\"",null]]},"question_toks":["Dans","quelle","r\u00e9gion","se","trouve","la","ville","de","Kaboul","?"],"question":"Dans quelle r\u00e9gion se trouve la ville de Kaboul?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'","query_toks":["SELECT","count","(","*",")","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_ID","=","T2.document_ID","WHERE","T2.document_name","=","'Summer","Show","'"],"query_toks_no_value":["select","count","(","*",")","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","where","t2",".","document_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Summer Show\"",null]]},"question_toks":["Combien","de","paragraphes","pour","le","document","avec","le","nom","\u00ab","Spectacle","d'\u00e9t\u00e9","\u00bb","?"],"question":"Combien de paragraphes pour le document avec le nom \u00abSpectacle d'\u00e9t\u00e9\u00bb?"},{"db_id":"flight_2","query":"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"","query_toks":["SELECT","T1.FlightNo","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.SourceAirport","=","T2.AirportCode","WHERE","T2.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","t1",".","flightno","from","flights","as","t1","join","airports","as","t2","on","t1",".","sourceairport","=","t2",".","airportcode","where","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Donnez","les","num\u00e9ros","de","vol","au","d\u00e9part","d'Aberdeen","."],"question":"Donnez les num\u00e9ros de vol au d\u00e9part d'Aberdeen."},{"db_id":"world_1","query":"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode","query_toks":["SELECT","CountryCode",",","max","(","Percentage",")","FROM","countrylanguage","WHERE","LANGUAGE","=","``","Spanish","''","GROUP","BY","CountryCode"],"query_toks_no_value":["select","countrycode",",","max","(","percentage",")","from","countrylanguage","where","language","=","value","group","by","countrycode"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]],[1,[0,[0,26,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Spanish\"",null]]},"question_toks":["Renvoie","les","codes","des","pays","pour","lesquels","l'espagnol","est","la","langue","principalement","parl\u00e9e","."],"question":"Renvoie les codes des pays pour lesquels l'espagnol est la langue principalement parl\u00e9e."},{"db_id":"poker_player","query":"SELECT Earnings FROM poker_player ORDER BY Earnings DESC","query_toks":["SELECT","Earnings","FROM","poker_player","ORDER","BY","Earnings","DESC"],"query_toks_no_value":["select","earnings","from","poker_player","order","by","earnings","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","les","gains","des","joueurs","de","poker","par","ordre","d\u00e9croissant","."],"question":"Liste les gains des joueurs de poker par ordre d\u00e9croissant."},{"db_id":"world_1","query":"SELECT name FROM city WHERE Population BETWEEN 160000 AND 90000","query_toks":["SELECT","name","FROM","city","WHERE","Population","BETWEEN","160000","AND","90000"],"query_toks_no_value":["select","name","from","city","where","population","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,1,[0,[0,5,false],null],160000.0,90000.0]]},"question_toks":["Renvoie","les","noms","des","villes","dont","la","population","se","situe","entre","160000","et","900000","habitants","."],"question":"Renvoie les noms des villes dont la population se situe entre 160000 et 900000 habitants."},{"db_id":"orchestra","query":"SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)","query_toks":["SELECT","Orchestra","FROM","orchestra","WHERE","Orchestra_ID","NOT","IN","(","SELECT","Orchestra_ID","FROM","performance",")"],"query_toks_no_value":["select","orchestra","from","orchestra","where","orchestra_id","not","in","(","select","orchestra_id","from","performance",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[true,8,[0,[0,6,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quels","sont","les","orchestres","qui","n'ont","pas","de","performances","?"],"question":"Quels sont les orchestres qui n'ont pas de performances?"},{"db_id":"employee_hire_evaluation","query":"SELECT min(Number_products) ,  max(Number_products) FROM shop","query_toks":["SELECT","min","(","Number_products",")",",","max","(","Number_products",")","FROM","shop"],"query_toks_no_value":["select","min","(","number_products",")",",","max","(","number_products",")","from","shop"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,9,false],null]],[1,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["trouve","le","nombre","minimum","et","maximum","de","produits","de","tous","les","magasins","."],"question":"trouve le nombre minimum et maximum de produits de tous les magasins."},{"db_id":"student_transcripts_tracking","query":"SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'","query_toks":["SELECT","DISTINCT","T2.semester_id","FROM","Degree_Programs","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.degree_program_id","=","T2.degree_program_id","WHERE","degree_summary_name","=","'Master","'","INTERSECT","SELECT","DISTINCT","T2.semester_id","FROM","Degree_Programs","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.degree_program_id","=","T2.degree_program_id","WHERE","degree_summary_name","=","'Bachelor","'"],"query_toks_no_value":["select","distinct","t2",".","semester_id","from","degree_programs","as","t1","join","student_enrolment","as","t2","on","t1",".","degree_program_id","=","t2",".","degree_program_id","where","degree_summary_name","=","value","intersect","select","distinct","t2",".","semester_id","from","degree_programs","as","t1","join","student_enrolment","as","t2","on","t1",".","degree_program_id","=","t2",".","degree_program_id","where","degree_summary_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,46,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"Bachelor\"",null]]},"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,46,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"Master\"",null]]},"question_toks":["Trouvez","le","trimestre","quand","les","\u00e9tudiants","en","ma\u00eetrise","et","les","\u00e9tudiants","en","baccalaur\u00e9at","se","sont","inscrits","."],"question":"Trouvez le trimestre quand les \u00e9tudiants en ma\u00eetrise et les \u00e9tudiants en baccalaur\u00e9at se sont inscrits."},{"db_id":"pets_1","query":"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","query_toks":["SELECT","T1.fname",",","T1.sex","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","GROUP","BY","T1.stuid","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","sex","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","group","by","t1",".","stuid","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","pr\u00e9nom","et","le","sexe","de","l'\u00e9l\u00e8ve","qui","a","plus","d'un","animal","de","compagnie","."],"question":"Trouve le pr\u00e9nom et le sexe de l'\u00e9l\u00e8ve qui a plus d'un animal de compagnie."},{"db_id":"wta_1","query":"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","query_toks":["SELECT","T1.first_name",",","T1.country_code",",","T1.birth_date","FROM","players","AS","T1","JOIN","matches","AS","T2","ON","T1.player_id","=","T2.winner_id","ORDER","BY","T2.winner_rank_points","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","country_code",",","t1",".","birth_date","from","players","as","t1","join","matches","as","t2","on","t1",".","player_id","=","t2",".","winner_id","order","by","t2",".","winner_rank_points","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,32,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,36,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,6,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","pr\u00e9nom",",","le","code","du","pays","et","la","date","de","naissance","du","gagnant","qui","a","le","plus","de","points","dans","tous","les","matchs","."],"question":"Trouve le pr\u00e9nom, le code du pays et la date de naissance du gagnant qui a le plus de points dans tous les matchs."},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"","query_toks":["SELECT","count","(","*",")","FROM","AIRLINES","WHERE","Country","=","``","USA","''"],"query_toks_no_value":["select","count","(","*",")","from","airlines","where","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"USA\"",null]]},"question_toks":["Combien","de","compagnies","a\u00e9riennes","sont","des","\u00c9tats-Unis","?"],"question":"Combien de compagnies a\u00e9riennes sont des \u00c9tats-Unis?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","WHERE","SourceAirport","=","``","APG","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","where","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"APG\"",null]]},"question_toks":["Combien","de","vols","partent","de","\u00ab","APG","\u00bb","?"],"question":"Combien de vols partent de \u00abAPG\u00bb?"},{"db_id":"flight_2","query":"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"","query_toks":["SELECT","FlightNo","FROM","FLIGHTS","WHERE","SourceAirport","=","``","APG","''"],"query_toks_no_value":["select","flightno","from","flights","where","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"APG\"",null]]},"question_toks":["``","Quels","sont","les","num\u00e9ros","de","vol","au","d\u00e9part","de","l'a\u00e9roport","''","``","APG","''","``","?","''"],"question":"\"Quels sont les num\u00e9ros de vol au d\u00e9part de l'a\u00e9roport\" \"APG\" \"?\""},{"db_id":"student_transcripts_tracking","query":"SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id","query_toks":["SELECT","T1.last_name","FROM","Students","AS","T1","JOIN","Addresses","AS","T2","ON","T1.current_address_id","=","T2.address_id","WHERE","T2.state_province_county","=","'NorthCarolina","'","EXCEPT","SELECT","DISTINCT","T3.last_name","FROM","Students","AS","T3","JOIN","Student_Enrolment","AS","T4","ON","T3.student_id","=","T4.student_id"],"query_toks_no_value":["select","t1",".","last_name","from","students","as","t1","join","addresses","as","t2","on","t1",".","current_address_id","=","t2",".","address_id","where","t2",".","state_province_county","=","value","except","select","distinct","t3",".","last_name","from","students","as","t3","join","student_enrolment","as","t4","on","t3",".","student_id","=","t4",".","student_id"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,47,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,37,false],null]]]],"union":null,"where":[]},"from":{"conds":[[false,2,[0,[0,33,false],null],[0,1,false],null]],"table_units":[["table_unit",6],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,37,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"NorthCarolina\"",null]]},"question_toks":["Quel","est","le","nom","de","famille","des","\u00e9tudiants","qui","vivent","en","Caroline","du","Nord","mais","qui","ne","se","sont","inscrits","\u00e0","aucun","programme","d'\u00e9tudes","?"],"question":"Quel est le nom de famille des \u00e9tudiants qui vivent en Caroline du Nord mais qui ne se sont inscrits \u00e0 aucun programme d'\u00e9tudes?"},{"db_id":"concert_singer","query":"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","query_toks":["SELECT","T2.name",",","count","(","*",")","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","GROUP","BY","T1.stadium_id"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","group","by","t1",".","stadium_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Indique","le","nom","du","stade","et","le","nombre","de","concerts","dans","chaque","stade","."],"question":"Indique le nom du stade et le nombre de concerts dans chaque stade."},{"db_id":"wta_1","query":"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","winner_name",",","winner_rank_points","FROM","matches","GROUP","BY","winner_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","winner_name",",","winner_rank_points","from","matches","group","by","winner_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,34,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,36,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","nom","et","les","points","de","classement","du","gagnant","qui","a","gagn\u00e9","le","plus","de","fois","."],"question":"Trouve le nom et les points de classement du gagnant qui a gagn\u00e9 le plus de fois."},{"db_id":"car_1","query":"SELECT count(*) FROM CONTINENTS;","query_toks":["SELECT","count","(","*",")","FROM","CONTINENTS",";"],"query_toks_no_value":["select","count","(","*",")","from","continents"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nombre","de","continents","?"],"question":"Quel est le nombre de continents?"},{"db_id":"pets_1","query":"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","query_toks":["SELECT","major",",","age","FROM","student","WHERE","stuid","NOT","IN","(","SELECT","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'",")"],"query_toks_no_value":["select","major",",","age","from","student","where","stuid","not","in","(","select","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null]]},null]]},"question_toks":["Quelle","est","la","majeure","de","chaque","\u00e9l\u00e8ve","qui","ne","poss\u00e8de","pas","un","chat","comme","animal",",","et","aussi","quel","\u00e2ge","ont-ils","?"],"question":"Quelle est la majeure de chaque \u00e9l\u00e8ve qui ne poss\u00e8de pas un chat comme animal, et aussi quel \u00e2ge ont-ils?"},{"db_id":"concert_singer","query":"SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","query_toks":["SELECT","LOCATION",",","name","FROM","stadium","WHERE","capacity","BETWEEN","5000","AND","10000"],"query_toks_no_value":["select","location",",","name","from","stadium","where","capacity","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,1,[0,[0,4,false],null],5000.0,10000.0]]},"question_toks":["Montrez","l'emplacement","et","le","nom","de","tous","les","stades","d'une","capacit\u00e9","entre","5000","et","10000","."],"question":"Montrez l'emplacement et le nom de tous les stades d'une capacit\u00e9 entre 5000 et 10000."},{"db_id":"world_1","query":"SELECT count(*) FROM country WHERE continent  =  \"Asia\"","query_toks":["SELECT","count","(","*",")","FROM","country","WHERE","continent","=","``","Asia","''"],"query_toks_no_value":["select","count","(","*",")","from","country","where","continent","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["combien","de","pays","sont","en","Asie","?"],"question":"combien de pays sont en Asie?"},{"db_id":"battle_death","query":"SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'","query_toks":["SELECT","name",",","RESULT",",","bulgarian_commander","FROM","battle","EXCEPT","SELECT","T1.name",",","T1.result",",","T1.bulgarian_commander","FROM","battle","AS","T1","JOIN","ship","AS","T2","ON","T1.id","=","T2.lost_in_battle","WHERE","T2.location","=","'English","Channel","'"],"query_toks_no_value":["select","name",",","result",",","bulgarian_commander","from","battle","except","select","t1",".","name",",","t1",".","result",",","t1",".","bulgarian_commander","from","battle","as","t1","join","ship","as","t2","on","t1",".","id","=","t2",".","lost_in_battle","where","t2",".","location","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,6,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"English Channel\"",null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,6,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Montrez","les","noms",",","les","r\u00e9sultats","et","les","commandants","bulgares","des","batailles","qui","n","'","a","pas","de","navire","perdu","dans","la","'Manche","'","."],"question":"Montrez les noms, les r\u00e9sultats et les commandants bulgares des batailles qui n'a pas de navire perdu dans la 'Manche'."},{"db_id":"singer","query":"SELECT Name FROM singer WHERE Citizenship != \"France\"","query_toks":["SELECT","Name","FROM","singer","WHERE","Citizenship","!","=","``","France","''"],"query_toks_no_value":["select","name","from","singer","where","citizenship","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,7,[0,[0,5,false],null],"\"France\"",null]]},"question_toks":["Quels","sont","les","noms","des","chanteurs","qui","ne","sont","pas","citoyens","fran\u00e7ais","?"],"question":"Quels sont les noms des chanteurs qui ne sont pas citoyens fran\u00e7ais?"},{"db_id":"course_teach","query":"SELECT Age ,  Hometown FROM teacher","query_toks":["SELECT","Age",",","Hometown","FROM","teacher"],"query_toks_no_value":["select","age",",","hometown","from","teacher"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","l'\u00e2ge","et","la","ville","natale","des","professeurs","?"],"question":"Quelle est l'\u00e2ge et la ville natale des professeurs?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5","query_toks":["SELECT","version_number",",","template_type_code","FROM","Templates","WHERE","version_number",">","5"],"query_toks_no_value":["select","version_number",",","template_type_code","from","templates","where","version_number",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],5.0,null]]},"question_toks":["Quel","est","le","num\u00e9ro","de","version","et","le","code","de","type","de","mod\u00e8le","pour","le","mod\u00e8le","dont","le","num\u00e9ro","de","version","est","sup\u00e9rieur","\u00e0","5","?"],"question":"Quel est le num\u00e9ro de version et le code de type de mod\u00e8le pour le mod\u00e8le dont le num\u00e9ro de version est sup\u00e9rieur \u00e0 5?"},{"db_id":"museum_visit","query":"SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC","query_toks":["SELECT","name",",","Level_of_membership","FROM","visitor","WHERE","Level_of_membership",">","4","ORDER","BY","age","DESC"],"query_toks_no_value":["select","name",",","level_of_membership","from","visitor","where","level_of_membership",">","value","order","by","age","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,8,false],null]]],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,3,[0,[0,7,false],null],4.0,null]]},"question_toks":["Trouvez","le","nom","et","le","niveau","d'adh\u00e9sion","des","visiteurs","dont","le","niveau","d'adh\u00e9sion","est","sup\u00e9rieur","\u00e0","4",",","et","triez","par","\u00e2ge","des","plus","jeunes","aux","plus","jeunes","."],"question":"Trouvez le nom et le niveau d'adh\u00e9sion des visiteurs dont le niveau d'adh\u00e9sion est sup\u00e9rieur \u00e0 4, et triez par \u00e2ge des plus jeunes aux plus jeunes."},{"db_id":"network_1","query":"SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4","query_toks":["SELECT","grade","FROM","Highschooler","GROUP","BY","grade","HAVING","count","(","*",")",">","=","4"],"query_toks_no_value":["select","grade","from","highschooler","group","by","grade","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[[false,5,[0,[3,0,false],null],4.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Montre-moi","toutes","les","notes","qui","ont","au","moins","4","\u00e9l\u00e8ves","."],"question":"Montre-moi toutes les notes qui ont au moins 4 \u00e9l\u00e8ves."},{"db_id":"car_1","query":"SELECT Maker ,  Model FROM MODEL_LIST;","query_toks":["SELECT","Maker",",","Model","FROM","MODEL_LIST",";"],"query_toks_no_value":["select","maker",",","model","from","model_list"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","fabricants","et","les","mod\u00e8les","?"],"question":"Quels sont les fabricants et les mod\u00e8les? "},{"db_id":"voter_1","query":"SELECT DISTINCT state ,  created FROM votes","query_toks":["SELECT","DISTINCT","state",",","created","FROM","votes"],"query_toks_no_value":["select","distinct","state",",","created","from","votes"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,7,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","\u00c9tats","distincts","et","cr\u00e9ent","l'heure","de","tous","les","votes","?"],"question":"Quels sont les \u00c9tats distincts et cr\u00e9ent l'heure de tous les votes?"},{"db_id":"car_1","query":"SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;","query_toks":["SELECT","DISTINCT","T1.Year","FROM","CARS_DATA","AS","T1","WHERE","T1.Weight",">","3000","AND","T1.weight","<","4000",";"],"query_toks_no_value":["select","distinct","t1",".","year","from","cars_data","as","t1","where","t1",".","weight",">","value","and","t1",".","weight","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,3,[0,[0,21,false],null],3000.0,null],"and",[false,4,[0,[0,21,false],null],4000.0,null]]},"question_toks":["Quelles","sont","les","diff\u00e9rentes","ann\u00e9es","de","production","de","voitures","pesant","moins","de","4000","et","de","voitures","pesant","plus","de","3000","?"],"question":"Quelles sont les diff\u00e9rentes ann\u00e9es de production de voitures pesant moins de 4000 et de voitures pesant plus de 3000?"},{"db_id":"tvshow","query":"SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'","query_toks":["SELECT","country","FROM","TV_Channel","EXCEPT","SELECT","T1.country","FROM","TV_Channel","AS","T1","JOIN","cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.written_by","=","'Todd","Casey","'"],"query_toks_no_value":["select","country","from","tv_channel","except","select","t1",".","country","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","written_by","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],"\"Todd Casey\"",null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","pays","qui","ne","jouent","pas","les","bandes","dessin\u00e9s","\u00e9crit","par","Todd","Casey","?"],"question":"Quels sont les pays qui ne jouent pas les bandes dessin\u00e9s \u00e9crit par Todd Casey?"},{"db_id":"employee_hire_evaluation","query":"SELECT * FROM hiring","query_toks":["SELECT","*","FROM","hiring"],"query_toks_no_value":["select","*","from","hiring"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Donne-moi","toutes","les","informations","sur","l'embauche","."],"question":"Donne-moi toutes les informations sur l'embauche."},{"db_id":"network_1","query":"SELECT name ,  grade FROM Highschooler","query_toks":["SELECT","name",",","grade","FROM","Highschooler"],"query_toks_no_value":["select","name",",","grade","from","highschooler"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","et","note","obtenu","pour","chaque","\u00e9tudiant","secondaire","."],"question":"Quels sont les noms et note obtenu pour chaque \u00e9tudiant secondaire. "},{"db_id":"student_transcripts_tracking","query":"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","query_toks":["SELECT","transcript_date",",","other_details","FROM","Transcripts","ORDER","BY","transcript_date","ASC","LIMIT","1"],"query_toks_no_value":["select","transcript_date",",","other_details","from","transcripts","order","by","transcript_date","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",9]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,53,false],null]]],"select":[false,[[0,[0,[0,53,false],null]],[0,[0,[0,54,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","date","le","plus","t\u00f4t","d","\u2019","une","transcrit",",","et","quels","d\u00e9tails","pouvez-vous","me","donner","?"],"question":"Quelle est la date le plus t\u00f4t d\u2019une transcrit, et quels d\u00e9tails pouvez-vous me donner?"},{"db_id":"employee_hire_evaluation","query":"SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","t1.name","FROM","employee","AS","t1","JOIN","evaluation","AS","t2","ON","t1.Employee_ID","=","t2.Employee_ID","GROUP","BY","t2.Employee_ID","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","employee","as","t1","join","evaluation","as","t2","on","t1",".","employee_id","=","t2",".","employee_id","group","by","t2",".","employee_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,15,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","employ\u00e9","a","re\u00e7u","le","plus","de","prix","dans","les","\u00e9valuations","?","Donne-moi","le","nom","de","l'employ\u00e9","."],"question":"Quel employ\u00e9 a re\u00e7u le plus de prix dans les \u00e9valuations? Donne-moi le nom de l'employ\u00e9."},{"db_id":"voter_1","query":"SELECT max(created) FROM votes WHERE state  =  'CA'","query_toks":["SELECT","max","(","created",")","FROM","votes","WHERE","state","=","'CA","'"],"query_toks_no_value":["select","max","(","created",")","from","votes","where","state","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"CA\"",null]]},"question_toks":["Quelle","est","la","derni\u00e8re","date","de","cr\u00e9ation","des","votes","de","l'\u00c9tat","\u00ab","CA","\u00bb","?"],"question":"Quelle est la derni\u00e8re date de cr\u00e9ation des votes de l'\u00c9tat \u00abCA\u00bb?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id","query_toks":["SELECT","template_type_code","FROM","Templates","EXCEPT","SELECT","template_type_code","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id"],"query_toks_no_value":["select","template_type_code","from","templates","except","select","template_type_code","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","tous","les","types","de","codes","des","mod\u00e8les","qui","ne","sont","utilis\u00e9s","par","n'importe","quel","document","."],"question":"Montre tous les types de codes des mod\u00e8les qui ne sont utilis\u00e9s par n'importe quel document."},{"db_id":"wta_1","query":"SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50","query_toks":["SELECT","country_code","FROM","players","GROUP","BY","country_code","HAVING","count","(","*",")",">","50"],"query_toks_no_value":["select","country_code","from","players","group","by","country_code","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[[false,3,[0,[3,0,false],null],50.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","les","codes","des","pays","qui","ont","plus","de","50","joueurs","."],"question":"Trouve les codes des pays qui ont plus de 50 joueurs."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","query_toks":["SELECT","T1.document_id",",","T2.document_name",",","count","(","*",")","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_id","=","T2.document_id","GROUP","BY","T1.document_id"],"query_toks_no_value":["select","t1",".","document_id",",","t2",".","document_name",",","count","(","*",")","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","group","by","t1",".","document_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,11,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Montrez","tous","les","identifiants","des","documents",",","les","noms","et","nombre","de","paragraphes","de","chaque","document","."],"question":"Montrez tous les identifiants des documents, les noms et nombre de paragraphes de chaque document. "},{"db_id":"network_1","query":"SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend","query_toks":["SELECT","id","FROM","Highschooler","EXCEPT","SELECT","student_id","FROM","Friend"],"query_toks_no_value":["select","id","from","highschooler","except","select","student_id","from","friend"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Affiche","les","identifiants","de","tous","les","\u00e9l\u00e8ves","qui","n'ont","pas","d'amis","."],"question":"Affiche les identifiants de tous les \u00e9l\u00e8ves qui n'ont pas d'amis."},{"db_id":"dog_kennels","query":"SELECT max(age) FROM Dogs","query_toks":["SELECT","max","(","age",")","FROM","Dogs"],"query_toks_no_value":["select","max","(","age",")","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","l'\u00e2ge","du","chien","le","plus","vieux","?"],"question":"Quel est l'\u00e2ge du chien le plus vieux? "},{"db_id":"pets_1","query":"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","query_toks":["SELECT","T1.fname",",","T1.sex","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","GROUP","BY","T1.stuid","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","sex","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","group","by","t1",".","stuid","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","pr\u00e9nom","et","le","sexe","de","tous","les","\u00e9l\u00e8ves","qui","ont","plus","d'un","animal","de","compagnie","?"],"question":"Quel est le pr\u00e9nom et le sexe de tous les \u00e9l\u00e8ves qui ont plus d'un animal de compagnie?"},{"db_id":"flight_2","query":"SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.City","FROM","AIRPORTS","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.AirportCode","=","T2.DestAirport","GROUP","BY","T1.City","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","city","from","airports","as","t1","join","flights","as","t2","on","t1",".","airportcode","=","t2",".","destairport","group","by","t1",".","city","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,13,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","ville","a","l'a\u00e9roport","de","destination","le","plus","fr\u00e9quent","?"],"question":"Quelle ville a l'a\u00e9roport de destination le plus fr\u00e9quent?"},{"db_id":"voter_1","query":"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1","query_toks":["SELECT","T1.contestant_number",",","T1.contestant_name","FROM","contestants","AS","T1","JOIN","votes","AS","T2","ON","T1.contestant_number","=","T2.contestant_number","GROUP","BY","T1.contestant_number","ORDER","BY","count","(","*",")","ASC","LIMIT","1"],"query_toks_no_value":["select","t1",".","contestant_number",",","t1",".","contestant_name","from","contestants","as","t1","join","votes","as","t2","on","t1",".","contestant_number","=","t2",".","contestant_number","group","by","t1",".","contestant_number","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,8,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,3,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["De","tous","les","candidats","qui","ont","\u00e9t\u00e9","vot\u00e9s",",","quels","sont","le","num\u00e9ro","et","le","nom","du","candidat","qui","a","obtenu","le","moins","de","votes","?"],"question":"De tous les candidats qui ont \u00e9t\u00e9 vot\u00e9s, quels sont le num\u00e9ro et le nom du candidat qui a obtenu le moins de votes?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.template_id",",","T2.Template_Type_Code","FROM","Documents","AS","T1","JOIN","Templates","AS","T2","ON","T1.template_id","=","T2.template_id","GROUP","BY","T1.template_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","template_id",",","t2",".","template_type_code","from","documents","as","t1","join","templates","as","t2","on","t1",".","template_id","=","t2",".","template_id","group","by","t1",".","template_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","l'identifiant","et","le","code","de","type","du","mod\u00e8le","utilis\u00e9","par","la","plupart","des","documents","?"],"question":"Quels sont l'identifiant et le code de type du mod\u00e8le utilis\u00e9 par la plupart des documents?"},{"db_id":"flight_2","query":"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"","query_toks":["SELECT","FlightNo","FROM","FLIGHTS","WHERE","SourceAirport","=","``","APG","''"],"query_toks_no_value":["select","flightno","from","flights","where","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"APG\"",null]]},"question_toks":["Indiquez","le","num\u00e9ro","de","vol","au","d\u00e9part","d'APG","."],"question":"Indiquez le num\u00e9ro de vol au d\u00e9part d'APG."},{"db_id":"concert_singer","query":"SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30","query_toks":["SELECT","country","FROM","singer","WHERE","age",">","40","INTERSECT","SELECT","country","FROM","singer","WHERE","age","<","30"],"query_toks_no_value":["select","country","from","singer","where","age",">","value","intersect","select","country","from","singer","where","age","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,4,[0,[0,13,false],null],30.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],40.0,null]]},"question_toks":["Affiche","les","pays","d'origine","d'un","chanteur","de","plus","de","40","ans","et","d'un","chanteur","de","moins","de","30","ans","."],"question":"Affiche les pays d'origine d'un chanteur de plus de 40 ans et d'un chanteur de moins de 30 ans."},{"db_id":"flight_2","query":"SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1","query_toks":["SELECT","T1.AirportCode","FROM","AIRPORTS","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.AirportCode","=","T2.DestAirport","OR","T1.AirportCode","=","T2.SourceAirport","GROUP","BY","T1.AirportCode","ORDER","BY","count","(","*",")","LIMIT","1"],"query_toks_no_value":["select","t1",".","airportcode","from","airports","as","t1","join","flights","as","t2","on","t1",".","airportcode","=","t2",".","destairport","or","t1",".","airportcode","=","t2",".","sourceairport","group","by","t1",".","airportcode","order","by","count","(","*",")","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,13,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Donne","le","code","de","l'a\u00e9roport","avec","le","moins","de","vols","."],"question":"Donne le code de l'a\u00e9roport avec le moins de vols."},{"db_id":"employee_hire_evaluation","query":"SELECT count(*) ,  city FROM employee GROUP BY city","query_toks":["SELECT","count","(","*",")",",","city","FROM","employee","GROUP","BY","city"],"query_toks_no_value":["select","count","(","*",")",",","city","from","employee","group","by","city"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Compte","le","nombre","d'employ\u00e9s","pour","chaque","ville","."],"question":"Compte le nombre d'employ\u00e9s pour chaque ville."},{"db_id":"tvshow","query":"SELECT Title FROM Cartoon ORDER BY title","query_toks":["SELECT","Title","FROM","Cartoon","ORDER","BY","title"],"query_toks_no_value":["select","title","from","cartoon","order","by","title"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["\u00c9num\u00e8re","le","titre","de","tous","les","dessins","anim\u00e9s","par","ordre","alphab\u00e9tique","."],"question":"\u00c9num\u00e8re le titre de tous les dessins anim\u00e9s par ordre alphab\u00e9tique."},{"db_id":"student_transcripts_tracking","query":"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.semester_name",",","T1.semester_id","FROM","Semesters","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.semester_id","=","T2.semester_id","GROUP","BY","T1.semester_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","semester_name",",","t1",".","semester_id","from","semesters","as","t1","join","student_enrolment","as","t2","on","t1",".","semester_id","=","t2",".","semester_id","group","by","t1",".","semester_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,28,false],null],[0,46,false],null]],"table_units":[["table_unit",5],["table_unit",7]]},"groupBy":[[0,28,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,29,false],null]],[0,[0,[0,28,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","semestre","auquel","la","plupart","des","\u00e9tudiants","se","sont","inscrits","?","Affichez","le","nom","et","l'identifiant","."],"question":"Quel est le semestre auquel la plupart des \u00e9tudiants se sont inscrits? Affichez le nom et l'identifiant."},{"db_id":"concert_singer","query":"SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)","query_toks":["SELECT","song_name","FROM","singer","WHERE","age",">","(","SELECT","avg","(","age",")","FROM","singer",")"],"query_toks_no_value":["select","song_name","from","singer","where","age",">","(","select","avg","(","age",")","from","singer",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,13,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quels","sont","tous","les","noms","de","chansons","de","chanteurs","plus","\u00e2g\u00e9s","que","la","moyenne","?"],"question":"Quels sont tous les noms de chansons de chanteurs plus \u00e2g\u00e9s que la moyenne?"},{"db_id":"student_transcripts_tracking","query":"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","query_toks":["SELECT","first_name",",","middle_name",",","last_name","FROM","Students","ORDER","BY","date_left","ASC","LIMIT","1"],"query_toks_no_value":["select","first_name",",","middle_name",",","last_name","from","students","order","by","date_left","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,42,false],null]]],"select":[false,[[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","pr\u00e9nom",",","le","deuxi\u00e8me","pr\u00e9nom","et","le","nom","de","famille","du","premier","dipl\u00f4m\u00e9","de","l'\u00e9cole","?"],"question":"Quel est le pr\u00e9nom, le deuxi\u00e8me pr\u00e9nom et le nom de famille du premier dipl\u00f4m\u00e9 de l'\u00e9cole?"},{"db_id":"car_1","query":"SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';","query_toks":["SELECT","DISTINCT","T1.Maker","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","JOIN","CAR_NAMES","AS","T3","ON","T2.model","=","T3.model","JOIN","CARS_DATA","AS","T4","ON","T3.MakeId","=","T4.id","WHERE","T4.year","=","'1970","'",";"],"query_toks_no_value":["select","distinct","t1",".","maker","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","join","car_names","as","t3","on","t2",".","model","=","t3",".","model","join","cars_data","as","t4","on","t3",".","makeid","=","t4",".","id","where","t4",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],"\"1970\"",null]]},"question_toks":["Trouvez","le","nom","des","fabricants","qui","ont","fabriqu\u00e9","des","automobiles","en","1970","?"],"question":"Trouvez le nom des fabricants qui ont fabriqu\u00e9 des automobiles en 1970?"},{"db_id":"wta_1","query":"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","query_toks":["SELECT","T1.country_code",",","T1.first_name","FROM","players","AS","T1","JOIN","matches","AS","T2","ON","T1.player_id","=","T2.winner_id","WHERE","T2.tourney_name","=","'WTA","Championships","'","INTERSECT","SELECT","T1.country_code",",","T1.first_name","FROM","players","AS","T1","JOIN","matches","AS","T2","ON","T1.player_id","=","T2.winner_id","WHERE","T2.tourney_name","=","'Australian","Open","'"],"query_toks_no_value":["select","t1",".","country_code",",","t1",".","first_name","from","players","as","t1","join","matches","as","t2","on","t1",".","player_id","=","t2",".","winner_id","where","t2",".","tourney_name","=","value","intersect","select","t1",".","country_code",",","t1",".","first_name","from","players","as","t1","join","matches","as","t2","on","t1",".","player_id","=","t2",".","winner_id","where","t2",".","tourney_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,32,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,32,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,27,false],null],"\"Australian Open\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,27,false],null],"\"WTA Championships\"",null]]},"question_toks":["Quels","sont","les","pr\u00e9noms","et","les","codes","de","pays","pour","les","joueurs","qui","ont","remport\u00e9","les","championnats","WTA","et","l'Open","d'Australie","?"],"question":"Quels sont les pr\u00e9noms et les codes de pays pour les joueurs qui ont remport\u00e9 les championnats WTA et l'Open d'Australie?"},{"db_id":"tvshow","query":"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","query_toks":["SELECT","LANGUAGE",",","count","(","*",")","FROM","TV_Channel","GROUP","BY","LANGUAGE","ORDER","BY","count","(","*",")","ASC","LIMIT","1",";"],"query_toks_no_value":["select","language",",","count","(","*",")","from","tv_channel","group","by","language","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Listez","la","langue","utilis\u00e9e","le","moins","dans","les","cha\u00eenes","de","t\u00e9l\u00e9vision",".","Listez","la","langue","et","le","num\u00e9ro","de","cha\u00eene","de","t\u00e9l\u00e9vision","."],"question":"Listez la langue utilis\u00e9e le moins dans les cha\u00eenes de t\u00e9l\u00e9vision. Listez la langue et le num\u00e9ro de cha\u00eene de t\u00e9l\u00e9vision."},{"db_id":"flight_2","query":"SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"","query_toks":["SELECT","AirportName","FROM","AIRPORTS","WHERE","City","=","``","Aberdeen","''"],"query_toks_no_value":["select","airportname","from","airports","where","city","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Quels","sont","les","noms","des","a\u00e9roports","de","la","ville","d'Aberdeen","?"],"question":"Quels sont les noms des a\u00e9roports de la ville d'Aberdeen?"},{"db_id":"network_1","query":"SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Retourner","le","nom","de","l'\u00e9l\u00e8ve","de","secondaire","qui","a","le","plus","d'amis","."],"question":"Retourner le nom de l'\u00e9l\u00e8ve de secondaire qui a le plus d'amis."},{"db_id":"dog_kennels","query":"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.owner_id",",","T1.last_name","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id","JOIN","Treatments","AS","T3","ON","T2.dog_id","=","T3.dog_id","GROUP","BY","T1.owner_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","owner_id",",","t1",".","last_name","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","join","treatments","as","t3","on","t2",".","dog_id","=","t3",".","dog_id","group","by","t1",".","owner_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Dites-moi","l'ID","du","propri\u00e9taire","et","le","nom","de","famille","du","propri\u00e9taire","qui","a","d\u00e9pens\u00e9","le","plus","pour","les","traitements","de","ses","chiens","."],"question":"Dites-moi l'ID du propri\u00e9taire et le nom de famille du propri\u00e9taire qui a d\u00e9pens\u00e9 le plus pour les traitements de ses chiens."},{"db_id":"dog_kennels","query":"SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'","query_toks":["SELECT","first_name",",","last_name",",","email_address","FROM","Owners","WHERE","state","LIKE","'","%","North","%","'"],"query_toks_no_value":["select","first_name",",","last_name",",","email_address","from","owners","where","state","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]],[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,9,[0,[0,15,false],null],"\"%North%\"",null]]},"question_toks":["Renvoie","le","pr\u00e9nom",",","le","nom","et","l'adresse","e-mail","des","propri\u00e9taires","vivant","dans","un","\u00e9tat","dont","le","nom","contient","la","sous-cha\u00eene","\u00ab","Nord","\u00bb","."],"question":"Renvoie le pr\u00e9nom, le nom et l'adresse e-mail des propri\u00e9taires vivant dans un \u00e9tat dont le nom contient la sous-cha\u00eene \u00abNord\u00bb."},{"db_id":"tvshow","query":"SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'","query_toks":["SELECT","id","FROM","TV_Channel","EXCEPT","SELECT","channel","FROM","cartoon","WHERE","directed_by","=","'Ben","Jones","'"],"query_toks_no_value":["select","id","from","tv_channel","except","select","channel","from","cartoon","where","directed_by","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["trouver","l'identifiant","des","cha\u00eenes","de","t\u00e9l\u00e9vision","qui","ne","jouent","pas","de","bande","dessin\u00e9e","r\u00e9alis\u00e9e","par","Ben","Jones","."],"question":"trouver l'identifiant des cha\u00eenes de t\u00e9l\u00e9vision qui ne jouent pas de bande dessin\u00e9e r\u00e9alis\u00e9e par Ben Jones."},{"db_id":"wta_1","query":"SELECT count(*) FROM players","query_toks":["SELECT","count","(","*",")","FROM","players"],"query_toks_no_value":["select","count","(","*",")","from","players"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","joueurs","a-t-il","?"],"question":"Combien de joueurs a-t-il?"},{"db_id":"singer","query":"SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000","query_toks":["SELECT","DISTINCT","T1.Name","FROM","singer","AS","T1","JOIN","song","AS","T2","ON","T1.Singer_ID","=","T2.Singer_ID","WHERE","T2.Sales",">","300000"],"query_toks_no_value":["select","distinct","t1",".","name","from","singer","as","t1","join","song","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","where","t2",".","sales",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],300000.0,null]]},"question_toks":["Montrez","les","noms","distincts","de","chanteurs","dont","les","chansons","ont","des","ventes","en","haut","de","300000","."],"question":"Montrez les noms distincts de chanteurs dont les chansons ont des ventes en haut de 300000."},{"db_id":"dog_kennels","query":"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id","query_toks":["SELECT","professional_id",",","role_code",",","email_address","FROM","Professionals","EXCEPT","SELECT","T1.professional_id",",","T1.role_code",",","T1.email_address","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id"],"query_toks_no_value":["select","professional_id",",","role_code",",","email_address","from","professionals","except","select","t1",".","professional_id",",","t1",".","role_code",",","t1",".","email_address","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,34,false],null]],[0,[0,[0,41,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,34,false],null]],[0,[0,[0,41,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","professionnel","n","'","a","op\u00e9r\u00e9","aucun","traitement","sur","les","chiens","?","Indiquez","l'identifiant",",","le","r\u00f4le","et","l'adresse","e-mail","du","professionnel","."],"question":"Quel professionnel n'a op\u00e9r\u00e9 aucun traitement sur les chiens? Indiquez l'identifiant, le r\u00f4le et l'adresse e-mail du professionnel."},{"db_id":"flight_2","query":"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"","query_toks":["SELECT","FlightNo","FROM","FLIGHTS","WHERE","DestAirport","=","``","APG","''"],"query_toks_no_value":["select","flightno","from","flights","where","destairport","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"APG\"",null]]},"question_toks":["Donnez","les","num\u00e9ros","de","vol","des","vols","atterrissant","\u00e0","APG","."],"question":"Donnez les num\u00e9ros de vol des vols atterrissant \u00e0 APG."},{"db_id":"world_1","query":"SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"","query_toks":["SELECT","Code","FROM","country","WHERE","GovernmentForm","!","=","``","Republic","''","EXCEPT","SELECT","CountryCode","FROM","countrylanguage","WHERE","LANGUAGE","=","``","English","''"],"query_toks_no_value":["select","code","from","country","where","governmentform","!","=","value","except","select","countrycode","from","countrylanguage","where","language","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,7,[0,[0,19,false],null],"\"Republic\"",null]]},"question_toks":["Quels","sont","les","codes","des","pays","qui","ne","parlent","pas","anglais","et","dont","les","formes","de","gouvernement","ne","sont","pas","R\u00e9publique","?"],"question":"Quels sont les codes des pays qui ne parlent pas anglais et dont les formes de gouvernement ne sont pas R\u00e9publique?"},{"db_id":"singer","query":"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","query_toks":["SELECT","Citizenship",",","max","(","Net_Worth_Millions",")","FROM","singer","GROUP","BY","Citizenship"],"query_toks_no_value":["select","citizenship",",","max","(","net_worth_millions",")","from","singer","group","by","citizenship"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[1,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","diff\u00e9rentes","nationalit\u00e9s","et","la","valeur","nette","maximale","des","chanteurs","de","chaque","nationalit\u00e9","."],"question":"Montre diff\u00e9rentes nationalit\u00e9s et la valeur nette maximale des chanteurs de chaque nationalit\u00e9."},{"db_id":"world_1","query":"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode","query_toks":["SELECT","count","(","*",")",",","max","(","Percentage",")","FROM","countrylanguage","WHERE","LANGUAGE","=","``","Spanish","''","GROUP","BY","CountryCode"],"query_toks_no_value":["select","count","(","*",")",",","max","(","percentage",")","from","countrylanguage","where","language","=","value","group","by","countrycode"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[1,[0,[0,26,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Spanish\"",null]]},"question_toks":["Quel","est","le","total","de","pays","o\u00f9","l'espagnol","est","parl\u00e9","par","le","vaste","pourcentage","de","personnes","?"],"question":"Quel est le total de pays o\u00f9 l'espagnol est parl\u00e9 par le vaste pourcentage de personnes?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","WHERE","DestAirport","=","``","ATO","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","where","destairport","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"ATO\"",null]]},"question_toks":["Compte","le","nombre","de","vols","en","ATO","."],"question":"Compte le nombre de vols en ATO."},{"db_id":"world_1","query":"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"","query_toks":["SELECT","DISTINCT","T1.Region","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","OR","T2.Language","=","``","Dutch","''"],"query_toks_no_value":["select","distinct","t1",".","region","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","or","t2",".","language","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null],"or",[false,2,[0,[0,24,false],null],"\"Dutch\"",null]]},"question_toks":["Quelles","r\u00e9gions","parlent","le","n\u00e9erlandais","ou","l'anglais","?"],"question":"Quelles r\u00e9gions parlent le n\u00e9erlandais ou l'anglais?"},{"db_id":"course_teach","query":"SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2","query_toks":["SELECT","T2.Name","FROM","course_arrange","AS","T1","JOIN","teacher","AS","T2","ON","T1.Teacher_ID","=","T2.Teacher_ID","GROUP","BY","T2.Name","HAVING","COUNT","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","name","from","course_arrange","as","t1","join","teacher","as","t2","on","t1",".","teacher_id","=","t2",".","teacher_id","group","by","t2",".","name","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,4,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,5,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","enseignants","qui","enseignent","au","moins","deux","cours","?"],"question":"Quels sont les noms des enseignants qui enseignent au moins deux cours?"},{"db_id":"concert_singer","query":"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","query_toks":["SELECT","T2.name",",","count","(","*",")","FROM","singer_in_concert","AS","T1","JOIN","singer","AS","T2","ON","T1.singer_id","=","T2.singer_id","GROUP","BY","T2.singer_id"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","singer_in_concert","as","t1","join","singer","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","group","by","t2",".","singer_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,21,false],null],[0,8,false],null]],"table_units":[["table_unit",3],["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","chanteurs","et","le","nombre","de","concerts","pour","chaque","personne","?"],"question":"Quels sont les noms des chanteurs et le nombre de concerts pour chaque personne?"},{"db_id":"car_1","query":"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;","query_toks":["SELECT","max","(","Accelerate",")",",","Cylinders","FROM","CARS_DATA","GROUP","BY","Cylinders",";"],"query_toks_no_value":["select","max","(","accelerate",")",",","cylinders","from","cars_data","group","by","cylinders"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,22,false],null]],[0,[0,[0,18,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","l'acc\u00e9l\u00e9ration","maximale","pour","tous","les","diff\u00e9rents","cylindres","?"],"question":"Quelle est l'acc\u00e9l\u00e9ration maximale pour tous les diff\u00e9rents cylindres?"},{"db_id":"dog_kennels","query":"SELECT max(age) FROM Dogs","query_toks":["SELECT","max","(","age",")","FROM","Dogs"],"query_toks_no_value":["select","max","(","age",")","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Dite-moi","l'\u00e2ge","du","chien","le","plus","\u00e2g\u00e9","."],"question":"Dite-moi l'\u00e2ge du chien le plus \u00e2g\u00e9."},{"db_id":"world_1","query":"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","query_toks":["SELECT","Name",",","SurfaceArea",",","IndepYear","FROM","country","ORDER","BY","Population","LIMIT","1"],"query_toks_no_value":["select","name",",","surfacearea",",","indepyear","from","country","order","by","population","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,14,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,12,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Donne","le","nom",",","l'ann\u00e9e","d'ind\u00e9pendance","et","la","superficie","du","pays","qui","a","la","plus","faible","population","."],"question":"Donne le nom, l'ann\u00e9e d'ind\u00e9pendance et la superficie du pays qui a la plus faible population."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id ,  version_number ,  template_type_code FROM Templates","query_toks":["SELECT","template_id",",","version_number",",","template_type_code","FROM","Templates"],"query_toks_no_value":["select","template_id",",","version_number",",","template_type_code","from","templates"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","identifiants",",","les","num\u00e9ros","de","version","et","les","codes","de","type","pour","chaque","mod\u00e8le","?"],"question":"Quels sont les identifiants, les num\u00e9ros de version et les codes de type pour chaque mod\u00e8le?"},{"db_id":"dog_kennels","query":"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code","query_toks":["SELECT","T1.cost_of_treatment",",","T2.treatment_type_description","FROM","Treatments","AS","T1","JOIN","treatment_types","AS","T2","ON","T1.treatment_type_code","=","T2.treatment_type_code"],"query_toks_no_value":["select","t1",".","cost_of_treatment",",","t2",".","treatment_type_description","from","treatments","as","t1","join","treatment_types","as","t2","on","t1",".","treatment_type_code","=","t2",".","treatment_type_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,47,false],null],[0,8,false],null]],"table_units":[["table_unit",7],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,49,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["\u00c9num\u00e9rez","le","co\u00fbt","de","chaque","traitement","et","la","description","du","type","de","traitement","correspondant","."],"question":"\u00c9num\u00e9rez le co\u00fbt de chaque traitement et la description du type de traitement correspondant."},{"db_id":"world_1","query":"SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"","query_toks":["SELECT","DISTINCT","T3.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","JOIN","city","AS","T3","ON","T1.Code","=","T3.CountryCode","WHERE","T2.IsOfficial","=","'T","'","AND","T2.Language","=","'Chinese","'","AND","T1.Continent","=","``","Asia","''"],"query_toks_no_value":["select","distinct","t3",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","join","city","as","t3","on","t1",".","code","=","t3",".","countrycode","where","t2",".","isofficial","=","value","and","t2",".","language","=","value","and","t1",".","continent","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"T\"",null],"and",[false,2,[0,[0,24,false],null],"\"Chinese\"",null],"and",[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Renvoie","les","diff\u00e9rents","noms","de","villes","situ\u00e9es","en","Asie","et","dont","le","chinois","est","la","langue","officielle","."],"question":"Renvoie les diff\u00e9rents noms de villes situ\u00e9es en Asie et dont le chinois est la langue officielle."},{"db_id":"network_1","query":"SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10","query_toks":["SELECT","count","(","*",")","FROM","Highschooler","WHERE","grade","=","9","OR","grade","=","10"],"query_toks_no_value":["select","count","(","*",")","from","highschooler","where","grade","=","value","or","grade","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],9.0,null],"or",[false,2,[0,[0,3,false],null],10.0,null]]},"question_toks":["Combien","a-t-il","d'\u00e9tudiants","secondaire","sont","niveau","9","ou","10","?"],"question":"Combien a-t-il d'\u00e9tudiants secondaire sont niveau 9 ou 10?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs","query_toks":["SELECT","count","(","DISTINCT","degree_summary_name",")","FROM","Degree_Programs"],"query_toks_no_value":["select","count","(","distinct","degree_summary_name",")","from","degree_programs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,20,true],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","dipl\u00f4mes","diff\u00e9rents","sont","propos\u00e9s","?"],"question":"Combien de dipl\u00f4mes diff\u00e9rents sont propos\u00e9s?"},{"db_id":"world_1","query":"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1","query_toks":["SELECT","T2.Language","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.Name","=","``","Aruba","''","ORDER","BY","Percentage","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","language","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","name","=","value","order","by","percentage","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,26,false],null]]],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Aruba\"",null]]},"question_toks":["Quelle","langue","est","principalement","parl\u00e9e","\u00e0","Aruba","?"],"question":"Quelle langue est principalement parl\u00e9e \u00e0 Aruba?"},{"db_id":"world_1","query":"SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")","query_toks":["SELECT","Name","FROM","country","WHERE","Continent","=","``","Asia","''","AND","population",">","(","SELECT","max","(","population",")","FROM","country","WHERE","Continent","=","``","Africa","''",")"],"query_toks_no_value":["select","name","from","country","where","continent","=","value","and","population",">","(","select","max","(","population",")","from","country","where","continent","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null],"and",[false,3,[0,[0,14,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Africa\"",null]]},null]]},"question_toks":["Quels","pays","d'Asie","ont","une","population","plus","grande","que","n'importe","quel","pays","d'Afrique","?"],"question":"Quels pays d'Asie ont une population plus grande que n'importe quel pays d'Afrique?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id ,  version_number ,  template_type_code FROM Templates","query_toks":["SELECT","template_id",",","version_number",",","template_type_code","FROM","Templates"],"query_toks_no_value":["select","template_id",",","version_number",",","template_type_code","from","templates"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Afficher","les","identifiants","de","mod\u00e8le",",","les","num\u00e9ros","de","version","et","les","codes","de","type","de","mod\u00e8le","pour","tous","les","mod\u00e8les","."],"question":"Afficher les identifiants de mod\u00e8le, les num\u00e9ros de version et les codes de type de mod\u00e8le pour tous les mod\u00e8les."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.document_id",",","T2.document_name","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_id","=","T2.document_id","GROUP","BY","T1.document_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","document_id",",","t2",".","document_name","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","group","by","t1",".","document_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","l'identifiant","et","le","nom","du","document","avec","le","plus","grand","nombre","de","paragraphes","?"],"question":"Quels sont l'identifiant et le nom du document avec le plus grand nombre de paragraphes?"},{"db_id":"world_1","query":"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"","query_toks":["SELECT","count","(","DISTINCT","T2.Language",")","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","IndepYear","<","1930","AND","T2.IsOfficial","=","``","T","''"],"query_toks_no_value":["select","count","(","distinct","t2",".","language",")","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","indepyear","<","value","and","t2",".","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,24,true],null]]]],"union":null,"where":[[false,4,[0,[0,13,false],null],1930.0,null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Quel","est","le","nombre","total","de","langues","officielles","uniques","parl\u00e9es","dans","les","pays","qui","ont","\u00e9t\u00e9","cr\u00e9\u00e9s","avant","1930","?"],"question":"Quel est le nombre total de langues officielles uniques parl\u00e9es dans les pays qui ont \u00e9t\u00e9 cr\u00e9\u00e9s avant 1930?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents","query_toks":["SELECT","template_id","FROM","Templates","EXCEPT","SELECT","template_id","FROM","Documents"],"query_toks_no_value":["select","template_id","from","templates","except","select","template_id","from","documents"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","est","les","identifiants","des","mod\u00e8les","qui","ne","sont","utilis\u00e9s","dans","aucun","document","?"],"question":"Quels est les identifiants des mod\u00e8les qui ne sont utilis\u00e9s dans aucun document?"},{"db_id":"network_1","query":"SELECT grade FROM Highschooler","query_toks":["SELECT","grade","FROM","Highschooler"],"query_toks_no_value":["select","grade","from","highschooler"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nombre","total","de","langues","officielles","uniques","parl\u00e9es","dans","les","pays","qui","ont","\u00e9t\u00e9","cr\u00e9\u00e9s","avant","1930","?"],"question":"Quel est le nombre total de langues officielles uniques parl\u00e9es dans les pays qui ont \u00e9t\u00e9 cr\u00e9\u00e9s avant 1930?"},{"db_id":"orchestra","query":"SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID","query_toks":["SELECT","T1.Name",",","T2.Orchestra","FROM","conductor","AS","T1","JOIN","orchestra","AS","T2","ON","T1.Conductor_ID","=","T2.Conductor_ID"],"query_toks_no_value":["select","t1",".","name",",","t2",".","orchestra","from","conductor","as","t1","join","orchestra","as","t2","on","t1",".","conductor_id","=","t2",".","conductor_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","chefs","d'orchestre","ainsi","que","les","orchestres","correspondants","qu'ils","ont","dirig\u00e9s","?"],"question":"Quels sont les noms des chefs d'orchestre ainsi que les orchestres correspondants qu'ils ont dirig\u00e9s?"},{"db_id":"battle_death","query":"SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'","query_toks":["SELECT","T1.name",",","T1.date","FROM","battle","AS","T1","JOIN","ship","AS","T2","ON","T1.id","=","T2.lost_in_battle","WHERE","T2.name","=","'Lettice","'","INTERSECT","SELECT","T1.name",",","T1.date","FROM","battle","AS","T1","JOIN","ship","AS","T2","ON","T1.id","=","T2.lost_in_battle","WHERE","T2.name","=","'HMS","Atalanta","'"],"query_toks_no_value":["select","t1",".","name",",","t1",".","date","from","battle","as","t1","join","ship","as","t2","on","t1",".","id","=","t2",".","lost_in_battle","where","t2",".","name","=","value","intersect","select","t1",".","name",",","t1",".","date","from","battle","as","t1","join","ship","as","t2","on","t1",".","id","=","t2",".","lost_in_battle","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"HMS Atalanta\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Lettice\"",null]]},"question_toks":["Indiquez","le","nom","et","la","date","de","la","bataille","qui","a","perdu","le","navire","nomm\u00e9","\u00ab","Lettice","\u00bb","et","le","navire","nomm\u00e9","\u00ab","HMS","Atalanta","\u00bb"],"question":"Indiquez le nom et la date de la bataille qui a perdu le navire nomm\u00e9 \u00abLettice\u00bb et le navire nomm\u00e9 \u00abHMS Atalanta\u00bb"},{"db_id":"dog_kennels","query":"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","query_toks":["SELECT","T1.first_name",",","T1.last_name",",","T2.size_code","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","last_name",",","t2",".","size_code","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]],[0,[0,[0,24,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","le","pr\u00e9nom",",","le","nom","et","la","taille","de","leur","chien","?"],"question":"Quels sont le pr\u00e9nom, le nom et la taille de leur chien?"},{"db_id":"student_transcripts_tracking","query":"SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )","query_toks":["SELECT","semester_name","FROM","Semesters","WHERE","semester_id","NOT","IN","(","SELECT","semester_id","FROM","Student_Enrolment",")"],"query_toks_no_value":["select","semester_name","from","semesters","where","semester_id","not","in","(","select","semester_id","from","student_enrolment",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,29,false],null]]]],"union":null,"where":[[true,8,[0,[0,28,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,46,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quels","semestres","n'ont","pas","d'\u00e9tudiant","inscrit","?","Indiquez","le","nom","du","semestre","."],"question":"Quels semestres n'ont pas d'\u00e9tudiant inscrit? Indiquez le nom du semestre."},{"db_id":"dog_kennels","query":"SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1","query_toks":["SELECT","cost_of_treatment","FROM","Treatments","ORDER","BY","date_of_treatment","DESC","LIMIT","1"],"query_toks_no_value":["select","cost_of_treatment","from","treatments","order","by","date_of_treatment","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,48,false],null]]],"select":[false,[[0,[0,[0,49,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","co\u00fbte","le","traitement","le","plus","r\u00e9cent","?"],"question":"Combien co\u00fbte le traitement le plus r\u00e9cent?"},{"db_id":"employee_hire_evaluation","query":"SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC","query_toks":["SELECT","name",",","LOCATION",",","district","FROM","shop","ORDER","BY","number_products","DESC"],"query_toks_no_value":["select","name",",","location",",","district","from","shop","order","by","number_products","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoie","le","nom",",","l'emplacement","et","le","quartier","de","tous","les","magasins","dans","l'ordre","d\u00e9croissant","du","nombre","de","produits","."],"question":"Renvoie le nom, l'emplacement et le quartier de tous les magasins dans l'ordre d\u00e9croissant du nombre de produits."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1","query_toks":["SELECT","template_id","FROM","Documents","GROUP","BY","template_id","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","template_id","from","documents","group","by","template_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,10,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","identifiants","de","mod\u00e8le","de","n'importe","quels","mod\u00e8les","utilis\u00e9s","dans","plus","qu'un","document","?"],"question":"Quels sont les identifiants de mod\u00e8le de n'importe quels mod\u00e8les utilis\u00e9s dans plus qu'un document?"},{"db_id":"world_1","query":"SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')","query_toks":["SELECT","DISTINCT","T2.Name","FROM","country","AS","T1","JOIN","city","AS","T2","ON","T2.CountryCode","=","T1.Code","WHERE","T1.Continent","=","'Europe","'","AND","T1.Name","NOT","IN","(","SELECT","T3.Name","FROM","country","AS","T3","JOIN","countrylanguage","AS","T4","ON","T3.Code","=","T4.CountryCode","WHERE","T4.IsOfficial","=","'T","'","AND","T4.Language","=","'English","'",")"],"query_toks_no_value":["select","distinct","t2",".","name","from","country","as","t1","join","city","as","t2","on","t2",".","countrycode","=","t1",".","code","where","t1",".","continent","=","value","and","t1",".","name","not","in","(","select","t3",".","name","from","country","as","t3","join","countrylanguage","as","t4","on","t3",".","code","=","t4",".","countrycode","where","t4",".","isofficial","=","value","and","t4",".","language","=","value",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,8,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Europe\"",null],"and",[true,8,[0,[0,9,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"T\"",null],"and",[false,2,[0,[0,24,false],null],"\"English\"",null]]},null]]},"question_toks":["Quels","sont","les","noms","des","villes","d'Europe","o\u00f9","l'anglais","n'est","pas","la","langue","officielle","?"],"question":"Quels sont les noms des villes d'Europe o\u00f9 l'anglais n'est pas la langue officielle?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(*) FROM Transcripts","query_toks":["SELECT","count","(","*",")","FROM","Transcripts"],"query_toks_no_value":["select","count","(","*",")","from","transcripts"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",9]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","transcriptions","sont","publi\u00e9es","?"],"question":"Combien de transcriptions sont publi\u00e9es?"},{"db_id":"world_1","query":"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"","query_toks":["SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","INTERSECT","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","French","''"],"query_toks_no_value":["select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","intersect","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"French\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},"question_toks":["Donnez","les","noms","des","nations","qui","parlent","anglais","et","fran\u00e7ais","."],"question":"Donnez les noms des nations qui parlent anglais et fran\u00e7ais."},{"db_id":"pets_1","query":"SELECT weight FROM pets ORDER BY pet_age LIMIT 1","query_toks":["SELECT","weight","FROM","pets","ORDER","BY","pet_age","LIMIT","1"],"query_toks_no_value":["select","weight","from","pets","order","by","pet_age","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","poids","du","plus","jeune","chien","."],"question":"Trouve le poids du plus jeune chien."},{"db_id":"world_1","query":"SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")","query_toks":["SELECT","Name","FROM","country","WHERE","Continent","=","``","Asia","''","AND","population",">","(","SELECT","min","(","population",")","FROM","country","WHERE","Continent","=","``","Africa","''",")"],"query_toks_no_value":["select","name","from","country","where","continent","=","value","and","population",">","(","select","min","(","population",")","from","country","where","continent","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null],"and",[false,3,[0,[0,14,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Africa\"",null]]},null]]},"question_toks":["Quels","sont","les","pays","asiatiques","qui","ont","une","population","plus","grande","que","celle","de","n'importe","quel","pays","d'Afrique","?"],"question":"Quels sont les pays asiatiques qui ont une population plus grande que celle de n'importe quel pays d'Afrique?"},{"db_id":"tvshow","query":"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";","query_toks":["SELECT","count","(","*",")","FROM","TV_Channel","WHERE","LANGUAGE","=","``","English","''",";"],"query_toks_no_value":["select","count","(","*",")","from","tv_channel","where","language","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"English\"",null]]},"question_toks":["Combien","de","cha\u00eenes","de","t\u00e9l\u00e9vision","utilisent","la","langue","anglaise","?"],"question":"Combien de cha\u00eenes de t\u00e9l\u00e9vision utilisent la langue anglaise?"},{"db_id":"orchestra","query":"SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1","query_toks":["SELECT","Name","FROM","conductor","ORDER","BY","Year_of_Work","DESC","LIMIT","1"],"query_toks_no_value":["select","name","from","conductor","order","by","year_of_work","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nom","du","chef","d'orchestre","qui","a","travaill\u00e9","pour","le","plus","grand","nombre","d'ann\u00e9es","?"],"question":"Quel est le nom du chef d'orchestre qui a travaill\u00e9 pour le plus grand nombre d'ann\u00e9es?"},{"db_id":"car_1","query":"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","query_toks":["SELECT","T1.CountryName",",","T1.CountryId","FROM","COUNTRIES","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.CountryId","=","T2.Country","GROUP","BY","T1.CountryId","HAVING","count","(","*",")",">","=","1",";"],"query_toks_no_value":["select","t1",".","countryname",",","t1",".","countryid","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country","group","by","t1",".","countryid","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,3,false]],"having":[[false,5,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","et","identifiants","de","tous","les","pays","comptant","au","moins","un","constructeur","automobile","?"],"question":"Quels sont les noms et identifiants de tous les pays comptant au moins un constructeur automobile?"},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRPORTS","query_toks":["SELECT","count","(","*",")","FROM","AIRPORTS"],"query_toks_no_value":["select","count","(","*",")","from","airports"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","d'a\u00e9roports","nous","avons","?"],"question":"Combien d'a\u00e9roports nous avons? "},{"db_id":"student_transcripts_tracking","query":"SELECT section_name ,  section_description FROM Sections","query_toks":["SELECT","section_name",",","section_description","FROM","Sections"],"query_toks_no_value":["select","section_name",",","section_description","from","sections"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]],[0,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","et","descriptions","de","toutes","les","sections","?"],"question":"Quels sont les noms et descriptions de toutes les sections?"},{"db_id":"car_1","query":"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;","query_toks":["SELECT","T1.FullName",",","T1.Id","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","GROUP","BY","T1.Id","HAVING","count","(","*",")",">","3",";"],"query_toks_no_value":["select","t1",".","fullname",",","t1",".","id","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","group","by","t1",".","id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[[false,3,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","fabricants","ont","con\u00e7u","plus","que","3","mod\u00e8les","de","voitures","?","Lister","le","nom","complet","et","l'identifiant","."],"question":"Quels fabricants ont con\u00e7u plus que 3 mod\u00e8les de voitures? Lister le nom complet et l'identifiant."},{"db_id":"car_1","query":"SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;","query_toks":["SELECT","Count","(","*",")",",","T2.FullName",",","T2.id","FROM","MODEL_LIST","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.Maker","=","T2.Id","GROUP","BY","T2.id",";"],"query_toks_no_value":["select","count","(","*",")",",","t2",".","fullname",",","t2",".","id","from","model_list","as","t1","join","car_makers","as","t2","on","t1",".","maker","=","t2",".","id","group","by","t2",".","id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,8,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nombre","de","mod\u00e8les","d'automobile","fabriqu\u00e9","par","chaque","fabricant","et","quel","est","l'identifiant","et","le","nom","complet","de","chaque","fabricant","?"],"question":"Quel est le nombre de mod\u00e8les d'automobile fabriqu\u00e9 par chaque fabricant et quel est l'identifiant et le nom complet de chaque fabricant?"},{"db_id":"dog_kennels","query":"SELECT avg(age) FROM Dogs","query_toks":["SELECT","avg","(","age",")","FROM","Dogs"],"query_toks_no_value":["select","avg","(","age",")","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","l'\u00e2ge","moyen","de","tous","les","chiens","?"],"question":"Quel est l'\u00e2ge moyen de tous les chiens?"},{"db_id":"car_1","query":"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;","query_toks":["SELECT","DISTINCT","T1.model","FROM","MODEL_LIST","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.model","=","T2.model","JOIN","CARS_DATA","AS","T3","ON","T2.MakeId","=","T3.id","WHERE","T3.year",">","1980",";"],"query_toks_no_value":["select","distinct","t1",".","model","from","model_list","as","t1","join","car_names","as","t2","on","t1",".","model","=","t2",".","model","join","cars_data","as","t3","on","t2",".","makeid","=","t3",".","id","where","t3",".","year",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,14,false],null]],"table_units":[["table_unit",3],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,3,[0,[0,23,false],null],1980.0,null]]},"question_toks":["Quels","mod\u00e8les","d'automobile","distincts","est","produit","apr\u00e8s","1980","?"],"question":"Quels mod\u00e8les d'automobile distincts est produit apr\u00e8s 1980?"},{"db_id":"world_1","query":"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")","query_toks":["SELECT","avg","(","LifeExpectancy",")","FROM","country","WHERE","Name","NOT","IN","(","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","AND","T2.IsOfficial","=","``","T","''",")"],"query_toks_no_value":["select","avg","(","lifeexpectancy",")","from","country","where","name","not","in","(","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","t2",".","isofficial","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,15,false],null]]]],"union":null,"where":[[true,8,[0,[0,9,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},null]]},"question_toks":["Donnez","l'esp\u00e9rance","de","vie","moyenne","des","pays","o\u00f9","l'anglais","n'est","pas","la","langue","officielle","."],"question":"Donnez l'esp\u00e9rance de vie moyenne des pays o\u00f9 l'anglais n'est pas la langue officielle."},{"db_id":"wta_1","query":"SELECT avg(winner_rank) FROM matches","query_toks":["SELECT","avg","(","winner_rank",")","FROM","matches"],"query_toks_no_value":["select","avg","(","winner_rank",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,35,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","rang","moyen","des","gagnants","dans","tous","les","matchs","?"],"question":"Quel est le rang moyen des gagnants dans tous les matchs?"},{"db_id":"battle_death","query":"SELECT note FROM death WHERE note LIKE '%East%'","query_toks":["SELECT","note","FROM","death","WHERE","note","LIKE","'","%","East","%","'"],"query_toks_no_value":["select","note","from","death","where","note","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,9,[0,[0,16,false],null],"\"%East%\"",null]]},"question_toks":["Quelles","est","les","notes","des","\u00e9v\u00e9nements","de","mort","qui","ont","une","sous-cha\u00eene","'Est","'","?"],"question":"Quelles est les notes des \u00e9v\u00e9nements de mort qui ont une sous-cha\u00eene 'Est'?"},{"db_id":"wta_1","query":"SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016","query_toks":["SELECT","count","(","*",")","FROM","matches","WHERE","YEAR","=","2013","OR","YEAR","=","2016"],"query_toks_no_value":["select","count","(","*",")","from","matches","where","year","=","value","or","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],2013.0,null],"or",[false,2,[0,[0,38,false],null],2016.0,null]]},"question_toks":["Combien","de","matchs","\u00e9taient","jou\u00e9s","en","2013","ou","2016","?"],"question":"Combien de matchs \u00e9taient jou\u00e9s en 2013 ou 2016?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id","query_toks":["SELECT","template_type_code","FROM","Templates","EXCEPT","SELECT","template_type_code","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id"],"query_toks_no_value":["select","template_type_code","from","templates","except","select","template_type_code","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","codes","des","types","de","mod\u00e8les","qui","ne","sont","pas","utilis\u00e9s","pour","n'importe","quel","document","?"],"question":"Quels sont les codes des types de mod\u00e8les qui ne sont pas utilis\u00e9s pour n'importe quel document?"},{"db_id":"singer","query":"SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Citizenship","FROM","singer","GROUP","BY","Citizenship","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","citizenship","from","singer","group","by","citizenship","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","plus","courante","citoyennet\u00e9","de","chanteur","?"],"question":"Quelle est la plus courante citoyennet\u00e9 de chanteur?"},{"db_id":"world_1","query":"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"","query_toks":["SELECT","count","(","DISTINCT","GovernmentForm",")","FROM","country","WHERE","Continent","=","``","Africa","''"],"query_toks_no_value":["select","count","(","distinct","governmentform",")","from","country","where","continent","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,19,true],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Africa\"",null]]},"question_toks":["Combien","de","types","de","gouvernements","sont","en","Afrique","?"],"question":"Combien de types de gouvernements sont en Afrique?"},{"db_id":"dog_kennels","query":"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","query_toks":["SELECT","DISTINCT","T1.date_arrived",",","T1.date_departed","FROM","Dogs","AS","T1","JOIN","Treatments","AS","T2","ON","T1.dog_id","=","T2.dog_id"],"query_toks_no_value":["select","distinct","t1",".","date_arrived",",","t1",".","date_departed","from","dogs","as","t1","join","treatments","as","t2","on","t1",".","dog_id","=","t2",".","dog_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,20,false],null],[0,45,false],null]],"table_units":[["table_unit",5],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,30,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Trouver","la","date","d'arriv\u00e9e","et","la","date","de","d\u00e9part","des","chiens","qui","ont","re\u00e7u","un","traitement","."],"question":"Trouver la date d'arriv\u00e9e et la date de d\u00e9part des chiens qui ont re\u00e7u un traitement."},{"db_id":"tvshow","query":"SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";","query_toks":["SELECT","count","(","*",")","FROM","Cartoon","WHERE","Written_by","=","``","Joseph","Kuhr","''",";"],"query_toks_no_value":["select","count","(","*",")","from","cartoon","where","written_by","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],"\"Joseph Kuhr\"",null]]},"question_toks":["``","Combien","de","bandes","dessin\u00e9s","ont","\u00e9t\u00e9","\u00e9crit","par","``","''","Joseph","Kuhr","''","''","?","''"],"question":"\"Combien de bandes dessin\u00e9s ont \u00e9t\u00e9 \u00e9crit par \"\"Joseph Kuhr\"\"?\""},{"db_id":"network_1","query":"SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes","query_toks":["SELECT","student_id","FROM","Friend","INTERSECT","SELECT","liked_id","FROM","Likes"],"query_toks_no_value":["select","student_id","from","friend","intersect","select","liked_id","from","likes"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Montrer","les","identifiants","des","\u00e9tudiants","de","secondaire","qui","ont","des","amis","et","qui","sont","aim\u00e9s","par","quelqu'un","d'autre","."],"question":"Montrer les identifiants des \u00e9tudiants de secondaire qui ont des amis et qui sont aim\u00e9s par quelqu'un d'autre."},{"db_id":"wta_1","query":"SELECT count(DISTINCT loser_name) FROM matches","query_toks":["SELECT","count","(","DISTINCT","loser_name",")","FROM","matches"],"query_toks_no_value":["select","count","(","distinct","loser_name",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,15,true],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","noms","de","perdants","diff\u00e9rents","a-t-il","?"],"question":"Combien de noms de perdants diff\u00e9rents a-t-il?"},{"db_id":"wta_1","query":"SELECT count(*) FROM players","query_toks":["SELECT","count","(","*",")","FROM","players"],"query_toks_no_value":["select","count","(","*",")","from","players"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Trouver","le","nombre","total","de","joueurs","."],"question":"Trouver le nombre total de joueurs."},{"db_id":"wta_1","query":"SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1","query_toks":["SELECT","winner_name","FROM","matches","WHERE","tourney_name","=","'Australian","Open","'","ORDER","BY","winner_rank_points","DESC","LIMIT","1"],"query_toks_no_value":["select","winner_name","from","matches","where","tourney_name","=","value","order","by","winner_rank_points","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,36,false],null]]],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,27,false],null],"\"Australian Open\"",null]]},"question_toks":["Quel","est","le","nom","du","gagnant","avec","le","plus","de","points","de","rang","et","qui","a","particip\u00e9","au","tournoi","Open","d'Australie","."],"question":"Quel est le nom du gagnant avec le plus de points de rang et qui a particip\u00e9 au tournoi Open d'Australie."},{"db_id":"course_teach","query":"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown","query_toks":["SELECT","Hometown",",","COUNT","(","*",")","FROM","teacher","GROUP","BY","Hometown"],"query_toks_no_value":["select","hometown",",","count","(","*",")","from","teacher","group","by","hometown"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Affiche","la","ville","natale","diff\u00e9rente","des","enseignants","et","le","nombre","d'enseignants","de","chaque","ville","natale","."],"question":"Affiche la ville natale diff\u00e9rente des enseignants et le nombre d'enseignants de chaque ville natale."},{"db_id":"dog_kennels","query":"SELECT date_arrived ,  date_departed FROM Dogs","query_toks":["SELECT","date_arrived",",","date_departed","FROM","Dogs"],"query_toks_no_value":["select","date_arrived",",","date_departed","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,30,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Indique","la","date","d'arriv\u00e9e","et","la","date","de","d\u00e9part","pour","tous","les","chiens","."],"question":"Indique la date d'arriv\u00e9e et la date de d\u00e9part pour tous les chiens."},{"db_id":"wta_1","query":"SELECT count(*) ,  hand FROM players GROUP BY hand","query_toks":["SELECT","count","(","*",")",",","hand","FROM","players","GROUP","BY","hand"],"query_toks_no_value":["select","count","(","*",")",",","hand","from","players","group","by","hand"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","joueurs","y","a-t-il","pour","chaque","type","de","main","?"],"question":"Combien de joueurs y a-t-il pour chaque type de main?"},{"db_id":"battle_death","query":"SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'","query_toks":["SELECT","name",",","RESULT","FROM","battle","WHERE","bulgarian_commander","!","=","'Boril","'"],"query_toks_no_value":["select","name",",","result","from","battle","where","bulgarian_commander","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,7,[0,[0,4,false],null],"\"Boril\"",null]]},"question_toks":["Quels","sont","le","nom","et","les","r\u00e9sultats","des","combats","lorsque","le","commandant","bulgare","n'est","pas","'Boril","'"],"question":"Quels sont le nom et les r\u00e9sultats des combats lorsque le commandant bulgare n'est pas 'Boril' "},{"db_id":"tvshow","query":"SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";","query_toks":["SELECT","count","(","*",")","FROM","Cartoon","WHERE","Written_by","=","``","Joseph","Kuhr","''",";"],"query_toks_no_value":["select","count","(","*",")","from","cartoon","where","written_by","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],"\"Joseph Kuhr\"",null]]},"question_toks":["Quel","est","le","nombre","de","cartons","\u00e9crits","par","Joseph","Kuhr","?"],"question":"Quel est le nombre de cartons \u00e9crits par Joseph Kuhr?"},{"db_id":"singer","query":"SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1","query_toks":["SELECT","T1.Name","FROM","singer","AS","T1","JOIN","song","AS","T2","ON","T1.Singer_ID","=","T2.Singer_ID","GROUP","BY","T1.Name","HAVING","COUNT","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","name","from","singer","as","t1","join","song","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","group","by","t1",".","name","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,2,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","chanteurs","qui","ont","plus","d'une","chanson","?"],"question":"Quels sont les noms des chanteurs qui ont plus d'une chanson?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"","query_toks":["SELECT","T2.template_id","FROM","Ref_template_types","AS","T1","JOIN","Templates","AS","T2","ON","T1.template_type_code","=","T2.template_type_code","WHERE","T1.template_type_description","=","``","Presentation","''"],"query_toks_no_value":["select","t2",".","template_id","from","ref_template_types","as","t1","join","templates","as","t2","on","t1",".","template_type_code","=","t2",".","template_type_code","where","t1",".","template_type_description","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,5,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Presentation\"",null]]},"question_toks":["Msgstr","``","Quels","sont","les","ID","de","mod\u00e8le","avec","la","description","du","type","de","mod\u00e8le","''","``","Pr\u00e9sentation","''","``",".","''"],"question":"Msgstr \"Quels sont les ID de mod\u00e8le avec la description du type de mod\u00e8le\" \"Pr\u00e9sentation\" \".\""},{"db_id":"wta_1","query":"SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016","query_toks":["SELECT","winner_name","FROM","matches","WHERE","YEAR","=","2013","INTERSECT","SELECT","winner_name","FROM","matches","WHERE","YEAR","=","2016"],"query_toks_no_value":["select","winner_name","from","matches","where","year","=","value","intersect","select","winner_name","from","matches","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],2016.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],2013.0,null]]},"question_toks":["Quels","sont","les","noms","des","joueurs","qui","ont","gagn\u00e9","en","2013","et","2016","?"],"question":"Quels sont les noms des joueurs qui ont gagn\u00e9 en 2013 et 2016?"},{"db_id":"flight_2","query":"SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.City","FROM","AIRPORTS","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.AirportCode","=","T2.SourceAirport","GROUP","BY","T1.City","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","city","from","airports","as","t1","join","flights","as","t2","on","t1",".","airportcode","=","t2",".","sourceairport","group","by","t1",".","city","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,12,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","ville","est","l'a\u00e9roport","source","le","plus","fr\u00e9quent","?"],"question":"Quelle ville est l'a\u00e9roport source le plus fr\u00e9quent?"},{"db_id":"network_1","query":"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","query_toks":["SELECT","T2.name",",","count","(","*",")","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","le","nom","des","\u00e9l\u00e8ves","du","secondaire","et","le","nombre","d'amis","correspondant","."],"question":"Montre le nom des \u00e9l\u00e8ves du secondaire et le nombre d'amis correspondant."},{"db_id":"tvshow","query":"SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";","query_toks":["SELECT","Air_Date","FROM","TV_series","WHERE","Episode","=","``","A","Love","of","a","Lifetime","''",";"],"query_toks_no_value":["select","air_date","from","tv_series","where","episode","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"A Love of a Lifetime\"",null]]},"question_toks":["``","Quelle","est","la","date","de","diffusion","de","la","s\u00e9rie","t\u00e9l\u00e9vis\u00e9e","avec","l'\u00e9pisode","''","``","Un","amour","d'une","vie","''","``","?","''"],"question":"\"Quelle est la date de diffusion de la s\u00e9rie t\u00e9l\u00e9vis\u00e9e avec l'\u00e9pisode\" \"Un amour d'une vie\" \"?\""},{"db_id":"poker_player","query":"SELECT count(*) FROM poker_player","query_toks":["SELECT","count","(","*",")","FROM","poker_player"],"query_toks_no_value":["select","count","(","*",")","from","poker_player"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","joueurs","de","poker","y","a-t-il","?"],"question":"Combien de joueurs de poker y a-t-il?"},{"db_id":"employee_hire_evaluation","query":"SELECT count(*) FROM employee","query_toks":["SELECT","count","(","*",")","FROM","employee"],"query_toks_no_value":["select","count","(","*",")","from","employee"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","d'employ\u00e9s","y","a-t-il","?"],"question":"Combien d'employ\u00e9s y a-t-il?"},{"db_id":"car_1","query":"SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;","query_toks":["SELECT","T2.MakeId",",","T2.Make","FROM","CARS_DATA","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Id","=","T2.MakeId","WHERE","T1.Horsepower",">","(","SELECT","min","(","Horsepower",")","FROM","CARS_DATA",")","AND","T1.Cylinders","<","=","3",";"],"query_toks_no_value":["select","t2",".","makeid",",","t2",".","make","from","cars_data","as","t1","join","car_names","as","t2","on","t1",".","id","=","t2",".","makeid","where","t1",".","horsepower",">","(","select","min","(","horsepower",")","from","cars_data",")","and","t1",".","cylinders","<","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,13,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,3,[0,[0,20,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,20,false],null]]]],"union":null,"where":[]},null],"and",[false,6,[0,[0,18,false],null],3.0,null]]},"question_toks":["Parmi","les","voitures","ayant","plus","que","la","puissance","la","plus","faible",",","lesquelles","n'ont","pas","plus","de","3","cylindres","?","\u00c9num\u00e8re","la","marque","de","voiture","et","nommez-la","."],"question":"Parmi les voitures ayant plus que la puissance la plus faible, lesquelles n'ont pas plus de 3 cylindres? \u00c9num\u00e8re la marque de voiture et nommez-la."},{"db_id":"world_1","query":"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","GROUP","BY","T1.Name","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","group","by","t1",".","name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nom","du","pays","qui","parle","le","plus","grand","nombre","de","langues","?"],"question":"Quel est le nom du pays qui parle le plus grand nombre de langues?"},{"db_id":"course_teach","query":"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown","query_toks":["SELECT","Hometown",",","COUNT","(","*",")","FROM","teacher","GROUP","BY","Hometown"],"query_toks_no_value":["select","hometown",",","count","(","*",")","from","teacher","group","by","hometown"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Pour","chaque","ville","natale",",","combien","y","a-t-il","d'enseignants","?"],"question":"Pour chaque ville natale, combien y a-t-il d'enseignants?"},{"db_id":"poker_player","query":"SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1","query_toks":["SELECT","T2.Money_Rank","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T1.Height","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","money_rank","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t1",".","height","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","rang","d'argent","du","plus","grand","joueur","de","poker","?"],"question":"Quel est le rang d'argent du plus grand joueur de poker?"},{"db_id":"orchestra","query":"SELECT Name FROM conductor WHERE Nationality != 'USA'","query_toks":["SELECT","Name","FROM","conductor","WHERE","Nationality","!","=","'USA","'"],"query_toks_no_value":["select","name","from","conductor","where","nationality","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,7,[0,[0,4,false],null],"\"USA\"",null]]},"question_toks":["``","Quels","sont","les","noms","des","chefs","d'orchestre","dont","la","nationalit\u00e9","n'est","pas","''","``","Etats-Unis","''","``","?","''"],"question":"\"Quels sont les noms des chefs d'orchestre dont la nationalit\u00e9 n'est pas\" \"Etats-Unis\" \"?\""},{"db_id":"dog_kennels","query":"SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'","query_toks":["SELECT","first_name",",","last_name",",","email_address","FROM","Owners","WHERE","state","LIKE","'","%","North","%","'"],"query_toks_no_value":["select","first_name",",","last_name",",","email_address","from","owners","where","state","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]],[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,9,[0,[0,15,false],null],"\"%North%\"",null]]},"question_toks":["Quels","propri\u00e9taires","vivent","dans","l'\u00c9tat","dont","le","nom","contient","la","sous-cha\u00eene","\u00ab","Nord","\u00bb","?","Indiquez","son","pr\u00e9nom",",","son","nom","et","son","adresse","e-mail","."],"question":"Quels propri\u00e9taires vivent dans l'\u00c9tat dont le nom contient la sous-cha\u00eene \u00abNord\u00bb ? Indiquez son pr\u00e9nom, son nom et son adresse e-mail."},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRLINES","AS","T2","ON","T1.Airline","=","T2.uid","WHERE","T2.Airline","=","``","JetBlue","Airways","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airlines","as","t2","on","t1",".","airline","=","t2",".","uid","where","t2",".","airline","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"JetBlue Airways\"",null]]},"question_toks":["Combien","de","vols","la","compagnie","a\u00e9rienne","JetBlue","Airways","propose-t-elle","?"],"question":"Combien de vols la compagnie a\u00e9rienne JetBlue Airways propose-t-elle?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Documents","query_toks":["SELECT","count","(","*",")","FROM","Documents"],"query_toks_no_value":["select","count","(","*",")","from","documents"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","documents","avons-nous","?"],"question":"Combien de documents avons-nous?"},{"db_id":"network_1","query":"SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10","query_toks":["SELECT","count","(","*",")","FROM","Highschooler","WHERE","grade","=","9","OR","grade","=","10"],"query_toks_no_value":["select","count","(","*",")","from","highschooler","where","grade","=","value","or","grade","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],9.0,null],"or",[false,2,[0,[0,3,false],null],10.0,null]]},"question_toks":["Comptez","le","nombre","de","lyc\u00e9ens","en","9e","ou","10e","ann\u00e9e","."],"question":"Comptez le nombre de lyc\u00e9ens en 9e ou 10e ann\u00e9e."},{"db_id":"network_1","query":"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"","query_toks":["SELECT","count","(","*",")","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","WHERE","T2.name","=","``","Kyle","''"],"query_toks_no_value":["select","count","(","*",")","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Compte","le","nombre","d'amis","que","Kyle","a","."],"question":"Compte le nombre d'amis que Kyle a."},{"db_id":"orchestra","query":"SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1","query_toks":["SELECT","Year_of_Founded","FROM","orchestra","AS","T1","JOIN","performance","AS","T2","ON","T1.Orchestra_ID","=","T2.Orchestra_ID","GROUP","BY","T2.Orchestra_ID","HAVING","COUNT","(","*",")",">","1"],"query_toks_no_value":["select","year_of_founded","from","orchestra","as","t1","join","performance","as","t2","on","t1",".","orchestra_id","=","t2",".","orchestra_id","group","by","t2",".","orchestra_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,13,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,13,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Quelles","sont","les","ann\u00e9es","de","fondation","d'orchestres","qui","ont","eu","plus","d'une","seule","performance","?"],"question":"Quelles sont les ann\u00e9es de fondation d'orchestres qui ont eu plus d'une seule performance ?"},{"db_id":"pets_1","query":"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","query_toks":["SELECT","avg","(","pet_age",")",",","max","(","pet_age",")",",","pettype","FROM","pets","GROUP","BY","pettype"],"query_toks_no_value":["select","avg","(","pet_age",")",",","max","(","pet_age",")",",","pettype","from","pets","group","by","pettype"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,13,false],null]],[1,[0,[0,13,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Trouvez","l'\u00e2ge","moyen","et","maximum","pour","chaque","type","d'animal","."],"question":"Trouvez l'\u00e2ge moyen et maximum pour chaque type d'animal."},{"db_id":"car_1","query":"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;","query_toks":["SELECT","T1.Model","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","WHERE","T2.Cylinders","=","4","ORDER","BY","T2.horsepower","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","model","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","where","t2",".","cylinders","=","value","order","by","t2",".","horsepower","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],4.0,null]]},"question_toks":["Pour","les","voitures","\u00e0","4","cylindres",",","quel","mod\u00e8le","a","la","plus","grande","puissance","?"],"question":"Pour les voitures \u00e0 4 cylindres, quel mod\u00e8le a la plus grande puissance ?"},{"db_id":"tvshow","query":"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","query_toks":["SELECT","count","(","*",")",",","Directed_by","FROM","cartoon","GROUP","BY","Directed_by"],"query_toks_no_value":["select","count","(","*",")",",","directed_by","from","cartoon","group","by","directed_by"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,21,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,21,false],null]]]],"union":null,"where":[]},"question_toks":["Trouvez","le","nombre","de","dessins","anim\u00e9s","r\u00e9alis\u00e9s","par","chacun","des","r\u00e9alisateurs","list\u00e9s","."],"question":"Trouvez le nombre de dessins anim\u00e9s r\u00e9alis\u00e9s par chacun des r\u00e9alisateurs list\u00e9s."},{"db_id":"concert_singer","query":"SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)","query_toks":["SELECT","song_name","FROM","singer","WHERE","age",">","(","SELECT","avg","(","age",")","FROM","singer",")"],"query_toks_no_value":["select","song_name","from","singer","where","age",">","(","select","avg","(","age",")","from","singer",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,13,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["\u00c9num\u00e9rez","tous","les","noms","de","chansons","des","chanteurs","au-dessus","de","l'\u00e2ge","moyen","."],"question":"\u00c9num\u00e9rez tous les noms de chansons des chanteurs au-dessus de l'\u00e2ge moyen."},{"db_id":"student_transcripts_tracking","query":"SELECT section_name FROM Sections ORDER BY section_name DESC","query_toks":["SELECT","section_name","FROM","Sections","ORDER","BY","section_name","DESC"],"query_toks_no_value":["select","section_name","from","sections","order","by","section_name","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,25,false],null]]],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","sections","dans","l'ordre","alphab\u00e9tique","invers\u00e9","?"],"question":"Quels sont les noms des sections dans l'ordre alphab\u00e9tique invers\u00e9 ?"},{"db_id":"network_1","query":"SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2","query_toks":["SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","WHERE","T2.grade",">","5","GROUP","BY","T1.student_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","where","t2",".","grade",">","value","group","by","t1",".","student_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,3,[0,[0,3,false],null],5.0,null]]},"question_toks":["Quels","sont","les","noms","des","lyc\u00e9ens","qui","ont","une","note","sup\u00e9rieure","\u00e0","5","et","qui","ont","2","amis","ou","plus","?"],"question":"Quels sont les noms des lyc\u00e9ens qui ont une note sup\u00e9rieure \u00e0 5 et qui ont 2 amis ou plus ?"},{"db_id":"poker_player","query":"SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Nationality","FROM","people","GROUP","BY","Nationality","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","nationality","from","people","group","by","nationality","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","nationalit\u00e9","la","plus","courante","des","gens","?"],"question":"Quelle est la nationalit\u00e9 la plus courante des gens?"},{"db_id":"world_1","query":"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"","query_toks":["SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","AND","T2.IsOfficial","=","``","T","''","INTERSECT","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","French","''","AND","T2.IsOfficial","=","``","T","''"],"query_toks_no_value":["select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","t2",".","isofficial","=","value","intersect","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","t2",".","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"French\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Donnez","les","noms","des","pays","dont","l'anglais","et","le","fran\u00e7ais","sont","les","langues","officielles","."],"question":"Donnez les noms des pays dont l'anglais et le fran\u00e7ais sont les langues officielles."},{"db_id":"world_1","query":"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","query_toks":["SELECT","COUNT","(","T2.Language",")",",","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","GROUP","BY","T1.Name","HAVING","COUNT","(","*",")",">","2"],"query_toks_no_value":["select","count","(","t2",".","language",")",",","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","group","by","t1",".","name","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,9,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,24,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Rentrez","le","nom","du","pays","et","le","nombre","de","langues","parl\u00e9es","pour","chaque","pays","qui","parle","au","moins","3","langues","."],"question":"Rentrez le nom du pays et le nombre de langues parl\u00e9es pour chaque pays qui parle au moins 3 langues."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'","query_toks":["SELECT","count","(","*",")","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_ID","=","T2.document_ID","WHERE","T2.document_name","=","'Summer","Show","'"],"query_toks_no_value":["select","count","(","*",")","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","where","t2",".","document_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Summer Show\"",null]]},"question_toks":["Comptez","le","nombre","de","paragraphes","dans","le","document","nomm\u00e9","\u00ab","Spectacle","d'\u00e9t\u00e9","\u00bb","."],"question":"Comptez le nombre de paragraphes dans le document nomm\u00e9 \u00abSpectacle d'\u00e9t\u00e9\u00bb. "},{"db_id":"dog_kennels","query":"SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )","query_toks":["SELECT","avg","(","age",")","FROM","Dogs","WHERE","dog_id","IN","(","SELECT","dog_id","FROM","Treatments",")"],"query_toks_no_value":["select","avg","(","age",")","from","dogs","where","dog_id","in","(","select","dog_id","from","treatments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,26,false],null]]]],"union":null,"where":[[false,8,[0,[0,20,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,45,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Trouve","l'\u00e2ge","moyen","des","chiens","qui","ont","subi","des","traitements","."],"question":"Trouve l'\u00e2ge moyen des chiens qui ont subi des traitements."},{"db_id":"tvshow","query":"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";","query_toks":["SELECT","T1.series_name","FROM","TV_Channel","AS","T1","JOIN","TV_series","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.Episode","=","``","A","Love","of","a","Lifetime","''",";"],"query_toks_no_value":["select","t1",".","series_name","from","tv_channel","as","t1","join","tv_series","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","episode","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,18,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"A Love of a Lifetime\"",null]]},"question_toks":["``","Quelle","est","la","cha\u00eene","de","t\u00e9l\u00e9vision","de","la","s\u00e9rie","t\u00e9l\u00e9vis\u00e9e","avec","l'\u00e9pisode","''","``","Un","amour","d'une","vie","''","``","?","Indiquez","le","nom","de","la","s\u00e9rie","de","la","cha\u00eene","de","t\u00e9l\u00e9vision",".","''"],"question":"\"Quelle est la cha\u00eene de t\u00e9l\u00e9vision de la s\u00e9rie t\u00e9l\u00e9vis\u00e9e avec l'\u00e9pisode\" \"Un amour d'une vie\" \"? Indiquez le nom de la s\u00e9rie de la cha\u00eene de t\u00e9l\u00e9vision.\""},{"db_id":"pets_1","query":"SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'","query_toks":["SELECT","T1.lname","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pet_age","=","3","AND","T3.pettype","=","'cat","'"],"query_toks_no_value":["select","t1",".","lname","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pet_age","=","value","and","t3",".","pettype","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],3.0,null],"and",[false,2,[0,[0,12,false],null],"\"cat\"",null]]},"question_toks":["Trouvez","le","nom","de","famille","de","l'\u00e9l\u00e8ve","qui","a","un","chat","de","3","ans","."],"question":"Trouvez le nom de famille de l'\u00e9l\u00e8ve qui a un chat de 3 ans."},{"db_id":"employee_hire_evaluation","query":"SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC","query_toks":["SELECT","name",",","LOCATION",",","district","FROM","shop","ORDER","BY","number_products","DESC"],"query_toks_no_value":["select","name",",","location",",","district","from","shop","order","by","number_products","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Classez","tous","les","magasins","par","nombre","de","produits","dans","l'ordre","d\u00e9croissant","et","rentrez","le","nom",",","l'emplacement","et","le","quartier","de","chaque","magasin","."],"question":"Classez tous les magasins par nombre de produits dans l'ordre d\u00e9croissant et rentrez le nom, l'emplacement et le quartier de chaque magasin."},{"db_id":"world_1","query":"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","query_toks":["SELECT","Name",",","SurfaceArea","FROM","country","ORDER","BY","SurfaceArea","DESC","LIMIT","5"],"query_toks_no_value":["select","name",",","surfacearea","from","country","order","by","surfacearea","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":5,"orderBy":["desc",[[0,[0,12,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Rentrez","les","noms","et","les","surfaces","des","5","plus","grands","pays","."],"question":"Rentrez les noms et les surfaces des 5 plus grands pays."},{"db_id":"tvshow","query":"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'","query_toks":["SELECT","Pixel_aspect_ratio_PAR",",","country","FROM","tv_channel","WHERE","LANGUAGE","!","=","'English","'"],"query_toks_no_value":["select","pixel_aspect_ratio_par",",","country","from","tv_channel","where","language","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,7,[0,[0,4,false],null],"\"English\"",null]]},"question_toks":["trouve","le","rapport","d'aspect","en","pixels","et","la","nation","des","cha\u00eenes","de","t\u00e9l\u00e9vision","qui","n'utilisent","pas","l'anglais","."],"question":"trouve le rapport d'aspect en pixels et la nation des cha\u00eenes de t\u00e9l\u00e9vision qui n'utilisent pas l'anglais."},{"db_id":"course_teach","query":"SELECT Name FROM teacher WHERE Hometown != \"Little Lever Urban Distric\"","query_toks":["SELECT","Name","FROM","teacher","WHERE","Hometown","!","=","``","Little","Lever","Urban","Distric","''"],"query_toks_no_value":["select","name","from","teacher","where","hometown","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,7,[0,[0,7,false],null],"\"Little Lever Urban Distric\"",null]]},"question_toks":["``","Indiquez","le","nom","des","enseignants","dont","la","ville","natale","n'est","pas","''","``","Quartier","urbain","de","Little","Lever","''","``",".","''"],"question":"\"Indiquez le nom des enseignants dont la ville natale n'est pas\" \"Quartier urbain de Little Lever\" \".\""},{"db_id":"singer","query":"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","query_toks":["SELECT","T2.Title",",","T1.Name","FROM","singer","AS","T1","JOIN","song","AS","T2","ON","T1.Singer_ID","=","T2.Singer_ID"],"query_toks_no_value":["select","t2",".","title",",","t1",".","name","from","singer","as","t1","join","song","as","t2","on","t1",".","singer_id","=","t2",".","singer_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Afficher","les","titres","des","chansons","et","les","noms","des","chanteurs","."],"question":"Afficher les titres des chansons et les noms des chanteurs."},{"db_id":"concert_singer","query":"SELECT country ,  count(*) FROM singer GROUP BY country","query_toks":["SELECT","country",",","count","(","*",")","FROM","singer","GROUP","BY","country"],"query_toks_no_value":["select","country",",","count","(","*",")","from","singer","group","by","country"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","chanteurs","sont","originaires","de","chaque","pays","?"],"question":"Combien de chanteurs sont originaires de chaque pays ?"},{"db_id":"wta_1","query":"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","query_toks":["SELECT","winner_name",",","loser_name","FROM","matches","ORDER","BY","minutes","DESC","LIMIT","1"],"query_toks_no_value":["select","winner_name",",","loser_name","from","matches","order","by","minutes","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["trouver","les","noms","des","perdants","et","des","gagnants","qui","ont","jou\u00e9","le","match","avec","le","plus","grand","nombre","de","minutes","."],"question":"trouver les noms des perdants et des gagnants qui ont jou\u00e9 le match avec le plus grand nombre de minutes."},{"db_id":"network_1","query":"SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)","query_toks":["SELECT","avg","(","grade",")","FROM","Highschooler","WHERE","id","IN","(","SELECT","T1.student_id","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id",")"],"query_toks_no_value":["select","avg","(","grade",")","from","highschooler","where","id","in","(","select","t1",".","student_id","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,3,false],null]]]],"union":null,"where":[[false,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Trouve","la","note","moyenne","de","tous","les","\u00e9l\u00e8ves","qui","ont","des","amis","."],"question":"Trouve la note moyenne de tous les \u00e9l\u00e8ves qui ont des amis."},{"db_id":"car_1","query":"SELECT count(*) FROM COUNTRIES;","query_toks":["SELECT","count","(","*",")","FROM","COUNTRIES",";"],"query_toks_no_value":["select","count","(","*",")","from","countries"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","pays","sont","r\u00e9pertori\u00e9s","?"],"question":"Combien de pays sont r\u00e9pertori\u00e9s ?"},{"db_id":"dog_kennels","query":"SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1","query_toks":["SELECT","T1.treatment_type_description","FROM","Treatment_types","AS","T1","JOIN","Treatments","AS","T2","ON","T1.treatment_type_code","=","T2.treatment_type_code","GROUP","BY","T1.treatment_type_code","ORDER","BY","sum","(","cost_of_treatment",")","ASC","LIMIT","1"],"query_toks_no_value":["select","t1",".","treatment_type_description","from","treatment_types","as","t1","join","treatments","as","t2","on","t1",".","treatment_type_code","=","t2",".","treatment_type_code","group","by","t1",".","treatment_type_code","order","by","sum","(","cost_of_treatment",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,47,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[4,49,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","description","du","type","de","traitement","qui","co\u00fbte","le","moins","cher","au","total","?"],"question":"Quelle est la description du type de traitement qui co\u00fbte le moins cher au total?"},{"db_id":"poker_player","query":"SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Nationality","FROM","people","GROUP","BY","Nationality","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","nationality","from","people","group","by","nationality","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Donnez","la","nationalit\u00e9","qui","est","la","plus","courante","parmi","toutes","les","personnes","."],"question":"Donnez la nationalit\u00e9 qui est la plus courante parmi toutes les personnes."},{"db_id":"wta_1","query":"SELECT min(loser_rank) FROM matches","query_toks":["SELECT","min","(","loser_rank",")","FROM","matches"],"query_toks_no_value":["select","min","(","loser_rank",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","meilleur","classement","des","perdants","dans","tous","les","matchs","?"],"question":"Quel est le meilleur classement des perdants dans tous les matchs ?"},{"db_id":"concert_singer","query":"SELECT DISTINCT country FROM singer WHERE age  >  20","query_toks":["SELECT","DISTINCT","country","FROM","singer","WHERE","age",">","20"],"query_toks_no_value":["select","distinct","country","from","singer","where","age",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],20.0,null]]},"question_toks":["Quels","sont","les","diff\u00e9rents","pays","avec","des","chanteurs","de","plus","de","20","ans","?"],"question":"Quels sont les diff\u00e9rents pays avec des chanteurs de plus de 20 ans ?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1","query_toks":["SELECT","document_id","FROM","Paragraphs","GROUP","BY","document_id","ORDER","BY","count","(","*",")","ASC","LIMIT","1"],"query_toks_no_value":["select","document_id","from","paragraphs","group","by","document_id","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Rentre","l'identifiant","du","document","avec","le","moins","de","paragraphes","."],"question":"Rentre l'identifiant du document avec le moins de paragraphes."},{"db_id":"wta_1","query":"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","query_toks":["SELECT","sum","(","tours",")",",","ranking_date","FROM","rankings","GROUP","BY","ranking_date"],"query_toks_no_value":["select","sum","(","tours",")",",","ranking_date","from","rankings","group","by","ranking_date"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,39,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,43,false],null]],[0,[0,[0,39,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","tourn\u00e9es","au","total","y","avait-il","pour","chaque","date","de","classement","?"],"question":"Combien de tourn\u00e9es au total y avait-il pour chaque date de classement ?"},{"db_id":"network_1","query":"SELECT name FROM Highschooler WHERE grade  =  10","query_toks":["SELECT","name","FROM","Highschooler","WHERE","grade","=","10"],"query_toks_no_value":["select","name","from","highschooler","where","grade","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],10.0,null]]},"question_toks":["Quels","sont","les","noms","de","tous","les","lyc\u00e9ens","de","10e","ann\u00e9e","?"],"question":"Quels sont les noms de tous les lyc\u00e9ens de 10e ann\u00e9e ?"},{"db_id":"course_teach","query":"SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Hometown","FROM","teacher","GROUP","BY","Hometown","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","hometown","from","teacher","group","by","hometown","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["\u00c9num\u00e9rez","la","ville","natale","la","plus","courante","des","enseignants","."],"question":"\u00c9num\u00e9rez la ville natale la plus courante des enseignants."},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","GROUP","BY","T1.Airline","HAVING","count","(","*",")",">","10"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","group","by","t1",".","airline","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[[false,3,[0,[3,0,false],null],10.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quelles","compagnies","a\u00e9riennes","ont","au","moins","10","vols","?"],"question":"Quelles compagnies a\u00e9riennes ont au moins 10 vols?"},{"db_id":"dog_kennels","query":"SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.breed_name","FROM","Breeds","AS","T1","JOIN","Dogs","AS","T2","ON","T1.breed_code","=","T2.breed_code","GROUP","BY","T1.breed_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","breed_name","from","breeds","as","t1","join","dogs","as","t2","on","t1",".","breed_code","=","t2",".","breed_code","group","by","t1",".","breed_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,23,false],null]],"table_units":[["table_unit",0],["table_unit",5]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nom","de","la","race","avec","le","plus","de","chiens","?"],"question":"Quel est le nom de la race avec le plus de chiens?"},{"db_id":"orchestra","query":"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"","query_toks":["SELECT","max","(","SHARE",")",",","min","(","SHARE",")","FROM","performance","WHERE","TYPE","!","=","``","Live","final","''"],"query_toks_no_value":["select","max","(","share",")",",","min","(","share",")","from","performance","where","type","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,18,false],null]],[2,[0,[0,18,false],null]]]],"union":null,"where":[[false,7,[0,[0,14,false],null],"\"Live final\"",null]]},"question_toks":["Msgstr","``","Renvoyer","les","partages","maximum","et","minimum","pour","les","performances","qui","n'ont","pas","le","type","''","``","Finale","en","direct","''","``",".","''"],"question":"Msgstr \"Renvoyer les partages maximum et minimum pour les performances qui n'ont pas le type\" \"Finale en direct\" \".\""},{"db_id":"car_1","query":"SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;","query_toks":["SELECT","T1.Id",",","T1.Maker","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","GROUP","BY","T1.Id","HAVING","count","(","*",")",">","=","2","INTERSECT","SELECT","T1.Id",",","T1.Maker","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","JOIN","CAR_NAMES","AS","T3","ON","T2.model","=","T3.model","GROUP","BY","T1.Id","HAVING","count","(","*",")",">","3",";"],"query_toks_no_value":["select","t1",".","id",",","t1",".","maker","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","group","by","t1",".","id","having","count","(","*",")",">","=","value","intersect","select","t1",".","id",",","t1",".","maker","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","join","car_names","as","t3","on","t2",".","model","=","t3",".","model","group","by","t1",".","id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[[false,3,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","identifiants","et","les","fabricants","de","tous","les","constructeurs","automobiles","qui","produisent","au","moins","2","mod\u00e8les","et","fabriquent","plus","de","3","voitures","?"],"question":"Quels sont les identifiants et les fabricants de tous les constructeurs automobiles qui produisent au moins 2 mod\u00e8les et fabriquent plus de 3 voitures?"},{"db_id":"network_1","query":"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"","query_toks":["SELECT","T3.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","JOIN","Highschooler","AS","T3","ON","T1.friend_id","=","T3.id","WHERE","T2.name","=","``","Kyle","''"],"query_toks_no_value":["select","t3",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","join","highschooler","as","t3","on","t1",".","friend_id","=","t3",".","id","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Montre","les","noms","de","tous","les","amis","du","lyc\u00e9en","Kyle","."],"question":"Montre les noms de tous les amis du lyc\u00e9en Kyle."},{"db_id":"orchestra","query":"SELECT count(DISTINCT Nationality) FROM conductor","query_toks":["SELECT","count","(","DISTINCT","Nationality",")","FROM","conductor"],"query_toks_no_value":["select","count","(","distinct","nationality",")","from","conductor"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,4,true],null]]]],"union":null,"where":[]},"question_toks":["Compte","le","nombre","de","nationalit\u00e9s","diff\u00e9rentes","des","conducteurs","."],"question":"Compte le nombre de nationalit\u00e9s diff\u00e9rentes des conducteurs."},{"db_id":"poker_player","query":"SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000","query_toks":["SELECT","max","(","Final_Table_Made",")","FROM","poker_player","WHERE","Earnings","<","200000"],"query_toks_no_value":["select","max","(","final_table_made",")","from","poker_player","where","earnings","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,3,false],null]]]],"union":null,"where":[[false,4,[0,[0,6,false],null],200000.0,null]]},"question_toks":["Renvoie","les","tables","finales","maximales","\u00e9tablies","pour","tous","les","joueurs","de","poker","qui","ont","des","gains","inf\u00e9rieurs","\u00e0","200000","."],"question":"Renvoie les tables finales maximales \u00e9tablies pour tous les joueurs de poker qui ont des gains inf\u00e9rieurs \u00e0 200000."},{"db_id":"world_1","query":"SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"","query_toks":["SELECT","sum","(","SurfaceArea",")","FROM","country","WHERE","Region","=","``","Caribbean","''"],"query_toks_no_value":["select","sum","(","surfacearea",")","from","country","where","region","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Caribbean\"",null]]},"question_toks":["Quelle","est","la","superficie","couverte","par","les","pays","des","Cara\u00efbes","?"],"question":"Quelle est la superficie couverte par les pays des Cara\u00efbes?"},{"db_id":"car_1","query":"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;","query_toks":["SELECT","avg","(","Weight",")",",","YEAR","FROM","CARS_DATA","GROUP","BY","YEAR",";"],"query_toks_no_value":["select","avg","(","weight",")",",","year","from","cars_data","group","by","year"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,21,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","poids","moyen","des","voitures","chaque","ann\u00e9e","?"],"question":"Quel est le poids moyen des voitures chaque ann\u00e9e?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","query_toks":["SELECT","T1.course_name",",","T1.course_id","FROM","Courses","AS","T1","JOIN","Sections","AS","T2","ON","T1.course_id","=","T2.course_id","GROUP","BY","T1.course_id","HAVING","count","(","*",")","<","=","2"],"query_toks_no_value":["select","t1",".","course_name",",","t1",".","course_id","from","courses","as","t1","join","sections","as","t2","on","t1",".","course_id","=","t2",".","course_id","group","by","t1",".","course_id","having","count","(","*",")","<","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,24,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[[0,10,false]],"having":[[false,6,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","et","identifiants","des","cours","ayant","au","maximum","2","sections","?"],"question":"Quels sont les noms et identifiants des cours ayant au maximum 2 sections?"},{"db_id":"concert_singer","query":"SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1","query_toks":["SELECT","count","(","*",")","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","ORDER","BY","T2.Capacity","DESC","LIMIT","1"],"query_toks_no_value":["select","count","(","*",")","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","order","by","t2",".","capacity","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,4,false],null]]],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","nombre","de","concerts","qui","ont","eu","lieu","dans","le","stade","avec","la","plus","grande","capacit\u00e9","."],"question":"Trouve le nombre de concerts qui ont eu lieu dans le stade avec la plus grande capacit\u00e9."},{"db_id":"employee_hire_evaluation","query":"SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","t2.name","FROM","hiring","AS","t1","JOIN","shop","AS","t2","ON","t1.shop_id","=","t2.shop_id","GROUP","BY","t1.shop_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name","from","hiring","as","t1","join","shop","as","t2","on","t1",".","shop_id","=","t2",".","shop_id","group","by","t1",".","shop_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,5,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,11,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","boutique","compte","le","plus","d'employ\u00e9s","?","Donnez-moi","le","nom","de","la","boutique","."],"question":"Quelle boutique compte le plus d'employ\u00e9s? Donnez-moi le nom de la boutique."},{"db_id":"tvshow","query":"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";","query_toks":["SELECT","T1.series_name","FROM","TV_Channel","AS","T1","JOIN","Cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.Title","=","``","The","Rise","of","the","Blue","Beetle","!","``",";"],"query_toks_no_value":["select","t1",".","series_name","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","title","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"The Rise of the Blue Beetle!\"",null]]},"question_toks":["``","Quel","est","le","nom","de","la","s\u00e9rie","de","la","cha\u00eene","de","t\u00e9l\u00e9vision","qui","montre","le","dessin","anim\u00e9","''","``","La","mont\u00e9e","du","scarab\u00e9e","bleu","''","``","?","''"],"question":"\"Quel est le nom de la s\u00e9rie de la cha\u00eene de t\u00e9l\u00e9vision qui montre le dessin anim\u00e9\" \"La mont\u00e9e du scarab\u00e9e bleu\" \"?\""},{"db_id":"dog_kennels","query":"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","query_toks":["SELECT","T1.first_name",",","T2.name","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id"],"query_toks_no_value":["select","t1",".","first_name",",","t2",".","name","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,25,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","le","pr\u00e9nom","de","chaque","propri\u00e9taire","et","le","nom","de","leur","chien","?"],"question":"Quels sont le pr\u00e9nom de chaque propri\u00e9taire et le nom de leur chien?"},{"db_id":"world_1","query":"SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"","query_toks":["SELECT","Population",",","Region","FROM","country","WHERE","Name","=","``","Angola","''"],"query_toks_no_value":["select","population",",","region","from","country","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Angola\"",null]]},"question_toks":["\u00c0","quelle","r\u00e9gion","appartient","l'Angola","et","quelle","est","sa","population","?"],"question":"\u00c0 quelle r\u00e9gion appartient l'Angola et quelle est sa population?"},{"db_id":"network_1","query":"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","query_toks":["SELECT","T2.name",",","count","(","*",")","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","les","noms","des","lyc\u00e9ens","qui","ont","des","likes","et","le","nombre","de","likes","pour","chacun","."],"question":"Montre les noms des lyc\u00e9ens qui ont des likes et le nombre de likes pour chacun."},{"db_id":"orchestra","query":"SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","T1.Name","FROM","conductor","AS","T1","JOIN","orchestra","AS","T2","ON","T1.Conductor_ID","=","T2.Conductor_ID","GROUP","BY","T2.Conductor_ID","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","conductor","as","t1","join","orchestra","as","t2","on","t1",".","conductor_id","=","t2",".","conductor_id","group","by","t2",".","conductor_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nom","du","chef","d'orchestre","qui","a","dirig\u00e9","le","plus","d'orchestres","?"],"question":"Quel est le nom du chef d'orchestre qui a dirig\u00e9 le plus d'orchestres?"},{"db_id":"battle_death","query":"SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );","query_toks":["SELECT","count","(","*",")","FROM","battle","WHERE","id","NOT","IN","(","SELECT","lost_in_battle","FROM","ship","WHERE","tonnage","=","'225","'",")",";"],"query_toks_no_value":["select","count","(","*",")","from","battle","where","id","not","in","(","select","lost_in_battle","from","ship","where","tonnage","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"225\"",null]]},null]]},"question_toks":["Combien","de","batailles","n'ont","perdu","aucun","navire","de","tonnage","\u00ab","225","\u00bb","?"],"question":"Combien de batailles n'ont perdu aucun navire de tonnage \u00ab225\u00bb?"},{"db_id":"student_transcripts_tracking","query":"SELECT first_name FROM Students WHERE current_address_id != permanent_address_id","query_toks":["SELECT","first_name","FROM","Students","WHERE","current_address_id","!","=","permanent_address_id"],"query_toks_no_value":["select","first_name","from","students","where","current_address_id","!","=","permanent_address_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]]]],"union":null,"where":[[false,7,[0,[0,33,false],null],[0,34,false],null]]},"question_toks":["Quelle","adresse","permanente","est","diff\u00e9rente","de","son","adresse","actuelle","?","Inscrivez","son","pr\u00e9nom","."],"question":"Quelle adresse permanente est diff\u00e9rente de son adresse actuelle? Inscrivez son pr\u00e9nom."},{"db_id":"tvshow","query":"SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";","query_toks":["SELECT","Air_Date","FROM","TV_series","WHERE","Episode","=","``","A","Love","of","a","Lifetime","''",";"],"query_toks_no_value":["select","air_date","from","tv_series","where","episode","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"A Love of a Lifetime\"",null]]},"question_toks":["``","Quand","l'\u00e9pisode","''","``","Un","amour","d'une","vie","''","``","a-t-il","\u00e9t\u00e9","diffus\u00e9","?","''"],"question":"\"Quand l'\u00e9pisode\" \"Un amour d'une vie\" \"a-t-il \u00e9t\u00e9 diffus\u00e9?\""},{"db_id":"network_1","query":"SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"","query_toks":["SELECT","grade","FROM","Highschooler","WHERE","name","=","``","Kyle","''"],"query_toks_no_value":["select","grade","from","highschooler","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Renvoyez","la","note","du","lyc\u00e9en","nomm\u00e9","Kyle","."],"question":"Renvoyez la note du lyc\u00e9en nomm\u00e9 Kyle."},{"db_id":"world_1","query":"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","query_toks":["SELECT","LANGUAGE",",","CountryCode",",","max","(","Percentage",")","FROM","countrylanguage","GROUP","BY","CountryCode"],"query_toks_no_value":["select","language",",","countrycode",",","max","(","percentage",")","from","countrylanguage","group","by","countrycode"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,24,false],null]],[0,[0,[0,23,false],null]],[1,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","codes","de","pays","des","diff\u00e9rents","pays","et","quelles","sont","les","langues","parl\u00e9es","par","le","plus","grand","pourcentage","de","personnes","pour","chacun","?"],"question":"Quels sont les codes de pays des diff\u00e9rents pays et quelles sont les langues parl\u00e9es par le plus grand pourcentage de personnes pour chacun?"},{"db_id":"tvshow","query":"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","query_toks":["SELECT","title",",","Directed_by","FROM","Cartoon","ORDER","BY","Original_air_date"],"query_toks_no_value":["select","title",",","directed_by","from","cartoon","order","by","original_air_date"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,23,false],null]]],"select":[false,[[0,[0,[0,20,false],null]],[0,[0,[0,21,false],null]]]],"union":null,"where":[]},"question_toks":["listez","tous","les","titres","de","dessins","anim\u00e9s","et","leurs","r\u00e9alisateurs","class\u00e9s","par","date","de","diffusion"],"question":"listez tous les titres de dessins anim\u00e9s et leurs r\u00e9alisateurs class\u00e9s par date de diffusion"},{"db_id":"car_1","query":"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;","query_toks":["SELECT","T1.Model","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","ORDER","BY","T2.mpg","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","model","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","order","by","t2",".","mpg","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,17,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","mod\u00e8le","\u00e9conomise","le","plus","d'essence","?","C'est-\u00e0-dire",",","avoir","le","maximum","de","miles","par","gallon","."],"question":"Quel mod\u00e8le \u00e9conomise le plus d'essence? C'est-\u00e0-dire, avoir le maximum de miles par gallon."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2","query_toks":["SELECT","document_id","FROM","Paragraphs","GROUP","BY","document_id","HAVING","count","(","*",")","BETWEEN","1","AND","2"],"query_toks_no_value":["select","document_id","from","paragraphs","group","by","document_id","having","count","(","*",")","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,15,false]],"having":[[false,1,[0,[3,0,false],null],1.0,2.0]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","l'identifiant","du","document","avec","1","\u00e0","2","paragraphes","?"],"question":"Quel est l'identifiant du document avec 1 \u00e0 2 paragraphes?"},{"db_id":"tvshow","query":"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";","query_toks":["SELECT","T1.series_name","FROM","TV_Channel","AS","T1","JOIN","Cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.Title","=","``","The","Rise","of","the","Blue","Beetle","!","``",";"],"query_toks_no_value":["select","t1",".","series_name","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","title","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"The Rise of the Blue Beetle!\"",null]]},"question_toks":["``","Quelle","est","la","cha\u00eene","de","t\u00e9l\u00e9vision","qui","montre","le","dessin","anim\u00e9","''","``","La","mont\u00e9e","du","scarab\u00e9e","bleu","!","''","``","?","\u00c9num\u00e9rez","le","nom","de","la","s\u00e9rie","de","la","cha\u00eene","de","t\u00e9l\u00e9vision",".","''"],"question":"\"Quelle est la cha\u00eene de t\u00e9l\u00e9vision qui montre le dessin anim\u00e9\" \"La mont\u00e9e du scarab\u00e9e bleu!\" \"? \u00c9num\u00e9rez le nom de la s\u00e9rie de la cha\u00eene de t\u00e9l\u00e9vision.\""},{"db_id":"student_transcripts_tracking","query":"SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.department_name",",","T1.department_id","FROM","Degree_Programs","AS","T1","JOIN","Departments","AS","T2","ON","T1.department_id","=","T2.department_id","GROUP","BY","T1.department_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","department_name",",","t1",".","department_id","from","degree_programs","as","t1","join","departments","as","t2","on","t1",".","department_id","=","t2",".","department_id","group","by","t1",".","department_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,19,false],null],[0,14,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Pour","chaque","identifiant","de","d\u00e9partement",",","quel","est","le","nom","du","d\u00e9partement","avec","le","plus","de","dipl\u00f4mes","?"],"question":"Pour chaque identifiant de d\u00e9partement, quel est le nom du d\u00e9partement avec le plus de dipl\u00f4mes?"},{"db_id":"poker_player","query":"SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000","query_toks":["SELECT","T1.Name","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","WHERE","T2.Earnings",">","300000"],"query_toks_no_value":["select","t1",".","name","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","where","t2",".","earnings",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,3,[0,[0,6,false],null],300000.0,null]]},"question_toks":["Donne","les","noms","des","joueurs","de","poker","qui","ont","des","gains","sup\u00e9rieurs","\u00e0","300","000","."],"question":"Donne les noms des joueurs de poker qui ont des gains sup\u00e9rieurs \u00e0 300 000."},{"db_id":"course_teach","query":"SELECT Age ,  Hometown FROM teacher","query_toks":["SELECT","Age",",","Hometown","FROM","teacher"],"query_toks_no_value":["select","age",",","hometown","from","teacher"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","l'\u00e2ge","et","la","ville","natale","de","chaque","enseignant","?"],"question":"Quel est l'\u00e2ge et la ville natale de chaque enseignant?"},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","AHD","''"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"AHD\"",null]]},"question_toks":["Quelles","sont","les","compagnies","a\u00e9riennes","qui","proposent","des","vols","au","d\u00e9part","de","l'a\u00e9roport","'AHD","'","?"],"question":"Quelles sont les compagnies a\u00e9riennes qui proposent des vols au d\u00e9part de l'a\u00e9roport 'AHD'?"},{"db_id":"voter_1","query":"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2","query_toks":["SELECT","T1.contestant_number",",","T1.contestant_name","FROM","contestants","AS","T1","JOIN","votes","AS","T2","ON","T1.contestant_number","=","T2.contestant_number","GROUP","BY","T1.contestant_number","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","contestant_number",",","t1",".","contestant_name","from","contestants","as","t1","join","votes","as","t2","on","t1",".","contestant_number","=","t2",".","contestant_number","group","by","t1",".","contestant_number","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,8,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,3,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","num\u00e9ros","des","candidats","et","les","noms","des","candidats","qui","ont","eu","au","moins","deux","votes","?"],"question":"Quels sont les num\u00e9ros des candidats et les noms des candidats qui ont eu au moins deux votes?"},{"db_id":"dog_kennels","query":"SELECT max(charge_amount) FROM Charges","query_toks":["SELECT","max","(","charge_amount",")","FROM","Charges"],"query_toks_no_value":["select","max","(","charge_amount",")","from","charges"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","co\u00fbte","le","type","de","frais","le","plus","cher","?"],"question":"Combien co\u00fbte le type de frais le plus cher?"},{"db_id":"singer","query":"SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)","query_toks":["SELECT","Name","FROM","singer","WHERE","Singer_ID","NOT","IN","(","SELECT","Singer_ID","FROM","song",")"],"query_toks_no_value":["select","name","from","singer","where","singer_id","not","in","(","select","singer_id","from","song",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quel","est","le","nom","de","chaque","chanson","qui","n","'","a","pas","de","chanson","?"],"question":"Quel est le nom de chaque chanson qui n'a pas de chanson?"},{"db_id":"wta_1","query":"SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3","query_toks":["SELECT","DISTINCT","winner_name",",","winner_rank","FROM","matches","ORDER","BY","winner_age","LIMIT","3"],"query_toks_no_value":["select","distinct","winner_name",",","winner_rank","from","matches","order","by","winner_age","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["asc",[[0,[0,28,false],null]]],"select":[true,[[0,[0,[0,34,false],null]],[0,[0,[0,35,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","et","les","classements","des","trois","plus","jeunes","vainqueurs","de","tous","les","matches","?"],"question":"Quels sont les noms et les classements des trois plus jeunes vainqueurs de tous les matches?"},{"db_id":"dog_kennels","query":"SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'","query_toks":["SELECT","role_code",",","street",",","city",",","state","FROM","professionals","WHERE","city","LIKE","'","%","West","%","'"],"query_toks_no_value":["select","role_code",",","street",",","city",",","state","from","professionals","where","city","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]],[0,[0,[0,38,false],null]]]],"union":null,"where":[[false,9,[0,[0,37,false],null],"\"%West%\"",null]]},"question_toks":["Quels","professionnels","vivent","dans","une","ville","contenant","la","sous-cha\u00eene","\u00ab","Ouest","\u00bb","?","Indiquez","son","r\u00f4le",",","sa","rue",",","sa","ville","et","son","\u00e9tat","."],"question":"Quels professionnels vivent dans une ville contenant la sous-cha\u00eene \u00abOuest\u00bb? Indiquez son r\u00f4le, sa rue, sa ville et son \u00e9tat."},{"db_id":"museum_visit","query":"SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011","query_toks":["SELECT","t1.name","FROM","visitor","AS","t1","JOIN","visit","AS","t2","ON","t1.id","=","t2.visitor_id","JOIN","museum","AS","t3","ON","t3.Museum_ID","=","t2.Museum_ID","WHERE","t3.open_year","<","2009","INTERSECT","SELECT","t1.name","FROM","visitor","AS","t1","JOIN","visit","AS","t2","ON","t1.id","=","t2.visitor_id","JOIN","museum","AS","t3","ON","t3.Museum_ID","=","t2.Museum_ID","WHERE","t3.open_year",">","2011"],"query_toks_no_value":["select","t1",".","name","from","visitor","as","t1","join","visit","as","t2","on","t1",".","id","=","t2",".","visitor_id","join","museum","as","t3","on","t3",".","museum_id","=","t2",".","museum_id","where","t3",".","open_year","<","value","intersect","select","t1",".","name","from","visitor","as","t1","join","visit","as","t2","on","t1",".","id","=","t2",".","visitor_id","join","museum","as","t3","on","t3",".","museum_id","=","t2",".","museum_id","where","t3",".","open_year",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],2011.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,4,[0,[0,4,false],null],2009.0,null]]},"question_toks":["Quel","est","le","nom","du","visiteur","qui","a","visit\u00e9","\u00e0","la","fois","un","mus\u00e9e","ouvert","avant","2009","et","un","mus\u00e9e","ouvert","apr\u00e8s","2011","?"],"question":"Quel est le nom du visiteur qui a visit\u00e9 \u00e0 la fois un mus\u00e9e ouvert avant 2009 et un mus\u00e9e ouvert apr\u00e8s 2011?"},{"db_id":"car_1","query":"SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;","query_toks":["SELECT","Weight","FROM","CARS_DATA","WHERE","Cylinders","=","4","AND","YEAR","=","1974","ORDER","BY","Weight","ASC","LIMIT","1",";"],"query_toks_no_value":["select","weight","from","cars_data","where","cylinders","=","value","and","year","=","value","order","by","weight","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,21,false],null]]],"select":[false,[[0,[0,[0,21,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],4.0,null],"and",[false,2,[0,[0,23,false],null],1974.0,null]]},"question_toks":["Quel","est","le","poids","minimum","de","la","voiture","\u00e0","8","cylindres","produite","en","1974","?"],"question":"Quel est le poids minimum de la voiture \u00e0 8 cylindres produite en 1974?"},{"db_id":"battle_death","query":"SELECT count(DISTINCT RESULT) FROM battle","query_toks":["SELECT","count","(","DISTINCT","RESULT",")","FROM","battle"],"query_toks_no_value":["select","count","(","distinct","result",")","from","battle"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,6,true],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","r\u00e9sultats","diff\u00e9rents","y","a-t-il","pour","les","batailles","?"],"question":"Combien de r\u00e9sultats diff\u00e9rents y a-t-il pour les batailles?"},{"db_id":"orchestra","query":"SELECT count(*) FROM conductor","query_toks":["SELECT","count","(","*",")","FROM","conductor"],"query_toks_no_value":["select","count","(","*",")","from","conductor"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","conducteurs","y","a-t-il","?"],"question":"Combien de conducteurs y a-t-il?"},{"db_id":"world_1","query":"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"","query_toks":["SELECT","count","(","DISTINCT","GovernmentForm",")","FROM","country","WHERE","Continent","=","``","Africa","''"],"query_toks_no_value":["select","count","(","distinct","governmentform",")","from","country","where","continent","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,19,true],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Africa\"",null]]},"question_toks":["Combien","de","formes","de","gouvernement","diff\u00e9rentes","existe-t-il","en","Afrique","?"],"question":"Combien de formes de gouvernement diff\u00e9rentes existe-t-il en Afrique?"},{"db_id":"dog_kennels","query":"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","query_toks":["SELECT","T1.first_name",",","T2.name","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id"],"query_toks_no_value":["select","t1",".","first_name",",","t2",".","name","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,25,false],null]]]],"union":null,"where":[]},"question_toks":["\u00c9num\u00e8re","les","paires","du","pr\u00e9nom","du","propri\u00e9taire","et","du","nom","du","chien","."],"question":"\u00c9num\u00e8re les paires du pr\u00e9nom du propri\u00e9taire et du nom du chien."},{"db_id":"car_1","query":"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;","query_toks":["SELECT","T1.Model","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","WHERE","T2.Cylinders","=","4","ORDER","BY","T2.horsepower","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","model","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","where","t2",".","cylinders","=","value","order","by","t2",".","horsepower","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],4.0,null]]},"question_toks":["Pour","toutes","les","voitures","4","cylindres",",","quel","mod\u00e8le","a","le","plus","de","puissance","?"],"question":"Pour toutes les voitures 4 cylindres, quel mod\u00e8le a le plus de puissance?"},{"db_id":"wta_1","query":"SELECT count(*) ,  hand FROM players GROUP BY hand","query_toks":["SELECT","count","(","*",")",",","hand","FROM","players","GROUP","BY","hand"],"query_toks_no_value":["select","count","(","*",")",",","hand","from","players","group","by","hand"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","nombre","de","joueurs","pour","chaque","type","de","main","."],"question":"Trouve le nombre de joueurs pour chaque type de main."},{"db_id":"concert_singer","query":"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","query_toks":["SELECT","name",",","country","FROM","singer","WHERE","song_name","LIKE","'","%","Hey","%","'"],"query_toks_no_value":["select","name",",","country","from","singer","where","song_name","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,9,[0,[0,11,false],null],"\"%Hey%\"",null]]},"question_toks":["quel","est","le","nom","et","la","nation","du","chanteur","qui","a","une","chanson","ayant","\u00ab","Hey","\u00bb","en","son","nom","?"],"question":"quel est le nom et la nation du chanteur qui a une chanson ayant \u00abHey\u00bb en son nom?"},{"db_id":"concert_singer","query":"SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id","query_toks":["SELECT","T2.concert_name",",","T2.theme",",","count","(","*",")","FROM","singer_in_concert","AS","T1","JOIN","concert","AS","T2","ON","T1.concert_id","=","T2.concert_id","GROUP","BY","T2.concert_id"],"query_toks_no_value":["select","t2",".","concert_name",",","t2",".","theme",",","count","(","*",")","from","singer_in_concert","as","t1","join","concert","as","t2","on","t1",".","concert_id","=","t2",".","concert_id","group","by","t2",".","concert_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,20,false],null],[0,15,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]],[0,[0,[0,17,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms",",","les","th\u00e8mes","et","le","nombre","de","chanteurs","pour","chaque","concert","?"],"question":"Quels sont les noms, les th\u00e8mes et le nombre de chanteurs pour chaque concert?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(*) FROM Courses","query_toks":["SELECT","count","(","*",")","FROM","Courses"],"query_toks_no_value":["select","count","(","*",")","from","courses"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","cours","au","total","sont","r\u00e9pertori\u00e9s","?"],"question":"Combien de cours au total sont r\u00e9pertori\u00e9s?"},{"db_id":"dog_kennels","query":"SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )","query_toks":["SELECT","count","(","*",")","FROM","Professionals","WHERE","professional_id","NOT","IN","(","SELECT","professional_id","FROM","Treatments",")"],"query_toks_no_value":["select","count","(","*",")","from","professionals","where","professional_id","not","in","(","select","professional_id","from","treatments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,33,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,46,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Trouve","le","nombre","de","professionnels","qui","n'ont","trait\u00e9","aucun","chien","."],"question":"Trouve le nombre de professionnels qui n'ont trait\u00e9 aucun chien."},{"db_id":"car_1","query":"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","query_toks":["SELECT","T1.Continent",",","count","(","*",")","FROM","CONTINENTS","AS","T1","JOIN","COUNTRIES","AS","T2","ON","T1.ContId","=","T2.continent","JOIN","car_makers","AS","T3","ON","T2.CountryId","=","T3.Country","GROUP","BY","T1.Continent",";"],"query_toks_no_value":["select","t1",".","continent",",","count","(","*",")","from","continents","as","t1","join","countries","as","t2","on","t1",".","contid","=","t2",".","continent","join","car_makers","as","t3","on","t2",".","countryid","=","t3",".","country","group","by","t1",".","continent"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,5,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","constructeurs","automobiles","existe-t-il","sur","chaque","continent","?","Indiquez","le","nom","du","continent","et","le","nombre","."],"question":"Combien de constructeurs automobiles existe-t-il sur chaque continent ? Indiquez le nom du continent et le nombre. "},{"db_id":"tvshow","query":"SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'","query_toks":["SELECT","id","FROM","TV_Channel","EXCEPT","SELECT","channel","FROM","cartoon","WHERE","directed_by","=","'Ben","Jones","'"],"query_toks_no_value":["select","id","from","tv_channel","except","select","channel","from","cartoon","where","directed_by","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","identifiants","des","cha\u00eenes","de","t\u00e9l\u00e9vision","qui","n'ont","pas","de","dessins","anim\u00e9s","r\u00e9alis\u00e9s","par","Ben","Jones","?"],"question":"Quels sont les identifiants des cha\u00eenes de t\u00e9l\u00e9vision qui n'ont pas de dessins anim\u00e9s r\u00e9alis\u00e9s par Ben Jones ? "},{"db_id":"wta_1","query":"SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","YEAR","FROM","matches","GROUP","BY","YEAR","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","year","from","matches","group","by","year","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,38,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,38,false],null]]]],"union":null,"where":[]},"question_toks":["Trouvez","l'ann\u00e9e","qui","a","le","plus","de","correspondances","."],"question":"Trouvez l'ann\u00e9e qui a le plus de correspondances. "},{"db_id":"dog_kennels","query":"SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1","query_toks":["SELECT","T1.treatment_type_description","FROM","Treatment_types","AS","T1","JOIN","Treatments","AS","T2","ON","T1.treatment_type_code","=","T2.treatment_type_code","GROUP","BY","T1.treatment_type_code","ORDER","BY","sum","(","cost_of_treatment",")","ASC","LIMIT","1"],"query_toks_no_value":["select","t1",".","treatment_type_description","from","treatment_types","as","t1","join","treatments","as","t2","on","t1",".","treatment_type_code","=","t2",".","treatment_type_code","group","by","t1",".","treatment_type_code","order","by","sum","(","cost_of_treatment",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,47,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[4,49,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Donnez-moi","la","description","du","type","de","traitement","dont","le","co\u00fbt","total","est","le","plus","bas","."],"question":"Donnez-moi la description du type de traitement dont le co\u00fbt total est le plus bas. "},{"db_id":"world_1","query":"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode","query_toks":["SELECT","CountryCode",",","max","(","Percentage",")","FROM","countrylanguage","WHERE","LANGUAGE","=","``","Spanish","''","GROUP","BY","CountryCode"],"query_toks_no_value":["select","countrycode",",","max","(","percentage",")","from","countrylanguage","where","language","=","value","group","by","countrycode"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]],[1,[0,[0,26,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Spanish\"",null]]},"question_toks":["Quels","sont","les","codes","des","pays","o\u00f9","l'espagnol","est","parl\u00e9","par","le","plus","grand","pourcentage","de","personnes","?"],"question":"Quels sont les codes des pays o\u00f9 l'espagnol est parl\u00e9 par le plus grand pourcentage de personnes ? "},{"db_id":"concert_singer","query":"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","query_toks":["SELECT","song_name",",","song_release_year","FROM","singer","ORDER","BY","age","LIMIT","1"],"query_toks_no_value":["select","song_name",",","song_release_year","from","singer","order","by","age","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Montrez","le","nom","et","l'ann\u00e9e","de","sortie","de","la","chanson","du","plus","jeune","chanteur","."],"question":"Montrez le nom et l'ann\u00e9e de sortie de la chanson du plus jeune chanteur. "},{"db_id":"concert_singer","query":"SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015","query_toks":["SELECT","count","(","*",")","FROM","concert","WHERE","YEAR","=","2014","OR","YEAR","=","2015"],"query_toks_no_value":["select","count","(","*",")","from","concert","where","year","=","value","or","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2014.0,null],"or",[false,2,[0,[0,19,false],null],2015.0,null]]},"question_toks":["Combien","de","concerts","y","a-t-il","en","2014","ou","2015","?"],"question":"Combien de concerts y a-t-il en 2014 ou 2015 ? "},{"db_id":"dog_kennels","query":"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","query_toks":["SELECT","T1.professional_id",",","T1.cell_number","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id","GROUP","BY","T1.professional_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","professional_id",",","t1",".","cell_number","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id","group","by","t1",".","professional_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,33,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,43,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","professionnels","ont","effectu\u00e9","au","moins","deux","types","de","traitements","?","Fournissez","l'ID","professionnel","et","le","t\u00e9l\u00e9phone","portable","."],"question":"Quels professionnels ont effectu\u00e9 au moins deux types de traitements ? Fournissez l'ID professionnel et le t\u00e9l\u00e9phone portable. "},{"db_id":"orchestra","query":"SELECT Name FROM conductor ORDER BY Year_of_Work DESC","query_toks":["SELECT","Name","FROM","conductor","ORDER","BY","Year_of_Work","DESC"],"query_toks_no_value":["select","name","from","conductor","order","by","year_of_work","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","chefs","d'orchestre",",","class\u00e9s","par","ordre","d\u00e9croissant","du","nombre","d'ann\u00e9es","de","travail","?"],"question":"Quels sont les noms des chefs d'orchestre, class\u00e9s par ordre d\u00e9croissant du nombre d'ann\u00e9es de travail ? "},{"db_id":"flight_2","query":"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"","query_toks":["SELECT","City",",","Country","FROM","AIRPORTS","WHERE","AirportName","=","``","Alton","''"],"query_toks_no_value":["select","city",",","country","from","airports","where","airportname","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"Alton\"",null]]},"question_toks":["Dans","quelle","ville","et","dans","quel","pays","se","trouve","l'a\u00e9roport","d'Alton","?"],"question":"Dans quelle ville et dans quel pays se trouve l'a\u00e9roport d'Alton ? "},{"db_id":"wta_1","query":"SELECT count(*) ,  country_code FROM players GROUP BY country_code","query_toks":["SELECT","count","(","*",")",",","country_code","FROM","players","GROUP","BY","country_code"],"query_toks_no_value":["select","count","(","*",")",",","country_code","from","players","group","by","country_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["trouver","le","nombre","de","joueurs","pour","chaque","pays","."],"question":"trouver le nombre de joueurs pour chaque pays. "},{"db_id":"world_1","query":"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"","query_toks":["SELECT","Population",",","LifeExpectancy","FROM","country","WHERE","Name","=","``","Brazil","''"],"query_toks_no_value":["select","population",",","lifeexpectancy","from","country","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Brazil\"",null]]},"question_toks":["Quelles","sont","la","population","et","l'esp\u00e9rance","de","vie","au","Br\u00e9sil","?"],"question":"Quelles sont la population et l'esp\u00e9rance de vie au Br\u00e9sil ? "},{"db_id":"world_1","query":"SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"","query_toks":["SELECT","Code","FROM","country","WHERE","GovernmentForm","!","=","``","Republic","''","EXCEPT","SELECT","CountryCode","FROM","countrylanguage","WHERE","LANGUAGE","=","``","English","''"],"query_toks_no_value":["select","code","from","country","where","governmentform","!","=","value","except","select","countrycode","from","countrylanguage","where","language","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,7,[0,[0,19,false],null],"\"Republic\"",null]]},"question_toks":["Rentrez","les","codes","des","pays","qui","ne","parlent","pas","anglais","et","qui","n'ont","pas","de","r\u00e9publiques","comme","gouvernements","."],"question":"Rentrez les codes des pays qui ne parlent pas anglais et qui n'ont pas de r\u00e9publiques comme gouvernements. "},{"db_id":"dog_kennels","query":"SELECT count(DISTINCT professional_id) FROM Treatments","query_toks":["SELECT","count","(","DISTINCT","professional_id",")","FROM","Treatments"],"query_toks_no_value":["select","count","(","distinct","professional_id",")","from","treatments"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,46,true],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","professionnels","ont","soign\u00e9","des","chiens","?"],"question":"Combien de professionnels ont soign\u00e9 des chiens ? "},{"db_id":"student_transcripts_tracking","query":"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","query_toks":["SELECT","T2.transcript_date",",","T1.transcript_id","FROM","Transcript_Contents","AS","T1","JOIN","Transcripts","AS","T2","ON","T1.transcript_id","=","T2.transcript_id","GROUP","BY","T1.transcript_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","transcript_date",",","t1",".","transcript_id","from","transcript_contents","as","t1","join","transcripts","as","t2","on","t1",".","transcript_id","=","t2",".","transcript_id","group","by","t1",".","transcript_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,56,false],null],[0,52,false],null]],"table_units":[["table_unit",10],["table_unit",9]]},"groupBy":[[0,56,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,53,false],null]],[0,[0,[0,56,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","date","et","l'identifiant","du","relev\u00e9","de","notes","avec","au","moins","2","cours","r\u00e9pertori\u00e9s","?"],"question":"Quelle est la date et l'identifiant du relev\u00e9 de notes avec au moins 2 cours r\u00e9pertori\u00e9s ? "},{"db_id":"wta_1","query":"SELECT count(DISTINCT loser_name) FROM matches","query_toks":["SELECT","count","(","DISTINCT","loser_name",")","FROM","matches"],"query_toks_no_value":["select","count","(","distinct","loser_name",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,15,true],null]]]],"union":null,"where":[]},"question_toks":["Trouvez","le","nombre","de","noms","distincts","de","perdants","."],"question":"Trouvez le nombre de noms distincts de perdants. "},{"db_id":"tvshow","query":"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;","query_toks":["SELECT","count","(","DISTINCT","series_name",")",",","count","(","DISTINCT","content",")","FROM","TV_Channel",";"],"query_toks_no_value":["select","count","(","distinct","series_name",")",",","count","(","distinct","content",")","from","tv_channel"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,2,true],null]],[3,[0,[0,5,true],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","s\u00e9ries","et","de","contenus","diff\u00e9rents","sont","list\u00e9","dans","le","tableau","des","cha\u00eenes","de","t\u00e9l\u00e9vision","?"],"question":"Combien de s\u00e9ries et de contenus diff\u00e9rents sont list\u00e9 dans le tableau des cha\u00eenes de t\u00e9l\u00e9vision?"},{"db_id":"dog_kennels","query":"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","query_toks":["SELECT","T1.owner_id",",","T1.zip_code","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id","JOIN","Treatments","AS","T3","ON","T2.dog_id","=","T3.dog_id","GROUP","BY","T1.owner_id","ORDER","BY","sum","(","T3.cost_of_treatment",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","owner_id",",","t1",".","zip_code","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","join","treatments","as","t3","on","t2",".","dog_id","=","t3",".","dog_id","group","by","t1",".","owner_id","order","by","sum","(","t3",".","cost_of_treatment",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,49,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","l'identifiant","du","propri\u00e9taire","et","le","code","postal","du","propri\u00e9taire","qui","a","d\u00e9pens\u00e9","le","plus","d'argent","au","total","pour","ses","chiens","."],"question":"Trouve l'identifiant du propri\u00e9taire et le code postal du propri\u00e9taire qui a d\u00e9pens\u00e9 le plus d'argent au total pour ses chiens."},{"db_id":"wta_1","query":"SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'","query_toks":["SELECT","count","(","DISTINCT","winner_name",")","FROM","matches","WHERE","tourney_name","=","'WTA","Championships","'","AND","winner_hand","=","'L","'"],"query_toks_no_value":["select","count","(","distinct","winner_name",")","from","matches","where","tourney_name","=","value","and","winner_hand","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,34,true],null]]]],"union":null,"where":[[false,2,[0,[0,27,false],null],"\"WTA Championships\"",null],"and",[false,2,[0,[0,30,false],null],"\"L\"",null]]},"question_toks":["Combien","de","gagnants","diff\u00e9rents","ont","tous","deux","particip\u00e9","aux","Championnats","WTA","et","sont","gauchers","?"],"question":"Combien de gagnants diff\u00e9rents ont tous deux particip\u00e9 aux Championnats WTA et sont gauchers ? "},{"db_id":"dog_kennels","query":"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.owner_id",",","T2.first_name",",","T2.last_name","FROM","Dogs","AS","T1","JOIN","Owners","AS","T2","ON","T1.owner_id","=","T2.owner_id","GROUP","BY","T1.owner_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","owner_id",",","t2",".","first_name",",","t2",".","last_name","from","dogs","as","t1","join","owners","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","group","by","t1",".","owner_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,21,false],null],[0,10,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[[0,21,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,21,false],null]],[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","propri\u00e9taire","poss\u00e8de","le","plus","de","chiens","?","Listez","les","identifiants","du","propri\u00e9taire",",","le","pr\u00e9nom","et","le","nom","de","famille","."],"question":"Quel propri\u00e9taire poss\u00e8de le plus de chiens? Listez les identifiants du propri\u00e9taire, le pr\u00e9nom et le nom de famille."},{"db_id":"dog_kennels","query":"SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'","query_toks":["SELECT","email_address","FROM","Professionals","WHERE","state","=","'Hawaii","'","OR","state","=","'Wisconsin","'"],"query_toks_no_value":["select","email_address","from","professionals","where","state","=","value","or","state","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,41,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],"\"Hawaii\"",null],"or",[false,2,[0,[0,38,false],null],"\"Wisconsin\"",null]]},"question_toks":["Quels","sont","les","courriels","des","professionnels","vivant","dans","l'\u00c9tat","d'Hawa\u00ef","ou","l'\u00c9tat","du","Wisconsin","?"],"question":"Quels sont les courriels des professionnels vivant dans l'\u00c9tat d'Hawa\u00ef ou l'\u00c9tat du Wisconsin?"},{"db_id":"pets_1","query":"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","query_toks":["SELECT","DISTINCT","T1.fname",",","T1.age","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid"],"query_toks_no_value":["select","distinct","t1",".","fname",",","t1",".","age","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Trouvez","le","pr\u00e9nom","et","l'\u00e2ge","des","\u00e9l\u00e8ves","qui","ont","un","animal","de","compagnie","."],"question":"Trouvez le pr\u00e9nom et l'\u00e2ge des \u00e9l\u00e8ves qui ont un animal de compagnie. "},{"db_id":"concert_singer","query":"SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id","query_toks":["SELECT","T2.concert_name",",","T2.theme",",","count","(","*",")","FROM","singer_in_concert","AS","T1","JOIN","concert","AS","T2","ON","T1.concert_id","=","T2.concert_id","GROUP","BY","T2.concert_id"],"query_toks_no_value":["select","t2",".","concert_name",",","t2",".","theme",",","count","(","*",")","from","singer_in_concert","as","t1","join","concert","as","t2","on","t1",".","concert_id","=","t2",".","concert_id","group","by","t2",".","concert_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,20,false],null],[0,15,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]],[0,[0,[0,17,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Indiquez","le","nom","et","le","th\u00e8me","de","tous","les","concerts","et","le","nombre","de","chanteurs","dans","chaque","concert","."],"question":"Indiquez le nom et le th\u00e8me de tous les concerts et le nombre de chanteurs dans chaque concert. "},{"db_id":"tvshow","query":"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"","query_toks":["SELECT","package_option",",","series_name","FROM","TV_Channel","WHERE","hight_definition_TV","=","``","yes","''"],"query_toks_no_value":["select","package_option",",","series_name","from","tv_channel","where","hight_definition_tv","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"yes\"",null]]},"question_toks":["Trouvez","le","choix","de","forfait","et","le","nom","de","s\u00e9rie","de","la","cha\u00eene","de","t\u00e9l\u00e9vision","qui","a","la","TV","haute","d\u00e9finition","."],"question":"Trouvez le choix de forfait et le nom de s\u00e9rie de la cha\u00eene de t\u00e9l\u00e9vision qui a la TV haute d\u00e9finition. "},{"db_id":"world_1","query":"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1","query_toks":["SELECT","Name",",","Population",",","LifeExpectancy","FROM","country","WHERE","Continent","=","``","Asia","''","ORDER","BY","SurfaceArea","DESC","LIMIT","1"],"query_toks_no_value":["select","name",",","population",",","lifeexpectancy","from","country","where","continent","=","value","order","by","surfacearea","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,12,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,14,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Quels","sont","le","nom",",","la","population","et","l'esp\u00e9rance","de","vie","du","plus","grand","pays","d'Asie","par","voie","terrestre","?"],"question":"Quels sont le nom, la population et l'esp\u00e9rance de vie du plus grand pays d'Asie par voie terrestre ? "},{"db_id":"pets_1","query":"SELECT count(*) FROM pets WHERE weight  >  10","query_toks":["SELECT","count","(","*",")","FROM","pets","WHERE","weight",">","10"],"query_toks_no_value":["select","count","(","*",")","from","pets","where","weight",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,14,false],null],10.0,null]]},"question_toks":["Combien","d'animaux","ont","un","poids","sup\u00e9rieur","\u00e0","10","?"],"question":"Combien d'animaux ont un poids sup\u00e9rieur \u00e0 10?"},{"db_id":"car_1","query":"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;","query_toks":["SELECT","T1.Model","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","ORDER","BY","T2.mpg","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","model","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","order","by","t2",".","mpg","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,17,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","wmodel","de","voiture","avec","le","mpg","le","plus","\u00e9lev\u00e9","?"],"question":"Quel est le wmodel de voiture avec le mpg le plus \u00e9lev\u00e9?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id","query_toks":["SELECT","T1.last_name","FROM","Students","AS","T1","JOIN","Addresses","AS","T2","ON","T1.current_address_id","=","T2.address_id","WHERE","T2.state_province_county","=","'NorthCarolina","'","EXCEPT","SELECT","DISTINCT","T3.last_name","FROM","Students","AS","T3","JOIN","Student_Enrolment","AS","T4","ON","T3.student_id","=","T4.student_id"],"query_toks_no_value":["select","t1",".","last_name","from","students","as","t1","join","addresses","as","t2","on","t1",".","current_address_id","=","t2",".","address_id","where","t2",".","state_province_county","=","value","except","select","distinct","t3",".","last_name","from","students","as","t3","join","student_enrolment","as","t4","on","t3",".","student_id","=","t4",".","student_id"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,47,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,37,false],null]]]],"union":null,"where":[]},"from":{"conds":[[false,2,[0,[0,33,false],null],[0,1,false],null]],"table_units":[["table_unit",6],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,37,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"NorthCarolina\"",null]]},"question_toks":["Trouvez","le","nom","de","famille","des","\u00e9tudiants","qui","vivent","actuellement","dans","l'\u00c9tat","de","Caroline","du","Nord","mais","qui","ne","se","sont","inscrits","\u00e0","aucun","programme","d'\u00e9tudes","."],"question":"Trouvez le nom de famille des \u00e9tudiants qui vivent actuellement dans l'\u00c9tat de Caroline du Nord mais qui ne se sont inscrits \u00e0 aucun programme d'\u00e9tudes. "},{"db_id":"world_1","query":"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District","query_toks":["SELECT","count","(","*",")",",","District","FROM","city","WHERE","Population",">","(","SELECT","avg","(","Population",")","FROM","city",")","GROUP","BY","District"],"query_toks_no_value":["select","count","(","*",")",",","district","from","city","where","population",">","(","select","avg","(","population",")","from","city",")","group","by","district"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,3,[0,[0,5,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,5,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Trouve","le","nombre","de","villes","dans","chaque","district","dont","la","population","est","sup\u00e9rieure","\u00e0","la","population","moyenne","des","villes","?"],"question":"Trouve le nombre de villes dans chaque district dont la population est sup\u00e9rieure \u00e0 la population moyenne des villes?"},{"db_id":"world_1","query":"SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1","query_toks":["SELECT","Name","FROM","country","WHERE","Continent","=","``","Asia","''","ORDER","BY","LifeExpectancy","LIMIT","1"],"query_toks_no_value":["select","name","from","country","where","continent","=","value","order","by","lifeexpectancy","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,15,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Quel","est","le","nom","du","pays","d'Asie","qui","a","l'esp\u00e9rance","de","vie","la","plus","courte","?"],"question":"Quel est le nom du pays d'Asie qui a l'esp\u00e9rance de vie la plus courte ? "},{"db_id":"car_1","query":"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","query_toks":["SELECT","T1.FullName",",","T1.Id",",","count","(","*",")","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","GROUP","BY","T1.Id",";"],"query_toks_no_value":["select","t1",".","fullname",",","t1",".","id",",","count","(","*",")","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","group","by","t1",".","id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,6,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nom","complet","de","chaque","constructeur","automobile",",","avec","son","identifiant","et","le","nombre","de","mod\u00e8les","qu'il","produit","?"],"question":"Quel est le nom complet de chaque constructeur automobile, avec son identifiant et le nombre de mod\u00e8les qu'il produit ? "},{"db_id":"dog_kennels","query":"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","query_toks":["SELECT","DISTINCT","T1.first_name",",","T1.last_name","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","WHERE","cost_of_treatment","<","(","SELECT","avg","(","cost_of_treatment",")","FROM","Treatments",")"],"query_toks_no_value":["select","distinct","t1",".","first_name",",","t1",".","last_name","from","professionals","as","t1","join","treatments","as","t2","where","cost_of_treatment","<","(","select","avg","(","cost_of_treatment",")","from","treatments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,35,false],null]],[0,[0,[0,40,false],null]]]],"union":null,"where":[[false,4,[0,[0,49,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,49,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quels","professionnels","ont","op\u00e9r\u00e9","un","traitement","moins","cher","que","la","moyenne","?","Donnez-moi","leurs","pr\u00e9noms","et","noms","de","famille","."],"question":"Quels professionnels ont op\u00e9r\u00e9 un traitement moins cher que la moyenne? Donnez-moi leurs pr\u00e9noms et noms de famille."},{"db_id":"pets_1","query":"SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'","query_toks":["SELECT","stuid","FROM","student","EXCEPT","SELECT","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'"],"query_toks_no_value":["select","stuid","from","student","except","select","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","identifiants","des","\u00e9tudiants","qui","ne","poss\u00e8dent","pas","de","chats","comme","animaux","de","compagnie","?"],"question":"Quels sont les identifiants des \u00e9tudiants qui ne poss\u00e8dent pas de chats comme animaux de compagnie ? "},{"db_id":"car_1","query":"SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;","query_toks":["SELECT","T1.cylinders","FROM","CARS_DATA","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Id","=","T2.MakeId","WHERE","T2.Model","=","'volvo","'","ORDER","BY","T1.accelerate","ASC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","cylinders","from","cars_data","as","t1","join","car_names","as","t2","on","t1",".","id","=","t2",".","makeid","where","t2",".","model","=","value","order","by","t1",".","accelerate","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,13,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,22,false],null]]],"select":[false,[[0,[0,[0,18,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"volvo\"",null]]},"question_toks":["Pour","un","mod\u00e8le","Volvo",",","combien","de","cylindres","poss\u00e8de","la","version","avec","le","moins","d'acc\u00e9l\u00e9ration","?"],"question":"Pour un mod\u00e8le Volvo, combien de cylindres poss\u00e8de la version avec le moins d'acc\u00e9l\u00e9ration?"},{"db_id":"voter_1","query":"SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'","query_toks":["SELECT","T3.area_code","FROM","contestants","AS","T1","JOIN","votes","AS","T2","ON","T1.contestant_number","=","T2.contestant_number","JOIN","area_code_state","AS","T3","ON","T2.state","=","T3.state","WHERE","T1.contestant_name","=","'Tabatha","Gehling","'","INTERSECT","SELECT","T3.area_code","FROM","contestants","AS","T1","JOIN","votes","AS","T2","ON","T1.contestant_number","=","T2.contestant_number","JOIN","area_code_state","AS","T3","ON","T2.state","=","T3.state","WHERE","T1.contestant_name","=","'Kelly","Clauss","'"],"query_toks_no_value":["select","t3",".","area_code","from","contestants","as","t1","join","votes","as","t2","on","t1",".","contestant_number","=","t2",".","contestant_number","join","area_code_state","as","t3","on","t2",".","state","=","t3",".","state","where","t1",".","contestant_name","=","value","intersect","select","t3",".","area_code","from","contestants","as","t1","join","votes","as","t2","on","t1",".","contestant_number","=","t2",".","contestant_number","join","area_code_state","as","t3","on","t2",".","state","=","t3",".","state","where","t1",".","contestant_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,8,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,8,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Kelly Clauss\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Tabatha Gehling\"",null]]},"question_toks":["\u00c9num\u00e9rez","les","codes","r\u00e9gionaux","dans","lesquels","les","\u00e9lecteurs","ont","vot\u00e9","pour","le","candidat","\u00ab","Tabatha","Gehling","\u00bb","et","le","candidat","\u00ab","Kelly","Clauss","\u00bb","."],"question":"\u00c9num\u00e9rez les codes r\u00e9gionaux dans lesquels les \u00e9lecteurs ont vot\u00e9 pour le candidat \u00abTabatha Gehling\u00bb et le candidat \u00abKelly Clauss\u00bb. "},{"db_id":"car_1","query":"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","query_toks":["SELECT","T1.ContId",",","T1.Continent",",","count","(","*",")","FROM","CONTINENTS","AS","T1","JOIN","COUNTRIES","AS","T2","ON","T1.ContId","=","T2.Continent","GROUP","BY","T1.ContId",";"],"query_toks_no_value":["select","t1",".","contid",",","t1",".","continent",",","count","(","*",")","from","continents","as","t1","join","countries","as","t2","on","t1",".","contid","=","t2",".","continent","group","by","t1",".","contid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,5,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Pour","chaque","continent",",","indiquez","son","identifiant",",","son","nom","et","le","nombre","de","pays","qu'il","comporte","?"],"question":"Pour chaque continent, indiquez son identifiant, son nom et le nombre de pays qu'il comporte ? "},{"db_id":"world_1","query":"SELECT Name FROM country ORDER BY Population ASC LIMIT 3","query_toks":["SELECT","Name","FROM","country","ORDER","BY","Population","ASC","LIMIT","3"],"query_toks_no_value":["select","name","from","country","order","by","population","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["asc",[[0,[0,14,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","nations","avec","les","3","populations","les","plus","faibles","?"],"question":"Quels sont les noms des nations avec les 3 populations les plus faibles?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","template_type_code","FROM","Templates","GROUP","BY","template_type_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","template_type_code","from","templates","group","by","template_type_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoie","le","code","de","type","du","type","de","mod\u00e8le","auquel","appartiennent","la","plupart","des","mod\u00e8les","."],"question":"Renvoie le code de type du type de mod\u00e8le auquel appartiennent la plupart des mod\u00e8les."},{"db_id":"dog_kennels","query":"SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.breed_name","FROM","Breeds","AS","T1","JOIN","Dogs","AS","T2","ON","T1.breed_code","=","T2.breed_code","GROUP","BY","T1.breed_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","breed_name","from","breeds","as","t1","join","dogs","as","t2","on","t1",".","breed_code","=","t2",".","breed_code","group","by","t1",".","breed_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,23,false],null]],"table_units":[["table_unit",0],["table_unit",5]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","race","ont","le","plus","de","chiens","?","Donnez-moi","le","nom","de","la","race","."],"question":"Quelle race ont le plus de chiens? Donnez-moi le nom de la race."},{"db_id":"employee_hire_evaluation","query":"SELECT sum(bonus) FROM evaluation","query_toks":["SELECT","sum","(","bonus",")","FROM","evaluation"],"query_toks_no_value":["select","sum","(","bonus",")","from","evaluation"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,17,false],null]]]],"union":null,"where":[]},"question_toks":["Trouvez","le","montant","total","de","bonus","donn\u00e9","dans","toutes","les","\u00e9valuations","."],"question":"Trouvez le montant total de bonus donn\u00e9 dans toutes les \u00e9valuations."},{"db_id":"network_1","query":"SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"","query_toks":["SELECT","ID","FROM","Highschooler","WHERE","name","=","``","Kyle","''"],"query_toks_no_value":["select","id","from","highschooler","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Quel","est","l'identifiant","de","Kyle","?"],"question":"Quel est l'identifiant de Kyle ? "},{"db_id":"voter_1","query":"SELECT max(area_code) ,  min(area_code) FROM area_code_state","query_toks":["SELECT","max","(","area_code",")",",","min","(","area_code",")","FROM","area_code_state"],"query_toks_no_value":["select","max","(","area_code",")",",","min","(","area_code",")","from","area_code_state"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,1,false],null]],[2,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Quelles","sont","les","valeurs","maximales","et","minimales","des","indicatifs","r\u00e9gionaux","?"],"question":"Quelles sont les valeurs maximales et minimales des indicatifs r\u00e9gionaux ? "},{"db_id":"poker_player","query":"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality","query_toks":["SELECT","Nationality",",","COUNT","(","*",")","FROM","people","GROUP","BY","Nationality"],"query_toks_no_value":["select","nationality",",","count","(","*",")","from","people","group","by","nationality"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","personnes","comporte","chaque","nationalit\u00e9","?"],"question":"Combien de personnes comporte chaque nationalit\u00e9 ? "},{"db_id":"world_1","query":"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"","query_toks":["SELECT","avg","(","GNP",")",",","sum","(","population",")","FROM","country","WHERE","GovernmentForm","=","``","US","Territory","''"],"query_toks_no_value":["select","avg","(","gnp",")",",","sum","(","population",")","from","country","where","governmentform","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,16,false],null]],[4,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"US Territory\"",null]]},"question_toks":["Quel","est","le","PNB","moyen","et","la","population","totale","de","tous","les","pays","dont","le","gouvernement","est","le","territoire","am\u00e9ricain","?"],"question":"Quel est le PNB moyen et la population totale de tous les pays dont le gouvernement est le territoire am\u00e9ricain?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs","query_toks":["SELECT","count","(","DISTINCT","degree_summary_name",")","FROM","Degree_Programs"],"query_toks_no_value":["select","count","(","distinct","degree_summary_name",")","from","degree_programs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,20,true],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","noms","de","dipl\u00f4mes","diff\u00e9rents","sont","propos\u00e9s","?"],"question":"Combien de noms de dipl\u00f4mes diff\u00e9rents sont propos\u00e9s ? "},{"db_id":"car_1","query":"SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';","query_toks":["SELECT","T1.Accelerate","FROM","CARS_DATA","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Id","=","T2.MakeId","WHERE","T2.Make","=","'amc","hornet","sportabout","(","sw",")","'",";"],"query_toks_no_value":["select","t1",".","accelerate","from","cars_data","as","t1","join","car_names","as","t2","on","t1",".","id","=","t2",".","makeid","where","t2",".","make","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,13,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"amc hornet sportabout (sw)\"",null]]},"question_toks":["Combien","la","voiture","acc\u00e9l\u00e8re-t-elle",",","ce","qui","fait","de","l'amc","hornet","sportabout","(","sw",")","?"],"question":"Combien la voiture acc\u00e9l\u00e8re-t-elle, ce qui fait de l'amc hornet sportabout (sw)?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'","query_toks":["SELECT","document_id","FROM","Paragraphs","WHERE","paragraph_text","=","'Brazil","'","INTERSECT","SELECT","document_id","FROM","Paragraphs","WHERE","paragraph_text","=","'Ireland","'"],"query_toks_no_value":["select","document_id","from","paragraphs","where","paragraph_text","=","value","intersect","select","document_id","from","paragraphs","where","paragraph_text","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,16,false],null],"\"Ireland\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,16,false],null],"\"Brazil\"",null]]},"question_toks":["Affichez","l'identifiant","du","document","avec","le","texte","du","paragraphe","\u00ab","Br\u00e9sil","\u00bb","et","\u00ab","Irlande","\u00bb","."],"question":"Affichez l'identifiant du document avec le texte du paragraphe \u00abBr\u00e9sil\u00bb et \u00abIrlande\u00bb."},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","AHD","''"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"AHD\"",null]]},"question_toks":["Quelles","compagnies","a\u00e9riennes","ont","un","vol","avec","l'a\u00e9roport","source","AHD","?"],"question":"Quelles compagnies a\u00e9riennes ont un vol avec l'a\u00e9roport source AHD?"},{"db_id":"orchestra","query":"SELECT avg(Attendance) FROM SHOW","query_toks":["SELECT","avg","(","Attendance",")","FROM","SHOW"],"query_toks_no_value":["select","avg","(","attendance",")","from","show"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","fr\u00e9quentation","moyenne","des","spectacles","?"],"question":"Quelle est la fr\u00e9quentation moyenne des spectacles?"},{"db_id":"course_teach","query":"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name","query_toks":["SELECT","T2.Name",",","COUNT","(","*",")","FROM","course_arrange","AS","T1","JOIN","teacher","AS","T2","ON","T1.Teacher_ID","=","T2.Teacher_ID","GROUP","BY","T2.Name"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","course_arrange","as","t1","join","teacher","as","t2","on","t1",".","teacher_id","=","t2",".","teacher_id","group","by","t2",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,4,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Indique","le","nom","des","enseignants","et","le","nombre","de","cours","qu'ils","enseignent","."],"question":"Indique le nom des enseignants et le nombre de cours qu'ils enseignent."},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRLINES","query_toks":["SELECT","count","(","*",")","FROM","AIRLINES"],"query_toks_no_value":["select","count","(","*",")","from","airlines"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nombre","total","de","compagnies","a\u00e9riennes","?"],"question":"Quel est le nombre total de compagnies a\u00e9riennes?"},{"db_id":"poker_player","query":"SELECT Earnings FROM poker_player ORDER BY Earnings DESC","query_toks":["SELECT","Earnings","FROM","poker_player","ORDER","BY","Earnings","DESC"],"query_toks_no_value":["select","earnings","from","poker_player","order","by","earnings","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","gains","des","joueurs","de","poker",",","class\u00e9s","par","ordre","d\u00e9croissant","de","valeur","?"],"question":"Quels sont les gains des joueurs de poker, class\u00e9s par ordre d\u00e9croissant de valeur?"},{"db_id":"world_1","query":"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"","query_toks":["SELECT","avg","(","GNP",")",",","sum","(","population",")","FROM","country","WHERE","GovernmentForm","=","``","US","Territory","''"],"query_toks_no_value":["select","avg","(","gnp",")",",","sum","(","population",")","from","country","where","governmentform","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,16,false],null]],[4,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"US Territory\"",null]]},"question_toks":["Donnez","le","PNB","moyen","et","la","population","totale","des","nations","qui","sont","consid\u00e9r\u00e9es","comme","le","territoire","am\u00e9ricain","."],"question":"Donnez le PNB moyen et la population totale des nations qui sont consid\u00e9r\u00e9es comme le territoire am\u00e9ricain."},{"db_id":"tvshow","query":"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","query_toks":["SELECT","Episode",",","Rating","FROM","TV_series","ORDER","BY","Rating","DESC","LIMIT","3",";"],"query_toks_no_value":["select","episode",",","rating","from","tv_series","order","by","rating","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","3","\u00e9pisodes","les","mieux","not\u00e9s","dans","le","tableau","des","s\u00e9ries","t\u00e9l\u00e9vis\u00e9es","et","quelles","\u00e9taient","ces","cotes","?"],"question":"Quels sont les 3 \u00e9pisodes les mieux not\u00e9s dans le tableau des s\u00e9ries t\u00e9l\u00e9vis\u00e9es et quelles \u00e9taient ces cotes?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","query_toks":["SELECT","template_type_code",",","count","(","*",")","FROM","Templates","GROUP","BY","template_type_code"],"query_toks_no_value":["select","template_type_code",",","count","(","*",")","from","templates","group","by","template_type_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Affiche","tous","les","codes","de","type","de","mod\u00e8le","et","le","nombre","de","mod\u00e8les","pour","chacun","."],"question":"Affiche tous les codes de type de mod\u00e8le et le nombre de mod\u00e8les pour chacun."},{"db_id":"poker_player","query":"SELECT avg(Earnings) FROM poker_player","query_toks":["SELECT","avg","(","Earnings",")","FROM","poker_player"],"query_toks_no_value":["select","avg","(","earnings",")","from","poker_player"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoie","les","gains","moyens","de","tous","les","joueurs","de","poker","."],"question":"Renvoie les gains moyens de tous les joueurs de poker."},{"db_id":"world_1","query":"SELECT Name FROM country ORDER BY Population DESC LIMIT 3","query_toks":["SELECT","Name","FROM","country","ORDER","BY","Population","DESC","LIMIT","3"],"query_toks_no_value":["select","name","from","country","order","by","population","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[0,14,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoie","les","noms","des","3","pays","les","plus","peupl\u00e9s","."],"question":"Renvoie les noms des 3 pays les plus peupl\u00e9s."},{"db_id":"singer","query":"SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)","query_toks":["SELECT","Name","FROM","singer","WHERE","Singer_ID","NOT","IN","(","SELECT","Singer_ID","FROM","song",")"],"query_toks_no_value":["select","name","from","singer","where","singer_id","not","in","(","select","singer_id","from","song",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["\u00c9num\u00e8re","le","nom","des","chanteurs","qui","n'ont","pas","de","chanson","."],"question":"\u00c9num\u00e8re le nom des chanteurs qui n'ont pas de chanson."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1","query_toks":["SELECT","document_id","FROM","Paragraphs","GROUP","BY","document_id","ORDER","BY","count","(","*",")","ASC","LIMIT","1"],"query_toks_no_value":["select","document_id","from","paragraphs","group","by","document_id","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","l'identifiant","du","document","avec","le","moins","de","paragraphes","?"],"question":"Quel est l'identifiant du document avec le moins de paragraphes?"},{"db_id":"orchestra","query":"SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1","query_toks":["SELECT","Year_of_Founded","FROM","orchestra","AS","T1","JOIN","performance","AS","T2","ON","T1.Orchestra_ID","=","T2.Orchestra_ID","GROUP","BY","T2.Orchestra_ID","HAVING","COUNT","(","*",")",">","1"],"query_toks_no_value":["select","year_of_founded","from","orchestra","as","t1","join","performance","as","t2","on","t1",".","orchestra_id","=","t2",".","orchestra_id","group","by","t2",".","orchestra_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,13,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,13,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","les","ann\u00e9es","o\u00f9","les","orchestres","qui","ont","donn\u00e9","plus","d'une","repr\u00e9sentation","sont","fond\u00e9s","."],"question":"Montre les ann\u00e9es o\u00f9 les orchestres qui ont donn\u00e9 plus d'une repr\u00e9sentation sont fond\u00e9s."},{"db_id":"car_1","query":"SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;","query_toks":["SELECT","count","(","*",")","FROM","CARS_DATA","WHERE","horsepower",">","150",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","horsepower",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,20,false],null],150.0,null]]},"question_toks":["Quel","est","le","nombre","de","voitures","de","plus","de","150","chevaux","?"],"question":"Quel est le nombre de voitures de plus de 150 chevaux?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(DISTINCT template_id) FROM Documents","query_toks":["SELECT","count","(","DISTINCT","template_id",")","FROM","Documents"],"query_toks_no_value":["select","count","(","distinct","template_id",")","from","documents"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,10,true],null]]]],"union":null,"where":[]},"question_toks":["Compte","le","nombre","de","mod\u00e8les","diff\u00e9rents","utilis\u00e9s","pour","les","documents","."],"question":"Compte le nombre de mod\u00e8les diff\u00e9rents utilis\u00e9s pour les documents."},{"db_id":"network_1","query":"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","query_toks":["SELECT","student_id",",","count","(","*",")","FROM","Friend","GROUP","BY","student_id"],"query_toks_no_value":["select","student_id",",","count","(","*",")","from","friend","group","by","student_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","d'amis","chaque","\u00e9l\u00e8ve","a-t-il","?"],"question":"Combien d'amis chaque \u00e9l\u00e8ve a-t-il?"},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"","query_toks":["SELECT","count","(","*",")","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T2.Airline","=","T1.uid","WHERE","T1.Airline","=","``","United","Airlines","''","AND","T2.DestAirport","=","``","ASY","''"],"query_toks_no_value":["select","count","(","*",")","from","airlines","as","t1","join","flights","as","t2","on","t2",".","airline","=","t1",".","uid","where","t1",".","airline","=","value","and","t2",".","destairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,1,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"United Airlines\"",null],"and",[false,2,[0,[0,13,false],null],"\"ASY\"",null]]},"question_toks":["Comptez","le","nombre","de","vols","United","Airlines","arrivant","\u00e0","l'a\u00e9roport","ASY","."],"question":"Comptez le nombre de vols United Airlines arrivant \u00e0 l'a\u00e9roport ASY."},{"db_id":"flight_2","query":"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"","query_toks":["SELECT","T1.FlightNo","FROM","FLIGHTS","AS","T1","JOIN","AIRLINES","AS","T2","ON","T2.uid","=","T1.Airline","WHERE","T2.Airline","=","``","United","Airlines","''"],"query_toks_no_value":["select","t1",".","flightno","from","flights","as","t1","join","airlines","as","t2","on","t2",".","uid","=","t1",".","airline","where","t2",".","airline","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"United Airlines\"",null]]},"question_toks":["Quels","num\u00e9ros","de","vol","correspondent","aux","vols","United","Airlines","?"],"question":"Quels num\u00e9ros de vol correspondent aux vols United Airlines?"},{"db_id":"tvshow","query":"SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";","query_toks":["SELECT","Package_Option","FROM","TV_Channel","WHERE","series_name","=","``","Sky","Radio","''",";"],"query_toks_no_value":["select","package_option","from","tv_channel","where","series_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Sky Radio\"",null]]},"question_toks":["Quelles","sont","les","options","de","package","des","cha\u00eenes","de","t\u00e9l\u00e9vision","dont","les","noms","de","s\u00e9rie","sont","Sky","Radio","?"],"question":"Quelles sont les options de package des cha\u00eenes de t\u00e9l\u00e9vision dont les noms de s\u00e9rie sont Sky Radio?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'","query_toks":["SELECT","T1.paragraph_id",",","T1.paragraph_text","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_id","=","T2.document_id","WHERE","T2.Document_Name","=","'Welcome","to","NY","'"],"query_toks_no_value":["select","t1",".","paragraph_id",",","t1",".","paragraph_text","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","where","t2",".","document_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Welcome to NY\"",null]]},"question_toks":["Affiche","tous","les","identifiants","et","textes","de","paragraphe","pour","le","document","avec","le","nom","\u00ab","Bienvenue","\u00e0","NY","\u00bb","."],"question":"Affiche tous les identifiants et textes de paragraphe pour le document avec le nom \u00abBienvenue \u00e0 NY\u00bb."},{"db_id":"poker_player","query":"SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2","query_toks":["SELECT","Nationality","FROM","people","GROUP","BY","Nationality","HAVING","COUNT","(","*",")",">","=","2"],"query_toks_no_value":["select","nationality","from","people","group","by","nationality","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Quelles","sont","les","nationalit\u00e9s","partag\u00e9es","par","au","moins","deux","personnes","?"],"question":"Quelles sont les nationalit\u00e9s partag\u00e9es par au moins deux personnes?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.template_type_code","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id","GROUP","BY","T1.template_type_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","template_type_code","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id","group","by","t1",".","template_type_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","code","de","type","de","mod\u00e8le","est","utilis\u00e9","par","la","plupart","des","documents","?"],"question":"Quel code de type de mod\u00e8le est utilis\u00e9 par la plupart des documents?"},{"db_id":"network_1","query":"SELECT grade ,  count(*) FROM Highschooler GROUP BY grade","query_toks":["SELECT","grade",",","count","(","*",")","FROM","Highschooler","GROUP","BY","grade"],"query_toks_no_value":["select","grade",",","count","(","*",")","from","highschooler","group","by","grade"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","lyc\u00e9ens","sont","dans","chaque","classe","?"],"question":"Combien de lyc\u00e9ens sont dans chaque classe?"},{"db_id":"flight_2","query":"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"","query_toks":["SELECT","Airline","FROM","AIRLINES","WHERE","Abbreviation","=","``","UAL","''"],"query_toks_no_value":["select","airline","from","airlines","where","abbreviation","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],"\"UAL\"",null]]},"question_toks":["Donnez","\u00e0","la","compagnie","a\u00e9rienne","l'abr\u00e9viation","\u00ab","UAL","\u00bb","."],"question":"Donnez \u00e0 la compagnie a\u00e9rienne l'abr\u00e9viation \u00abUAL\u00bb."},{"db_id":"voter_1","query":"SELECT vote_id ,  phone_number ,  state FROM votes","query_toks":["SELECT","vote_id",",","phone_number",",","state","FROM","votes"],"query_toks_no_value":["select","vote_id",",","phone_number",",","state","from","votes"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["\u00c9num\u00e8re","les","identifiants","de","vote",",","les","num\u00e9ros","de","t\u00e9l\u00e9phone","et","les","\u00e9tats","de","tous","les","votes","."],"question":"\u00c9num\u00e8re les identifiants de vote, les num\u00e9ros de t\u00e9l\u00e9phone et les \u00e9tats de tous les votes."},{"db_id":"tvshow","query":"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE","query_toks":["SELECT","LANGUAGE",",","count","(","*",")","FROM","TV_Channel","GROUP","BY","LANGUAGE"],"query_toks_no_value":["select","language",",","count","(","*",")","from","tv_channel","group","by","language"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["\u00c9num\u00e8re","chaque","langue","et","le","nombre","de","cha\u00eenes","de","t\u00e9l\u00e9vision","qui","l'utilisent","."],"question":"\u00c9num\u00e8re chaque langue et le nombre de cha\u00eenes de t\u00e9l\u00e9vision qui l'utilisent."},{"db_id":"course_teach","query":"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","query_toks":["SELECT","T3.Name",",","T2.Course","FROM","course_arrange","AS","T1","JOIN","course","AS","T2","ON","T1.Course_ID","=","T2.Course_ID","JOIN","teacher","AS","T3","ON","T1.Teacher_ID","=","T3.Teacher_ID","ORDER","BY","T3.Name"],"query_toks_no_value":["select","t3",".","name",",","t2",".","course","from","course_arrange","as","t1","join","course","as","t2","on","t1",".","course_id","=","t2",".","course_id","join","teacher","as","t3","on","t1",".","teacher_id","=","t3",".","teacher_id","order","by","t3",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,5,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","les","noms","des","enseignants","et","les","cours","qu'ils","sont","organis\u00e9s","pour","enseigner","dans","l'ordre","alphab\u00e9tique","croissant","du","nom","de","l'enseignant","."],"question":"Montre les noms des enseignants et les cours qu'ils sont organis\u00e9s pour enseigner dans l'ordre alphab\u00e9tique croissant du nom de l'enseignant."},{"db_id":"student_transcripts_tracking","query":"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.degree_program_id",",","T1.degree_summary_name","FROM","Degree_Programs","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.degree_program_id","=","T2.degree_program_id","GROUP","BY","T1.degree_program_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","degree_program_id",",","t1",".","degree_summary_name","from","degree_programs","as","t1","join","student_enrolment","as","t2","on","t1",".","degree_program_id","=","t2",".","degree_program_id","group","by","t1",".","degree_program_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","programme","auquel","le","plus","grand","nombre","d'\u00e9tudiants","sont","inscrits",".","\u00c9num\u00e9rez","\u00e0","la","fois","l'ID","et","le","r\u00e9sum\u00e9","."],"question":"Trouve le programme auquel le plus grand nombre d'\u00e9tudiants sont inscrits. \u00c9num\u00e9rez \u00e0 la fois l'ID et le r\u00e9sum\u00e9."},{"db_id":"flight_2","query":"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","query_toks":["SELECT","T1.Abbreviation",",","T1.Country","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","GROUP","BY","T1.Airline","ORDER","BY","count","(","*",")","LIMIT","1"],"query_toks_no_value":["select","t1",".","abbreviation",",","t1",".","country","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","group","by","t1",".","airline","order","by","count","(","*",")","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","l'abr\u00e9viation","de","la","compagnie","a\u00e9rienne","qui","a","le","moins","de","vols","et","dans","quel","pays","se","trouve-t-elle","?"],"question":"Quelle est l'abr\u00e9viation de la compagnie a\u00e9rienne qui a le moins de vols et dans quel pays se trouve-t-elle?"},{"db_id":"world_1","query":"SELECT Continent FROM country WHERE Name  =  \"Anguilla\"","query_toks":["SELECT","Continent","FROM","country","WHERE","Name","=","``","Anguilla","''"],"query_toks_no_value":["select","continent","from","country","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Anguilla\"",null]]},"question_toks":["Dans","quel","continent","est","Anguilla","?"],"question":"Dans quel continent est Anguilla?"},{"db_id":"world_1","query":"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1","query_toks":["SELECT","T2.Language","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.GovernmentForm","=","``","Republic","''","GROUP","BY","T2.Language","HAVING","COUNT","(","*",")","=","1"],"query_toks_no_value":["select","t2",".","language","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","governmentform","=","value","group","by","t2",".","language","having","count","(","*",")","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,24,false]],"having":[[false,2,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"Republic\"",null]]},"question_toks":["Quelles","langues","sont","parl\u00e9es","par","un","seul","pays","dans","les","gouvernements","des","r\u00e9publiques","?"],"question":"Quelles langues sont parl\u00e9es par un seul pays dans les gouvernements des r\u00e9publiques?"},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"","query_toks":["SELECT","count","(","*",")","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T2.Airline","=","T1.uid","WHERE","T1.Airline","=","``","United","Airlines","''","AND","T2.SourceAirport","=","``","AHD","''"],"query_toks_no_value":["select","count","(","*",")","from","airlines","as","t1","join","flights","as","t2","on","t2",".","airline","=","t1",".","uid","where","t1",".","airline","=","value","and","t2",".","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,1,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"United Airlines\"",null],"and",[false,2,[0,[0,12,false],null],"\"AHD\"",null]]},"question_toks":["Renvoyez","le","nombre","de","vols","United","Airlines","au","d\u00e9part","de","l'a\u00e9roport","AHD","."],"question":"Renvoyez le nombre de vols United Airlines au d\u00e9part de l'a\u00e9roport AHD."},{"db_id":"course_teach","query":"SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2","query_toks":["SELECT","T2.Name","FROM","course_arrange","AS","T1","JOIN","teacher","AS","T2","ON","T1.Teacher_ID","=","T2.Teacher_ID","GROUP","BY","T2.Name","HAVING","COUNT","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","name","from","course_arrange","as","t1","join","teacher","as","t2","on","t1",".","teacher_id","=","t2",".","teacher_id","group","by","t2",".","name","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,4,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,5,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Indique","le","nom","des","enseignants","qui","enseignent","au","moins","deux","cours","."],"question":"Indique le nom des enseignants qui enseignent au moins deux cours."},{"db_id":"flight_2","query":"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"","query_toks":["SELECT","AirportCode",",","AirportName","FROM","AIRPORTS","WHERE","city","=","``","Anthony","''"],"query_toks_no_value":["select","airportcode",",","airportname","from","airports","where","city","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Anthony\"",null]]},"question_toks":["Donne","le","code","de","l'a\u00e9roport","et","le","nom","de","l'a\u00e9roport","correspondant","\u00e0","la","ville","Anthony","."],"question":"Donne le code de l'a\u00e9roport et le nom de l'a\u00e9roport correspondant \u00e0 la ville Anthony."},{"db_id":"voter_1","query":"SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.area_code","FROM","area_code_state","AS","T1","JOIN","votes","AS","T2","ON","T1.state","=","T2.state","GROUP","BY","T1.area_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","area_code","from","area_code_state","as","t1","join","votes","as","t2","on","t1",".","state","=","t2",".","state","group","by","t1",".","area_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","l'indicatif","r\u00e9gional","dans","lequel","le","plus","d'\u00e9lecteurs","ont","vot\u00e9","?"],"question":"Quel est l'indicatif r\u00e9gional dans lequel le plus d'\u00e9lecteurs ont vot\u00e9?"},{"db_id":"concert_singer","query":"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","query_toks":["SELECT","name",",","country","FROM","singer","WHERE","song_name","LIKE","'","%","Hey","%","'"],"query_toks_no_value":["select","name",",","country","from","singer","where","song_name","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,9,[0,[0,11,false],null],"\"%Hey%\"",null]]},"question_toks":["Quels","sont","le","nom","et","le","pays","d'origine","de","chaque","chanteur","qui","a","une","chanson","avec","le","mot","\u00ab","Hey","\u00bb","dans","son","titre","?"],"question":"Quels sont le nom et le pays d'origine de chaque chanteur qui a une chanson avec le mot \u00abHey\u00bb dans son titre?"},{"db_id":"dog_kennels","query":"SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )","query_toks":["SELECT","count","(","*",")","FROM","Dogs","WHERE","dog_id","NOT","IN","(","SELECT","dog_id","FROM","Treatments",")"],"query_toks_no_value":["select","count","(","*",")","from","dogs","where","dog_id","not","in","(","select","dog_id","from","treatments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,20,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,45,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Dis-moi","le","nombre","de","chiens","qui","ont","re\u00e7u","un","traitement","."],"question":"Dis-moi le nombre de chiens qui ont re\u00e7u un traitement."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"","query_toks":["SELECT","count","(","*",")","FROM","Templates","WHERE","template_type_code","=","``","CV","''"],"query_toks_no_value":["select","count","(","*",")","from","templates","where","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"CV\"",null]]},"question_toks":["Compt","le","nombre","de","mod\u00e8les","du","type","CV","."],"question":"Compt le nombre de mod\u00e8les du type CV."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID","query_toks":["SELECT","DISTINCT","T1.template_type_description","FROM","Ref_template_types","AS","T1","JOIN","Templates","AS","T2","ON","T1.template_type_code","=","T2.template_type_code","JOIN","Documents","AS","T3","ON","T2.Template_ID","=","T3.template_ID"],"query_toks_no_value":["select","distinct","t1",".","template_type_description","from","ref_template_types","as","t1","join","templates","as","t2","on","t1",".","template_type_code","=","t2",".","template_type_code","join","documents","as","t3","on","t2",".","template_id","=","t3",".","template_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,5,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoie","les","diff\u00e9rentes","descriptions","des","mod\u00e8les","qui","ont","\u00e9t\u00e9","utilis\u00e9s","dans","un","document","."],"question":"Renvoie les diff\u00e9rentes descriptions des mod\u00e8les qui ont \u00e9t\u00e9 utilis\u00e9s dans un document."},{"db_id":"singer","query":"SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1","query_toks":["SELECT","Name","FROM","singer","ORDER","BY","Net_Worth_Millions","DESC","LIMIT","1"],"query_toks_no_value":["select","name","from","singer","order","by","net_worth_millions","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,4,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nom","du","chanteur","qui","vaut","le","plus","?"],"question":"Quel est le nom du chanteur qui vaut le plus?"},{"db_id":"dog_kennels","query":"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","query_toks":["SELECT","T1.professional_id",",","T1.cell_number","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id","GROUP","BY","T1.professional_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","professional_id",",","t1",".","cell_number","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id","group","by","t1",".","professional_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,33,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,43,false],null]]]],"union":null,"where":[]},"question_toks":["Trouv","l'identifiant","et","le","t\u00e9l\u00e9phone","portable","des","professionnels","qui","op\u00e8rent","deux","ou","plusieurs","types","de","traitements","."],"question":"Trouv l'identifiant et le t\u00e9l\u00e9phone portable des professionnels qui op\u00e8rent deux ou plusieurs types de traitements."},{"db_id":"student_transcripts_tracking","query":"SELECT section_description FROM Sections WHERE section_name  =  'h'","query_toks":["SELECT","section_description","FROM","Sections","WHERE","section_name","=","'h","'"],"query_toks_no_value":["select","section_description","from","sections","where","section_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,26,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"h\"",null]]},"question_toks":["Quelle","est","la","description","de","la","section","nomm\u00e9e","h","?"],"question":"Quelle est la description de la section nomm\u00e9e h?"},{"db_id":"network_1","query":"SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id","query_toks":["SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","INTERSECT","SELECT","T2.name","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.liked_id","=","T2.id"],"query_toks_no_value":["select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","intersect","select","t2",".","name","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","liked_id","=","t2",".","id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","le","nom","de","tous","les","\u00e9l\u00e8ves","qui","ont","des","amis","et","qui","sont","\u00e9galement","appr\u00e9ci\u00e9s","par","quelqu'un","d'autre","."],"question":"Montre le nom de tous les \u00e9l\u00e8ves qui ont des amis et qui sont \u00e9galement appr\u00e9ci\u00e9s par quelqu'un d'autre."},{"db_id":"dog_kennels","query":"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","query_toks":["SELECT","professional_id",",","last_name",",","cell_number","FROM","Professionals","WHERE","state","=","'Indiana","'","UNION","SELECT","T1.professional_id",",","T1.last_name",",","T1.cell_number","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id","GROUP","BY","T1.professional_id","HAVING","count","(","*",")",">","2"],"query_toks_no_value":["select","professional_id",",","last_name",",","cell_number","from","professionals","where","state","=","value","union","select","t1",".","professional_id",",","t1",".","last_name",",","t1",".","cell_number","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id","group","by","t1",".","professional_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,40,false],null]],[0,[0,[0,43,false],null]]]],"union":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,33,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,40,false],null]],[0,[0,[0,43,false],null]]]],"union":null,"where":[]},"where":[[false,2,[0,[0,38,false],null],"\"Indiana\"",null]]},"question_toks":["Trouve","l'identifiant",",","le","nom","et","le","t\u00e9l\u00e9phone","portable","des","professionnels","qui","vivent","dans","l'\u00e9tat","de","l'Indiana","ou","qui","ont","effectu\u00e9","plus","de","deux","traitements","."],"question":"Trouve l'identifiant, le nom et le t\u00e9l\u00e9phone portable des professionnels qui vivent dans l'\u00e9tat de l'Indiana ou qui ont effectu\u00e9 plus de deux traitements."},{"db_id":"pets_1","query":"SELECT count(*) FROM pets WHERE weight  >  10","query_toks":["SELECT","count","(","*",")","FROM","pets","WHERE","weight",">","10"],"query_toks_no_value":["select","count","(","*",")","from","pets","where","weight",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,14,false],null],10.0,null]]},"question_toks":["Trouve","le","nombre","d'animaux","de","compagnie","dont","le","poids","est","sup\u00e9rieur","\u00e0","10","."],"question":"Trouve le nombre d'animaux de compagnie dont le poids est sup\u00e9rieur \u00e0 10."},{"db_id":"tvshow","query":"SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";","query_toks":["SELECT","Title","FROM","Cartoon","WHERE","Directed_by","=","``","Ben","Jones","''",";"],"query_toks_no_value":["select","title","from","cartoon","where","directed_by","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null]]},"question_toks":["Quels","sont","les","noms","de","tous","les","dessins","anim\u00e9s","r\u00e9alis\u00e9s","par","Ben","Jones","?"],"question":"Quels sont les noms de tous les dessins anim\u00e9s r\u00e9alis\u00e9s par Ben Jones?"},{"db_id":"employee_hire_evaluation","query":"SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1","query_toks":["SELECT","city","FROM","employee","WHERE","age","<","30","GROUP","BY","city","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","city","from","employee","where","age","<","value","group","by","city","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,4,[0,[0,3,false],null],30.0,null]]},"question_toks":["De","quelles","villes","proviennent","plus","d'un","employ\u00e9","de","moins","de","30","ans","?"],"question":"De quelles villes proviennent plus d'un employ\u00e9 de moins de 30 ans?"},{"db_id":"employee_hire_evaluation","query":"SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1","query_toks":["SELECT","city","FROM","employee","WHERE","age","<","30","GROUP","BY","city","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","city","from","employee","where","age","<","value","group","by","city","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,4,[0,[0,3,false],null],30.0,null]]},"question_toks":["Trouve","les","villes","qui","comptent","plus","d'un","employ\u00e9","de","moins","de","30","ans","."],"question":"Trouve les villes qui comptent plus d'un employ\u00e9 de moins de 30 ans."},{"db_id":"world_1","query":"SELECT count(DISTINCT LANGUAGE) FROM countrylanguage","query_toks":["SELECT","count","(","DISTINCT","LANGUAGE",")","FROM","countrylanguage"],"query_toks_no_value":["select","count","(","distinct","language",")","from","countrylanguage"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,24,true],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","langues","uniques","sont","parl\u00e9es","dans","le","monde","?"],"question":"Combien de langues uniques sont parl\u00e9es dans le monde?"},{"db_id":"network_1","query":"SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4","query_toks":["SELECT","grade","FROM","Highschooler","GROUP","BY","grade","HAVING","count","(","*",")",">","=","4"],"query_toks_no_value":["select","grade","from","highschooler","group","by","grade","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[[false,5,[0,[3,0,false],null],4.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Quelles","classes","ont","4","lyc\u00e9ens","ou","plus","?"],"question":"Quelles classes ont 4 lyc\u00e9ens ou plus?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","query_toks":["SELECT","document_id",",","count","(","*",")","FROM","Paragraphs","GROUP","BY","document_id","ORDER","BY","document_id"],"query_toks_no_value":["select","document_id",",","count","(","*",")","from","paragraphs","group","by","document_id","order","by","document_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,15,false],null]]],"select":[false,[[0,[0,[0,15,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoie","les","diff\u00e9rents","identifiants","du","document","ainsi","que","le","nombre","de","paragraphes","correspondant","\u00e0","chacun",",","class\u00e9s","par","identifiant","."],"question":"Renvoie les diff\u00e9rents identifiants du document ainsi que le nombre de paragraphes correspondant \u00e0 chacun, class\u00e9s par identifiant."},{"db_id":"flight_2","query":"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"","query_toks":["SELECT","AirportName","FROM","AIRPORTS","WHERE","AirportCode","=","``","AKO","''"],"query_toks_no_value":["select","airportname","from","airports","where","airportcode","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"AKO\"",null]]},"question_toks":["Renvoie","le","nom","de","l'a\u00e9roport","avec","le","code","\u00ab","AKO","\u00bb","."],"question":"Renvoie le nom de l'a\u00e9roport avec le code \u00abAKO\u00bb."},{"db_id":"course_teach","query":"SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)","query_toks":["SELECT","Name","FROM","teacher","WHERE","Teacher_id","NOT","IN","(","SELECT","Teacher_id","FROM","course_arrange",")"],"query_toks_no_value":["select","name","from","teacher","where","teacher_id","not","in","(","select","teacher_id","from","course_arrange",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[true,8,[0,[0,4,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["\u00c9num\u00e8re","les","noms","des","enseignants","qui","n'ont","pas","\u00e9t\u00e9","organis\u00e9s","pour","dispenser","des","cours","."],"question":"\u00c9num\u00e8re les noms des enseignants qui n'ont pas \u00e9t\u00e9 organis\u00e9s pour dispenser des cours."},{"db_id":"dog_kennels","query":"SELECT count(DISTINCT dog_id) FROM Treatments","query_toks":["SELECT","count","(","DISTINCT","dog_id",")","FROM","Treatments"],"query_toks_no_value":["select","count","(","distinct","dog_id",")","from","treatments"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,45,true],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","chiens","ont","subi","des","traitements","?"],"question":"Combien de chiens ont subi des traitements?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'","query_toks":["SELECT","T1.first_name","FROM","Students","AS","T1","JOIN","Addresses","AS","T2","ON","T1.permanent_address_id","=","T2.address_id","WHERE","T2.country","=","'Haiti","'","UNION","SELECT","first_name","FROM","Students","WHERE","cell_mobile_number","=","'09700166582","'"],"query_toks_no_value":["select","t1",".","first_name","from","students","as","t1","join","addresses","as","t2","on","t1",".","permanent_address_id","=","t2",".","address_id","where","t2",".","country","=","value","union","select","first_name","from","students","where","cell_mobile_number","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,34,false],null],[0,1,false],null]],"table_units":[["table_unit",6],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]]]],"union":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],"\"09700166582\"",null]]},"where":[[false,2,[0,[0,8,false],null],"\"Haiti\"",null]]},"question_toks":["Quels","sont","les","pr\u00e9noms","des","\u00e9tudiants","qui","vivent","en","Ha\u00efti","de","fa\u00e7on","permanente","ou","qui","ont","le","num\u00e9ro","de","t\u00e9l\u00e9phone","portable","09700166582","?"],"question":"Quels sont les pr\u00e9noms des \u00e9tudiants qui vivent en Ha\u00efti de fa\u00e7on permanente ou qui ont le num\u00e9ro de t\u00e9l\u00e9phone portable 09700166582?"},{"db_id":"real_estate_properties","query":"SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"","query_toks":["SELECT","T2.feature_type_name","FROM","Other_Available_Features","AS","T1","JOIN","Ref_Feature_Types","AS","T2","ON","T1.feature_type_code","=","T2.feature_type_code","WHERE","T1.feature_name","=","``","AirCon","''"],"query_toks_no_value":["select","t2",".","feature_type_name","from","other_available_features","as","t1","join","ref_feature_types","as","t2","on","t1",".","feature_type_code","=","t2",".","feature_type_code","where","t1",".","feature_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"AirCon\"",null]]},"question_toks":["Quel","est","le","nom","du","type","de","fonction","de","la","fonction","AirCon","?"],"question":"Quel est le nom du type de fonction de la fonction AirCon?"},{"db_id":"world_1","query":"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"","query_toks":["SELECT","COUNT","(","DISTINCT","Continent",")","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","Chinese","''"],"query_toks_no_value":["select","count","(","distinct","continent",")","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,10,true],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Chinese\"",null]]},"question_toks":["Quel","est","le","nombre","de","continents","distincts","o\u00f9","le","chinois","est","parl\u00e9","?"],"question":"Quel est le nombre de continents distincts o\u00f9 le chinois est parl\u00e9?"},{"db_id":"singer","query":"SELECT count(*) FROM singer","query_toks":["SELECT","count","(","*",")","FROM","singer"],"query_toks_no_value":["select","count","(","*",")","from","singer"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","y","a-t-il","de","chanteurs","?"],"question":"Combien y a-t-il de chanteurs?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","WHERE","DestAirport","=","``","ATO","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","where","destairport","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"ATO\"",null]]},"question_toks":["Combien","de","vols","ont","la","destination","ATO","?"],"question":"Combien de vols ont la destination ATO?"},{"db_id":"orchestra","query":"SELECT avg(Attendance) FROM SHOW","query_toks":["SELECT","avg","(","Attendance",")","FROM","SHOW"],"query_toks_no_value":["select","avg","(","attendance",")","from","show"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoie","la","fr\u00e9quentation","moyenne","de","tous","les","spectacles","."],"question":"Renvoie la fr\u00e9quentation moyenne de tous les spectacles."},{"db_id":"dog_kennels","query":"SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )","query_toks":["SELECT","count","(","*",")","FROM","Owners","WHERE","owner_id","NOT","IN","(","SELECT","owner_id","FROM","Dogs",")"],"query_toks_no_value":["select","count","(","*",")","from","owners","where","owner_id","not","in","(","select","owner_id","from","dogs",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,10,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,21,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Combien","de","propri\u00e9taires","n'ont","temporairement","pas","de","chien","?"],"question":"Combien de propri\u00e9taires n'ont temporairement pas de chien?"},{"db_id":"poker_player","query":"SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC","query_toks":["SELECT","T1.Name","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T2.Earnings","DESC"],"query_toks_no_value":["select","t1",".","name","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t2",".","earnings","desc"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","joueurs","de","poker","par","ordre","d\u00e9croissant","de","gains","?"],"question":"Quels sont les noms des joueurs de poker par ordre d\u00e9croissant de gains?"},{"db_id":"wta_1","query":"SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10","query_toks":["SELECT","tourney_name","FROM","matches","GROUP","BY","tourney_name","HAVING","count","(","*",")",">","10"],"query_toks_no_value":["select","tourney_name","from","matches","group","by","tourney_name","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,27,false]],"having":[[false,3,[0,[3,0,false],null],10.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,27,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","tournois","qui","ont","plus","de","10","matchs","?"],"question":"Quels sont les noms des tournois qui ont plus de 10 matchs?"},{"db_id":"student_transcripts_tracking","query":"SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'","query_toks":["SELECT","zip_postcode","FROM","Addresses","WHERE","city","=","'Port","Chelsea","'"],"query_toks_no_value":["select","zip_postcode","from","addresses","where","city","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Port Chelsea\"",null]]},"question_toks":["Quel","est","le","code","postal","de","Port","Chelsea","?"],"question":"Quel est le code postal de Port Chelsea?"},{"db_id":"world_1","query":"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")","query_toks":["SELECT","avg","(","LifeExpectancy",")","FROM","country","WHERE","Name","NOT","IN","(","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","AND","T2.IsOfficial","=","``","T","''",")"],"query_toks_no_value":["select","avg","(","lifeexpectancy",")","from","country","where","name","not","in","(","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","t2",".","isofficial","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,15,false],null]]]],"union":null,"where":[[true,8,[0,[0,9,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},null]]},"question_toks":["Quelle","est","l'esp\u00e9rance","de","vie","moyenne","dans","les","pays","o\u00f9","l'anglais","n'est","pas","la","langue","officielle","?"],"question":"Quelle est l'esp\u00e9rance de vie moyenne dans les pays o\u00f9 l'anglais n'est pas la langue officielle?"},{"db_id":"car_1","query":"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';","query_toks":["SELECT","DISTINCT","T1.model","FROM","MODEL_LIST","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Model","=","T2.Model","JOIN","CARS_DATA","AS","T3","ON","T2.MakeId","=","T3.Id","JOIN","CAR_MAKERS","AS","T4","ON","T1.Maker","=","T4.Id","WHERE","T3.weight","<","3500","AND","T4.FullName","!","=","'Ford","Motor","Company","'",";"],"query_toks_no_value":["select","distinct","t1",".","model","from","model_list","as","t1","join","car_names","as","t2","on","t1",".","model","=","t2",".","model","join","cars_data","as","t3","on","t2",".","makeid","=","t3",".","id","join","car_makers","as","t4","on","t1",".","maker","=","t4",".","id","where","t3",".","weight","<","value","and","t4",".","fullname","!","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,14,false],null]],"table_units":[["table_unit",3],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,4,[0,[0,21,false],null],3500.0,null],"and",[false,7,[0,[0,8,false],null],"\"Ford Motor Company\"",null]]},"question_toks":["Quels","mod\u00e8les","sont","plus","l\u00e9gers","que","3500","mais","pas","construits","par","la","\u00ab","Ford","Motor","Company","\u00bb","?"],"question":"Quels mod\u00e8les sont plus l\u00e9gers que 3500 mais pas construits par la \u00abFord Motor Company\u00bb?"},{"db_id":"flight_2","query":"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"","query_toks":["SELECT","T1.FlightNo","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","WHERE","T2.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","t1",".","flightno","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","where","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["``","Quels","sont","les","num\u00e9ros","de","vol","des","vols","arrivant","\u00e0","City","''","``","Aberdeen","''","``","?","''"],"question":"\"Quels sont les num\u00e9ros de vol des vols arrivant \u00e0 City\" \"Aberdeen\" \"?\""},{"db_id":"battle_death","query":"SELECT avg(injured) FROM death","query_toks":["SELECT","avg","(","injured",")","FROM","death"],"query_toks_no_value":["select","avg","(","injured",")","from","death"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,18,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nombre","moyen","de","blessures","caus\u00e9es","\u00e0","chaque","fois","?"],"question":"Quel est le nombre moyen de blessures caus\u00e9es \u00e0 chaque fois?"},{"db_id":"car_1","query":"SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;","query_toks":["SELECT","DISTINCT","T2.Model","FROM","CAR_NAMES","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Model","=","T2.Model","JOIN","CAR_MAKERS","AS","T3","ON","T2.Maker","=","T3.Id","JOIN","CARS_DATA","AS","T4","ON","T1.MakeId","=","T4.Id","WHERE","T3.FullName","=","'General","Motors","'","OR","T4.weight",">","3500",";"],"query_toks_no_value":["select","distinct","t2",".","model","from","car_names","as","t1","join","model_list","as","t2","on","t1",".","model","=","t2",".","model","join","car_makers","as","t3","on","t2",".","maker","=","t3",".","id","join","cars_data","as","t4","on","t1",".","makeid","=","t4",".","id","where","t3",".","fullname","=","value","or","t4",".","weight",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,14,false],null],[0,12,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"General Motors\"",null],"or",[false,3,[0,[0,21,false],null],3500.0,null]]},"question_toks":["Quels","sont","les","diff\u00e9rents","mod\u00e8les","cr\u00e9\u00e9s","par","le","constructeur","automobile","General","Motors","ou","pesant","plus","de","3500","?"],"question":"Quels sont les diff\u00e9rents mod\u00e8les cr\u00e9\u00e9s par le constructeur automobile General Motors ou pesant plus de 3500?"},{"db_id":"car_1","query":"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","query_toks":["SELECT","T1.Continent",",","count","(","*",")","FROM","CONTINENTS","AS","T1","JOIN","COUNTRIES","AS","T2","ON","T1.ContId","=","T2.continent","JOIN","car_makers","AS","T3","ON","T2.CountryId","=","T3.Country","GROUP","BY","T1.Continent",";"],"query_toks_no_value":["select","t1",".","continent",",","count","(","*",")","from","continents","as","t1","join","countries","as","t2","on","t1",".","contid","=","t2",".","continent","join","car_makers","as","t3","on","t2",".","countryid","=","t3",".","country","group","by","t1",".","continent"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,5,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nom","de","chaque","continent","et","combien","de","constructeurs","automobiles","y","a-t-il","sur","chacun","?"],"question":"Quel est le nom de chaque continent et combien de constructeurs automobiles y a-t-il sur chacun?"},{"db_id":"tvshow","query":"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE","query_toks":["SELECT","LANGUAGE",",","count","(","*",")","FROM","TV_Channel","GROUP","BY","LANGUAGE"],"query_toks_no_value":["select","language",",","count","(","*",")","from","tv_channel","group","by","language"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Pour","chaque","langue",",","indique","le","nombre","de","cha\u00eenes","de","t\u00e9l\u00e9vision","qui","l'utilisent","."],"question":"Pour chaque langue, indique le nombre de cha\u00eenes de t\u00e9l\u00e9vision qui l'utilisent."},{"db_id":"dog_kennels","query":"SELECT count(DISTINCT dog_id) FROM Treatments","query_toks":["SELECT","count","(","DISTINCT","dog_id",")","FROM","Treatments"],"query_toks_no_value":["select","count","(","distinct","dog_id",")","from","treatments"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,45,true],null]]]],"union":null,"where":[]},"question_toks":["Compte","le","nombre","de","chiens","qui","ont","subi","un","traitement","."],"question":"Compte le nombre de chiens qui ont subi un traitement."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code ,  template_type_description FROM Ref_template_types","query_toks":["SELECT","template_type_code",",","template_type_description","FROM","Ref_template_types"],"query_toks_no_value":["select","template_type_code",",","template_type_description","from","ref_template_types"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","codes","de","type","et","les","descriptions","pour","tous","les","types","de","mod\u00e8les","?"],"question":"Quels sont les codes de type et les descriptions pour tous les types de mod\u00e8les?"},{"db_id":"world_1","query":"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","query_toks":["SELECT","COUNT","(","T2.Language",")",",","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","GROUP","BY","T1.Name","HAVING","COUNT","(","*",")",">","2"],"query_toks_no_value":["select","count","(","t2",".","language",")",",","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","group","by","t1",".","name","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,9,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,24,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","pays","qui","parlent","plus","de","2","langues",",","ainsi","que","combien","de","langues","ils","parlent","?"],"question":"Quels sont les noms des pays qui parlent plus de 2 langues, ainsi que combien de langues ils parlent?"},{"db_id":"world_1","query":"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"","query_toks":["SELECT","DISTINCT","T1.Region","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","OR","T2.Language","=","``","Dutch","''"],"query_toks_no_value":["select","distinct","t1",".","region","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","or","t2",".","language","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null],"or",[false,2,[0,[0,24,false],null],"\"Dutch\"",null]]},"question_toks":["Quelles","sont","les","r\u00e9gions","qui","utilisent","l'anglais","ou","le","n\u00e9erlandais","?"],"question":"Quelles sont les r\u00e9gions qui utilisent l'anglais ou le n\u00e9erlandais?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"","query_toks":["SELECT","template_id","FROM","Templates","WHERE","template_type_code","=","``","PP","''","OR","template_type_code","=","``","PPT","''"],"query_toks_no_value":["select","template_id","from","templates","where","template_type_code","=","value","or","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"PP\"",null],"or",[false,2,[0,[0,5,false],null],"\"PPT\"",null]]},"question_toks":["Quels","sont","les","identifiants","des","mod\u00e8les","avec","le","code","de","type","de","mod\u00e8le","PP","ou","PPT","?"],"question":"Quels sont les identifiants des mod\u00e8les avec le code de type de mod\u00e8le PP ou PPT?"},{"db_id":"concert_singer","query":"SELECT count(*) FROM singer","query_toks":["SELECT","count","(","*",")","FROM","singer"],"query_toks_no_value":["select","count","(","*",")","from","singer"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nombre","total","de","chanteurs","?"],"question":"Quel est le nombre total de chanteurs?"},{"db_id":"world_1","query":"SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"","query_toks":["SELECT","sum","(","Population",")","FROM","city","WHERE","District","=","``","Gelderland","''"],"query_toks_no_value":["select","sum","(","population",")","from","city","where","district","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Gelderland\"",null]]},"question_toks":["Quelle","est","la","population","totale","du","district","de","Gelderland","?"],"question":"Quelle est la population totale du district de Gelderland?"},{"db_id":"tvshow","query":"SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1","query_toks":["SELECT","production_code",",","channel","FROM","cartoon","ORDER","BY","original_air_date","LIMIT","1"],"query_toks_no_value":["select","production_code",",","channel","from","cartoon","order","by","original_air_date","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,23,false],null]]],"select":[false,[[0,[0,[0,24,false],null]],[0,[0,[0,25,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","code","de","production","et","la","cha\u00eene","du","dessin","anim\u00e9","le","plus","r\u00e9cemment","diffus\u00e9","."],"question":"Trouve le code de production et la cha\u00eene du dessin anim\u00e9 le plus r\u00e9cemment diffus\u00e9."},{"db_id":"car_1","query":"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","query_toks":["SELECT","T2.horsepower",",","T1.Make","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","WHERE","T2.cylinders","=","3","ORDER","BY","T2.horsepower","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t2",".","horsepower",",","t1",".","make","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","where","t2",".","cylinders","=","value","order","by","t2",".","horsepower","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,20,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],3.0,null]]},"question_toks":["Quelle","est","la","puissance","maximale","et","la","marque","des","mod\u00e8les","de","voitures","\u00e0","3","cylindres","?"],"question":"Quelle est la puissance maximale et la marque des mod\u00e8les de voitures \u00e0 3 cylindres?"},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"","query_toks":["SELECT","count","(","*",")","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T2.Airline","=","T1.uid","WHERE","T1.Airline","=","``","United","Airlines","''","AND","T2.DestAirport","=","``","ASY","''"],"query_toks_no_value":["select","count","(","*",")","from","airlines","as","t1","join","flights","as","t2","on","t2",".","airline","=","t1",".","uid","where","t1",".","airline","=","value","and","t2",".","destairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,1,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"United Airlines\"",null],"and",[false,2,[0,[0,13,false],null],"\"ASY\"",null]]},"question_toks":["Combien","de","vols","'United","Airlines","'","vont","\u00e0","l'a\u00e9roport","'ASY","'","?"],"question":"Combien de vols 'United Airlines' vont \u00e0 l'a\u00e9roport 'ASY'?"},{"db_id":"orchestra","query":"SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003","query_toks":["SELECT","Record_Company","FROM","orchestra","WHERE","Year_of_Founded","<","2003","INTERSECT","SELECT","Record_Company","FROM","orchestra","WHERE","Year_of_Founded",">","2003"],"query_toks_no_value":["select","record_company","from","orchestra","where","year_of_founded","<","value","intersect","select","record_company","from","orchestra","where","year_of_founded",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,3,[0,[0,10,false],null],2003.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,4,[0,[0,10,false],null],2003.0,null]]},"question_toks":["Quelles","sont","les","maisons","de","disques","utilis\u00e9es","par","les","orchestres","fond\u00e9s","avant","2003","et","ceux","fond\u00e9s","apr\u00e8s","2003","?"],"question":"Quelles sont les maisons de disques utilis\u00e9es par les orchestres fond\u00e9s avant 2003 et ceux fond\u00e9s apr\u00e8s 2003?"},{"db_id":"dog_kennels","query":"SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1","query_toks":["SELECT","name",",","age",",","weight","FROM","Dogs","WHERE","abandoned_yn","=","1"],"query_toks_no_value":["select","name",",","age",",","weight","from","dogs","where","abandoned_yn","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]],[0,[0,[0,26,false],null]],[0,[0,[0,29,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],1.0,null]]},"question_toks":["Quels","sont","le","nom",",","l'\u00e2ge","et","le","poids","des","chiens","abandonn\u00e9s","?","Notez","que","1","signifie","oui","et","0","signifie","non","dans","les","tableaux","."],"question":"Quels sont le nom, l'\u00e2ge et le poids des chiens abandonn\u00e9s? Notez que 1 signifie oui et 0 signifie non dans les tableaux."},{"db_id":"poker_player","query":"SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made","query_toks":["SELECT","T1.Name","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T2.Final_Table_Made"],"query_toks_no_value":["select","t1",".","name","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t2",".","final_table_made"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,3,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","joueurs","de","poker",",","class\u00e9s","par","ordre","croissant","du","nombre","de","tables","finales","qu'ils","ont","faites","?"],"question":"Quels sont les noms des joueurs de poker, class\u00e9s par ordre croissant du nombre de tables finales qu'ils ont faites?"},{"db_id":"flight_2","query":"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"","query_toks":["SELECT","Abbreviation","FROM","AIRLINES","WHERE","Airline","=","``","JetBlue","Airways","''"],"query_toks_no_value":["select","abbreviation","from","airlines","where","airline","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"JetBlue Airways\"",null]]},"question_toks":["Quelle","abr\u00e9viation","correspond","\u00e0","Jetblue","Airways","?"],"question":"Quelle abr\u00e9viation correspond \u00e0 Jetblue Airways?"},{"db_id":"student_transcripts_tracking","query":"SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1","query_toks":["SELECT","transcript_date","FROM","Transcripts","ORDER","BY","transcript_date","DESC","LIMIT","1"],"query_toks_no_value":["select","transcript_date","from","transcripts","order","by","transcript_date","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",9]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,53,false],null]]],"select":[false,[[0,[0,[0,53,false],null]]]],"union":null,"where":[]},"question_toks":["Quand","la","derni\u00e8re","transcription","a-t-elle","\u00e9t\u00e9","publi\u00e9e","?"],"question":"Quand la derni\u00e8re transcription a-t-elle \u00e9t\u00e9 publi\u00e9e?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(*) FROM Transcripts","query_toks":["SELECT","count","(","*",")","FROM","Transcripts"],"query_toks_no_value":["select","count","(","*",")","from","transcripts"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",9]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","transcriptions","sont","r\u00e9pertori\u00e9es","?"],"question":"Combien de transcriptions sont r\u00e9pertori\u00e9es?"},{"db_id":"wta_1","query":"SELECT count(DISTINCT country_code) FROM players","query_toks":["SELECT","count","(","DISTINCT","country_code",")","FROM","players"],"query_toks_no_value":["select","count","(","distinct","country_code",")","from","players"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,6,true],null]]]],"union":null,"where":[]},"question_toks":["De","combien","de","pays","distincts","les","joueurs","viennent-ils","?"],"question":"De combien de pays distincts les joueurs viennent-ils?"},{"db_id":"singer","query":"SELECT Birth_Year ,  Citizenship FROM singer","query_toks":["SELECT","Birth_Year",",","Citizenship","FROM","singer"],"query_toks_no_value":["select","birth_year",",","citizenship","from","singer"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quelles","sont","les","ann\u00e9es","de","naissance","et","la","nationalit\u00e9","des","chanteurs","?"],"question":"Quelles sont les ann\u00e9es de naissance et la nationalit\u00e9 des chanteurs?"},{"db_id":"wta_1","query":"SELECT avg(loser_age) ,  avg(winner_age) FROM matches","query_toks":["SELECT","avg","(","loser_age",")",",","avg","(","winner_age",")","FROM","matches"],"query_toks_no_value":["select","avg","(","loser_age",")",",","avg","(","winner_age",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,9,false],null]],[5,[0,[0,28,false],null]]]],"union":null,"where":[]},"question_toks":["Trouvez","l'\u00e2ge","moyen","des","perdants","et","des","gagnants","de","tous","les","matchs","."],"question":"Trouvez l'\u00e2ge moyen des perdants et des gagnants de tous les matchs."},{"db_id":"voter_1","query":"SELECT contestant_name FROM contestants WHERE contestant_name LIKE \"%Al%\"","query_toks":["SELECT","contestant_name","FROM","contestants","WHERE","contestant_name","LIKE","``","%","Al","%","''"],"query_toks_no_value":["select","contestant_name","from","contestants","where","contestant_name","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,9,[0,[0,4,false],null],"\"%Al%\"",null]]},"question_toks":["Renvoie","les","noms","des","candidats","dont","les","noms","contiennent","la","sous-cha\u00eene","'Al","'","."],"question":"Renvoie les noms des candidats dont les noms contiennent la sous-cha\u00eene 'Al'."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"","query_toks":["SELECT","T2.template_id","FROM","Ref_template_types","AS","T1","JOIN","Templates","AS","T2","ON","T1.template_type_code","=","T2.template_type_code","WHERE","T1.template_type_description","=","``","Presentation","''"],"query_toks_no_value":["select","t2",".","template_id","from","ref_template_types","as","t1","join","templates","as","t2","on","t1",".","template_type_code","=","t2",".","template_type_code","where","t1",".","template_type_description","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,5,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Presentation\"",null]]},"question_toks":["Renvoie","les","identifiants","correspondant","aux","mod\u00e8les","avec","la","description","'Pr\u00e9sentation","'","."],"question":"Renvoie les identifiants correspondant aux mod\u00e8les avec la description 'Pr\u00e9sentation'."},{"db_id":"singer","query":"SELECT Birth_Year ,  Citizenship FROM singer","query_toks":["SELECT","Birth_Year",",","Citizenship","FROM","singer"],"query_toks_no_value":["select","birth_year",",","citizenship","from","singer"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quelles","sont","l'ann\u00e9e","de","naissance","et","la","citoyennet\u00e9","des","chanteurs","?"],"question":"Quelles sont l'ann\u00e9e de naissance et la citoyennet\u00e9 des chanteurs?"},{"db_id":"world_1","query":"SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","T1.Continent","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","GROUP","BY","T1.Continent","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","continent","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","group","by","t1",".","continent","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","continent","a","les","langues","les","plus","diverses","?"],"question":"Quel continent a les langues les plus diverses?"},{"db_id":"world_1","query":"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"","query_toks":["SELECT","CountryCode","FROM","countrylanguage","EXCEPT","SELECT","CountryCode","FROM","countrylanguage","WHERE","LANGUAGE","=","``","English","''"],"query_toks_no_value":["select","countrycode","from","countrylanguage","except","select","countrycode","from","countrylanguage","where","language","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoyez","les","codes","de","pays","pour","les","pays","qui","ne","parlent","pas","anglais","."],"question":"Renvoyez les codes de pays pour les pays qui ne parlent pas anglais."},{"db_id":"tvshow","query":"SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')","query_toks":["SELECT","package_option","FROM","TV_Channel","WHERE","id","NOT","IN","(","SELECT","channel","FROM","cartoon","WHERE","directed_by","=","'Ben","Jones","'",")"],"query_toks_no_value":["select","package_option","from","tv_channel","where","id","not","in","(","select","channel","from","cartoon","where","directed_by","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null]]},null]]},"question_toks":["trouve","l'option","package","de","la","cha\u00eene","de","t\u00e9l\u00e9vision","qui","n","'","a","pas","de","dessin","anim\u00e9","r\u00e9alis\u00e9","par","Ben","Jones","."],"question":"trouve l'option package de la cha\u00eene de t\u00e9l\u00e9vision qui n'a pas de dessin anim\u00e9 r\u00e9alis\u00e9 par Ben Jones."},{"db_id":"wta_1","query":"SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10","query_toks":["SELECT","tourney_name","FROM","matches","GROUP","BY","tourney_name","HAVING","count","(","*",")",">","10"],"query_toks_no_value":["select","tourney_name","from","matches","group","by","tourney_name","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,27,false]],"having":[[false,3,[0,[3,0,false],null],10.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,27,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","nom","du","tournoi","qui","a","plus","de","10","correspondances","."],"question":"Trouve le nom du tournoi qui a plus de 10 correspondances."},{"db_id":"poker_player","query":"SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1","query_toks":["SELECT","T1.Birth_Date","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T2.Earnings","ASC","LIMIT","1"],"query_toks_no_value":["select","t1",".","birth_date","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t2",".","earnings","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","date","de","naissance","du","joueur","de","poker","avec","les","gains","les","plus","bas","?"],"question":"Quelle est la date de naissance du joueur de poker avec les gains les plus bas?"},{"db_id":"world_1","query":"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1","query_toks":["SELECT","T2.Language","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.Continent","=","``","Asia","''","GROUP","BY","T2.Language","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","language","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","continent","=","value","group","by","t2",".","language","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,24,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Quelle","langue","est","la","plus","populaire","sur","le","continent","asiatique","?"],"question":"Quelle langue est la plus populaire sur le continent asiatique?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(DISTINCT current_address_id) FROM Students","query_toks":["SELECT","count","(","DISTINCT","current_address_id",")","FROM","Students"],"query_toks_no_value":["select","count","(","distinct","current_address_id",")","from","students"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,33,true],null]]]],"union":null,"where":[]},"question_toks":["Combien","d'adresses","diff\u00e9rentes","vivent","actuellement","les","\u00e9tudiants","?"],"question":"Combien d'adresses diff\u00e9rentes vivent actuellement les \u00e9tudiants?"},{"db_id":"employee_hire_evaluation","query":"SELECT count(*) FROM employee","query_toks":["SELECT","count","(","*",")","FROM","employee"],"query_toks_no_value":["select","count","(","*",")","from","employee"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Compte","le","nombre","d'employ\u00e9s"],"question":"Compte le nombre d'employ\u00e9s"},{"db_id":"flight_2","query":"SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)","query_toks":["SELECT","AirportName","FROM","Airports","WHERE","AirportCode","NOT","IN","(","SELECT","SourceAirport","FROM","Flights","UNION","SELECT","DestAirport","FROM","Flights",")"],"query_toks_no_value":["select","airportname","from","airports","where","airportcode","not","in","(","select","sourceairport","from","flights","union","select","destairport","from","flights",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[true,8,[0,[0,6,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"where":[]},null]]},"question_toks":["Trouve","le","nom","des","a\u00e9roports","qui","n'ont","pas","de","vol","aller-retour","."],"question":"Trouve le nom des a\u00e9roports qui n'ont pas de vol aller-retour."},{"db_id":"orchestra","query":"SELECT count(*) FROM conductor","query_toks":["SELECT","count","(","*",")","FROM","conductor"],"query_toks_no_value":["select","count","(","*",")","from","conductor"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Compte","le","nombre","de","conducteurs","."],"question":"Compte le nombre de conducteurs."},{"db_id":"singer","query":"SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship","query_toks":["SELECT","Citizenship",",","COUNT","(","*",")","FROM","singer","GROUP","BY","Citizenship"],"query_toks_no_value":["select","citizenship",",","count","(","*",")","from","singer","group","by","citizenship"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Pour","chaque","nationalit\u00e9",",","combien","de","chanteurs","sont","originaires","de","ce","pays","?"],"question":"Pour chaque nationalit\u00e9, combien de chanteurs sont originaires de ce pays?"},{"db_id":"tvshow","query":"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","query_toks":["SELECT","Episode",",","Rating","FROM","TV_series","ORDER","BY","Rating","DESC","LIMIT","3",";"],"query_toks_no_value":["select","episode",",","rating","from","tv_series","order","by","rating","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","des","3","s\u00e9ries","t\u00e9l\u00e9vis\u00e9es","les","mieux","not\u00e9es","\u00c9num\u00e9rez","l'\u00e9pisode","et","la","cote","de","la","s\u00e9rie","t\u00e9l\u00e9vis\u00e9e","."],"question":"Liste des 3 s\u00e9ries t\u00e9l\u00e9vis\u00e9es les mieux not\u00e9es \u00c9num\u00e9rez l'\u00e9pisode et la cote de la s\u00e9rie t\u00e9l\u00e9vis\u00e9e."},{"db_id":"car_1","query":"SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;","query_toks":["SELECT","Model","FROM","CAR_NAMES","GROUP","BY","Model","ORDER","BY","count","(","*",")","DESC","LIMIT","1",";"],"query_toks_no_value":["select","model","from","car_names","group","by","model","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,14,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","mod\u00e8le","a","le","plus","de","version","(","marque",")","de","voitures","?"],"question":"Quel mod\u00e8le a le plus de version (marque) de voitures?"},{"db_id":"world_1","query":"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"","query_toks":["SELECT","T2.Language","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.HeadOfState","=","``","Beatrix","''","AND","T2.IsOfficial","=","``","T","''"],"query_toks_no_value":["select","t2",".","language","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","headofstate","=","value","and","t2",".","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"Beatrix\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Quelle","est","la","langue","officielle","utilis\u00e9e","dans","le","pays","dont","le","chef","de","l'Etat","est","Beatrix","."],"question":"Quelle est la langue officielle utilis\u00e9e dans le pays dont le chef de l'Etat est Beatrix."},{"db_id":"network_1","query":"SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.name","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nom","du","lyc\u00e9en","qui","a","le","plus","de","likes","?"],"question":"Quel est le nom du lyc\u00e9en qui a le plus de likes?"},{"db_id":"world_1","query":"SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","LANGUAGE","FROM","countrylanguage","GROUP","BY","LANGUAGE","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","language","from","countrylanguage","group","by","language","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,24,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","langue","est","parl\u00e9e","par","le","plus","grand","nombre","de","pays","?"],"question":"Quelle langue est parl\u00e9e par le plus grand nombre de pays?"},{"db_id":"course_teach","query":"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","query_toks":["SELECT","T3.Name",",","T2.Course","FROM","course_arrange","AS","T1","JOIN","course","AS","T2","ON","T1.Course_ID","=","T2.Course_ID","JOIN","teacher","AS","T3","ON","T1.Teacher_ID","=","T3.Teacher_ID","ORDER","BY","T3.Name"],"query_toks_no_value":["select","t3",".","name",",","t2",".","course","from","course_arrange","as","t1","join","course","as","t2","on","t1",".","course_id","=","t2",".","course_id","join","teacher","as","t3","on","t1",".","teacher_id","=","t3",".","teacher_id","order","by","t3",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,5,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","enseignants","et","les","cours","qu'ils","enseignent","par","ordre","alphab\u00e9tique","croissant","selon","le","nom","de","l'enseignant","?"],"question":"Quels sont les noms des enseignants et les cours qu'ils enseignent par ordre alphab\u00e9tique croissant selon le nom de l'enseignant?"},{"db_id":"car_1","query":"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;","query_toks":["SELECT","avg","(","Weight",")",",","YEAR","FROM","CARS_DATA","GROUP","BY","YEAR",";"],"query_toks_no_value":["select","avg","(","weight",")",",","year","from","cars_data","group","by","year"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,21,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","poids","moyen","et","l'ann\u00e9e","pour","chaque","ann\u00e9e","?"],"question":"Quel est le poids moyen et l'ann\u00e9e pour chaque ann\u00e9e?"},{"db_id":"battle_death","query":"SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.id",",","T2.name","FROM","death","AS","T1","JOIN","ship","AS","t2","ON","T1.caused_by_ship_id","=","T2.id","GROUP","BY","T2.id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","id",",","t2",".","name","from","death","as","t1","join","ship","as","t2","on","t1",".","caused_by_ship_id","=","t2",".","id","group","by","t2",".","id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,14,false],null],[0,8,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","l'identifiant","et","le","nom","du","navire","qui","ont","caus\u00e9","le","plus","de","blessures","?"],"question":"Quels sont l'identifiant et le nom du navire qui ont caus\u00e9 le plus de blessures?"},{"db_id":"flight_2","query":"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"","query_toks":["SELECT","Airline",",","Abbreviation","FROM","AIRLINES","WHERE","Country","=","``","USA","''"],"query_toks_no_value":["select","airline",",","abbreviation","from","airlines","where","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"USA\"",null]]},"question_toks":["Quels","sont","les","noms","et","abr\u00e9viations","des","compagnies","a\u00e9riennes","aux","\u00c9tats-Unis","?"],"question":"Quels sont les noms et abr\u00e9viations des compagnies a\u00e9riennes aux \u00c9tats-Unis?"},{"db_id":"tvshow","query":"SELECT Episode FROM TV_series ORDER BY rating","query_toks":["SELECT","Episode","FROM","TV_series","ORDER","BY","rating"],"query_toks_no_value":["select","episode","from","tv_series","order","by","rating"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","l'\u00e9pisode","de","toutes","les","s\u00e9ries","t\u00e9l\u00e9vis\u00e9es","tri\u00e9es","par","note","."],"question":"Liste l'\u00e9pisode de toutes les s\u00e9ries t\u00e9l\u00e9vis\u00e9es tri\u00e9es par note."},{"db_id":"car_1","query":"SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;","query_toks":["SELECT","T1.horsepower","FROM","CARS_DATA","AS","T1","ORDER","BY","T1.accelerate","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","horsepower","from","cars_data","as","t1","order","by","t1",".","accelerate","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,22,false],null]]],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","puissance","de","la","voiture","avec","la","plus","grande","acc\u00e9l\u00e9ration","?"],"question":"Quelle est la puissance de la voiture avec la plus grande acc\u00e9l\u00e9ration?"},{"db_id":"pets_1","query":"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","query_toks":["SELECT","pettype",",","weight","FROM","pets","ORDER","BY","pet_age","LIMIT","1"],"query_toks_no_value":["select","pettype",",","weight","from","pets","order","by","pet_age","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,12,false],null]],[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","type","d'animal","est","le","plus","jeune","animal","et","combien","p\u00e8se-t-il","?"],"question":"Quel type d'animal est le plus jeune animal et combien p\u00e8se-t-il?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5","query_toks":["SELECT","version_number",",","template_type_code","FROM","Templates","WHERE","version_number",">","5"],"query_toks_no_value":["select","version_number",",","template_type_code","from","templates","where","version_number",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],5.0,null]]},"question_toks":["Renvo\u0448\u0443","les","num\u00e9ros","de","version","et","les","codes","de","type","de","mod\u00e8le","des","mod\u00e8les","avec","un","num\u00e9ro","de","version","sup\u00e9rieur","\u00e0","5","."],"question":"Renvo\u0448\u0443 les num\u00e9ros de version et les codes de type de mod\u00e8le des mod\u00e8les avec un num\u00e9ro de version sup\u00e9rieur \u00e0 5."},{"db_id":"employee_hire_evaluation","query":"SELECT sum(bonus) FROM evaluation","query_toks":["SELECT","sum","(","bonus",")","FROM","evaluation"],"query_toks_no_value":["select","sum","(","bonus",")","from","evaluation"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,17,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","prime","totale","accord\u00e9e","dans","toutes","les","\u00e9valuations","?"],"question":"Quelle est la prime totale accord\u00e9e dans toutes les \u00e9valuations?"},{"db_id":"concert_singer","query":"SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","YEAR","FROM","concert","GROUP","BY","YEAR","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","year","from","concert","group","by","year","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","ann\u00e9e","a","le","plus","de","concerts","?"],"question":"Quelle ann\u00e9e a le plus de concerts?"},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","GROUP","BY","T1.Airline","HAVING","count","(","*",")","<","200"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","group","by","t1",".","airline","having","count","(","*",")","<","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[[false,4,[0,[3,0,false],null],200.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quelles","compagnies","a\u00e9riennes","ont","moins","de","200","vols","?"],"question":"Quelles compagnies a\u00e9riennes ont moins de 200 vols?"},{"db_id":"tvshow","query":"SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";","query_toks":["SELECT","Weekly_Rank","FROM","TV_series","WHERE","Episode","=","``","A","Love","of","a","Lifetime","''",";"],"query_toks_no_value":["select","weekly_rank","from","tv_series","where","episode","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"A Love of a Lifetime\"",null]]},"question_toks":["``","Quel","est","le","classement","hebdomadaire","des","s\u00e9ries","t\u00e9l\u00e9vis\u00e9es","avec","l'\u00e9pisode","''","``","L'amour","d'une","vie","''","``","?","''"],"question":"\"Quel est le classement hebdomadaire des s\u00e9ries t\u00e9l\u00e9vis\u00e9es avec l'\u00e9pisode\" \"L'amour d'une vie\" \"?\""},{"db_id":"museum_visit","query":"SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1","query_toks":["SELECT","t1.name",",","t1.age","FROM","visitor","AS","t1","JOIN","visit","AS","t2","ON","t1.id","=","t2.visitor_id","ORDER","BY","t2.num_of_ticket","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name",",","t1",".","age","from","visitor","as","t1","join","visit","as","t2","on","t1",".","id","=","t2",".","visitor_id","order","by","t2",".","num_of_ticket","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","nom","et","l'\u00e2ge","du","visiteur","qui","a","achet\u00e9","le","plus","de","billets","\u00e0","la","fois","."],"question":"Trouve le nom et l'\u00e2ge du visiteur qui a achet\u00e9 le plus de billets \u00e0 la fois."},{"db_id":"employee_hire_evaluation","query":"SELECT * FROM hiring","query_toks":["SELECT","*","FROM","hiring"],"query_toks_no_value":["select","*","from","hiring"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quelles","sont","toutes","les","informations","sur","l'embauche","?"],"question":"Quelles sont toutes les informations sur l'embauche?"},{"db_id":"wta_1","query":"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","query_toks":["SELECT","sum","(","tours",")",",","ranking_date","FROM","rankings","GROUP","BY","ranking_date"],"query_toks_no_value":["select","sum","(","tours",")",",","ranking_date","from","rankings","group","by","ranking_date"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,39,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,43,false],null]],[0,[0,[0,39,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","nombre","total","de","visites","pour","chaque","date","de","classement","."],"question":"Trouve le nombre total de visites pour chaque date de classement."},{"db_id":"singer","query":"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","query_toks":["SELECT","Citizenship",",","max","(","Net_Worth_Millions",")","FROM","singer","GROUP","BY","Citizenship"],"query_toks_no_value":["select","citizenship",",","max","(","net_worth_millions",")","from","singer","group","by","citizenship"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[1,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Pour","chaque","citoyennet\u00e9",",","quelle","est","la","valeur","nette","maximale","?"],"question":"Pour chaque citoyennet\u00e9, quelle est la valeur nette maximale?"},{"db_id":"student_transcripts_tracking","query":"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","query_toks":["SELECT","T2.transcript_date",",","T1.transcript_id","FROM","Transcript_Contents","AS","T1","JOIN","Transcripts","AS","T2","ON","T1.transcript_id","=","T2.transcript_id","GROUP","BY","T1.transcript_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","transcript_date",",","t1",".","transcript_id","from","transcript_contents","as","t1","join","transcripts","as","t2","on","t1",".","transcript_id","=","t2",".","transcript_id","group","by","t1",".","transcript_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,56,false],null],[0,52,false],null]],"table_units":[["table_unit",10],["table_unit",9]]},"groupBy":[[0,56,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,53,false],null]],[0,[0,[0,56,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","la","date","et","l'identifiant","du","relev\u00e9","de","notes","avec","au","moins","2","r\u00e9sultats","de","cours","."],"question":"Montre la date et l'identifiant du relev\u00e9 de notes avec au moins 2 r\u00e9sultats de cours."},{"db_id":"voter_1","query":"SELECT count(*) FROM area_code_state","query_toks":["SELECT","count","(","*",")","FROM","area_code_state"],"query_toks_no_value":["select","count","(","*",")","from","area_code_state"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","y","a-t-il","d'\u00e9tats","?"],"question":"Combien y a-t-il d'\u00e9tats?"},{"db_id":"student_transcripts_tracking","query":"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","query_toks":["SELECT","T2.transcript_date",",","T1.transcript_id","FROM","Transcript_Contents","AS","T1","JOIN","Transcripts","AS","T2","ON","T1.transcript_id","=","T2.transcript_id","GROUP","BY","T1.transcript_id","ORDER","BY","count","(","*",")","ASC","LIMIT","1"],"query_toks_no_value":["select","t2",".","transcript_date",",","t1",".","transcript_id","from","transcript_contents","as","t1","join","transcripts","as","t2","on","t1",".","transcript_id","=","t2",".","transcript_id","group","by","t1",".","transcript_id","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,56,false],null],[0,52,false],null]],"table_units":[["table_unit",10],["table_unit",9]]},"groupBy":[[0,56,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,53,false],null]],[0,[0,[0,56,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","la","date","de","la","transcription","qui","affiche","le","moins","de","r\u00e9sultats",",","indiquez","\u00e9galement","l'identifiant","."],"question":"Montre la date de la transcription qui affiche le moins de r\u00e9sultats, indiquez \u00e9galement l'identifiant."},{"db_id":"world_1","query":"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","query_toks":["SELECT","Name",",","population",",","HeadOfState","FROM","country","ORDER","BY","SurfaceArea","DESC","LIMIT","1"],"query_toks_no_value":["select","name",",","population",",","headofstate","from","country","order","by","surfacearea","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,12,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,14,false],null]],[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","la","population",",","le","nom","et","le","leader","du","pays","avec","la","plus","grande","superficie","?"],"question":"Quels sont la population, le nom et le leader du pays avec la plus grande superficie?"},{"db_id":"course_teach","query":"SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)","query_toks":["SELECT","Name","FROM","teacher","WHERE","Teacher_id","NOT","IN","(","SELECT","Teacher_id","FROM","course_arrange",")"],"query_toks_no_value":["select","name","from","teacher","where","teacher_id","not","in","(","select","teacher_id","from","course_arrange",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[true,8,[0,[0,4,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quels","sont","les","noms","des","enseignants","dont","les","cours","n'ont","pas","\u00e9t\u00e9","organis\u00e9s","?"],"question":"Quels sont les noms des enseignants dont les cours n'ont pas \u00e9t\u00e9 organis\u00e9s?"},{"db_id":"network_1","query":"SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3","query_toks":["SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id","HAVING","count","(","*",")",">","=","3"],"query_toks_no_value":["select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[[false,5,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Montrez","les","noms","des","lyc\u00e9ens","qui","ont","au","moins","3","amis","."],"question":"Montrez les noms des lyc\u00e9ens qui ont au moins 3 amis."},{"db_id":"flight_2","query":"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"","query_toks":["SELECT","AirportName","FROM","AIRPORTS","WHERE","AirportCode","=","``","AKO","''"],"query_toks_no_value":["select","airportname","from","airports","where","airportcode","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"AKO\"",null]]},"question_toks":["Montre","les","noms","des","lyc\u00e9ens","qui","ont","au","moins","3","amis","."],"question":"Montre les noms des lyc\u00e9ens qui ont au moins 3 amis."},{"db_id":"singer","query":"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name","query_toks":["SELECT","T1.Name",",","sum","(","T2.Sales",")","FROM","singer","AS","T1","JOIN","song","AS","T2","ON","T1.Singer_ID","=","T2.Singer_ID","GROUP","BY","T1.Name"],"query_toks_no_value":["select","t1",".","name",",","sum","(","t2",".","sales",")","from","singer","as","t1","join","song","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","group","by","t1",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[4,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Pour","chaque","nom","de","chanteur",",","quel","est","le","total","des","ventes","de","leurs","chansons","?"],"question":"Pour chaque nom de chanteur, quel est le total des ventes de leurs chansons?"},{"db_id":"singer","query":"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","query_toks":["SELECT","T2.Title",",","T1.Name","FROM","singer","AS","T1","JOIN","song","AS","T2","ON","T1.Singer_ID","=","T2.Singer_ID"],"query_toks_no_value":["select","t2",".","title",",","t1",".","name","from","singer","as","t1","join","song","as","t2","on","t1",".","singer_id","=","t2",".","singer_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","titres","des","chansons","et","les","noms","des","chanteurs","?"],"question":"Quels sont les titres des chansons et les noms des chanteurs?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","query_toks":["SELECT","template_type_code",",","count","(","*",")","FROM","Templates","GROUP","BY","template_type_code"],"query_toks_no_value":["select","template_type_code",",","count","(","*",")","from","templates","group","by","template_type_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","diff\u00e9rents","codes","de","type","de","mod\u00e8le","et","combien","de","mod\u00e8les","correspondent","\u00e0","chacun","?"],"question":"Quels sont les diff\u00e9rents codes de type de mod\u00e8le et combien de mod\u00e8les correspondent \u00e0 chacun?"},{"db_id":"car_1","query":"SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;","query_toks":["SELECT","mpg","FROM","CARS_DATA","WHERE","Cylinders","=","8","OR","YEAR","<","1980","ORDER","BY","mpg","DESC","LIMIT","1",";"],"query_toks_no_value":["select","mpg","from","cars_data","where","cylinders","=","value","or","year","<","value","order","by","mpg","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,17,false],null]]],"select":[false,[[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],8.0,null],"or",[false,4,[0,[0,23,false],null],1980.0,null]]},"question_toks":["Quel","est","le","mpg","maximum","des","voitures","\u00e0","8","cylindres","ou","produites","avant","1980","?"],"question":"Quel est le mpg maximum des voitures \u00e0 8 cylindres ou produites avant 1980?"},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","APG","''","INTERSECT","SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","CVO","''"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value","intersect","select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"CVO\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"APG\"",null]]},"question_toks":["Trouvez","toutes","les","compagnies","a\u00e9riennes","qui","proposent","des","vols","depuis","les","deux","a\u00e9roports","\u00ab","APG","\u00bb","et","\u00ab","CVO","\u00bb","."],"question":"Trouvez toutes les compagnies a\u00e9riennes qui proposent des vols depuis les deux a\u00e9roports \u00abAPG\u00bb et \u00abCVO\u00bb."},{"db_id":"car_1","query":"SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );","query_toks":["SELECT","COUNT","(","*",")","FROM","(","SELECT","T1.CountryId",",","COUNT","(","*",")","FROM","COUNTRIES","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.CountryId","=","T2.Country","GROUP","BY","T1.CountryId","HAVING","count","(","*",")",">","2",")",";"],"query_toks_no_value":["select","count","(","*",")","from","(","select","t1",".","countryid",",","count","(","*",")","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country","group","by","t1",".","countryid","having","count","(","*",")",">","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["sql",{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,3,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]}]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nombre","de","pays","avec","plus","de","2","constructeurs","automobiles","?"],"question":"Quel est le nombre de pays avec plus de 2 constructeurs automobiles?"},{"db_id":"poker_player","query":"SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC","query_toks":["SELECT","Name",",","Birth_Date","FROM","people","ORDER","BY","Name","ASC"],"query_toks_no_value":["select","name",",","birth_date","from","people","order","by","name","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","et","dates","de","naissance","des","personnes",",","class\u00e9s","par","nom","dans","l'ordre","alphab\u00e9tique","?"],"question":"Quels sont les noms et dates de naissance des personnes, class\u00e9s par nom dans l'ordre alphab\u00e9tique?"},{"db_id":"pets_1","query":"SELECT max(weight) ,  petType FROM pets GROUP BY petType","query_toks":["SELECT","max","(","weight",")",",","petType","FROM","pets","GROUP","BY","petType"],"query_toks_no_value":["select","max","(","weight",")",",","pettype","from","pets","group","by","pettype"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,14,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Indique","le","poids","et","le","type","maximum","pour","chaque","type","d'animal","."],"question":"Indique le poids et le type maximum pour chaque type d'animal."},{"db_id":"concert_singer","query":"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","query_toks":["SELECT","name",",","capacity","FROM","stadium","ORDER","BY","average","DESC","LIMIT","1"],"query_toks_no_value":["select","name",",","capacity","from","stadium","order","by","average","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,7,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","le","nom","et","la","capacit\u00e9","du","stade","avec","la","fr\u00e9quentation","moyenne","la","plus","\u00e9lev\u00e9e","?"],"question":"Quels sont le nom et la capacit\u00e9 du stade avec la fr\u00e9quentation moyenne la plus \u00e9lev\u00e9e?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS"],"query_toks_no_value":["select","count","(","*",")","from","flights"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","vols","avons-nous","?"],"question":"Combien de vols avons-nous?"},{"db_id":"world_1","query":"SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","LANGUAGE","FROM","countrylanguage","GROUP","BY","LANGUAGE","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","language","from","countrylanguage","group","by","language","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,24,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[]},"question_toks":["Donne","la","langue","parl\u00e9e","dans","la","plupart","des","pays","."],"question":"Donne la langue parl\u00e9e dans la plupart des pays."},{"db_id":"poker_player","query":"SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID","query_toks":["SELECT","T1.Name","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID"],"query_toks_no_value":["select","t1",".","name","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Renvoie","les","noms","de","tous","les","joueurs","de","poker","."],"question":"Renvoie les noms de tous les joueurs de poker."},{"db_id":"car_1","query":"SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;","query_toks":["SELECT","count","(","*",")","FROM","CARS_DATA","WHERE","Cylinders",">","4",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","cylinders",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],4.0,null]]},"question_toks":["Quel","est","le","nombre","de","voitures","de","plus","de","4","cylindres","?"],"question":"Quel est le nombre de voitures de plus de 4 cylindres?"},{"db_id":"car_1","query":"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;","query_toks":["SELECT","max","(","Accelerate",")",",","Cylinders","FROM","CARS_DATA","GROUP","BY","Cylinders",";"],"query_toks_no_value":["select","max","(","accelerate",")",",","cylinders","from","cars_data","group","by","cylinders"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,22,false],null]],[0,[0,[0,18,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","l'acc\u00e9l\u00e9ration","maximale","pour","diff\u00e9rents","nombres","de","cylindres","?"],"question":"Quelle est l'acc\u00e9l\u00e9ration maximale pour diff\u00e9rents nombres de cylindres?"},{"db_id":"car_1","query":"SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;","query_toks":["SELECT","count","(","*",")","FROM","CARS_DATA","WHERE","horsepower",">","150",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","horsepower",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,20,false],null],150.0,null]]},"question_toks":["Quel","est","le","nombre","de","voitures","d'une","puissance","sup\u00e9rieure","\u00e0","150","?"],"question":"Quel est le nombre de voitures d'une puissance sup\u00e9rieure \u00e0 150?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.address_id",",","T1.line_1",",","T1.line_2","FROM","Addresses","AS","T1","JOIN","Students","AS","T2","ON","T1.address_id","=","T2.current_address_id","GROUP","BY","T1.address_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","address_id",",","t1",".","line_1",",","t1",".","line_2","from","addresses","as","t1","join","students","as","t2","on","t1",".","address_id","=","t2",".","current_address_id","group","by","t1",".","address_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,33,false],null]],"table_units":[["table_unit",0],["table_unit",6]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","adresse","d\u00e9tient","le","plus","d'\u00e9tudiants","actuellement","?","R\u00e9pertoriez","l'identifiant","d'adresse","et","toutes","les","lignes","."],"question":"Quelle adresse d\u00e9tient le plus d'\u00e9tudiants actuellement? R\u00e9pertoriez l'identifiant d'adresse et toutes les lignes."},{"db_id":"tvshow","query":"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";","query_toks":["SELECT","T1.series_name","FROM","TV_Channel","AS","T1","JOIN","TV_series","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.Episode","=","``","A","Love","of","a","Lifetime","''",";"],"query_toks_no_value":["select","t1",".","series_name","from","tv_channel","as","t1","join","tv_series","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","episode","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,18,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"A Love of a Lifetime\"",null]]},"question_toks":["``","Quel","est","le","nom","de","la","s\u00e9rie","qui","a","l'\u00e9pisode","''","``","Un","amour","d'une","vie","''","``","?","''"],"question":"\"Quel est le nom de la s\u00e9rie qui a l'\u00e9pisode\" \"Un amour d'une vie\" \"?\""},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"","query_toks":["SELECT","document_name",",","template_id","FROM","Documents","WHERE","Document_Description","LIKE","``","%","w","%","''"],"query_toks_no_value":["select","document_name",",","template_id","from","documents","where","document_description","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,9,[0,[0,12,false],null],"\"%w%\"",null]]},"question_toks":["Quel","est","le","nom","du","document","et","l'ID","du","mod\u00e8le","pour","le","document","avec","une","description","avec","la","lettre","\u00ab","w","\u00bb","?"],"question":"Quel est le nom du document et l'ID du mod\u00e8le pour le document avec une description avec la lettre \u00abw\u00bb?"},{"db_id":"car_1","query":"SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;","query_toks":["SELECT","CountryName","FROM","countries","EXCEPT","SELECT","T1.CountryName","FROM","countries","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.countryId","=","T2.Country",";"],"query_toks_no_value":["select","countryname","from","countries","except","select","t1",".","countryname","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","pays","o\u00f9","il","n","'","y","a","pas","un","seul","constructeur","automobile","?"],"question":"Quels sont les noms des pays o\u00f9 il n'y a pas un seul constructeur automobile?"},{"db_id":"concert_singer","query":"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","query_toks":["SELECT","T2.name",",","count","(","*",")","FROM","singer_in_concert","AS","T1","JOIN","singer","AS","T2","ON","T1.singer_id","=","T2.singer_id","GROUP","BY","T2.singer_id"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","singer_in_concert","as","t1","join","singer","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","group","by","t2",".","singer_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,21,false],null],[0,8,false],null]],"table_units":[["table_unit",3],["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["\u00c9num\u00e8re","les","noms","des","chanteurs","et","le","nombre","de","concerts","pour","chaque","chanteur","."],"question":"\u00c9num\u00e8re les noms des chanteurs et le nombre de concerts pour chaque chanteur."},{"db_id":"network_1","query":"SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)","query_toks":["SELECT","min","(","grade",")","FROM","Highschooler","WHERE","id","NOT","IN","(","SELECT","T1.student_id","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id",")"],"query_toks_no_value":["select","min","(","grade",")","from","highschooler","where","id","not","in","(","select","t1",".","student_id","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,3,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Trouve","la","note","minimale","des","\u00e9l\u00e8ves","qui","n'ont","pas","d'amis","."],"question":"Trouve la note minimale des \u00e9l\u00e8ves qui n'ont pas d'amis."},{"db_id":"car_1","query":"SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';","query_toks":["SELECT","avg","(","T2.edispl",")","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","WHERE","T1.Model","=","'volvo","'",";"],"query_toks_no_value":["select","avg","(","t2",".","edispl",")","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","where","t1",".","model","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,19,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"volvo\"",null]]},"question_toks":["Quelle","est","l'edispl","moyenne","des","voitures","du","mod\u00e8le","Volvo","?"],"question":"Quelle est l'edispl moyenne des voitures du mod\u00e8le Volvo?"},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRLINES","query_toks":["SELECT","count","(","*",")","FROM","AIRLINES"],"query_toks_no_value":["select","count","(","*",")","from","airlines"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","compagnies","a\u00e9riennes","avons-nous","?"],"question":"Combien de compagnies a\u00e9riennes avons-nous?"},{"db_id":"dog_kennels","query":"SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )","query_toks":["SELECT","count","(","*",")","FROM","Dogs","WHERE","dog_id","NOT","IN","(","SELECT","dog_id","FROM","Treatments",")"],"query_toks_no_value":["select","count","(","*",")","from","dogs","where","dog_id","not","in","(","select","dog_id","from","treatments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,20,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,45,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Combien","de","chiens","n'ont","subi","aucun","traitement","?"],"question":"Combien de chiens n'ont subi aucun traitement?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2","query_toks":["SELECT","document_id","FROM","Paragraphs","GROUP","BY","document_id","HAVING","count","(","*",")","BETWEEN","1","AND","2"],"query_toks_no_value":["select","document_id","from","paragraphs","group","by","document_id","having","count","(","*",")","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,15,false]],"having":[[false,1,[0,[3,0,false],null],1.0,2.0]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Donne","les","identifiants","des","documents","qui","ont","entre","un","et","deux","paragraphes","."],"question":"Donne les identifiants des documents qui ont entre un et deux paragraphes."},{"db_id":"employee_hire_evaluation","query":"SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000","query_toks":["SELECT","district","FROM","shop","WHERE","Number_products","<","3000","INTERSECT","SELECT","district","FROM","shop","WHERE","Number_products",">","10000"],"query_toks_no_value":["select","district","from","shop","where","number_products","<","value","intersect","select","district","from","shop","where","number_products",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],10000.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,4,[0,[0,9,false],null],3000.0,null]]},"question_toks":["Trouvez","les","quartiers","dans","lesquels","il","y","a","\u00e0","la","fois","des","magasins","vendant","moins","de","3000","produits","et","des","magasins","vendant","plus","de","10000","produits","."],"question":"Trouvez les quartiers dans lesquels il y a \u00e0 la fois des magasins vendant moins de 3000 produits et des magasins vendant plus de 10000 produits."},{"db_id":"world_1","query":"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"","query_toks":["SELECT","avg","(","LifeExpectancy",")","FROM","country","WHERE","Continent","=","``","Africa","''","AND","GovernmentForm","=","``","Republic","''"],"query_toks_no_value":["select","avg","(","lifeexpectancy",")","from","country","where","continent","=","value","and","governmentform","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Africa\"",null],"and",[false,2,[0,[0,19,false],null],"\"Republic\"",null]]},"question_toks":["Donnez","l'esp\u00e9rance","de","vie","moyenne","pour","les","pays","d'Afrique","qui","sont","des","r\u00e9publiques","?"],"question":"Donnez l'esp\u00e9rance de vie moyenne pour les pays d'Afrique qui sont des r\u00e9publiques?"},{"db_id":"car_1","query":"SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';","query_toks":["SELECT","T1.Accelerate","FROM","CARS_DATA","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Id","=","T2.MakeId","WHERE","T2.Make","=","'amc","hornet","sportabout","(","sw",")","'",";"],"query_toks_no_value":["select","t1",".","accelerate","from","cars_data","as","t1","join","car_names","as","t2","on","t1",".","id","=","t2",".","makeid","where","t2",".","make","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,13,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"amc hornet sportabout (sw)\"",null]]},"question_toks":["Quelle","est","l'acc\u00e9l\u00e9ration","de","la","voiture","amc","hornet","sportabout","(","sw",")","?"],"question":"Quelle est l'acc\u00e9l\u00e9ration de la voiture amc hornet sportabout (sw)?"},{"db_id":"network_1","query":"SELECT grade ,  count(*) FROM Highschooler GROUP BY grade","query_toks":["SELECT","grade",",","count","(","*",")","FROM","Highschooler","GROUP","BY","grade"],"query_toks_no_value":["select","grade",",","count","(","*",")","from","highschooler","group","by","grade"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Indique","le","nombre","de","lyc\u00e9ens","pour","chaque","ann\u00e9e","."],"question":"Indique le nombre de lyc\u00e9ens pour chaque ann\u00e9e."},{"db_id":"tvshow","query":"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";","query_toks":["SELECT","T2.Episode","FROM","TV_Channel","AS","T1","JOIN","TV_series","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T1.series_name","=","``","Sky","Radio","''",";"],"query_toks_no_value":["select","t2",".","episode","from","tv_channel","as","t1","join","tv_series","as","t2","on","t1",".","id","=","t2",".","channel","where","t1",".","series_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,18,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Sky Radio\"",null]]},"question_toks":["``","Liste","l'\u00e9pisode","de","toutes","les","s\u00e9ries","t\u00e9l\u00e9vis\u00e9es","diffus\u00e9es","sur","la","cha\u00eene","de","t\u00e9l\u00e9vision","avec","le","nom","de","la","s\u00e9rie","''","``","Sky","Radio","''","``",".","''"],"question":"\"Liste l'\u00e9pisode de toutes les s\u00e9ries t\u00e9l\u00e9vis\u00e9es diffus\u00e9es sur la cha\u00eene de t\u00e9l\u00e9vision avec le nom de la s\u00e9rie\" \"Sky Radio\" \".\""},{"db_id":"employee_hire_evaluation","query":"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","query_toks":["SELECT","count","(","*",")",",","t2.name","FROM","hiring","AS","t1","JOIN","shop","AS","t2","ON","t1.shop_id","=","t2.shop_id","GROUP","BY","t2.name"],"query_toks_no_value":["select","count","(","*",")",",","t2",".","name","from","hiring","as","t1","join","shop","as","t2","on","t1",".","shop_id","=","t2",".","shop_id","group","by","t2",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,5,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Pour","chaque","magasin",",","indiquez","le","nombre","d'employ\u00e9s","qui","y","travaillent","et","le","nom","du","magasin","."],"question":"Pour chaque magasin, indiquez le nombre d'employ\u00e9s qui y travaillent et le nom du magasin."},{"db_id":"network_1","query":"SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"","query_toks":["SELECT","grade","FROM","Highschooler","WHERE","name","=","``","Kyle","''"],"query_toks_no_value":["select","grade","from","highschooler","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Dans","quelle","classe","est","Kyle","?"],"question":"Dans quelle classe est Kyle?"},{"db_id":"poker_player","query":"SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200","query_toks":["SELECT","avg","(","T2.Earnings",")","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","WHERE","T1.Height",">","200"],"query_toks_no_value":["select","avg","(","t2",".","earnings",")","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","where","t1",".","height",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,6,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],200.0,null]]},"question_toks":["Donne","des","gains","moyens","aux","joueurs","de","poker","de","plus","de","200","ans","."],"question":"Donne des gains moyens aux joueurs de poker de plus de 200 ans."},{"db_id":"student_transcripts_tracking","query":"SELECT section_description FROM Sections WHERE section_name  =  'h'","query_toks":["SELECT","section_description","FROM","Sections","WHERE","section_name","=","'h","'"],"query_toks_no_value":["select","section_description","from","sections","where","section_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,26,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"h\"",null]]},"question_toks":["D\u00e9crive","la","section","h","."],"question":"D\u00e9crive la section h."},{"db_id":"flight_2","query":"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"","query_toks":["SELECT","FlightNo","FROM","FLIGHTS","WHERE","DestAirport","=","``","APG","''"],"query_toks_no_value":["select","flightno","from","flights","where","destairport","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"APG\"",null]]},"question_toks":["``","Quels","sont","les","num\u00e9ros","de","vol","des","vols","arrivant","\u00e0","l'a\u00e9roport","''","``","APG","''","``","?","''"],"question":"\"Quels sont les num\u00e9ros de vol des vols arrivant \u00e0 l'a\u00e9roport\" \"APG\" \"?\""},{"db_id":"car_1","query":"SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;","query_toks":["SELECT","T1.CountryName","FROM","COUNTRIES","AS","T1","JOIN","CONTINENTS","AS","T2","ON","T1.Continent","=","T2.ContId","JOIN","CAR_MAKERS","AS","T3","ON","T1.CountryId","=","T3.Country","WHERE","T2.Continent","=","'europe","'","GROUP","BY","T1.CountryName","HAVING","count","(","*",")",">","=","3",";"],"query_toks_no_value":["select","t1",".","countryname","from","countries","as","t1","join","continents","as","t2","on","t1",".","continent","=","t2",".","contid","join","car_makers","as","t3","on","t1",".","countryid","=","t3",".","country","where","t2",".","continent","=","value","group","by","t1",".","countryname","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[[false,5,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"europe\"",null]]},"question_toks":["Quels","sont","les","noms","de","tous","les","pays","europ\u00e9ens","avec","au","moins","3","fabricants","?"],"question":"Quels sont les noms de tous les pays europ\u00e9ens avec au moins 3 fabricants?"},{"db_id":"concert_singer","query":"SELECT avg(capacity) ,  max(capacity) FROM stadium","query_toks":["SELECT","avg","(","capacity",")",",","max","(","capacity",")","FROM","stadium"],"query_toks_no_value":["select","avg","(","capacity",")",",","max","(","capacity",")","from","stadium"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]],[1,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Quelles","sont","les","capacit\u00e9s","moyennes","et","maximales","pour","toutes","les","stations","?"],"question":"Quelles sont les capacit\u00e9s moyennes et maximales pour toutes les stations?"},{"db_id":"tvshow","query":"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","query_toks":["SELECT","T1.series_name",",","T1.country","FROM","TV_Channel","AS","T1","JOIN","cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.directed_by","=","'Michael","Chang","'","INTERSECT","SELECT","T1.series_name",",","T1.country","FROM","TV_Channel","AS","T1","JOIN","cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.directed_by","=","'Ben","Jones","'"],"query_toks_no_value":["select","t1",".","series_name",",","t1",".","country","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","directed_by","=","value","intersect","select","t1",".","series_name",",","t1",".","country","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","directed_by","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Michael Chang\"",null]]},"question_toks":["Trouvez","le","nom","de","la","s\u00e9rie","et","le","pays","de","la","cha\u00eene","de","t\u00e9l\u00e9vision","qui","joue","des","dessins","anim\u00e9s","r\u00e9alis\u00e9s","par","Ben","Jones","et","Michael","Chang","?"],"question":"Trouvez le nom de la s\u00e9rie et le pays de la cha\u00eene de t\u00e9l\u00e9vision qui joue des dessins anim\u00e9s r\u00e9alis\u00e9s par Ben Jones et Michael Chang?"},{"db_id":"world_1","query":"SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  \"North America\" AND SurfaceArea  >  3000","query_toks":["SELECT","sum","(","Population",")",",","avg","(","SurfaceArea",")","FROM","country","WHERE","Continent","=","``","North","America","''","AND","SurfaceArea",">","3000"],"query_toks_no_value":["select","sum","(","population",")",",","avg","(","surfacearea",")","from","country","where","continent","=","value","and","surfacearea",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]],[5,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"North America\"",null],"and",[false,3,[0,[0,12,false],null],3000.0,null]]},"question_toks":["Indiquez","la","population","totale","et","la","superficie","moyenne","correspondant","aux","pays","d'Am\u00e9rique","du","Nord","dont","la","superficie","est","sup\u00e9rieure","\u00e0","3000","."],"question":"Indiquez la population totale et la superficie moyenne correspondant aux pays d'Am\u00e9rique du Nord dont la superficie est sup\u00e9rieure \u00e0 3000."},{"db_id":"flight_2","query":"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"","query_toks":["SELECT","Abbreviation","FROM","AIRLINES","WHERE","Airline","=","``","JetBlue","Airways","''"],"query_toks_no_value":["select","abbreviation","from","airlines","where","airline","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"JetBlue Airways\"",null]]},"question_toks":["``","Quelle","est","l'abr\u00e9viation","de","la","compagnie","a\u00e9rienne","''","``","JetBlue","Airways","''","``","?","''"],"question":"\"Quelle est l'abr\u00e9viation de la compagnie a\u00e9rienne\" \"JetBlue Airways\" \"?\""},{"db_id":"car_1","query":"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","query_toks":["SELECT","T1.FullName",",","T1.Id",",","count","(","*",")","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","GROUP","BY","T1.Id",";"],"query_toks_no_value":["select","t1",".","fullname",",","t1",".","id",",","count","(","*",")","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","group","by","t1",".","id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,6,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","mod\u00e8les","chaque","constructeur","automobile","produit-il","?","Nom","complet","du","cr\u00e9ateur","de","liste",",","identifiant","et","num\u00e9ro","."],"question":"Combien de mod\u00e8les chaque constructeur automobile produit-il? Nom complet du cr\u00e9ateur de liste, identifiant et num\u00e9ro."},{"db_id":"tvshow","query":"SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'","query_toks":["SELECT","T1.country","FROM","TV_Channel","AS","T1","JOIN","cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.written_by","=","'Todd","Casey","'"],"query_toks_no_value":["select","t1",".","country","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","written_by","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],"\"Todd Casey\"",null]]},"question_toks":["Quels","sont","les","pays","qui","ont","des","dessins","anim\u00e9s","\u00e0","la","t\u00e9l\u00e9vision","qui","ont","\u00e9t\u00e9","\u00e9crits","par","Todd","Casey","?"],"question":"Quels sont les pays qui ont des dessins anim\u00e9s \u00e0 la t\u00e9l\u00e9vision qui ont \u00e9t\u00e9 \u00e9crits par Todd Casey?"},{"db_id":"pets_1","query":"SELECT petid ,  weight FROM pets WHERE pet_age  >  1","query_toks":["SELECT","petid",",","weight","FROM","pets","WHERE","pet_age",">","1"],"query_toks_no_value":["select","petid",",","weight","from","pets","where","pet_age",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],1.0,null]]},"question_toks":["Trouve","l'identifiant","et","le","poids","de","tous","les","animaux","de","compagnie","\u00e2g\u00e9s","de","plus","de","1","an","."],"question":"Trouve l'identifiant et le poids de tous les animaux de compagnie \u00e2g\u00e9s de plus de 1 an."},{"db_id":"poker_player","query":"SELECT Name FROM people WHERE Nationality != \"Russia\"","query_toks":["SELECT","Name","FROM","people","WHERE","Nationality","!","=","``","Russia","''"],"query_toks_no_value":["select","name","from","people","where","nationality","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,7,[0,[0,8,false],null],"\"Russia\"",null]]},"question_toks":["``","Affiche","les","noms","des","personnes","dont","la","nationalit\u00e9","n'est","pas","''","``","Russie","''","``",".","''"],"question":"\"Affiche les noms des personnes dont la nationalit\u00e9 n'est pas\" \"Russie\" \".\""},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'","query_toks":["SELECT","count","(","*",")","FROM","Documents","AS","T1","JOIN","Templates","AS","T2","ON","T1.Template_ID","=","T2.Template_ID","WHERE","T2.Template_Type_Code","=","'PPT","'"],"query_toks_no_value":["select","count","(","*",")","from","documents","as","t1","join","templates","as","t2","on","t1",".","template_id","=","t2",".","template_id","where","t2",".","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"PPT\"",null]]},"question_toks":["Combien","de","documents","utilisent","le","mod\u00e8le","avec","le","code","de","type","\u00ab","PPT","\u00bb","?"],"question":"Combien de documents utilisent le mod\u00e8le avec le code de type \u00abPPT\u00bb?"},{"db_id":"course_teach","query":"SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1","query_toks":["SELECT","Hometown","FROM","teacher","ORDER","BY","Age","ASC","LIMIT","1"],"query_toks_no_value":["select","hometown","from","teacher","order","by","age","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["D'o\u00f9","vient","le","plus","jeune","enseignant","?"],"question":"D'o\u00f9 vient le plus jeune enseignant?"},{"db_id":"tvshow","query":"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";","query_toks":["SELECT","T2.Title","FROM","TV_Channel","AS","T1","JOIN","Cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T1.series_name","=","``","Sky","Radio","''",";"],"query_toks_no_value":["select","t2",".","title","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t1",".","series_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Sky Radio\"",null]]},"question_toks":["``","Quel","est","le","titre","de","tous","les","cartools","qui","sont","sur","la","cha\u00eene","de","t\u00e9l\u00e9vision","avec","le","nom","de","la","s\u00e9rie","''","``","Sky","Radio","''","``","?","''"],"question":"\"Quel est le titre de tous les cartools qui sont sur la cha\u00eene de t\u00e9l\u00e9vision avec le nom de la s\u00e9rie\" \"Sky Radio\" \"?\""},{"db_id":"wta_1","query":"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","query_toks":["SELECT","T1.country_code",",","T1.first_name","FROM","players","AS","T1","JOIN","rankings","AS","T2","ON","T1.player_id","=","T2.player_id","ORDER","BY","T2.tours","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","country_code",",","t1",".","first_name","from","players","as","t1","join","rankings","as","t2","on","t1",".","player_id","=","t2",".","player_id","order","by","t2",".","tours","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,41,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,43,false],null]]],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Trouvez","le","pr\u00e9nom","et","le","code","du","pays","du","joueur","qui","a","fait","le","plus","de","tours","."],"question":"Trouvez le pr\u00e9nom et le code du pays du joueur qui a fait le plus de tours."},{"db_id":"tvshow","query":"SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";","query_toks":["SELECT","Package_Option","FROM","TV_Channel","WHERE","series_name","=","``","Sky","Radio","''",";"],"query_toks_no_value":["select","package_option","from","tv_channel","where","series_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Sky Radio\"",null]]},"question_toks":["``","Quelle","est","l'option","de","bouquet","de","cha\u00eene","de","t\u00e9l\u00e9vision","avec","le","nom","de","s\u00e9rie","''","``","Sky","Radio","''","``","?","''"],"question":"\"Quelle est l'option de bouquet de cha\u00eene de t\u00e9l\u00e9vision avec le nom de s\u00e9rie\" \"Sky Radio\" \"?\""},{"db_id":"flight_2","query":"SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)","query_toks":["SELECT","AirportName","FROM","Airports","WHERE","AirportCode","NOT","IN","(","SELECT","SourceAirport","FROM","Flights","UNION","SELECT","DestAirport","FROM","Flights",")"],"query_toks_no_value":["select","airportname","from","airports","where","airportcode","not","in","(","select","sourceairport","from","flights","union","select","destairport","from","flights",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[true,8,[0,[0,6,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"where":[]},null]]},"question_toks":["Quels","a\u00e9roports","n'ont","pas","de","vols","au","d\u00e9part","ou","\u00e0","l'arriv\u00e9e","?"],"question":"Quels a\u00e9roports n'ont pas de vols au d\u00e9part ou \u00e0 l'arriv\u00e9e?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2","query_toks":["SELECT","document_id","FROM","Paragraphs","GROUP","BY","document_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","document_id","from","paragraphs","group","by","document_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,15,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","identifiants","des","documents","contenant","2","paragraphes","ou","plus","?"],"question":"Quels sont les identifiants des documents contenant 2 paragraphes ou plus?"},{"db_id":"concert_singer","query":"SELECT count(*) FROM singer","query_toks":["SELECT","count","(","*",")","FROM","singer"],"query_toks_no_value":["select","count","(","*",")","from","singer"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","chanteurs","avons-nous","?"],"question":"Combien de chanteurs avons-nous?"},{"db_id":"student_transcripts_tracking","query":"SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'","query_toks":["SELECT","cell_mobile_number","FROM","Students","WHERE","first_name","=","'Timmothy","'","AND","last_name","=","'Ward","'"],"query_toks_no_value":["select","cell_mobile_number","from","students","where","first_name","=","value","and","last_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,38,false],null]]]],"union":null,"where":[[false,2,[0,[0,35,false],null],"\"Timmothy\"",null],"and",[false,2,[0,[0,37,false],null],"\"Ward\"",null]]},"question_toks":["Quel","est","le","num\u00e9ro","de","t\u00e9l\u00e9phone","de","l'homme","portant","le","pr\u00e9nom","Timmothy","et","le","nom","Ward","?"],"question":"Quel est le num\u00e9ro de t\u00e9l\u00e9phone de l'homme portant le pr\u00e9nom Timmothy et le nom Ward?"},{"db_id":"wta_1","query":"SELECT count(DISTINCT country_code) FROM players","query_toks":["SELECT","count","(","DISTINCT","country_code",")","FROM","players"],"query_toks_no_value":["select","count","(","distinct","country_code",")","from","players"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,6,true],null]]]],"union":null,"where":[]},"question_toks":["trouve","le","nombre","de","codes","de","pays","distincts","de","tous","les","joueurs","."],"question":"trouve le nombre de codes de pays distincts de tous les joueurs."},{"db_id":"world_1","query":"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","query_toks":["SELECT","sum","(","Population",")",",","GovernmentForm","FROM","country","GROUP","BY","GovernmentForm","HAVING","avg","(","LifeExpectancy",")",">","72"],"query_toks_no_value":["select","sum","(","population",")",",","governmentform","from","country","group","by","governmentform","having","avg","(","lifeexpectancy",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,19,false]],"having":[[false,3,[0,[5,15,false],null],72.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]],[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Quelles","sont","les","diff\u00e9rentes","formes","de","gouvernement","et","quelle","est","la","population","totale","de","chacune","des","formes","de","gouvernement","qui","ont","une","esp\u00e9rance","de","vie","moyenne","sup\u00e9rieure","\u00e0","72","?"],"question":"Quelles sont les diff\u00e9rentes formes de gouvernement et quelle est la population totale de chacune des formes de gouvernement qui ont une esp\u00e9rance de vie moyenne sup\u00e9rieure \u00e0 72?"},{"db_id":"dog_kennels","query":"SELECT email_address ,  cell_number ,  home_phone FROM professionals","query_toks":["SELECT","email_address",",","cell_number",",","home_phone","FROM","professionals"],"query_toks_no_value":["select","email_address",",","cell_number",",","home_phone","from","professionals"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,41,false],null]],[0,[0,[0,43,false],null]],[0,[0,[0,42,false],null]]]],"union":null,"where":[]},"question_toks":["Indique","l'email",",","le","t\u00e9l\u00e9phone","portable","et","le","t\u00e9l\u00e9phone","personnel","de","tous","les","professionnels","."],"question":"Indique l'email, le t\u00e9l\u00e9phone portable et le t\u00e9l\u00e9phone personnel de tous les professionnels. "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3","query_toks":["SELECT","template_type_code","FROM","Templates","GROUP","BY","template_type_code","HAVING","count","(","*",")","<","3"],"query_toks_no_value":["select","template_type_code","from","templates","group","by","template_type_code","having","count","(","*",")","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,5,false]],"having":[[false,4,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","codes","des","types","de","mod\u00e8les","qui","ont","moins","de","3","mod\u00e8les","?"],"question":"Quels sont les codes des types de mod\u00e8les qui ont moins de 3 mod\u00e8les?"},{"db_id":"singer","query":"SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship","query_toks":["SELECT","Citizenship",",","COUNT","(","*",")","FROM","singer","GROUP","BY","Citizenship"],"query_toks_no_value":["select","citizenship",",","count","(","*",")","from","singer","group","by","citizenship"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","la","citoyennet\u00e9","diff\u00e9rente","des","chanteurs","et","le","nombre","de","chanteurs","de","chaque","citoyennet\u00e9","."],"question":"Montre la citoyennet\u00e9 diff\u00e9rente des chanteurs et le nombre de chanteurs de chaque citoyennet\u00e9."},{"db_id":"car_1","query":"SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)","query_toks":["SELECT","T1.model","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","WHERE","T2.Weight","<","(","SELECT","avg","(","Weight",")","FROM","CARS_DATA",")"],"query_toks_no_value":["select","t1",".","model","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","where","t2",".","weight","<","(","select","avg","(","weight",")","from","cars_data",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,4,[0,[0,21,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,21,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quel","est","le","mod\u00e8le","de","la","voiture","avec","un","poids","inf\u00e9rieur","\u00e0","la","moyenne","?"],"question":"Quel est le mod\u00e8le de la voiture avec un poids inf\u00e9rieur \u00e0 la moyenne?"},{"db_id":"tvshow","query":"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";","query_toks":["SELECT","T2.Episode","FROM","TV_Channel","AS","T1","JOIN","TV_series","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T1.series_name","=","``","Sky","Radio","''",";"],"query_toks_no_value":["select","t2",".","episode","from","tv_channel","as","t1","join","tv_series","as","t2","on","t1",".","id","=","t2",".","channel","where","t1",".","series_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,18,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Sky Radio\"",null]]},"question_toks":["``","Quel","est","l'\u00e9pisode","de","la","s\u00e9rie","t\u00e9l\u00e9vis\u00e9e","intitul\u00e9e","''","``","Sky","Radio","''","``","?","''"],"question":"\"Quel est l'\u00e9pisode de la s\u00e9rie t\u00e9l\u00e9vis\u00e9e intitul\u00e9e\" \"Sky Radio\" \"?\""},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.DestAirport","=","``","AHD","''"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","destairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"AHD\"",null]]},"question_toks":["Quelles","sont","les","compagnies","a\u00e9riennes","qui","proposent","des","vols","\u00e0","l'a\u00e9roport","de","'AHD","'","?"],"question":"Quelles sont les compagnies a\u00e9riennes qui proposent des vols \u00e0 l'a\u00e9roport de 'AHD'?"},{"db_id":"concert_singer","query":"SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","YEAR","FROM","concert","GROUP","BY","YEAR","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","year","from","concert","group","by","year","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","l'ann\u00e9e","qui","a","eu","le","plus","de","concerts","?"],"question":"Quelle est l'ann\u00e9e qui a eu le plus de concerts?"},{"db_id":"world_1","query":"SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"","query_toks":["SELECT","DISTINCT","T3.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","JOIN","city","AS","T3","ON","T1.Code","=","T3.CountryCode","WHERE","T2.IsOfficial","=","'T","'","AND","T2.Language","=","'Chinese","'","AND","T1.Continent","=","``","Asia","''"],"query_toks_no_value":["select","distinct","t3",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","join","city","as","t3","on","t1",".","code","=","t3",".","countrycode","where","t2",".","isofficial","=","value","and","t2",".","language","=","value","and","t1",".","continent","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"T\"",null],"and",[false,2,[0,[0,24,false],null],"\"Chinese\"",null],"and",[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Quelles","villes","uniques","se","trouvent","dans","les","pays","asiatiques","o\u00f9","le","chinois","est","la","langue","officielle","?"],"question":"Quelles villes uniques se trouvent dans les pays asiatiques o\u00f9 le chinois est la langue officielle?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2","query_toks":["SELECT","document_id","FROM","Paragraphs","GROUP","BY","document_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","document_id","from","paragraphs","group","by","document_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,15,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Listez","tous","les","identifiants","de","document","avec","au","moins","deux","paragraphes","."],"question":"Listez tous les identifiants de document avec au moins deux paragraphes."},{"db_id":"wta_1","query":"SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50","query_toks":["SELECT","country_code","FROM","players","GROUP","BY","country_code","HAVING","count","(","*",")",">","50"],"query_toks_no_value":["select","country_code","from","players","group","by","country_code","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[[false,3,[0,[3,0,false],null],50.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","codes","des","pays","de","plus","de","50","joueurs","?"],"question":"Quels sont les codes des pays de plus de 50 joueurs?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"","query_toks":["SELECT","T2.document_name","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id","WHERE","T1.template_type_code","=","``","BK","''"],"query_toks_no_value":["select","t2",".","document_name","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id","where","t1",".","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"BK\"",null]]},"question_toks":["Quels","sont","les","noms","des","documents","qui","utilisent","des","mod\u00e8les","avec","le","code","BK","?"],"question":"Quels sont les noms des documents qui utilisent des mod\u00e8les avec le code BK?"},{"db_id":"car_1","query":"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';","query_toks":["SELECT","DISTINCT","T1.model","FROM","MODEL_LIST","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Model","=","T2.Model","JOIN","CARS_DATA","AS","T3","ON","T2.MakeId","=","T3.Id","JOIN","CAR_MAKERS","AS","T4","ON","T1.Maker","=","T4.Id","WHERE","T3.weight","<","3500","AND","T4.FullName","!","=","'Ford","Motor","Company","'",";"],"query_toks_no_value":["select","distinct","t1",".","model","from","model_list","as","t1","join","car_names","as","t2","on","t1",".","model","=","t2",".","model","join","cars_data","as","t3","on","t2",".","makeid","=","t3",".","id","join","car_makers","as","t4","on","t1",".","maker","=","t4",".","id","where","t3",".","weight","<","value","and","t4",".","fullname","!","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,14,false],null]],"table_units":[["table_unit",3],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,4,[0,[0,21,false],null],3500.0,null],"and",[false,7,[0,[0,8,false],null],"\"Ford Motor Company\"",null]]},"question_toks":["Quels","sont","les","diff\u00e9rents","mod\u00e8les","plus","l\u00e9gers","que","3500","mais","qui","n'ont","pas","\u00e9t\u00e9","construits","par","la","Ford","Motor","Company","?"],"question":"Quels sont les diff\u00e9rents mod\u00e8les plus l\u00e9gers que 3500 mais qui n'ont pas \u00e9t\u00e9 construits par la Ford Motor Company?"},{"db_id":"world_1","query":"SELECT Name FROM country WHERE IndepYear  >  1950","query_toks":["SELECT","Name","FROM","country","WHERE","IndepYear",">","1950"],"query_toks_no_value":["select","name","from","country","where","indepyear",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],1950.0,null]]},"question_toks":["Quels","sont","les","noms","de","tous","les","pays","devenus","ind\u00e9pendants","apr\u00e8s","1950","?"],"question":"Quels sont les noms de tous les pays devenus ind\u00e9pendants apr\u00e8s 1950?"},{"db_id":"student_transcripts_tracking","query":"SELECT other_student_details FROM Students ORDER BY other_student_details DESC","query_toks":["SELECT","other_student_details","FROM","Students","ORDER","BY","other_student_details","DESC"],"query_toks_no_value":["select","other_student_details","from","students","order","by","other_student_details","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,43,false],null]]],"select":[false,[[0,[0,[0,43,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","autres","d\u00e9tails","pouvez-vous","me","dire","sur","les","\u00e9l\u00e8ves","par","ordre","alphab\u00e9tique","invers\u00e9","?"],"question":"Quels autres d\u00e9tails pouvez-vous me dire sur les \u00e9l\u00e8ves par ordre alphab\u00e9tique invers\u00e9?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"","query_toks":["SELECT","T1.paragraph_text","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_id","=","T2.document_id","WHERE","T2.document_name","=","``","Customer","reviews","''"],"query_toks_no_value":["select","t1",".","paragraph_text","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","where","t2",".","document_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Customer reviews\"",null]]},"question_toks":["``","Afficher","tous","les","textes","de","paragraphe","du","document","''","``","Avis","clients","''","``",".","''"],"question":"\"Afficher tous les textes de paragraphe du document\" \"Avis clients\" \".\""},{"db_id":"tvshow","query":"SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";","query_toks":["SELECT","Title","FROM","Cartoon","WHERE","Directed_by","=","``","Ben","Jones","''",";"],"query_toks_no_value":["select","title","from","cartoon","where","directed_by","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null]]},"question_toks":["``","Liste","tous","les","dessins","anim\u00e9s","r\u00e9alis\u00e9s","par","''","``","Ben","Jones","''","``",".","''"],"question":"\"Liste tous les dessins anim\u00e9s r\u00e9alis\u00e9s par\" \"Ben Jones\" \".\""},{"db_id":"world_1","query":"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"","query_toks":["SELECT","avg","(","LifeExpectancy",")","FROM","country","WHERE","Region","=","``","Central","Africa","''"],"query_toks_no_value":["select","avg","(","lifeexpectancy",")","from","country","where","region","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Central Africa\"",null]]},"question_toks":["Quelle","est","l'esp\u00e9rance","de","vie","moyenne","pr\u00e9vue","pour","les","pays","de","la","r\u00e9gion","de","l'Afrique","centrale","?"],"question":"Quelle est l'esp\u00e9rance de vie moyenne pr\u00e9vue pour les pays de la r\u00e9gion de l'Afrique centrale?"},{"db_id":"dog_kennels","query":"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","query_toks":["SELECT","T1.first_name",",","T1.last_name",",","T2.size_code","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","last_name",",","t2",".","size_code","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]],[0,[0,[0,24,false],null]]]],"union":null,"where":[]},"question_toks":["Indique","le","pr\u00e9nom",",","le","nom","et","la","taille","de","chaque","propri\u00e9taire","pour","son","chien","."],"question":"Indique le pr\u00e9nom, le nom et la taille de chaque propri\u00e9taire pour son chien."},{"db_id":"world_1","query":"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","query_toks":["SELECT","sum","(","Population",")",",","GovernmentForm","FROM","country","GROUP","BY","GovernmentForm","HAVING","avg","(","LifeExpectancy",")",">","72"],"query_toks_no_value":["select","sum","(","population",")",",","governmentform","from","country","group","by","governmentform","having","avg","(","lifeexpectancy",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,19,false]],"having":[[false,3,[0,[5,15,false],null],72.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]],[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","nom","du","formulaire","gouvernemental","et","la","population","totale","de","chaque","formulaire","gouvernemental","dont","l'esp\u00e9rance","de","vie","moyenne","est","sup\u00e9rieure","\u00e0","72","."],"question":"Trouve le nom du formulaire gouvernemental et la population totale de chaque formulaire gouvernemental dont l'esp\u00e9rance de vie moyenne est sup\u00e9rieure \u00e0 72."},{"db_id":"car_1","query":"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';","query_toks":["SELECT","count","(","*",")","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","WHERE","T1.FullName","=","'American","Motor","Company","'",";"],"query_toks_no_value":["select","count","(","*",")","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","where","t1",".","fullname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"American Motor Company\"",null]]},"question_toks":["Quel","est","le","nombre","de","mod\u00e8les","de","voitures","cr\u00e9\u00e9s","par","le","constructeur","automobile","American","Motor","Company","?"],"question":"Quel est le nombre de mod\u00e8les de voitures cr\u00e9\u00e9s par le constructeur automobile American Motor Company?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","query_toks":["SELECT","T1.template_type_code",",","count","(","*",")","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id","GROUP","BY","T1.template_type_code"],"query_toks_no_value":["select","t1",".","template_type_code",",","count","(","*",")","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id","group","by","t1",".","template_type_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Affiche","tous","les","codes","de","type","de","mod\u00e8le","et","le","nombre","de","documents","utilisant","chaque","type","."],"question":"Affiche tous les codes de type de mod\u00e8le et le nombre de documents utilisant chaque type."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","query_toks":["SELECT","document_id",",","count","(","*",")","FROM","Paragraphs","GROUP","BY","document_id","ORDER","BY","document_id"],"query_toks_no_value":["select","document_id",",","count","(","*",")","from","paragraphs","group","by","document_id","order","by","document_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,15,false],null]]],"select":[false,[[0,[0,[0,15,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Affiche","tous","les","identifiants","de","document","et","le","nombre","de","paragraphes","dans","chaque","document",".","Trier","par","ID","de","document","."],"question":"Affiche tous les identifiants de document et le nombre de paragraphes dans chaque document. Trier par ID de document."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(DISTINCT template_id) FROM Documents","query_toks":["SELECT","count","(","DISTINCT","template_id",")","FROM","Documents"],"query_toks_no_value":["select","count","(","distinct","template_id",")","from","documents"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,10,true],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","mod\u00e8les","diff\u00e9rents","tous","les","documents","utilisent-ils","?"],"question":"Combien de mod\u00e8les diff\u00e9rents tous les documents utilisent-ils?"},{"db_id":"tvshow","query":"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","query_toks":["SELECT","LANGUAGE",",","count","(","*",")","FROM","TV_Channel","GROUP","BY","LANGUAGE","ORDER","BY","count","(","*",")","ASC","LIMIT","1",";"],"query_toks_no_value":["select","language",",","count","(","*",")","from","tv_channel","group","by","language","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quelles","sont","les","langues","utilis\u00e9es","par","le","moins","de","cha\u00eenes","de","t\u00e9l\u00e9vision","et","combien","de","cha\u00eenes","l'utilisent","?"],"question":"Quelles sont les langues utilis\u00e9es par le moins de cha\u00eenes de t\u00e9l\u00e9vision et combien de cha\u00eenes l'utilisent?"},{"db_id":"network_1","query":"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"","query_toks":["SELECT","count","(","*",")","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","WHERE","T2.name","=","``","Kyle","''"],"query_toks_no_value":["select","count","(","*",")","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Renvoyez","le","nombre","de","likes","du","lyc\u00e9en","nomm\u00e9","Kyle","."],"question":"Renvoyez le nombre de likes du lyc\u00e9en nomm\u00e9 Kyle."},{"db_id":"dog_kennels","query":"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","query_toks":["SELECT","DISTINCT","T1.first_name",",","T3.treatment_type_description","FROM","professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id","JOIN","Treatment_types","AS","T3","ON","T2.treatment_type_code","=","T3.treatment_type_code"],"query_toks_no_value":["select","distinct","t1",".","first_name",",","t3",".","treatment_type_description","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id","join","treatment_types","as","t3","on","t2",".","treatment_type_code","=","t3",".","treatment_type_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,35,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Indique","le","pr\u00e9nom","de","tous","les","professionnels","ainsi","que","la","description","du","traitement","qu'ils","ont","effectu\u00e9","."],"question":"Indique le pr\u00e9nom de tous les professionnels ainsi que la description du traitement qu'ils ont effectu\u00e9."},{"db_id":"pets_1","query":"SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'","query_toks":["SELECT","count","(","*",")","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T2.petid","=","T3.petid","WHERE","T1.sex","=","'F","'","AND","T3.pettype","=","'dog","'"],"query_toks_no_value":["select","count","(","*",")","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t2",".","petid","=","t3",".","petid","where","t1",".","sex","=","value","and","t3",".","pettype","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"F\"",null],"and",[false,2,[0,[0,12,false],null],"\"dog\"",null]]},"question_toks":["Trouve","le","nombre","d'animaux","domestiques","\u00e9lev\u00e9s","par","des","\u00e9tudiantes","(","avec","le","sexe","F",")","."],"question":"Trouve le nombre d'animaux domestiques \u00e9lev\u00e9s par des \u00e9tudiantes (avec le sexe F)."},{"db_id":"car_1","query":"SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;","query_toks":["SELECT","avg","(","horsepower",")","FROM","CARS_DATA","WHERE","YEAR","<","1980",";"],"query_toks_no_value":["select","avg","(","horsepower",")","from","cars_data","where","year","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,20,false],null]]]],"union":null,"where":[[false,4,[0,[0,23,false],null],1980.0,null]]},"question_toks":["Quelle","est","la","puissance","moyenne","des","voitures","avant","1980","?"],"question":"Quelle est la puissance moyenne des voitures avant 1980?"},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","GROUP","BY","T1.Airline","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","group","by","t1",".","airline","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","compagnie","a\u00e9rienne","a","le","plus","de","vols","?"],"question":"Quelle compagnie a\u00e9rienne a le plus de vols?"},{"db_id":"student_transcripts_tracking","query":"SELECT section_name FROM Sections ORDER BY section_name DESC","query_toks":["SELECT","section_name","FROM","Sections","ORDER","BY","section_name","DESC"],"query_toks_no_value":["select","section_name","from","sections","order","by","section_name","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,25,false],null]]],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","le","nom_section","dans","l'ordre","lexicographique","invers\u00e9","."],"question":"Liste le nom_section dans l'ordre lexicographique invers\u00e9."},{"db_id":"battle_death","query":"SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'","query_toks":["SELECT","name","FROM","battle","WHERE","bulgarian_commander","=","'Kaloyan","'","AND","latin_commander","=","'Baldwin","I","'"],"query_toks_no_value":["select","name","from","battle","where","bulgarian_commander","=","value","and","latin_commander","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Kaloyan\"",null],"and",[false,2,[0,[0,5,false],null],"\"Baldwin I\"",null]]},"question_toks":["Quels","sont","les","noms","de","bataille","distincts","entre","le","commandant","bulgare","\u00ab","Kaloyan","\u00bb","et","le","commandant","latin","\u00ab","Baldwin","I","\u00bb","?"],"question":"Quels sont les noms de bataille distincts entre le commandant bulgare \u00abKaloyan\u00bb et le commandant latin \u00abBaldwin I\u00bb?"},{"db_id":"world_1","query":"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")","query_toks":["SELECT","sum","(","Population",")","FROM","country","WHERE","Name","NOT","IN","(","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''",")"],"query_toks_no_value":["select","sum","(","population",")","from","country","where","name","not","in","(","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]]]],"union":null,"where":[[true,8,[0,[0,9,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},null]]},"question_toks":["Quel","est","le","nombre","total","de","personnes","vivant","dans","les","pays","qui","n'utilisent","pas","l'anglais","?"],"question":"Quel est le nombre total de personnes vivant dans les pays qui n'utilisent pas l'anglais?"},{"db_id":"dog_kennels","query":"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code","query_toks":["SELECT","T1.cost_of_treatment",",","T2.treatment_type_description","FROM","Treatments","AS","T1","JOIN","treatment_types","AS","T2","ON","T1.treatment_type_code","=","T2.treatment_type_code"],"query_toks_no_value":["select","t1",".","cost_of_treatment",",","t2",".","treatment_type_description","from","treatments","as","t1","join","treatment_types","as","t2","on","t1",".","treatment_type_code","=","t2",".","treatment_type_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,47,false],null],[0,8,false],null]],"table_units":[["table_unit",7],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,49,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","le","co\u00fbt","et","la","description","du","type","de","traitement","de","chaque","traitement","?"],"question":"Quels sont le co\u00fbt et la description du type de traitement de chaque traitement?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.degree_summary_name","FROM","Degree_Programs","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.degree_program_id","=","T2.degree_program_id","GROUP","BY","T1.degree_summary_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","degree_summary_name","from","degree_programs","as","t1","join","student_enrolment","as","t2","on","t1",".","degree_program_id","=","t2",".","degree_program_id","group","by","t1",".","degree_summary_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[[0,20,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nom","du","sommaire","des","dipl\u00f4mes","qui","\u00e0","le","plus","grand","nombre","d","\u2019","\u00e9tudiants","enregistr\u00e9","?"],"question":"Quel est le nom du sommaire des dipl\u00f4mes qui \u00e0 le plus grand nombre d\u2019\u00e9tudiants enregistr\u00e9?"},{"db_id":"wta_1","query":"SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1","query_toks":["SELECT","first_name",",","country_code","FROM","players","ORDER","BY","birth_date","LIMIT","1"],"query_toks_no_value":["select","first_name",",","country_code","from","players","order","by","birth_date","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","pr\u00e9nom","et","l'indicatif","du","pays","du","joueur","le","plus","vieux","?"],"question":"Quel est le pr\u00e9nom et l'indicatif du pays du joueur le plus vieux?"},{"db_id":"singer","query":"SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949","query_toks":["SELECT","Name","FROM","singer","WHERE","Birth_Year","=","1948","OR","Birth_Year","=","1949"],"query_toks_no_value":["select","name","from","singer","where","birth_year","=","value","or","birth_year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],1948.0,null],"or",[false,2,[0,[0,3,false],null],1949.0,null]]},"question_toks":["Quels","sont","les","noms","des","chanteurs","\u00e0","qui","leurs","ann\u00e9es","de","naissance","sont","1948","ou","1949","?"],"question":"Quels sont les noms des chanteurs \u00e0 qui leurs ann\u00e9es de naissance sont 1948 ou 1949?"},{"db_id":"museum_visit","query":"SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","t2.Museum_ID",",","t1.name","FROM","museum","AS","t1","JOIN","visit","AS","t2","ON","t1.Museum_ID","=","t2.Museum_ID","GROUP","BY","t2.Museum_ID","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","museum_id",",","t1",".","name","from","museum","as","t1","join","visit","as","t2","on","t1",".","museum_id","=","t2",".","museum_id","group","by","t2",".","museum_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","l'identifiant","et","le","nom","du","mus\u00e9e","visit\u00e9","la","plupart","du","temps","?"],"question":"Quels sont l'identifiant et le nom du mus\u00e9e visit\u00e9 la plupart du temps?"},{"db_id":"world_1","query":"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"","query_toks":["SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","INTERSECT","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","French","''"],"query_toks_no_value":["select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","intersect","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"French\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},"question_toks":["Quels","sont","les","nations","qui","parlent","anglais","et","fran\u00e7ais","?"],"question":"Quels sont les nations qui parlent anglais et fran\u00e7ais?"},{"db_id":"museum_visit","query":"SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC","query_toks":["SELECT","name","FROM","visitor","WHERE","Level_of_membership",">","4","ORDER","BY","Level_of_membership","DESC"],"query_toks_no_value":["select","name","from","visitor","where","level_of_membership",">","value","order","by","level_of_membership","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,7,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,3,[0,[0,7,false],null],4.0,null]]},"question_toks":["Trouve","les","noms","des","visiteurs","dont","le","niveau","d'adh\u00e9sion","est","sup\u00e9rieur","\u00e0","4","et","triez","les","r\u00e9sultats","par","niveau","de","haut","en","bas","."],"question":"Trouve les noms des visiteurs dont le niveau d'adh\u00e9sion est sup\u00e9rieur \u00e0 4 et triez les r\u00e9sultats par niveau de haut en bas."},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","WHERE","T2.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","where","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Combien","de","vols","arrivent","\u00e0","Aberdeen","?"],"question":"Combien de vols arrivent \u00e0 Aberdeen?"},{"db_id":"battle_death","query":"SELECT max(killed) ,  min(killed) FROM death","query_toks":["SELECT","max","(","killed",")",",","min","(","killed",")","FROM","death"],"query_toks_no_value":["select","max","(","killed",")",",","min","(","killed",")","from","death"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,17,false],null]],[2,[0,[0,17,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nombre","maximal","et","minimal","de","d\u00e9c\u00e8s","caus\u00e9","chaque","fois","?"],"question":"Quel est le nombre maximal et minimal de d\u00e9c\u00e8s caus\u00e9 chaque fois?"},{"db_id":"network_1","query":"SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"","query_toks":["SELECT","ID","FROM","Highschooler","WHERE","name","=","``","Kyle","''"],"query_toks_no_value":["select","id","from","highschooler","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Montrez","l'identifiant","de","l'\u00e9tudiant","secondaire","nomm\u00e9","Kyle","."],"question":"Montrez l'identifiant de l'\u00e9tudiant secondaire nomm\u00e9 Kyle."},{"db_id":"world_1","query":"SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"","query_toks":["SELECT","Name","FROM","country","WHERE","continent","=","``","Europe","''","AND","Population","=","``","80000","''"],"query_toks_no_value":["select","name","from","country","where","continent","=","value","and","population","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Europe\"",null],"and",[false,2,[0,[0,14,false],null],"\"80000\"",null]]},"question_toks":["Donnez","les","noms","des","pays","qui","sont","en","Europe","et","ont","une","population","\u00e9gale","\u00e0","80000","."],"question":"Donnez les noms des pays qui sont en Europe et ont une population \u00e9gale \u00e0 80000."},{"db_id":"car_1","query":"SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;","query_toks":["SELECT","DISTINCT","T1.Year","FROM","CARS_DATA","AS","T1","WHERE","T1.Weight",">","3000","AND","T1.weight","<","4000",";"],"query_toks_no_value":["select","distinct","t1",".","year","from","cars_data","as","t1","where","t1",".","weight",">","value","and","t1",".","weight","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,3,[0,[0,21,false],null],3000.0,null],"and",[false,4,[0,[0,21,false],null],4000.0,null]]},"question_toks":["Quelles","ann\u00e9es","ont","\u00e9t\u00e9","fabriqu\u00e9","des","automobiles","qui","p\u00e8sent","pas","moins","de","3000","et","pas","plus","de","4000","?"],"question":"Quelles ann\u00e9es ont \u00e9t\u00e9 fabriqu\u00e9 des automobiles qui p\u00e8sent pas moins de 3000 et pas plus de 4000?"},{"db_id":"dog_kennels","query":"SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs","query_toks":["SELECT","first_name","FROM","Professionals","UNION","SELECT","first_name","FROM","Owners","EXCEPT","SELECT","name","FROM","Dogs"],"query_toks_no_value":["select","first_name","from","professionals","union","select","first_name","from","owners","except","select","name","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]]]],"union":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"where":[]},"question_toks":["Trouve","les","pr\u00e9noms","qui","sont","utilis\u00e9s","pour","les","professionnels","ou","les","propri\u00e9taires","mais","ne","sont","pas","utilis\u00e9s","comme","des","noms","de","chien","."],"question":"Trouve les pr\u00e9noms qui sont utilis\u00e9s pour les professionnels ou les propri\u00e9taires mais ne sont pas utilis\u00e9s comme des noms de chien."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'","query_toks":["SELECT","T1.paragraph_id",",","T1.paragraph_text","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_id","=","T2.document_id","WHERE","T2.Document_Name","=","'Welcome","to","NY","'"],"query_toks_no_value":["select","t1",".","paragraph_id",",","t1",".","paragraph_text","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","where","t2",".","document_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Welcome to NY\"",null]]},"question_toks":["Quels","sont","les","identifiants","et","les","textes","des","paragraphes","du","document","nomm\u00e9","'Welcome","to","NY","'","?"],"question":"Quels sont les identifiants et les textes des paragraphes du document nomm\u00e9 'Welcome to NY'?"},{"db_id":"world_1","query":"SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"","query_toks":["SELECT","sum","(","Population",")",",","max","(","GNP",")","FROM","country","WHERE","Continent","=","``","Asia","''"],"query_toks_no_value":["select","sum","(","population",")",",","max","(","gnp",")","from","country","where","continent","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]],[1,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Combien","de","personnes","habitent","en","Asie","et","c'est","quoi","est","le","plus","grand","PNB","parmi","eux","?"],"question":"Combien de personnes habitent en Asie et c'est quoi est le plus grand PNB parmi eux?"},{"db_id":"world_1","query":"SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"","query_toks":["SELECT","count","(","*",")","FROM","country","WHERE","GovernmentForm","=","``","Republic","''"],"query_toks_no_value":["select","count","(","*",")","from","country","where","governmentform","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"Republic\"",null]]},"question_toks":["Combien","de","pays","ont","des","gouvernements","qui","sont","r\u00e9publiques","?"],"question":"Combien de pays ont des gouvernements qui sont r\u00e9publiques?"},{"db_id":"pets_1","query":"SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20","query_toks":["SELECT","count","(","*",")","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","WHERE","T1.age",">","20"],"query_toks_no_value":["select","count","(","*",")","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","where","t1",".","age",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],20.0,null]]},"question_toks":["Combien","d'animaux","domestiques","appartenant","par","des","\u00e9tudiants","qui","sont","\u00e2g\u00e9s","plus","de","20","?"],"question":"Combien d'animaux domestiques appartenant par des \u00e9tudiants qui sont \u00e2g\u00e9s plus de 20?"},{"db_id":"world_1","query":"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"","query_toks":["SELECT","COUNT","(","*",")","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.Name","=","``","Afghanistan","''","AND","IsOfficial","=","``","T","''"],"query_toks_no_value":["select","count","(","*",")","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","name","=","value","and","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Afghanistan\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Combien","de","langues","officielles","l","\u2019","Afghanistan","a-t-il","?"],"question":"Combien de langues officielles l\u2019Afghanistan a-t-il?"},{"db_id":"concert_singer","query":"SELECT country ,  count(*) FROM singer GROUP BY country","query_toks":["SELECT","country",",","count","(","*",")","FROM","singer","GROUP","BY","country"],"query_toks_no_value":["select","country",",","count","(","*",")","from","singer","group","by","country"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Affiche","tous","les","pays","et","le","nombre","de","chanteurs","dans","chaque","pays","."],"question":"Affiche tous les pays et le nombre de chanteurs dans chaque pays."},{"db_id":"concert_singer","query":"SELECT avg(capacity) ,  max(capacity) FROM stadium","query_toks":["SELECT","avg","(","capacity",")",",","max","(","capacity",")","FROM","stadium"],"query_toks_no_value":["select","avg","(","capacity",")",",","max","(","capacity",")","from","stadium"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]],[1,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","capacit\u00e9","moyenne","et","maximale","de","tous","les","stades","?"],"question":"Quelle est la capacit\u00e9 moyenne et maximale de tous les stades?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Paragraphs","query_toks":["SELECT","count","(","*",")","FROM","Paragraphs"],"query_toks_no_value":["select","count","(","*",")","from","paragraphs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Compte","le","nombre","de","paragraphes","."],"question":"Compte le nombre de paragraphes. "},{"db_id":"student_transcripts_tracking","query":"SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.department_name",",","T1.department_id","FROM","Degree_Programs","AS","T1","JOIN","Departments","AS","T2","ON","T1.department_id","=","T2.department_id","GROUP","BY","T1.department_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","department_name",",","t1",".","department_id","from","degree_programs","as","t1","join","departments","as","t2","on","t1",".","department_id","=","t2",".","department_id","group","by","t1",".","department_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,19,false],null],[0,14,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","d\u00e9partement","offre","le","plus","de","dipl\u00f4mes","?","Indiquez","le","nom","et","l'identifiant","du","service","."],"question":"Quel d\u00e9partement offre le plus de dipl\u00f4mes? Indiquez le nom et l'identifiant du service."},{"db_id":"museum_visit","query":"SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1","query_toks":["SELECT","museum_id",",","name","FROM","museum","ORDER","BY","num_of_staff","DESC","LIMIT","1"],"query_toks_no_value":["select","museum_id",",","name","from","museum","order","by","num_of_staff","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,3,false],null]]],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Trouver","l","\u2019","identifiant","et","le","nom","du","mus\u00e9e","qui","\u00e0","le","plus","de","membres","du","personnel","?"],"question":"Trouver l\u2019identifiant et le nom du mus\u00e9e qui \u00e0 le plus de membres du personnel?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.student_id",",","T1.first_name",",","T1.middle_name",",","T1.last_name",",","count","(","*",")",",","T1.student_id","FROM","Students","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.student_id","=","T2.student_id","GROUP","BY","T1.student_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","student_id",",","t1",".","first_name",",","t1",".","middle_name",",","t1",".","last_name",",","count","(","*",")",",","t1",".","student_id","from","students","as","t1","join","student_enrolment","as","t2","on","t1",".","student_id","=","t2",".","student_id","group","by","t1",".","student_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,47,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,32,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,32,false],null]],[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]],[3,[0,[0,0,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","l'\u00e9tudiant","est","enregistr\u00e9","le","plus","souvent","\u00e0","n'importe","quel","programme","?","Listez","l","\u2019","identifiant",",","le","pr\u00e9nom",",","le","deuxi\u00e8me","pr\u00e9nom",",","le","nom","de","famille",",","le","nombre","d","\u2019","inscriptions","et","l","\u2019","identification","de","l","\u2019","\u00e9tudiant","."],"question":"Quel est l'\u00e9tudiant est enregistr\u00e9 le plus souvent \u00e0 n'importe quel programme? Listez l\u2019identifiant, le pr\u00e9nom, le deuxi\u00e8me pr\u00e9nom, le nom de famille, le nombre d\u2019inscriptions et l\u2019identification de l\u2019\u00e9tudiant."},{"db_id":"world_1","query":"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"","query_toks":["SELECT","DISTINCT","CountryCode","FROM","countrylanguage","WHERE","LANGUAGE","!","=","``","English","''"],"query_toks_no_value":["select","distinct","countrycode","from","countrylanguage","where","language","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,7,[0,[0,24,false],null],"\"English\"",null]]},"question_toks":["Quels","sont","les","codes","de","pays","des","pays","o\u00f9","les","gens","utilisent","des","langues","autres","que","l'anglais","?"],"question":"Quels sont les codes de pays des pays o\u00f9 les gens utilisent des langues autres que l'anglais?"},{"db_id":"pets_1","query":"SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'","query_toks":["SELECT","T1.Fname","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'","INTERSECT","SELECT","T1.Fname","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'dog","'"],"query_toks_no_value":["select","t1",".","fname","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value","intersect","select","t1",".","fname","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"dog\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null]]},"question_toks":["Trouve","le","nom","des","\u00e9l\u00e8ves","qui","ont","des","chats","et","chiens","."],"question":"Trouve le nom des \u00e9l\u00e8ves qui ont des chats et chiens."},{"db_id":"student_transcripts_tracking","query":"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.semester_name",",","T1.semester_id","FROM","Semesters","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.semester_id","=","T2.semester_id","GROUP","BY","T1.semester_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","semester_name",",","t1",".","semester_id","from","semesters","as","t1","join","student_enrolment","as","t2","on","t1",".","semester_id","=","t2",".","semester_id","group","by","t1",".","semester_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,28,false],null],[0,46,false],null]],"table_units":[["table_unit",5],["table_unit",7]]},"groupBy":[[0,28,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,29,false],null]],[0,[0,[0,28,false],null]]]],"union":null,"where":[]},"question_toks":["Pour","chaque","semestre",",","quel","est","le","nom","et","l","\u2019","identifiant","de","celui","qui","\u00e0","le","plus","d","\u2019","\u00e9tudiants","enregistr\u00e9","?"],"question":"Pour chaque semestre, quel est le nom et l\u2019identifiant de celui qui \u00e0 le plus d\u2019\u00e9tudiants enregistr\u00e9?"},{"db_id":"car_1","query":"SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';","query_toks":["SELECT","count","(","*",")","FROM","MODEL_LIST","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.Maker","=","T2.Id","JOIN","COUNTRIES","AS","T3","ON","T2.Country","=","T3.CountryId","WHERE","T3.CountryName","=","'usa","'",";"],"query_toks_no_value":["select","count","(","*",")","from","model_list","as","t1","join","car_makers","as","t2","on","t1",".","maker","=","t2",".","id","join","countries","as","t3","on","t2",".","country","=","t3",".","countryid","where","t3",".","countryname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"usa\"",null]]},"question_toks":["Combien","de","mod\u00e8les","de","voitures","sont","produits","aux","\u00c9tats-Unis","?"],"question":"Combien de mod\u00e8les de voitures sont produits aux \u00c9tats-Unis?"},{"db_id":"concert_singer","query":"SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014","query_toks":["SELECT","T2.name","FROM","singer_in_concert","AS","T1","JOIN","singer","AS","T2","ON","T1.singer_id","=","T2.singer_id","JOIN","concert","AS","T3","ON","T1.concert_id","=","T3.concert_id","WHERE","T3.year","=","2014"],"query_toks_no_value":["select","t2",".","name","from","singer_in_concert","as","t1","join","singer","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","join","concert","as","t3","on","t1",".","concert_id","=","t3",".","concert_id","where","t3",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,21,false],null],[0,8,false],null]],"table_units":[["table_unit",3],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2014.0,null]]},"question_toks":["Listez","tous","les","noms","des","chanteurs","en","concert","dans","l'ann\u00e9e","2014","."],"question":"Listez tous les noms des chanteurs en concert dans l'ann\u00e9e 2014. "},{"db_id":"student_transcripts_tracking","query":"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","query_toks":["SELECT","DISTINCT","T1.first_name",",","T1.middle_name",",","T1.last_name","FROM","Students","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.student_id","=","T2.student_id","JOIN","Degree_Programs","AS","T3","ON","T2.degree_program_id","=","T3.degree_program_id","WHERE","T3.degree_summary_name","=","'Bachelor","'"],"query_toks_no_value":["select","distinct","t1",".","first_name",",","t1",".","middle_name",",","t1",".","last_name","from","students","as","t1","join","student_enrolment","as","t2","on","t1",".","student_id","=","t2",".","student_id","join","degree_programs","as","t3","on","t2",".","degree_program_id","=","t3",".","degree_program_id","where","t3",".","degree_summary_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,47,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"Bachelor\"",null]]},"question_toks":["Quel","est","le","premier",",","le","deuxi\u00e8me","et","le","nom","de","famille","de","toutes","les","personnes","qui","sont","enregistr\u00e9s","\u00e0","un","programme","de","baccalaur\u00e9at","?"],"question":"Quel est le premier, le deuxi\u00e8me et le nom de famille de toutes les personnes qui sont enregistr\u00e9s \u00e0 un programme de baccalaur\u00e9at?"},{"db_id":"dog_kennels","query":"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","query_toks":["SELECT","T1.name",",","T2.date_of_treatment","FROM","Dogs","AS","T1","JOIN","Treatments","AS","T2","ON","T1.dog_id","=","T2.dog_id","WHERE","T1.breed_code","=","(","SELECT","breed_code","FROM","Dogs","GROUP","BY","breed_code","ORDER","BY","count","(","*",")","ASC","LIMIT","1",")"],"query_toks_no_value":["select","t1",".","name",",","t2",".","date_of_treatment","from","dogs","as","t1","join","treatments","as","t2","on","t1",".","dog_id","=","t2",".","dog_id","where","t1",".","breed_code","=","(","select","breed_code","from","dogs","group","by","breed_code","order","by","count","(","*",")","asc","limit","value",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,20,false],null],[0,45,false],null]],"table_units":[["table_unit",5],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]],[0,[0,[0,48,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quels","chiens","sont","de","la","race","la","plus","rare","?","Montre","leurs","noms","et","dates","de","traitement","."],"question":"Quels chiens sont de la race la plus rare? Montre leurs noms et dates de traitement."},{"db_id":"car_1","query":"SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;","query_toks":["SELECT","CountryName","FROM","countries","EXCEPT","SELECT","T1.CountryName","FROM","countries","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.countryId","=","T2.Country",";"],"query_toks_no_value":["select","countryname","from","countries","except","select","t1",".","countryname","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","pays","qui","n'ont","pas","de","fabricant","d'automobile","."],"question":"Quels sont les noms des pays qui n'ont pas de fabricant d'automobile. "},{"db_id":"world_1","query":"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","query_toks":["SELECT","sum","(","Population",")",",","avg","(","LifeExpectancy",")",",","Continent","FROM","country","GROUP","BY","Continent","HAVING","avg","(","LifeExpectancy",")","<","72"],"query_toks_no_value":["select","sum","(","population",")",",","avg","(","lifeexpectancy",")",",","continent","from","country","group","by","continent","having","avg","(","lifeexpectancy",")","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,10,false]],"having":[[false,4,[0,[5,15,false],null],72.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]],[5,[0,[0,15,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","diff\u00e9rents","continents","et","la","population","totale","et","l'esp\u00e9rance","de","vie","moyenne","correspondant","\u00e0","chacun",",","pour","les","continents","qui","ont","une","esp\u00e9rance","de","vie","moyenne","inf\u00e9rieure","\u00e0","72","?"],"question":"Quels sont les diff\u00e9rents continents et la population totale et l'esp\u00e9rance de vie moyenne correspondant \u00e0 chacun, pour les continents qui ont une esp\u00e9rance de vie moyenne inf\u00e9rieure \u00e0 72?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(*) FROM Courses","query_toks":["SELECT","count","(","*",")","FROM","Courses"],"query_toks_no_value":["select","count","(","*",")","from","courses"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","cours","a-t-il","?"],"question":"Combien de cours a-t-il?"},{"db_id":"orchestra","query":"SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003","query_toks":["SELECT","Record_Company","FROM","orchestra","WHERE","Year_of_Founded","<","2003","INTERSECT","SELECT","Record_Company","FROM","orchestra","WHERE","Year_of_Founded",">","2003"],"query_toks_no_value":["select","record_company","from","orchestra","where","year_of_founded","<","value","intersect","select","record_company","from","orchestra","where","year_of_founded",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,3,[0,[0,10,false],null],2003.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,4,[0,[0,10,false],null],2003.0,null]]},"question_toks":["Montre","les","maisons","de","disques","partag\u00e9es","par","des","orchestres","fond\u00e9s","avant","2003","et","apr\u00e8s","2003","."],"question":"Montre les maisons de disques partag\u00e9es par des orchestres fond\u00e9s avant 2003 et apr\u00e8s 2003."},{"db_id":"concert_singer","query":"SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","query_toks":["SELECT","LOCATION",",","name","FROM","stadium","WHERE","capacity","BETWEEN","5000","AND","10000"],"query_toks_no_value":["select","location",",","name","from","stadium","where","capacity","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,1,[0,[0,4,false],null],5000.0,10000.0]]},"question_toks":["Quels","sont","les","endroits","et","les","noms","de","toutes","les","gares","d","\u2019","une","capacit\u00e9","entre","5000","et","10000","."],"question":"Quels sont les endroits et les noms de toutes les gares d\u2019une capacit\u00e9 entre 5000 et 10000."},{"db_id":"dog_kennels","query":"SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )","query_toks":["SELECT","name","FROM","Dogs","WHERE","dog_id","NOT","IN","(","SELECT","dog_id","FROM","Treatments","GROUP","BY","dog_id","HAVING","sum","(","cost_of_treatment",")",">","1000",")"],"query_toks_no_value":["select","name","from","dogs","where","dog_id","not","in","(","select","dog_id","from","treatments","group","by","dog_id","having","sum","(","cost_of_treatment",")",">","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[[true,8,[0,[0,20,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[[0,45,false]],"having":[[false,3,[0,[4,49,false],null],1000.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,45,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quels","chiens","n","\u2019","ont","pas","co\u00fbt\u00e9","\u00e0","leur","propri\u00e9taire","plus","que","1000","pour","un","traitement","?","Listez","les","noms","des","chiens","."],"question":"Quels chiens n\u2019ont pas co\u00fbt\u00e9 \u00e0 leur propri\u00e9taire plus que 1000 pour un traitement? Listez les noms des chiens."},{"db_id":"world_1","query":"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"","query_toks":["SELECT","count","(","DISTINCT","T2.Language",")","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","IndepYear","<","1930","AND","T2.IsOfficial","=","``","T","''"],"query_toks_no_value":["select","count","(","distinct","t2",".","language",")","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","indepyear","<","value","and","t2",".","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,24,true],null]]]],"union":null,"where":[[false,4,[0,[0,13,false],null],1930.0,null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Pour","les","pays","fond\u00e9s","avant","1930",",","quel","est","le","nombre","total","de","distinct","langues","officielles","?"],"question":"Pour les pays fond\u00e9s avant 1930, quel est le nombre total de distinct langues officielles?"},{"db_id":"world_1","query":"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","query_toks":["SELECT","Name",",","population",",","HeadOfState","FROM","country","ORDER","BY","SurfaceArea","DESC","LIMIT","1"],"query_toks_no_value":["select","name",",","population",",","headofstate","from","country","order","by","surfacearea","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,12,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,14,false],null]],[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Donne","le","nom",",","la","population","et","le","chef","d","\u2019","\u00c9tat","du","pays","qui","\u00e0","la","plus","grande","superficie","."],"question":"Donne le nom, la population et le chef d\u2019\u00c9tat du pays qui \u00e0 la plus grande superficie."},{"db_id":"network_1","query":"SELECT count(*) FROM Highschooler","query_toks":["SELECT","count","(","*",")","FROM","Highschooler"],"query_toks_no_value":["select","count","(","*",")","from","highschooler"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","y","a-t-il","de","lyc\u00e9ens","?"],"question":"Combien y a-t-il de lyc\u00e9ens?"},{"db_id":"pets_1","query":"SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'","query_toks":["SELECT","DISTINCT","T1.Fname","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'","OR","T3.pettype","=","'dog","'"],"query_toks_no_value":["select","distinct","t1",".","fname","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value","or","t3",".","pettype","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null],"or",[false,2,[0,[0,12,false],null],"\"dog\"",null]]},"question_toks":["Trouve","le","pr\u00e9nom","des","\u00e9tudiants","qui","ont","un","chat","ou","un","chien","comme","animal","domestique","."],"question":"Trouve le pr\u00e9nom des \u00e9tudiants qui ont un chat ou un chien comme animal domestique. "},{"db_id":"tvshow","query":"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","query_toks":["SELECT","title",",","Directed_by","FROM","Cartoon","ORDER","BY","Original_air_date"],"query_toks_no_value":["select","title",",","directed_by","from","cartoon","order","by","original_air_date"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,23,false],null]]],"select":[false,[[0,[0,[0,20,false],null]],[0,[0,[0,21,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","et","les","directeurs","de","toutes","les","bandes","dessin\u00e9s","command\u00e9es","par","la","date","de","diffusion","?"],"question":"Quels sont les noms et les directeurs de toutes les bandes dessin\u00e9s command\u00e9es par la date de diffusion?"},{"db_id":"student_transcripts_tracking","query":"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","query_toks":["SELECT","first_name",",","middle_name",",","last_name","FROM","Students","ORDER","BY","date_left","ASC","LIMIT","1"],"query_toks_no_value":["select","first_name",",","middle_name",",","last_name","from","students","order","by","date_left","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,42,false],null]]],"select":[false,[[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]]]],"union":null,"where":[]},"question_toks":["Qui","est","le","premier","dipl\u00f4m\u00e9","de","l'\u00e9cole","?","Indiquez","le","pr\u00e9nom",",","le","deuxi\u00e8me","pr\u00e9nom","et","le","nom","de","famille","."],"question":"Qui est le premier dipl\u00f4m\u00e9 de l'\u00e9cole? Indiquez le pr\u00e9nom, le deuxi\u00e8me pr\u00e9nom et le nom de famille."},{"db_id":"world_1","query":"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")","query_toks":["SELECT","sum","(","Population",")","FROM","country","WHERE","Name","NOT","IN","(","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''",")"],"query_toks_no_value":["select","sum","(","population",")","from","country","where","name","not","in","(","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]]]],"union":null,"where":[[true,8,[0,[0,9,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},null]]},"question_toks":["Combien","de","personnes","habitent","dans","des","pays","qui","ne","parlent","pas","anglais","?"],"question":"Combien de personnes habitent dans des pays qui ne parlent pas anglais?"},{"db_id":"flight_2","query":"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"","query_toks":["SELECT","Airline",",","Abbreviation","FROM","AIRLINES","WHERE","Country","=","``","USA","''"],"query_toks_no_value":["select","airline",",","abbreviation","from","airlines","where","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"USA\"",null]]},"question_toks":["``","Liste","tous","les","noms","de","compagnies","a\u00e9riennes","et","de","leurs","abr\u00e9viations","en","``","''","EUA","''","''",".","''"],"question":"\"Liste tous les noms de compagnies a\u00e9riennes et de leurs abr\u00e9viations en \"\"EUA\"\".\""},{"db_id":"poker_player","query":"SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID","query_toks":["SELECT","T1.Name","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID"],"query_toks_no_value":["select","t1",".","name","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","est","les","noms","des","joueurs","de","poker","?"],"question":"Quels est les noms des joueurs de poker? "},{"db_id":"world_1","query":"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","query_toks":["SELECT","LANGUAGE",",","CountryCode",",","max","(","Percentage",")","FROM","countrylanguage","GROUP","BY","CountryCode"],"query_toks_no_value":["select","language",",","countrycode",",","max","(","percentage",")","from","countrylanguage","group","by","countrycode"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,24,false],null]],[0,[0,[0,23,false],null]],[1,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","langue","parl\u00e9e","par","le","plus","grand","pourcentage","de","personnes","dans","chaque","pays","?"],"question":"Quelle est la langue parl\u00e9e par le plus grand pourcentage de personnes dans chaque pays?"},{"db_id":"employee_hire_evaluation","query":"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","query_toks":["SELECT","count","(","*",")",",","LOCATION","FROM","shop","GROUP","BY","LOCATION"],"query_toks_no_value":["select","count","(","*",")",",","location","from","shop","group","by","location"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","magasins","y","a-t-il","dans","chaque","emplacement","?"],"question":"Combien de magasins y a-t-il dans chaque emplacement?"},{"db_id":"course_teach","query":"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"","query_toks":["SELECT","T3.Name","FROM","course_arrange","AS","T1","JOIN","course","AS","T2","ON","T1.Course_ID","=","T2.Course_ID","JOIN","teacher","AS","T3","ON","T1.Teacher_ID","=","T3.Teacher_ID","WHERE","T2.Course","=","``","Math","''"],"query_toks_no_value":["select","t3",".","name","from","course_arrange","as","t1","join","course","as","t2","on","t1",".","course_id","=","t2",".","course_id","join","teacher","as","t3","on","t1",".","teacher_id","=","t3",".","teacher_id","where","t2",".","course","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],"\"Math\"",null]]},"question_toks":["Quels","sont","les","noms","des","personnes","qui","enseignent","les","cours","de","math\u00e9matiques","?"],"question":"Quels sont les noms des personnes qui enseignent les cours de math\u00e9matiques?"},{"db_id":"concert_singer","query":"SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014","query_toks":["SELECT","T2.name","FROM","singer_in_concert","AS","T1","JOIN","singer","AS","T2","ON","T1.singer_id","=","T2.singer_id","JOIN","concert","AS","T3","ON","T1.concert_id","=","T3.concert_id","WHERE","T3.year","=","2014"],"query_toks_no_value":["select","t2",".","name","from","singer_in_concert","as","t1","join","singer","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","join","concert","as","t3","on","t1",".","concert_id","=","t3",".","concert_id","where","t3",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,21,false],null],[0,8,false],null]],"table_units":[["table_unit",3],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2014.0,null]]},"question_toks":["Quels","sont","les","noms","des","chanteurs","qui","se","sont","produits","lors","d'un","concert","en","2014","?"],"question":"Quels sont les noms des chanteurs qui se sont produits lors d'un concert en 2014?"},{"db_id":"employee_hire_evaluation","query":"SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)","query_toks":["SELECT","name","FROM","employee","WHERE","Employee_ID","NOT","IN","(","SELECT","Employee_ID","FROM","evaluation",")"],"query_toks_no_value":["select","name","from","employee","where","employee_id","not","in","(","select","employee_id","from","evaluation",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quels","sont","les","noms","des","employ\u00e9s","qui","n'ont","jamais","re\u00e7u","d'\u00e9valuation","?"],"question":"Quels sont les noms des employ\u00e9s qui n'ont jamais re\u00e7u d'\u00e9valuation?"},{"db_id":"battle_death","query":"SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'","query_toks":["SELECT","T1.killed",",","T1.injured","FROM","death","AS","T1","JOIN","ship","AS","t2","ON","T1.caused_by_ship_id","=","T2.id","WHERE","T2.tonnage","=","'t","'"],"query_toks_no_value":["select","t1",".","killed",",","t1",".","injured","from","death","as","t1","join","ship","as","t2","on","t1",".","caused_by_ship_id","=","t2",".","id","where","t2",".","tonnage","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,14,false],null],[0,8,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]],[0,[0,[0,18,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"t\"",null]]},"question_toks":["What","are","the","death","and","injury","situations","caused","by","the","ship","with","tonnage","'t","'","?"],"question":"What are the death and injury situations caused by the ship with tonnage 't'? "},{"db_id":"network_1","query":"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"","query_toks":["SELECT","T3.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","JOIN","Highschooler","AS","T3","ON","T1.friend_id","=","T3.id","WHERE","T2.name","=","``","Kyle","''"],"query_toks_no_value":["select","t3",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","join","highschooler","as","t3","on","t1",".","friend_id","=","t3",".","id","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Rapport","les","noms","des","amis","de","l","\u2019","\u00e9tudiant","secondaire","de","Kyle","."],"question":"Rapport les noms des amis de l\u2019\u00e9tudiant secondaire de Kyle."},{"db_id":"pets_1","query":"SELECT max(weight) ,  petType FROM pets GROUP BY petType","query_toks":["SELECT","max","(","weight",")",",","petType","FROM","pets","GROUP","BY","petType"],"query_toks_no_value":["select","max","(","weight",")",",","pettype","from","pets","group","by","pettype"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,14,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","le","poids","maximum","pour","chaque","type","d'animal",".","Indiquez","le","poids","maximum","et","le","type","d'animal","."],"question":"Trouve le poids maximum pour chaque type d'animal. Indiquez le poids maximum et le type d'animal."},{"db_id":"network_1","query":"SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id","query_toks":["SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","INTERSECT","SELECT","T2.name","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.liked_id","=","T2.id"],"query_toks_no_value":["select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","intersect","select","t2",".","name","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","liked_id","=","t2",".","id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","\u00e9tudiants","secondaire","qui","ont","des","amis","et","qui","sont","aim\u00e9s","?"],"question":"Quels sont les noms des \u00e9tudiants secondaire qui ont des amis et qui sont aim\u00e9s?"},{"db_id":"world_1","query":"SELECT Continent FROM country WHERE Name  =  \"Anguilla\"","query_toks":["SELECT","Continent","FROM","country","WHERE","Name","=","``","Anguilla","''"],"query_toks_no_value":["select","continent","from","country","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Anguilla\"",null]]},"question_toks":["Quel","est","le","nom","du","continent","lequel","Anguilla","appartient","\u00e0","?"],"question":"Quel est le nom du continent lequel Anguilla appartient \u00e0?"},{"db_id":"network_1","query":"SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2","query_toks":["SELECT","T2.name","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","name","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,6,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Montrez","le","nom","des","\u00e9tudiants","qui","ont","au","moins","deux","aim\u00e9s","."],"question":"Montrez le nom des \u00e9tudiants qui ont au moins deux aim\u00e9s."},{"db_id":"dog_kennels","query":"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","query_toks":["SELECT","T1.date_of_treatment",",","T2.first_name","FROM","Treatments","AS","T1","JOIN","Professionals","AS","T2","ON","T1.professional_id","=","T2.professional_id"],"query_toks_no_value":["select","t1",".","date_of_treatment",",","t2",".","first_name","from","treatments","as","t1","join","professionals","as","t2","on","t1",".","professional_id","=","t2",".","professional_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,46,false],null],[0,33,false],null]],"table_units":[["table_unit",7],["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,48,false],null]],[0,[0,[0,35,false],null]]]],"union":null,"where":[]},"question_toks":["Indiquez","la","date","de","chaque","traitement",",","ainsi","que","le","pr\u00e9nom","du","professionnel","qui","l","'","a","op\u00e9r\u00e9","."],"question":"Indiquez la date de chaque traitement, ainsi que le pr\u00e9nom du professionnel qui l'a op\u00e9r\u00e9."},{"db_id":"wta_1","query":"SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'","query_toks":["SELECT","first_name",",","birth_date","FROM","players","WHERE","country_code","=","'USA","'"],"query_toks_no_value":["select","first_name",",","birth_date","from","players","where","country_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"USA\"",null]]},"question_toks":["Listez","le","pr\u00e9nom","et","la","date","de","naissance","de","tous","les","joueurs","du","pays","avec","le","code","EUA","."],"question":"Listez le pr\u00e9nom et la date de naissance de tous les joueurs du pays avec le code EUA."},{"db_id":"student_transcripts_tracking","query":"SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id","query_toks":["SELECT","DISTINCT","T1.course_name","FROM","Courses","AS","T1","JOIN","Student_Enrolment_Courses","AS","T2","ON","T1.course_id","=","T2.course_id"],"query_toks_no_value":["select","distinct","t1",".","course_name","from","courses","as","t1","join","student_enrolment_courses","as","t2","on","t1",".","course_id","=","t2",".","course_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,50,false],null]],"table_units":[["table_unit",1],["table_unit",8]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Indiquez","la","date","de","chaque","traitement",",","ainsi","que","le","pr\u00e9nom","du","professionnel","qui","l","'","a","op\u00e9r\u00e9","."],"question":"Indiquez la date de chaque traitement, ainsi que le pr\u00e9nom du professionnel qui l'a op\u00e9r\u00e9."},{"db_id":"world_1","query":"SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"","query_toks":["SELECT","Population",",","Region","FROM","country","WHERE","Name","=","``","Angola","''"],"query_toks_no_value":["select","population",",","region","from","country","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Angola\"",null]]},"question_toks":["Quel","est","la","r\u00e9gion","et","population","d'Angola","?"],"question":"Quel est la r\u00e9gion et population d'Angola?"},{"db_id":"network_1","query":"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","query_toks":["SELECT","T2.name",",","count","(","*",")","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","\u00e9tudiants","secondaires","et","combien","d","\u2019","amis","chacun","ont","?"],"question":"Quels sont les noms des \u00e9tudiants secondaires et combien d\u2019amis chacun ont?"},{"db_id":"world_1","query":"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1","query_toks":["SELECT","T1.Name",",","T1.Population","FROM","city","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.CountryCode","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","ORDER","BY","T1.Population","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name",",","t1",".","population","from","city","as","t1","join","countrylanguage","as","t2","on","t1",".","countrycode","=","t2",".","countrycode","where","t2",".","language","=","value","order","by","t1",".","population","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,23,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},"question_toks":["Trouvez","la","ville","avec","la","plus","grande","population","qui","utilise","l'anglais","."],"question":"Trouvez la ville avec la plus grande population qui utilise l'anglais."},{"db_id":"world_1","query":"SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  \"North America\" AND SurfaceArea  >  3000","query_toks":["SELECT","sum","(","Population",")",",","avg","(","SurfaceArea",")","FROM","country","WHERE","Continent","=","``","North","America","''","AND","SurfaceArea",">","3000"],"query_toks_no_value":["select","sum","(","population",")",",","avg","(","surfacearea",")","from","country","where","continent","=","value","and","surfacearea",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]],[5,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"North America\"",null],"and",[false,3,[0,[0,12,false],null],3000.0,null]]},"question_toks":["Quelle","est","la","population","totale","et","la","superficie","moyenne","des","pays","du","continent","nord-am\u00e9ricain","dont","la","superficie","est","sup\u00e9rieure","\u00e0","3000\uff1f"],"question":"Quelle est la population totale et la superficie moyenne des pays du continent nord-am\u00e9ricain dont la superficie est sup\u00e9rieure \u00e0 3000\uff1f"},{"db_id":"network_1","query":"SELECT name ,  grade FROM Highschooler","query_toks":["SELECT","name",",","grade","FROM","Highschooler"],"query_toks_no_value":["select","name",",","grade","from","highschooler"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","les","noms","et","les","notes","de","chaque","lyc\u00e9en","."],"question":"Montre les noms et les notes de chaque lyc\u00e9en."},{"db_id":"network_1","query":"SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3","query_toks":["SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id","HAVING","count","(","*",")",">","=","3"],"query_toks_no_value":["select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[[false,5,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","des","lyc\u00e9ens","qui","ont","3","amis","ou","plus","?"],"question":"Quels sont les noms des lyc\u00e9ens qui ont 3 amis ou plus?"},{"db_id":"real_estate_properties","query":"SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1","query_toks":["SELECT","property_name","FROM","Properties","WHERE","property_type_code","=","``","House","''","UNION","SELECT","property_name","FROM","Properties","WHERE","property_type_code","=","``","Apartment","''","AND","room_count",">","1"],"query_toks_no_value":["select","property_name","from","properties","where","property_type_code","=","value","union","select","property_name","from","properties","where","property_type_code","=","value","and","room_count",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Apartment\"",null],"and",[false,3,[0,[0,15,false],null],1.0,null]]},"where":[[false,2,[0,[0,10,false],null],"\"House\"",null]]},"question_toks":["Quels","sont","les","noms","des","propri\u00e9t\u00e9s","qui","sont","des","maisons","ou","des","appartements","de","plus","d'une","pi\u00e8ce","?"],"question":"Quels sont les noms des propri\u00e9t\u00e9s qui sont des maisons ou des appartements de plus d'une pi\u00e8ce?"},{"db_id":"car_1","query":"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';","query_toks":["SELECT","count","(","*",")","FROM","CAR_MAKERS","AS","T1","JOIN","COUNTRIES","AS","T2","ON","T1.Country","=","T2.CountryId","WHERE","T2.CountryName","=","'france","'",";"],"query_toks_no_value":["select","count","(","*",")","from","car_makers","as","t1","join","countries","as","t2","on","t1",".","country","=","t2",".","countryid","where","t2",".","countryname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"france\"",null]]},"question_toks":["Combien","y","a-t-il","de","constructeurs","automobiles","en","France","?"],"question":"Combien y a-t-il de constructeurs automobiles en France?"},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","CVO","''","EXCEPT","SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","APG","''"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value","except","select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"APG\"",null]]},"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"CVO\"",null]]},"question_toks":["Quelles","compagnies","a\u00e9riennes","ont","des","d\u00e9parts","de","CVO","mais","pas","des","a\u00e9roports","APG","?"],"question":"Quelles compagnies a\u00e9riennes ont des d\u00e9parts de CVO mais pas des a\u00e9roports APG? "},{"db_id":"pets_1","query":"SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)","query_toks":["SELECT","avg","(","age",")","FROM","student","WHERE","stuid","NOT","IN","(","SELECT","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid",")"],"query_toks_no_value":["select","avg","(","age",")","from","student","where","stuid","not","in","(","select","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Trouve","la","moyenne","d'\u00e2ge","des","\u00e9tudiants","qui","n'ont","pas","d'animal","domestique","."],"question":"Trouve la moyenne d'\u00e2ge des \u00e9tudiants qui n'ont pas d'animal domestique. "},{"db_id":"poker_player","query":"SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC","query_toks":["SELECT","T1.Name","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T2.Earnings","DESC"],"query_toks_no_value":["select","t1",".","name","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t2",".","earnings","desc"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Rapport","les","noms","des","joueurs","de","poker","tri\u00e9s","par","leurs","profits","en","descendant","."],"question":"Rapport les noms des joueurs de poker tri\u00e9s par leurs profits en descendant. "},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"","query_toks":["SELECT","count","(","*",")","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T2.Airline","=","T1.uid","WHERE","T1.Airline","=","``","United","Airlines","''","AND","T2.SourceAirport","=","``","AHD","''"],"query_toks_no_value":["select","count","(","*",")","from","airlines","as","t1","join","flights","as","t2","on","t2",".","airline","=","t1",".","uid","where","t1",".","airline","=","value","and","t2",".","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,1,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"United Airlines\"",null],"and",[false,2,[0,[0,12,false],null],"\"AHD\"",null]]},"question_toks":["Combien","'United","Airlines","'","vols","d\u00e9part","de","l'a\u00e9roport","'AHD","'","?"],"question":"Combien 'United Airlines' vols d\u00e9part de l'a\u00e9roport 'AHD'?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.student_id",",","T1.first_name",",","T1.middle_name",",","T1.last_name",",","count","(","*",")",",","T1.student_id","FROM","Students","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.student_id","=","T2.student_id","GROUP","BY","T1.student_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","student_id",",","t1",".","first_name",",","t1",".","middle_name",",","t1",".","last_name",",","count","(","*",")",",","t1",".","student_id","from","students","as","t1","join","student_enrolment","as","t2","on","t1",".","student_id","=","t2",".","student_id","group","by","t1",".","student_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,47,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,32,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,32,false],null]],[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]],[3,[0,[0,0,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","pr\u00e9nom",",","le","deuxi\u00e8me","pr\u00e9nom","et","le","nom","de","famille",",","ainsi","que","l'identifiant","et","le","nombre","d'inscriptions",",","pour","l'\u00e9tudiant","qui","s'est","inscrit","le","plus","dans","un","programme","?"],"question":"Quel est le pr\u00e9nom, le deuxi\u00e8me pr\u00e9nom et le nom de famille, ainsi que l'identifiant et le nombre d'inscriptions, pour l'\u00e9tudiant qui s'est inscrit le plus dans un programme?"},{"db_id":"car_1","query":"SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;","query_toks":["SELECT","DISTINCT","T2.Model","FROM","CAR_NAMES","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Model","=","T2.Model","JOIN","CAR_MAKERS","AS","T3","ON","T2.Maker","=","T3.Id","JOIN","CARS_DATA","AS","T4","ON","T1.MakeId","=","T4.Id","WHERE","T3.FullName","=","'General","Motors","'","OR","T4.weight",">","3500",";"],"query_toks_no_value":["select","distinct","t2",".","model","from","car_names","as","t1","join","model_list","as","t2","on","t1",".","model","=","t2",".","model","join","car_makers","as","t3","on","t2",".","maker","=","t3",".","id","join","cars_data","as","t4","on","t1",".","makeid","=","t4",".","id","where","t3",".","fullname","=","value","or","t4",".","weight",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,14,false],null],[0,12,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"General Motors\"",null],"or",[false,3,[0,[0,21,false],null],3500.0,null]]},"question_toks":["Quels","sont","les","mod\u00e8les","unique","fabriqu\u00e9","par","le","fabricant","avec","le","nom","complet","nomm\u00e9","General","Motors","ou","p\u00e8se","plus","de","3500","?"],"question":"Quels sont les mod\u00e8les unique fabriqu\u00e9 par le fabricant avec le nom complet nomm\u00e9 General Motors ou p\u00e8se plus de 3500?"},{"db_id":"poker_player","query":"SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200","query_toks":["SELECT","avg","(","T2.Earnings",")","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","WHERE","T1.Height",">","200"],"query_toks_no_value":["select","avg","(","t2",".","earnings",")","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","where","t1",".","height",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,6,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],200.0,null]]},"question_toks":["Quel","est","le","revenu","moyen","des","joueurs","de","poker","avec","une","hauteur","plus","haute","que","200","?"],"question":"Quel est le revenu moyen des joueurs de poker avec une hauteur plus haute que 200?"},{"db_id":"world_1","query":"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","query_toks":["SELECT","Name",",","SurfaceArea","FROM","country","ORDER","BY","SurfaceArea","DESC","LIMIT","5"],"query_toks_no_value":["select","name",",","surfacearea","from","country","order","by","surfacearea","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":5,"orderBy":["desc",[[0,[0,12,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","et","les","zones","des","pays","avec","les","5","zones","les","plus","importantes","?"],"question":"Quels sont les noms et les zones des pays avec les 5 zones les plus importantes?"},{"db_id":"tvshow","query":"SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";","query_toks":["SELECT","Content","FROM","TV_Channel","WHERE","series_name","=","``","Sky","Radio","''",";"],"query_toks_no_value":["select","content","from","tv_channel","where","series_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Sky Radio\"",null]]},"question_toks":["``","C'est","quoi","le","contenu","du","cha\u00eene","de","t\u00e9l\u00e9vision","avec","le","nom","de","s\u00e9rie","``","''","Sky","Radio","''","''","?","''"],"question":"\"C'est quoi le contenu du cha\u00eene de t\u00e9l\u00e9vision avec le nom de s\u00e9rie \"\"Sky Radio\"\"?\""},{"db_id":"network_1","query":"SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend","query_toks":["SELECT","id","FROM","Highschooler","EXCEPT","SELECT","student_id","FROM","Friend"],"query_toks_no_value":["select","id","from","highschooler","except","select","student_id","from","friend"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Quelles","sont","les","identifiants","des","\u00e9tudiants","de","secondaire","qui","n","\u2019","ont","pas","d","\u2019","amis","?"],"question":"Quelles sont les identifiants des \u00e9tudiants de secondaire qui n\u2019ont pas d\u2019amis?"},{"db_id":"pets_1","query":"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","query_toks":["SELECT","T1.fname",",","T1.age","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'dog","'","AND","T1.stuid","NOT","IN","(","SELECT","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'",")"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","age","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value","and","t1",".","stuid","not","in","(","select","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"dog\"",null],"and",[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null]]},null]]},"question_toks":["C'est","quoi","le","pr\u00e9nom","de","chaque","\u00e9tudiant","qui","a","un","chien","mais","n","'","a","pas","un","chat","."],"question":"C'est quoi le pr\u00e9nom de chaque \u00e9tudiant qui a un chien mais n'a pas un chat. "},{"db_id":"network_1","query":"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"","query_toks":["SELECT","count","(","*",")","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","WHERE","T2.name","=","``","Kyle","''"],"query_toks_no_value":["select","count","(","*",")","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Combien","d'amis","le","lyc\u00e9en","Kyle","a-t-il","?"],"question":"Combien d'amis le lyc\u00e9en Kyle a-t-il?"},{"db_id":"dog_kennels","query":"SELECT avg(age) FROM Dogs","query_toks":["SELECT","avg","(","age",")","FROM","Dogs"],"query_toks_no_value":["select","avg","(","age",")","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Calcule","le","moyen","\u00e2ge","de","tous","les","chiens","."],"question":"Calcule le moyen \u00e2ge de tous les chiens."},{"db_id":"singer","query":"SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955","query_toks":["SELECT","Citizenship","FROM","singer","WHERE","Birth_Year","<","1945","INTERSECT","SELECT","Citizenship","FROM","singer","WHERE","Birth_Year",">","1955"],"query_toks_no_value":["select","citizenship","from","singer","where","birth_year","<","value","intersect","select","citizenship","from","singer","where","birth_year",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,3,[0,[0,3,false],null],1955.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,4,[0,[0,3,false],null],1945.0,null]]},"question_toks":["Quelles","sont","les","citoyennet\u00e9s","que","les","chanteurs","ont","une","ann\u00e9e","de","naissance","avant","1945","et","apr\u00e8s","1955","?"],"question":"Quelles sont les citoyennet\u00e9s que les chanteurs ont une ann\u00e9e de naissance avant 1945 et apr\u00e8s 1955?"},{"db_id":"tvshow","query":"SELECT max(SHARE) , min(SHARE) FROM TV_series;","query_toks":["SELECT","max","(","SHARE",")",",","min","(","SHARE",")","FROM","TV_series",";"],"query_toks_no_value":["select","max","(","share",")",",","min","(","share",")","from","tv_series"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,14,false],null]],[2,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","part","minimale","et","maximale","des","s\u00e9ries","t\u00e9l\u00e9vis\u00e9es","?"],"question":"Quelle est la part minimale et maximale des s\u00e9ries t\u00e9l\u00e9vis\u00e9es?"},{"db_id":"real_estate_properties","query":"SELECT count(*) FROM Other_Available_Features","query_toks":["SELECT","count","(","*",")","FROM","Other_Available_Features"],"query_toks_no_value":["select","count","(","*",")","from","other_available_features"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","traits","sont","disponible","en","total","?"],"question":"Combien de traits sont disponible en total? "},{"db_id":"flight_2","query":"SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.AirportCode","FROM","AIRPORTS","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.AirportCode","=","T2.DestAirport","OR","T1.AirportCode","=","T2.SourceAirport","GROUP","BY","T1.AirportCode","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","airportcode","from","airports","as","t1","join","flights","as","t2","on","t1",".","airportcode","=","t2",".","destairport","or","t1",".","airportcode","=","t2",".","sourceairport","group","by","t1",".","airportcode","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,13,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["C'est","quoi","l'indicatif","de","l'a\u00e9roport","avec","le","plus","grand","nombre","de","vols","?"],"question":"C'est quoi l'indicatif de l'a\u00e9roport avec le plus grand nombre de vols? "},{"db_id":"pets_1","query":"SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'","query_toks":["SELECT","stuid","FROM","student","EXCEPT","SELECT","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'"],"query_toks_no_value":["select","stuid","from","student","except","select","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Trouve","l'identifiant","des","\u00e9tudiants","qui","n'ont","pas","un","chat","domestique","."],"question":"Trouve l'identifiant des \u00e9tudiants qui n'ont pas un chat domestique. "},{"db_id":"dog_kennels","query":"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","query_toks":["SELECT","DISTINCT","T1.date_arrived",",","T1.date_departed","FROM","Dogs","AS","T1","JOIN","Treatments","AS","T2","ON","T1.dog_id","=","T2.dog_id"],"query_toks_no_value":["select","distinct","t1",".","date_arrived",",","t1",".","date_departed","from","dogs","as","t1","join","treatments","as","t2","on","t1",".","dog_id","=","t2",".","dog_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,20,false],null],[0,45,false],null]],"table_units":[["table_unit",5],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,30,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","date","d","\u2019","arriv\u00e9e","et","la","date","de","d\u00e9part","des","chiens","qui","ont","compl\u00e9t\u00e9","un","traitement","?"],"question":"Quelle est la date d\u2019arriv\u00e9e et la date de d\u00e9part des chiens qui ont compl\u00e9t\u00e9 un traitement?"},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","CVO","''","EXCEPT","SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","APG","''"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value","except","select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"APG\"",null]]},"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"CVO\"",null]]},"question_toks":["Trouve","tous","les","a\u00e9roports","avec","les","vols","de","l'a\u00e9roport","'CVO","'","mais","pas","de","'APG","'","."],"question":"Trouve tous les a\u00e9roports avec les vols de l'a\u00e9roport 'CVO' mais pas de 'APG'."},{"db_id":"car_1","query":"SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;","query_toks":["SELECT","T1.cylinders","FROM","CARS_DATA","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Id","=","T2.MakeId","WHERE","T2.Model","=","'volvo","'","ORDER","BY","T1.accelerate","ASC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","cylinders","from","cars_data","as","t1","join","car_names","as","t2","on","t1",".","id","=","t2",".","makeid","where","t2",".","model","=","value","order","by","t1",".","accelerate","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,13,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,22,false],null]]],"select":[false,[[0,[0,[0,18,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"volvo\"",null]]},"question_toks":["Pour","le","mod\u00e8le","volvo",",","combien","de","cylindres","\u00e0","l'automobile","avec","le","moins","d","\u2019","acc\u00e9l\u00e9ration","?"],"question":"Pour le mod\u00e8le volvo, combien de cylindres \u00e0 l'automobile avec le moins d\u2019acc\u00e9l\u00e9ration?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'","query_toks":["SELECT","count","(","*",")","FROM","Departments","AS","T1","JOIN","Degree_Programs","AS","T2","ON","T1.department_id","=","T2.department_id","WHERE","T1.department_name","=","'engineer","'"],"query_toks_no_value":["select","count","(","*",")","from","departments","as","t1","join","degree_programs","as","t2","on","t1",".","department_id","=","t2",".","department_id","where","t1",".","department_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,14,false],null],[0,19,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"engineer\"",null]]},"question_toks":["Combien","de","dipl\u00f4mes","le","d\u00e9partement","d'ing\u00e9nierie","offre-t-il","?"],"question":"Combien de dipl\u00f4mes le d\u00e9partement d'ing\u00e9nierie offre-t-il?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.SourceAirport","=","T2.AirportCode","WHERE","T2.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","sourceairport","=","t2",".","airportcode","where","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Rapport","le","nombre","de","vols","qui","a\u00e9roport","d'Aberdeen","."],"question":"Rapport le nombre de vols qui a\u00e9roport d'Aberdeen. "},{"db_id":"car_1","query":"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","query_toks":["SELECT","T2.horsepower",",","T1.Make","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","WHERE","T2.cylinders","=","3","ORDER","BY","T2.horsepower","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t2",".","horsepower",",","t1",".","make","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","where","t2",".","cylinders","=","value","order","by","t2",".","horsepower","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,20,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],3.0,null]]},"question_toks":["Quelle","est","la","plus","grande","puissance","pour","les","mod\u00e8les","\u00e0","3","cylindres","et","de","quelle","marque","s'agit-il","?"],"question":"Quelle est la plus grande puissance pour les mod\u00e8les \u00e0 3 cylindres et de quelle marque s'agit-il?"},{"db_id":"world_1","query":"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","query_toks":["SELECT","Name",",","SurfaceArea",",","IndepYear","FROM","country","ORDER","BY","Population","LIMIT","1"],"query_toks_no_value":["select","name",",","surfacearea",",","indepyear","from","country","order","by","population","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,14,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,12,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["C'est","quoi","est","le","nom",",","l","\u2019","ann\u00e9e","d","\u2019","ind\u00e9pendance",",","et","la","superficie","du","pays","qui","la","plus","petite","population","?"],"question":"C'est quoi est le nom, l\u2019ann\u00e9e d\u2019ind\u00e9pendance, et la superficie du pays qui la plus petite population?"},{"db_id":"pets_1","query":"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","query_toks":["SELECT","avg","(","weight",")",",","pettype","FROM","pets","GROUP","BY","pettype"],"query_toks_no_value":["select","avg","(","weight",")",",","pettype","from","pets","group","by","pettype"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,14,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","moyen","poids","pour","chaque","type","d","\u2019","animal","domestique","?"],"question":"Quel est le moyen poids pour chaque type d\u2019animal domestique?"},{"db_id":"employee_hire_evaluation","query":"SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","t1.name","FROM","employee","AS","t1","JOIN","evaluation","AS","t2","ON","t1.Employee_ID","=","t2.Employee_ID","GROUP","BY","t2.Employee_ID","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","employee","as","t1","join","evaluation","as","t2","on","t1",".","employee_id","=","t2",".","employee_id","group","by","t2",".","employee_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,15,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["trouve","le","nom","de","l'employ\u00e9","qui","a","\u00e9t\u00e9","r\u00e9compens\u00e9","le","plus","de","fois","dans","l'\u00e9valuation","."],"question":"trouve le nom de l'employ\u00e9 qui a \u00e9t\u00e9 r\u00e9compens\u00e9 le plus de fois dans l'\u00e9valuation."},{"db_id":"world_1","query":"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1","query_toks":["SELECT","T1.Name",",","T1.Population","FROM","city","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.CountryCode","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","ORDER","BY","T1.Population","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name",",","t1",".","population","from","city","as","t1","join","countrylanguage","as","t2","on","t1",".","countrycode","=","t2",".","countrycode","where","t2",".","language","=","value","order","by","t1",".","population","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,23,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},"question_toks":["Quel","est","la","ville","la","plus","populaire","qui","parlent","l'anglais","?"],"question":"Quel est la ville la plus populaire qui parlent l'anglais? "},{"db_id":"tvshow","query":"SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'","query_toks":["SELECT","T1.country","FROM","TV_Channel","AS","T1","JOIN","cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.written_by","=","'Todd","Casey","'"],"query_toks_no_value":["select","t1",".","country","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","written_by","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],"\"Todd Casey\"",null]]},"question_toks":["quelles","sont","les","cha\u00eenes","de","t\u00e9l\u00e9vision","des","pays","'","qui","diffusent","un","bande","dessin\u00e9","\u00e9crit","par","Todd","Casey","?"],"question":"quelles sont les cha\u00eenes de t\u00e9l\u00e9vision des pays' qui diffusent un bande dessin\u00e9 \u00e9crit par Todd Casey?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3","query_toks":["SELECT","template_type_code","FROM","Templates","GROUP","BY","template_type_code","HAVING","count","(","*",")","<","3"],"query_toks_no_value":["select","template_type_code","from","templates","group","by","template_type_code","having","count","(","*",")","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,5,false]],"having":[[false,4,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Affiche","tous","les","codes","de","type","de","mod\u00e8le","avec","moins","de","trois","mod\u00e8les","."],"question":"Affiche tous les codes de type de mod\u00e8le avec moins de trois mod\u00e8les."},{"db_id":"car_1","query":"SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;","query_toks":["SELECT","T1.horsepower","FROM","CARS_DATA","AS","T1","ORDER","BY","T1.accelerate","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","horsepower","from","cars_data","as","t1","order","by","t1",".","accelerate","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,22,false],null]]],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Quelle","est","la","puissance","de","chevaux","de","l'automobile","avec","la","plus","grande","acc\u00e9l\u00e9ration","?"],"question":"Quelle est la puissance de chevaux de l'automobile avec la plus grande acc\u00e9l\u00e9ration?"},{"db_id":"singer","query":"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name","query_toks":["SELECT","T1.Name",",","sum","(","T2.Sales",")","FROM","singer","AS","T1","JOIN","song","AS","T2","ON","T1.Singer_ID","=","T2.Singer_ID","GROUP","BY","T1.Name"],"query_toks_no_value":["select","t1",".","name",",","sum","(","t2",".","sales",")","from","singer","as","t1","join","song","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","group","by","t1",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[4,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","les","noms","des","chanteurs","et","les","ventes","totales","de","leurs","chansons","."],"question":"Montre les noms des chanteurs et les ventes totales de leurs chansons."},{"db_id":"museum_visit","query":"SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)","query_toks":["SELECT","name","FROM","museum","WHERE","Museum_ID","NOT","IN","(","SELECT","museum_id","FROM","visit",")"],"query_toks_no_value":["select","name","from","museum","where","museum_id","not","in","(","select","museum_id","from","visit",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Quel","est","le","nom","du","mus\u00e9e","qui","n","\u2019","avait","pas","de","visiteur","?"],"question":"Quel est le nom du mus\u00e9e qui n\u2019avait pas de visiteur?"},{"db_id":"car_1","query":"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","query_toks":["SELECT","T1.CountryName",",","T1.CountryId","FROM","COUNTRIES","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.CountryId","=","T2.Country","GROUP","BY","T1.CountryId","HAVING","count","(","*",")",">","=","1",";"],"query_toks_no_value":["select","t1",".","countryname",",","t1",".","countryid","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country","group","by","t1",".","countryid","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,3,false]],"having":[[false,5,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","pays","ayant","au","moins","un","constructeur","automobile","?","Nom","et","identifiant","de","la","liste","."],"question":"Quels sont les pays ayant au moins un constructeur automobile? Nom et identifiant de la liste."},{"db_id":"car_1","query":"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';","query_toks":["SELECT","count","(","*",")","FROM","CAR_MAKERS","AS","T1","JOIN","COUNTRIES","AS","T2","ON","T1.Country","=","T2.CountryId","WHERE","T2.CountryName","=","'france","'",";"],"query_toks_no_value":["select","count","(","*",")","from","car_makers","as","t1","join","countries","as","t2","on","t1",".","country","=","t2",".","countryid","where","t2",".","countryname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"france\"",null]]},"question_toks":["Quel","est","le","nombre","de","soignants","en","France","?"],"question":"Quel est le nombre de soignants en France?"},{"db_id":"pets_1","query":"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","query_toks":["SELECT","avg","(","pet_age",")",",","max","(","pet_age",")",",","pettype","FROM","pets","GROUP","BY","pettype"],"query_toks_no_value":["select","avg","(","pet_age",")",",","max","(","pet_age",")",",","pettype","from","pets","group","by","pettype"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,13,false],null]],[1,[0,[0,13,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","l'\u00e2ge","moyen","et","maximum","pour","chaque","type","d'animal","?"],"question":"Quel est l'\u00e2ge moyen et maximum pour chaque type d'animal?"},{"db_id":"world_1","query":"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"","query_toks":["SELECT","COUNT","(","T2.Language",")","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.Name","=","``","Aruba","''"],"query_toks_no_value":["select","count","(","t2",".","language",")","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Aruba\"",null]]},"question_toks":["Combien","de","langues","sont","parl\u00e9es","\u00e0","Aruba","?"],"question":"Combien de langues sont parl\u00e9es \u00e0 Aruba?"},{"db_id":"orchestra","query":"SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1","query_toks":["SELECT","Name","FROM","conductor","ORDER","BY","Year_of_Work","DESC","LIMIT","1"],"query_toks_no_value":["select","name","from","conductor","order","by","year_of_work","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Indique","le","nom","du","chef","d'orchestre","avec","le","plus","d'ann\u00e9es","de","travail","."],"question":"Indique le nom du chef d'orchestre avec le plus d'ann\u00e9es de travail."},{"db_id":"network_1","query":"SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id","query_toks":["SELECT","name","FROM","Highschooler","EXCEPT","SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id"],"query_toks_no_value":["select","name","from","highschooler","except","select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Montre","les","noms","de","tous","les","\u00e9l\u00e8ves","du","secondaire","qui","n'ont","pas","d'amis","."],"question":"Montre les noms de tous les \u00e9l\u00e8ves du secondaire qui n'ont pas d'amis."},{"db_id":"student_transcripts_tracking","query":"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","query_toks":["SELECT","T1.first_name",",","T1.middle_name",",","T1.last_name",",","T1.student_id","FROM","Students","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.student_id","=","T2.student_id","GROUP","BY","T1.student_id","HAVING","count","(","*",")","=","2"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","middle_name",",","t1",".","last_name",",","t1",".","student_id","from","students","as","t1","join","student_enrolment","as","t2","on","t1",".","student_id","=","t2",".","student_id","group","by","t1",".","student_id","having","count","(","*",")","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,47,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,32,false]],"having":[[false,2,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","pr\u00e9noms",",","les","pr\u00e9noms","et","les","noms","de","famille",",","ainsi","que","les","identifiants",",","de","tous","les","\u00e9tudiants","qui","se","sont","inscrits","\u00e0","2","programmes","d'\u00e9tudes","au","cours","d'un","semestre","?"],"question":"Quels sont les pr\u00e9noms, les pr\u00e9noms et les noms de famille, ainsi que les identifiants, de tous les \u00e9tudiants qui se sont inscrits \u00e0 2 programmes d'\u00e9tudes au cours d'un semestre?"},{"db_id":"orchestra","query":"SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC","query_toks":["SELECT","Major_Record_Format","FROM","orchestra","GROUP","BY","Major_Record_Format","ORDER","BY","COUNT","(","*",")","ASC"],"query_toks_no_value":["select","major_record_format","from","orchestra","group","by","major_record_format","order","by","count","(","*",")","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,11,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","principaux","formats","d'enregistrement","des","orchestres",",","tri\u00e9s","par","leur","fr\u00e9quence","?"],"question":"Quels sont les principaux formats d'enregistrement des orchestres, tri\u00e9s par leur fr\u00e9quence?"},{"db_id":"car_1","query":"SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;","query_toks":["SELECT","Weight","FROM","CARS_DATA","WHERE","Cylinders","=","4","AND","YEAR","=","1974","ORDER","BY","Weight","ASC","LIMIT","1",";"],"query_toks_no_value":["select","weight","from","cars_data","where","cylinders","=","value","and","year","=","value","order","by","weight","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,21,false],null]]],"select":[false,[[0,[0,[0,21,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],4.0,null],"and",[false,2,[0,[0,23,false],null],1974.0,null]]},"question_toks":["Quel","est","le","plus","petit","poids","de","la","voiture","produite","avec","8","cylindres","en","1974","?"],"question":"Quel est le plus petit poids de la voiture produite avec 8 cylindres en 1974?"},{"db_id":"employee_hire_evaluation","query":"SELECT min(Number_products) ,  max(Number_products) FROM shop","query_toks":["SELECT","min","(","Number_products",")",",","max","(","Number_products",")","FROM","shop"],"query_toks_no_value":["select","min","(","number_products",")",",","max","(","number_products",")","from","shop"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,9,false],null]],[1,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","minimum","et","maximum","nombre","de","produits","dans","tous","les","commerces","?"],"question":"Quel est le minimum et maximum nombre de produits dans tous les commerces?"},{"db_id":"car_1","query":"SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;","query_toks":["SELECT","Model","FROM","CAR_NAMES","GROUP","BY","Model","ORDER","BY","count","(","*",")","DESC","LIMIT","1",";"],"query_toks_no_value":["select","model","from","car_names","group","by","model","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,14,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","mod\u00e8le","a","les","versions","les","plus","diff\u00e9rentes","?"],"question":"Quel mod\u00e8le a les versions les plus diff\u00e9rentes?"},{"db_id":"student_transcripts_tracking","query":"SELECT other_student_details FROM Students ORDER BY other_student_details DESC","query_toks":["SELECT","other_student_details","FROM","Students","ORDER","BY","other_student_details","DESC"],"query_toks_no_value":["select","other_student_details","from","students","order","by","other_student_details","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,43,false],null]]],"select":[false,[[0,[0,[0,43,false],null]]]],"union":null,"where":[]},"question_toks":["Listez","tous","les","d\u00e9tails","de","l","\u2019","\u00e9tudiant","dans","l","\u2019","ordre","invers\u00e9","lexicographique","."],"question":"Listez tous les d\u00e9tails de l\u2019\u00e9tudiant dans l\u2019ordre invers\u00e9 lexicographique."},{"db_id":"dog_kennels","query":"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.owner_id",",","T1.last_name","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id","JOIN","Treatments","AS","T3","ON","T2.dog_id","=","T3.dog_id","GROUP","BY","T1.owner_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","owner_id",",","t1",".","last_name","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","join","treatments","as","t3","on","t2",".","dog_id","=","t3",".","dog_id","group","by","t1",".","owner_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","propri\u00e9taire","a","pay\u00e9","pour","le","plus","de","traitements","sur","ses","chiens","?","Listez","l'identifiant","du","propri\u00e9taire","et","son","nom","de","famille","."],"question":"Quel propri\u00e9taire a pay\u00e9 pour le plus de traitements sur ses chiens? Listez l'identifiant du propri\u00e9taire et son nom de famille. "},{"db_id":"world_1","query":"SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"","query_toks":["SELECT","sum","(","Population",")","FROM","city","WHERE","District","=","``","Gelderland","''"],"query_toks_no_value":["select","sum","(","population",")","from","city","where","district","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Gelderland\"",null]]},"question_toks":["Combien","de","personnes","vivent","dans","le","district","de","Gelderland","?"],"question":"Combien de personnes vivent dans le district de Gelderland?"},{"db_id":"museum_visit","query":"SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008","query_toks":["SELECT","count","(","*",")","FROM","museum","WHERE","open_year",">","2013","OR","open_year","<","2008"],"query_toks_no_value":["select","count","(","*",")","from","museum","where","open_year",">","value","or","open_year","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],2013.0,null],"or",[false,4,[0,[0,4,false],null],2008.0,null]]},"question_toks":["Combien","de","mus\u00e9es","\u00e9taient","ouverts","apr\u00e8s","2013","ou","avant","2008","?"],"question":"Combien de mus\u00e9es \u00e9taient ouverts apr\u00e8s 2013 ou avant 2008?"},{"db_id":"student_transcripts_tracking","query":"SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.course_name","FROM","Courses","AS","T1","JOIN","Student_Enrolment_Courses","AS","T2","ON","T1.course_id","=","T2.course_id","GROUP","BY","T1.course_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","course_name","from","courses","as","t1","join","student_enrolment_courses","as","t2","on","t1",".","course_id","=","t2",".","course_id","group","by","t1",".","course_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,50,false],null]],"table_units":[["table_unit",1],["table_unit",8]]},"groupBy":[[0,11,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["C'est","quoi","le","nom","du","cours","avec","le","plus","grand","nombre","d'\u00e9tudiants","inscrit","?"],"question":"C'est quoi le nom du cours avec le plus grand nombre d'\u00e9tudiants inscrit? "},{"db_id":"world_1","query":"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")","query_toks":["SELECT","Name","FROM","country","WHERE","SurfaceArea",">","(","SELECT","min","(","SurfaceArea",")","FROM","country","WHERE","Continent","=","``","Europe","''",")"],"query_toks_no_value":["select","name","from","country","where","surfacearea",">","(","select","min","(","surfacearea",")","from","country","where","continent","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,3,[0,[0,12,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Europe\"",null]]},null]]},"question_toks":["Quels","pays","ont","une","superficie","plus","grande","que","celle","de","n'importe","quel","pays","d'Europe","?"],"question":"Quels pays ont une superficie plus grande que celle de n'importe quel pays d'Europe?"},{"db_id":"network_1","query":"SELECT count(*) FROM Highschooler","query_toks":["SELECT","count","(","*",")","FROM","Highschooler"],"query_toks_no_value":["select","count","(","*",")","from","highschooler"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Comptez","le","nombre","des","\u00e9tudiants","secondaire","."],"question":"Comptez le nombre des \u00e9tudiants secondaire."},{"db_id":"car_1","query":"SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );","query_toks":["SELECT","COUNT","(","*",")","FROM","CARS_DATA","WHERE","Accelerate",">","(","SELECT","Accelerate","FROM","CARS_DATA","ORDER","BY","Horsepower","DESC","LIMIT","1",")",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","accelerate",">","(","select","accelerate","from","cars_data","order","by","horsepower","desc","limit","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,22,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,22,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["C'est","quoi","le","nombre","d'automobiles","avec","une","acc\u00e9l\u00e9ration","plus","grande","que","celle","avec","le","plus","de","chevaux","?"],"question":"C'est quoi le nombre d'automobiles avec une acc\u00e9l\u00e9ration plus grande que celle avec le plus de chevaux?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","WHERE","T2.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","where","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Rapport","sur","le","nombre","de","vols","qui","arrivent","en","Aberdeen","."],"question":"Rapport sur le nombre de vols qui arrivent en Aberdeen. "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Templates","query_toks":["SELECT","count","(","*",")","FROM","Templates"],"query_toks_no_value":["select","count","(","*",")","from","templates"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Comptez","le","nombre","de","mod\u00e8les","."],"question":"Comptez le nombre de mod\u00e8les."},{"db_id":"orchestra","query":"SELECT Name FROM conductor ORDER BY Age ASC","query_toks":["SELECT","Name","FROM","conductor","ORDER","BY","Age","ASC"],"query_toks_no_value":["select","name","from","conductor","order","by","age","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,3,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["C'est","quoi","les","noms","des","conducteurs",",","trier","par","\u00e2ge","?"],"question":"C'est quoi les noms des conducteurs, trier par \u00e2ge?"},{"db_id":"student_transcripts_tracking","query":"SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.course_name","FROM","Courses","AS","T1","JOIN","Student_Enrolment_Courses","AS","T2","ON","T1.course_id","=","T2.course_id","GROUP","BY","T1.course_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","course_name","from","courses","as","t1","join","student_enrolment_courses","as","t2","on","t1",".","course_id","=","t2",".","course_id","group","by","t1",".","course_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,50,false],null]],"table_units":[["table_unit",1],["table_unit",8]]},"groupBy":[[0,11,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nom","du","cours","avec","le","plus","grand","nombre","d'inscriptions","?"],"question":"Quel est le nom du cours avec le plus grand nombre d'inscriptions? "},{"db_id":"world_1","query":"SELECT Name FROM country WHERE IndepYear  >  1950","query_toks":["SELECT","Name","FROM","country","WHERE","IndepYear",">","1950"],"query_toks_no_value":["select","name","from","country","where","indepyear",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],1950.0,null]]},"question_toks":["Donne","les","noms","des","nations","qui","\u00e9taient","fond\u00e9s","apr\u00e8s","1950","."],"question":"Donne les noms des nations qui \u00e9taient fond\u00e9s apr\u00e8s 1950."},{"db_id":"world_1","query":"SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")","query_toks":["SELECT","Name","FROM","country","WHERE","Continent","=","``","Africa","''","AND","population","<","(","SELECT","min","(","population",")","FROM","country","WHERE","Continent","=","``","Asia","''",")"],"query_toks_no_value":["select","name","from","country","where","continent","=","value","and","population","<","(","select","min","(","population",")","from","country","where","continent","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Africa\"",null],"and",[false,4,[0,[0,14,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},null]]},"question_toks":["Quels","pays","Africains","ont","une","population","plus","moins","que","celle","des","pays","d'Asie","?"],"question":"Quels pays Africains ont une population plus moins que celle des pays d'Asie?"},{"db_id":"car_1","query":"SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;","query_toks":["SELECT","COUNT","(","*",")","FROM","CARS_DATA","WHERE","Cylinders",">","6",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","cylinders",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],6.0,null]]},"question_toks":["Combien","de","voitures","a","plus","de","6","cylindres","?"],"question":"Combien de voitures a plus de 6 cylindres?"},{"db_id":"course_teach","query":"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name","query_toks":["SELECT","T2.Name",",","COUNT","(","*",")","FROM","course_arrange","AS","T1","JOIN","teacher","AS","T2","ON","T1.Teacher_ID","=","T2.Teacher_ID","GROUP","BY","T2.Name"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","course_arrange","as","t1","join","teacher","as","t2","on","t1",".","teacher_id","=","t2",".","teacher_id","group","by","t2",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,4,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["C'est","quoi","les","noms","des","professeurs","et","combien","de","cours","qu'ils","enseignent","?"],"question":"C'est quoi les noms des professeurs et combien de cours qu'ils enseignent? "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"","query_toks":["SELECT","T1.template_type_code","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id","WHERE","T2.document_name","=","``","Data","base","''"],"query_toks_no_value":["select","t1",".","template_type_code","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id","where","t2",".","document_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Data base\"",null]]},"question_toks":["Renvoie","le","code","de","type","de","mod\u00e8le","du","mod\u00e8le","utilis\u00e9","par","un","document","nomm\u00e9","Base","de","donn\u00e9es","."],"question":"Renvoie le code de type de mod\u00e8le du mod\u00e8le utilis\u00e9 par un document nomm\u00e9 Base de donn\u00e9es."},{"db_id":"car_1","query":"SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );","query_toks":["SELECT","COUNT","(","*",")","FROM","CARS_DATA","WHERE","Accelerate",">","(","SELECT","Accelerate","FROM","CARS_DATA","ORDER","BY","Horsepower","DESC","LIMIT","1",")",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","accelerate",">","(","select","accelerate","from","cars_data","order","by","horsepower","desc","limit","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,22,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,22,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Combien","d'automobiles","ont","une","acc\u00e9l\u00e9ration","plus","que","les","automobiles","avec","le","plus","grand","nombre","de","chevaux","?"],"question":"Combien d'automobiles ont une acc\u00e9l\u00e9ration plus que les automobiles avec le plus grand nombre de chevaux?"},{"db_id":"singer","query":"SELECT count(*) FROM singer","query_toks":["SELECT","count","(","*",")","FROM","singer"],"query_toks_no_value":["select","count","(","*",")","from","singer"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["C'est","quoi","le","nombre","des","chanteurs","?"],"question":"C'est quoi le nombre des chanteurs? "},{"db_id":"car_1","query":"SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;","query_toks":["SELECT","T2.CountryName","FROM","CAR_MAKERS","AS","T1","JOIN","COUNTRIES","AS","T2","ON","T1.Country","=","T2.CountryId","GROUP","BY","T1.Country","ORDER","BY","Count","(","*",")","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t2",".","countryname","from","car_makers","as","t1","join","countries","as","t2","on","t1",".","country","=","t2",".","countryid","group","by","t1",".","country","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","nom","du","pays","avec","le","plus","de","constructeurs","automobiles","?"],"question":"Quel est le nom du pays avec le plus de constructeurs automobiles?"},{"db_id":"wta_1","query":"SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","country_code","FROM","players","GROUP","BY","country_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","country_code","from","players","group","by","country_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["C'est","quoi","l'indicatif","de","pays","avec","le","plus","de","joueurs","?"],"question":"C'est quoi l'indicatif de pays avec le plus de joueurs? "},{"db_id":"tvshow","query":"SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1","query_toks":["SELECT","production_code",",","channel","FROM","cartoon","ORDER","BY","original_air_date","LIMIT","1"],"query_toks_no_value":["select","production_code",",","channel","from","cartoon","order","by","original_air_date","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,23,false],null]]],"select":[false,[[0,[0,[0,24,false],null]],[0,[0,[0,25,false],null]]]],"union":null,"where":[]},"question_toks":["C'est","quoi","le","code","de","production",",","et","la","cha\u00eene","des","bandes","dessin\u00e9es","la","plus","r\u00e9cente","?"],"question":"C'est quoi le code de production, et la cha\u00eene des bandes dessin\u00e9es la plus r\u00e9cente?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","WHERE","SourceAirport","=","``","APG","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","where","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"APG\"",null]]},"question_toks":["Comptez","le","nombre","de","vols","au","d\u00e9part","de","\u00ab","APG","\u00bb","."],"question":"Comptez le nombre de vols au d\u00e9part de \u00abAPG\u00bb."},{"db_id":"student_transcripts_tracking","query":"SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'","query_toks":["SELECT","zip_postcode","FROM","Addresses","WHERE","city","=","'Port","Chelsea","'"],"query_toks_no_value":["select","zip_postcode","from","addresses","where","city","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Port Chelsea\"",null]]},"question_toks":["Quel","est","le","code","postal","de","l'adresse","de","la","ville","Port","Chelsea","?"],"question":"Quel est le code postal de l'adresse de la ville Port Chelsea?"},{"db_id":"course_teach","query":"SELECT Name FROM teacher ORDER BY Age ASC","query_toks":["SELECT","Name","FROM","teacher","ORDER","BY","Age","ASC"],"query_toks_no_value":["select","name","from","teacher","order","by","age","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["\u00c9num\u00e9rez","les","noms","des","enseignants","par","ordre","croissant","d'\u00e2ge","."],"question":"\u00c9num\u00e9rez les noms des enseignants par ordre croissant d'\u00e2ge."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"","query_toks":["SELECT","count","(","*",")","FROM","Templates","WHERE","template_type_code","=","``","CV","''"],"query_toks_no_value":["select","count","(","*",")","from","templates","where","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"CV\"",null]]},"question_toks":["Combien","de","mod\u00e8les","ont","le","code","C.V","."],"question":"Combien de mod\u00e8les ont le code C.V. "},{"db_id":"concert_singer","query":"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","query_toks":["SELECT","avg","(","age",")",",","min","(","age",")",",","max","(","age",")","FROM","singer","WHERE","country","=","'France","'"],"query_toks_no_value":["select","avg","(","age",")",",","min","(","age",")",",","max","(","age",")","from","singer","where","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,13,false],null]],[2,[0,[0,13,false],null]],[1,[0,[0,13,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"France\"",null]]},"question_toks":["Quel","est","l'\u00e2ge","moyen",",","minimum","et","maximum","de","tous","les","chanteurs","de","France","?"],"question":"Quel est l'\u00e2ge moyen, minimum et maximum de tous les chanteurs de France?"},{"db_id":"employee_hire_evaluation","query":"SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","t2.name","FROM","hiring","AS","t1","JOIN","shop","AS","t2","ON","t1.shop_id","=","t2.shop_id","GROUP","BY","t1.shop_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name","from","hiring","as","t1","join","shop","as","t2","on","t1",".","shop_id","=","t2",".","shop_id","group","by","t1",".","shop_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,5,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,11,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["C'est","quoi","le","nom","du","magasin","qui","embauche","le","plus","grand","nombres","d'employ\u00e9s","?"],"question":"C'est quoi le nom du magasin qui embauche le plus grand nombres d'employ\u00e9s?"},{"db_id":"world_1","query":"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")","query_toks":["SELECT","COUNT","(","*",")","FROM","(","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","INTERSECT","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","Dutch","''",")"],"query_toks_no_value":["select","count","(","*",")","from","(","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","intersect","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["sql",{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Dutch\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]}]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","pays","parlent","anglais","et","n\u00e9erlandais","?"],"question":"Combien de pays parlent anglais et n\u00e9erlandais?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","count","(","*",")",",","student_course_id","FROM","Transcript_Contents","GROUP","BY","student_course_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","count","(","*",")",",","student_course_id","from","transcript_contents","group","by","student_course_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",10]]},"groupBy":[[0,55,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,55,false],null]]]],"union":null,"where":[]},"question_toks":["Combien","de","fois","au","plus","un","r\u00e9sultat","d'inscription","au","cours","peut-il","appara\u00eetre","dans","diff\u00e9rents","relev\u00e9s","de","notes","?","Indiquez","\u00e9galement","l'identifiant","d'inscription","au","cours","."],"question":"Combien de fois au plus un r\u00e9sultat d'inscription au cours peut-il appara\u00eetre dans diff\u00e9rents relev\u00e9s de notes? Indiquez \u00e9galement l'identifiant d'inscription au cours."},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS"],"query_toks_no_value":["select","count","(","*",")","from","flights"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Retourne","le","nombre","de","vols","."],"question":"Retourne le nombre de vols."},{"db_id":"pets_1","query":"SELECT count(DISTINCT pettype) FROM pets","query_toks":["SELECT","count","(","DISTINCT","pettype",")","FROM","pets"],"query_toks_no_value":["select","count","(","distinct","pettype",")","from","pets"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,12,true],null]]]],"union":null,"where":[]},"question_toks":["Combien","y","a-t-il","de","types","d'animaux","diff\u00e9rents","?"],"question":"Combien y a-t-il de types d'animaux diff\u00e9rents?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT min(Version_Number) ,  template_type_code FROM Templates","query_toks":["SELECT","min","(","Version_Number",")",",","template_type_code","FROM","Templates"],"query_toks_no_value":["select","min","(","version_number",")",",","template_type_code","from","templates"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Quel","est","le","plus","petit","num\u00e9ro","de","version","et","son","code","de","type","de","mod\u00e8le","?"],"question":"Quel est le plus petit num\u00e9ro de version et son code de type de mod\u00e8le?"},{"db_id":"concert_singer","query":"SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014","query_toks":["SELECT","name","FROM","stadium","EXCEPT","SELECT","T2.name","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","WHERE","T1.year","=","2014"],"query_toks_no_value":["select","name","from","stadium","except","select","t2",".","name","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","where","t1",".","year","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2014.0,null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Quels","sont","les","noms","de","tous","les","stades","qui","n'ont","pas","eu","de","concert","en","2014","?"],"question":"Quels sont les noms de tous les stades qui n'ont pas eu de concert en 2014?"}]