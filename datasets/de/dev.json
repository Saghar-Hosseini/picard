[{"db_id":"sakila_1","query":"SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200","query_toks":["SELECT","title","FROM","film","WHERE","LENGTH",">","100","OR","rating","=","'PG","'","EXCEPT","SELECT","title","FROM","film","WHERE","replacement_cost",">","200"],"query_toks_no_value":["select","title","from","film","where","length",">","value","or","rating","=","value","except","select","title","from","film","where","replacement_cost",">","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]]]],"union":null,"where":[[false,3,[0,[0,41,false],null],200.0,null]]},"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]]]],"union":null,"where":[[false,3,[0,[0,40,false],null],100.0,null],"or",[false,2,[0,[0,42,false],null],"\"PG\"",null]]},"question_toks":["Welches","sind","die","Titel","der","Filme",",","die","entweder","l\u00e4nger","sind","als","einhundert","Minuten","oder","eine","Altersbeschr\u00e4nkung","haben",",","au\u00dfer","denen",",","die","mehr","als","zweihundert","kosten","f\u00fcr","den","Ersatz","?"],"question":"Welches sind die Titel der Filme, die entweder l\u00e4nger sind als einhundert Minuten oder eine Altersbeschr\u00e4nkung haben, au\u00dfer denen, die mehr als zweihundert kosten f\u00fcr den Ersatz?"},{"db_id":"music_1","query":"SELECT DISTINCT artist_name FROM song WHERE languages  =  \"english\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8","query_toks":["SELECT","DISTINCT","artist_name","FROM","song","WHERE","languages","=","``","english","''","EXCEPT","SELECT","DISTINCT","artist_name","FROM","song","WHERE","rating",">","8"],"query_toks_no_value":["select","distinct","artist_name","from","song","where","languages","=","value","except","select","distinct","artist_name","from","song","where","rating",">","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],8.0,null]]},"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},"question_toks":["Wie","lauten","die","Namen","der","verschiedenen","K\u00fcnstler",",","die","ein","Lied","auf","Englisch","produziert","haben",",","aber","nie","eine","h\u00f6here","Bewertung","als","8","erhalten","haben","?"],"question":"Wie lauten die Namen der verschiedenen K\u00fcnstler, die ein Lied auf Englisch produziert haben, aber nie eine h\u00f6here Bewertung als 8 erhalten haben?"},{"db_id":"phone_market","query":"SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID","query_toks":["SELECT","T3.Name",",","T2.District","FROM","phone_market","AS","T1","JOIN","market","AS","T2","ON","T1.Market_ID","=","T2.Market_ID","JOIN","phone","AS","T3","ON","T1.Phone_ID","=","T3.Phone_ID"],"query_toks_no_value":["select","t3",".","name",",","t2",".","district","from","phone_market","as","t1","join","market","as","t2","on","t1",".","market_id","=","t2",".","market_id","join","phone","as","t3","on","t1",".","phone_id","=","t3",".","phone_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Namen","der","Telefone","und","die","Marktbezirke","an",",","auf","denen","sie","sich","befinden","."],"question":"Zeige die Namen der Telefone und die Marktbezirke an, auf denen sie sich befinden."},{"db_id":"swimming","query":"SELECT count(DISTINCT city) FROM stadium WHERE opening_year  <  2006","query_toks":["SELECT","count","(","DISTINCT","city",")","FROM","stadium","WHERE","opening_year","<","2006"],"query_toks_no_value":["select","count","(","distinct","city",")","from","stadium","where","opening_year","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,15,true],null]]]],"union":null,"where":[[false,4,[0,[0,17,false],null],2006.0,null]]},"question_toks":["Wie","viele","St\u00e4dte","haben","ein","Stadion",",","das","vor","dem","Jahr","2006","er\u00f6ffnet","wurde","?"],"question":"Wie viele St\u00e4dte haben ein Stadion, das vor dem Jahr 2006 er\u00f6ffnet wurde?"},{"db_id":"manufacturer","query":"SELECT t1.name ,  t2.price_in_dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID","query_toks":["SELECT","t1.name",",","t2.price_in_dollar","FROM","furniture","AS","t1","JOIN","furniture_manufacte","AS","t2","ON","t1.Furniture_ID","=","t2.Furniture_ID"],"query_toks_no_value":["select","t1",".","name",",","t2",".","price_in_dollar","from","furniture","as","t1","join","furniture_manufacte","as","t2","on","t1",".","furniture_id","=","t2",".","furniture_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","mir","die","Namen","und","Preise","von","M\u00f6beln",",","die","einige","Unternehmen","herstellen","an","."],"question":"Gib mir die Namen und Preise von M\u00f6beln, die einige Unternehmen herstellen an."},{"db_id":"csu_1","query":"SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Jose State University\" AND t1.year  =  2000","query_toks":["SELECT","t1.campusfee","FROM","csu_fees","AS","t1","JOIN","campuses","AS","t2","ON","t1.campus","=","t2.id","WHERE","t2.campus","=","``","San","Jose","State","University","''","AND","t1.year","=","2000"],"query_toks_no_value":["select","t1",".","campusfee","from","csu_fees","as","t1","join","campuses","as","t2","on","t1",".","campus","=","t2",".","id","where","t2",".","campus","=","value","and","t1",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"San Jose State University\"",null],"and",[false,2,[0,[0,7,false],null],2000.0,null]]},"question_toks":["Finde","die","Campusgeb\u00fchr","der","``","San","Jose","State","Universit\u00e4t","''","im","Jahr","2000","."],"question":"Finde die Campusgeb\u00fchr der \"San Jose State Universit\u00e4t\" im Jahr 2000."},{"db_id":"formula_1","query":"SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000","query_toks":["SELECT","DISTINCT","T1.driverid",",","T1.nationality","FROM","drivers","AS","T1","JOIN","laptimes","AS","T2","ON","T1.driverid","=","T2.driverid","WHERE","T2.milliseconds",">","100000"],"query_toks_no_value":["select","distinct","t1",".","driverid",",","t1",".","nationality","from","drivers","as","t1","join","laptimes","as","t2","on","t1",".","driverid","=","t2",".","driverid","where","t2",".","milliseconds",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,90,false],null]],"table_units":[["table_unit",2],["table_unit",12]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,18,false],null]],[0,[0,[0,25,false],null]]]],"union":null,"where":[[false,3,[0,[0,94,false],null],100000.0,null]]},"question_toks":["Was","sind","die","unterschiedlichen","Fahrerkennungen","und","Nationalit\u00e4ten","aller","Fahrer",",","die","eine","Rundenzeit","von","mehr","als","100000","Millisekunden","hatten","?"],"question":"Was sind die unterschiedlichen Fahrerkennungen und Nationalit\u00e4ten aller Fahrer, die eine Rundenzeit von mehr als 100000 Millisekunden hatten?"},{"db_id":"activity_1","query":"SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"Instructor\"","query_toks":["SELECT","fname",",","lname","FROM","Faculty","WHERE","Rank","=","``","Instructor","''"],"query_toks_no_value":["select","fname",",","lname","from","faculty","where","rank","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"Instructor\"",null]]},"question_toks":["Zeige","den","Vor-","und","Nachnamen","aller","Ausbilder","an","."],"question":"Zeige den Vor- und Nachnamen aller Ausbilder an."},{"db_id":"csu_1","query":"SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"San Francisco State University\"","query_toks":["SELECT","faculty","FROM","faculty","AS","T1","JOIN","campuses","AS","T2","ON","T1.campus","=","T2.id","WHERE","T1.year","=","2004","AND","T2.campus","=","``","San","Francisco","State","University","''"],"query_toks_no_value":["select","faculty","from","faculty","as","t1","join","campuses","as","t2","on","t1",".","campus","=","t2",".","id","where","t1",".","year","=","value","and","t2",".","campus","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,21,false],null],[0,1,false],null]],"table_units":[["table_unit",5],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],2004.0,null],"and",[false,2,[0,[0,2,false],null],"\"San Francisco State University\"",null]]},"question_toks":["Wie","viele","Fakult\u00e4tszweige","gibt","es","an","der","``","San","Francisco","State","University","''","im","Jahr","2004","?"],"question":"Wie viele Fakult\u00e4tszweige gibt es an der \"San Francisco State University\" im Jahr 2004?"},{"db_id":"entrepreneur","query":"SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor","query_toks":["SELECT","Investor",",","COUNT","(","*",")","FROM","entrepreneur","GROUP","BY","Investor"],"query_toks_no_value":["select","investor",",","count","(","*",")","from","entrepreneur","group","by","investor"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Unternehmer","geh\u00f6ren","zu","jedem","Investoren","?"],"question":"Wie viele Unternehmer geh\u00f6ren zu jedem Investoren?"},{"db_id":"tracking_orders","query":"SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"","query_toks":["SELECT","T2.order_id",",","T2.order_status","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T1.customer_name","=","``","Jeramie","''"],"query_toks_no_value":["select","t2",".","order_id",",","t2",".","order_status","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t1",".","customer_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Jeramie\"",null]]},"question_toks":["Gib","mir","eine","Liste","von","ID","und","Status","von","Bestellungen",",","die","zum","Kunden","namens","``","Jeramie","''","geh\u00f6ren","."],"question":"Gib mir eine Liste von ID und Status von Bestellungen, die zum Kunden namens \"Jeramie\" geh\u00f6ren."},{"db_id":"sakila_1","query":"SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1","query_toks":["SELECT","T1.first_name",",","T1.last_name",",","T1.staff_id","FROM","staff","AS","T1","JOIN","payment","AS","T2","ON","T1.staff_id","=","T2.staff_id","GROUP","BY","T1.staff_id","ORDER","BY","count","(","*",")","ASC","LIMIT","1"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","last_name",",","t1",".","staff_id","from","staff","as","t1","join","payment","as","t2","on","t1",".","staff_id","=","t2",".","staff_id","group","by","t1",".","staff_id","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,75,false],null],[0,63,false],null]],"table_units":[["table_unit",14],["table_unit",12]]},"groupBy":[[0,75,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,76,false],null]],[0,[0,[0,77,false],null]],[0,[0,[0,75,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","den","vollst\u00e4ndigen","Namen","und","die","Personalnummer","des","Personals","an",",","das","die","wenigsten","Zahlungen","abgewickelt","hat","."],"question":"Gib den vollst\u00e4ndigen Namen und die Personalnummer des Personals an, das die wenigsten Zahlungen abgewickelt hat."},{"db_id":"mountain_photos","query":"SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.name","FROM","photos","AS","T1","JOIN","camera_lens","AS","T2","ON","T1.camera_lens_id","=","T2.id","GROUP","BY","T2.id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name","from","photos","as","t1","join","camera_lens","as","t2","on","t1",".","camera_lens_id","=","t2",".","id","group","by","t2",".","id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,7,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dfen","die","Kameras",",","die","die","meisten","Berge","fotografiert","haben","?"],"question":"Wie hei\u00dfen die Kameras, die die meisten Berge fotografiert haben?"},{"db_id":"college_1","query":"SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1","query_toks":["SELECT","T2.dept_name","FROM","student","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","ORDER","BY","stu_gpa","LIMIT","1"],"query_toks_no_value":["select","t2",".","dept_name","from","student","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","order","by","stu_gpa","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,41,false],null],[0,11,false],null]],"table_units":[["table_unit",6],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,39,false],null]]],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Name","der","Abteilung","mit","den","Studierenden","mit","dem","niedrigsten","GPA","?"],"question":"Wie lautet der Name der Abteilung mit den Studierenden mit dem niedrigsten GPA?"},{"db_id":"music_1","query":"SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\"","query_toks":["SELECT","avg","(","rating",")",",","avg","(","resolution",")","FROM","song","WHERE","languages","=","``","bangla","''"],"query_toks_no_value":["select","avg","(","rating",")",",","avg","(","resolution",")","from","song","where","languages","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,18,false],null]],[5,[0,[0,21,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"bangla\"",null]]},"question_toks":["Wie","ist","die","durchschnittliche","Bewertung","und","Aufl\u00f6sung","aller","Bangla-Lieder","?"],"question":"Wie ist die durchschnittliche Bewertung und Aufl\u00f6sung aller Bangla-Lieder?"},{"db_id":"manufacturer","query":"SELECT count(*) ,  t1.name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id GROUP BY t1.manufacturer_id","query_toks":["SELECT","count","(","*",")",",","t1.name","FROM","manufacturer","AS","t1","JOIN","furniture_manufacte","AS","t2","ON","t1.manufacturer_id","=","t2.manufacturer_id","GROUP","BY","t1.manufacturer_id"],"query_toks_no_value":["select","count","(","*",")",",","t1",".","name","from","manufacturer","as","t1","join","furniture_manufacte","as","t2","on","t1",".","manufacturer_id","=","t2",".","manufacturer_id","group","by","t1",".","manufacturer_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Anzahl","der","von","jedem","Hersteller","produzierten","M\u00f6beltypen","sowie","die","Firmennamen","."],"question":"Finde die Anzahl der von jedem Hersteller produzierten M\u00f6beltypen sowie die Firmennamen."},{"db_id":"tracking_orders","query":"SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments)","query_toks":["SELECT","order_id","FROM","shipments","WHERE","shipment_date","=","(","SELECT","max","(","shipment_date",")","FROM","shipments",")"],"query_toks_no_value":["select","order_id","from","shipments","where","shipment_date","=","(","select","max","(","shipment_date",")","from","shipments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,21,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,24,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Suche","die","Kennung","der","Bestellung",",","die","zuletzt","versandt","wurde","."],"question":"Suche die Kennung der Bestellung, die zuletzt versandt wurde."},{"db_id":"formula_1","query":"SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1","query_toks":["SELECT","T1.driverid",",","T1.surname","FROM","drivers","AS","T1","JOIN","laptimes","AS","T2","ON","T1.driverid","=","T2.driverid","ORDER","BY","T2.milliseconds","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","driverid",",","t1",".","surname","from","drivers","as","t1","join","laptimes","as","t2","on","t1",".","driverid","=","t2",".","driverid","order","by","t2",".","milliseconds","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,90,false],null]],"table_units":[["table_unit",2],["table_unit",12]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,94,false],null]]],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Kennung","und","Familienname","des","Fahrers",",","der","die","l\u00e4ngste","Rundenzeit","hat","?"],"question":"Was sind die Kennung und Familienname des Fahrers, der die l\u00e4ngste Rundenzeit hat?"},{"db_id":"activity_1","query":"SELECT rank ,  Fname ,  Lname FROM Faculty","query_toks":["SELECT","rank",",","Fname",",","Lname","FROM","Faculty"],"query_toks_no_value":["select","rank",",","fname",",","lname","from","faculty"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,17,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","den","Rang",",","den","Vornamen","und","den","Nachnamen","f\u00fcr","die","gesamte","Fakult\u00e4t","an","."],"question":"Zeige den Rang, den Vornamen und den Nachnamen f\u00fcr die gesamte Fakult\u00e4t an."},{"db_id":"entrepreneur","query":"SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor","query_toks":["SELECT","Investor",",","COUNT","(","*",")","FROM","entrepreneur","GROUP","BY","Investor"],"query_toks_no_value":["select","investor",",","count","(","*",")","from","entrepreneur","group","by","investor"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wer","sind","die","Investoren","von","Unternehmern","und","die","entsprechende","Anzahl","von","Unternehmern",",","die","von","jedem","Investor","unterst\u00fctzt","werden","?"],"question":"Wer sind die Investoren von Unternehmern und die entsprechende Anzahl von Unternehmern, die von jedem Investor unterst\u00fctzt werden?"},{"db_id":"loan_1","query":"SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1","query_toks":["SELECT","T1.bname","FROM","bank","AS","T1","JOIN","loan","AS","T2","ON","T1.branch_id","=","T2.branch_id","GROUP","BY","T1.bname","ORDER","BY","sum","(","T2.amount",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","bname","from","bank","as","t1","join","loan","as","t2","on","t1",".","branch_id","=","t2",".","branch_id","group","by","t1",".","bname","order","by","sum","(","t2",".","amount",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,18,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","der","Bankfiliale",",","die","den","gr\u00f6\u00dften","Gesamtbetrag","an","Krediten","bereitgestellt","hat","."],"question":"Finde den Namen der Bankfiliale, die den gr\u00f6\u00dften Gesamtbetrag an Krediten bereitgestellt hat."},{"db_id":"loan_1","query":"SELECT count(DISTINCT acc_type) FROM customer","query_toks":["SELECT","count","(","DISTINCT","acc_type",")","FROM","customer"],"query_toks_no_value":["select","count","(","distinct","acc_type",")","from","customer"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,8,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Arten","von","Konten","gibt","es","?"],"question":"Wie viele verschiedene Arten von Konten gibt es?"},{"db_id":"sakila_1","query":"SELECT count(*) FROM store","query_toks":["SELECT","count","(","*",")","FROM","store"],"query_toks_no_value":["select","count","(","*",")","from","store"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",15]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hle","die","Anzahl","an","Gesch\u00e4ften","."],"question":"Z\u00e4hle die Anzahl an Gesch\u00e4ften."},{"db_id":"voter_2","query":"SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08\/30\/2015\"","query_toks":["SELECT","DISTINCT","PRESIDENT_Vote","FROM","VOTING_RECORD","WHERE","Registration_Date","=","``","08\/30\/2015","''"],"query_toks_no_value":["select","distinct","president_vote","from","voting_record","where","registration_date","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"08\/30\/2015\"",null]]},"question_toks":["Wie","lauten","die","einzelnen","Stimmen","f\u00fcr","den","Pr\u00e4sidenten","am","30.08.2015","?"],"question":"Wie lauten die einzelnen Stimmen f\u00fcr den Pr\u00e4sidenten am 30.08.2015?"},{"db_id":"entrepreneur","query":"SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur)","query_toks":["SELECT","Name","FROM","people","WHERE","People_ID","NOT","IN","(","SELECT","People_ID","FROM","entrepreneur",")"],"query_toks_no_value":["select","name","from","people","where","people_id","not","in","(","select","people_id","from","entrepreneur",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[true,8,[0,[0,6,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Liste","die","Namen","von","Personen","auf",",","die","keine","Unternehmer","sind","."],"question":"Liste die Namen von Personen auf, die keine Unternehmer sind."},{"db_id":"formula_1","query":"SELECT forename ,  surname FROM drivers WHERE nationality = \"German\"","query_toks":["SELECT","forename",",","surname","FROM","drivers","WHERE","nationality","=","``","German","''"],"query_toks_no_value":["select","forename",",","surname","from","drivers","where","nationality","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"German\"",null]]},"question_toks":["Wie","lautet","der","Vor-","und","Nachname","aller","deutschen","Fahrer","?"],"question":"Wie lautet der Vor- und Nachname aller deutschen Fahrer?"},{"db_id":"college_1","query":"SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  'Smithson'","query_toks":["SELECT","T1.crs_code","FROM","CLASS","AS","T1","JOIN","enroll","AS","T2","ON","T1.class_code","=","T2.class_code","JOIN","student","AS","T3","ON","T3.stu_num","=","T2.stu_num","WHERE","T3.stu_lname","=","'Smithson","'"],"query_toks_no_value":["select","t1",".","crs_code","from","class","as","t1","join","enroll","as","t2","on","t1",".","class_code","=","t2",".","class_code","join","student","as","t3","on","t3",".","stu_num","=","t2",".","stu_num","where","t3",".","stu_lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,33,false],null],"\"Smithson\"",null]]},"question_toks":["Wie","lauten","die","Kursnummern","f\u00fcr","jede","Klasse",",","die","der","Studierende","mit","dem","Nachnamen","Smithson","belegt","hat","?"],"question":"Wie lauten die Kursnummern f\u00fcr jede Klasse, die der Studierende mit dem Nachnamen Smithson belegt hat?"},{"db_id":"swimming","query":"SELECT meter_200 ,  meter_300 FROM swimmer WHERE nationality  =  'Australia'","query_toks":["SELECT","meter_200",",","meter_300","FROM","swimmer","WHERE","nationality","=","'Australia","'"],"query_toks_no_value":["select","meter_200",",","meter_300","from","swimmer","where","nationality","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],"\"Australia\"",null]]},"question_toks":["Finde","alle","200-Meter-","und","300-Meter-Ergebnisse","von","Schwimmern","mit","der","Nationalit\u00e4t","``","Australien","''","."],"question":"Finde alle 200-Meter- und 300-Meter-Ergebnisse von Schwimmern mit der Nationalit\u00e4t \"Australien\"."},{"db_id":"music_1","query":"SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id  =  T2.f_id ORDER BY T2.duration LIMIT 1","query_toks":["SELECT","T1.artist_name","FROM","song","AS","T1","JOIN","files","AS","T2","ON","T1.f_id","=","T2.f_id","ORDER","BY","T2.duration","LIMIT","1"],"query_toks_no_value":["select","t1",".","artist_name","from","song","as","t1","join","files","as","t2","on","t1",".","f_id","=","t2",".","f_id","order","by","t2",".","duration","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,8,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dfen","die","K\u00fcnstler",",","die","das","k\u00fcrzeste","Lied","gesungen","haben","?"],"question":"Wie hei\u00dfen die K\u00fcnstler, die das k\u00fcrzeste Lied gesungen haben?"},{"db_id":"phone_market","query":"SELECT DISTINCT Carrier FROM phone WHERE Memory_in_G  >  32","query_toks":["SELECT","DISTINCT","Carrier","FROM","phone","WHERE","Memory_in_G",">","32"],"query_toks_no_value":["select","distinct","carrier","from","phone","where","memory_in_g",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,3,[0,[0,3,false],null],32.0,null]]},"question_toks":["F\u00fchre","die","verschiedenen","Provider","von","Telefonen","mit","Speichern","gr\u00f6\u00dfer","als","32","auf","."],"question":"F\u00fchre die verschiedenen Provider von Telefonen mit Speichern gr\u00f6\u00dfer als 32 auf."},{"db_id":"tracking_orders","query":"SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\"","query_toks":["SELECT","T1.customer_id","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T2.order_status","=","``","On","Road","''","INTERSECT","SELECT","T1.customer_id","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T2.order_status","=","``","Shipped","''"],"query_toks_no_value":["select","t1",".","customer_id","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t2",".","order_status","=","value","intersect","select","t1",".","customer_id","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t2",".","order_status","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Shipped\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"On Road\"",null]]},"question_toks":["Welche","Kunden","haben","zugleich","``","unterwegs","''","und","``","versendet","''","als","Bestellstatus","?","Liste","die","Kundennummern","auf","."],"question":"Welche Kunden haben zugleich \"unterwegs\" und \"versendet\" als Bestellstatus? Liste die Kundennummern auf."},{"db_id":"music_1","query":"SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800","query_toks":["SELECT","DISTINCT","T1.file_size",",","T1.formats","FROM","files","AS","T1","JOIN","song","AS","T2","ON","T1.f_id","=","T2.f_id","WHERE","T2.resolution","<","800"],"query_toks_no_value":["select","distinct","t1",".","file_size",",","t1",".","formats","from","files","as","t1","join","song","as","t2","on","t1",".","f_id","=","t2",".","f_id","where","t2",".","resolution","<","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,16,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,10,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,4,[0,[0,21,false],null],800.0,null]]},"question_toks":["Welche","Dateigr\u00f6\u00dfen","und","Formate","gibt","es","f\u00fcr","alle","Lieder","mit","einer","Aufl\u00f6sung","von","weniger","als","800","?"],"question":"Welche Dateigr\u00f6\u00dfen und Formate gibt es f\u00fcr alle Lieder mit einer Aufl\u00f6sung von weniger als 800?"},{"db_id":"activity_1","query":"SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","building","FROM","Faculty","GROUP","BY","building","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","building","from","faculty","group","by","building","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,22,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,22,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","Geb\u00e4ude","hat","die","meisten","Fakult\u00e4tsmitglieder","?"],"question":"Welches Geb\u00e4ude hat die meisten Fakult\u00e4tsmitglieder?"},{"db_id":"sakila_1","query":"SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","first_name",",","last_name","FROM","actor","GROUP","BY","first_name",",","last_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","first_name",",","last_name","from","actor","group","by","first_name",",","last_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,2,false],[0,3,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","der","beliebteste","vollst\u00e4ndige","Name","der","Schauspieler","?"],"question":"Welches ist der beliebteste vollst\u00e4ndige Name der Schauspieler?"},{"db_id":"swimming","query":"SELECT count(*) FROM stadium","query_toks":["SELECT","count","(","*",")","FROM","stadium"],"query_toks_no_value":["select","count","(","*",")","from","stadium"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Stadien","gibt","es","?"],"question":"Wie viele Stadien gibt es?"},{"db_id":"music_1","query":"SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT artist_name FROM song WHERE languages  =  \"english\"","query_toks":["SELECT","artist_name","FROM","artist","WHERE","country","=","``","UK","''","INTERSECT","SELECT","artist_name","FROM","song","WHERE","languages","=","``","english","''"],"query_toks_no_value":["select","artist_name","from","artist","where","country","=","value","intersect","select","artist_name","from","song","where","languages","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"UK\"",null]]},"question_toks":["Finde","die","Namen","der","K\u00fcnstler",",","die","aus","Gro\u00dfbritannien","stammen","und","englische","Lieder","produziert","haben","."],"question":"Finde die Namen der K\u00fcnstler, die aus Gro\u00dfbritannien stammen und englische Lieder produziert haben."},{"db_id":"phone_market","query":"SELECT Name FROM phone ORDER BY Price ASC","query_toks":["SELECT","Name","FROM","phone","ORDER","BY","Price","ASC"],"query_toks_no_value":["select","name","from","phone","order","by","price","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","die","Namen","der","Telefone","in","aufsteigender","Reihenfolge","des","Preises","auf","."],"question":"Liste die Namen der Telefone in aufsteigender Reihenfolge des Preises auf."},{"db_id":"music_1","query":"SELECT g_name ,  rating FROM genre ORDER BY g_name","query_toks":["SELECT","g_name",",","rating","FROM","genre","ORDER","BY","g_name"],"query_toks_no_value":["select","g_name",",","rating","from","genre","order","by","g_name"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,1,false],null]]],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","die","Namen","aller","Genres","auf","in","alphabetischer","Ordnung",",","zusammen","mit","deren","Bewertungen","."],"question":"Liste die Namen aller Genres auf in alphabetischer Ordnung, zusammen mit deren Bewertungen."},{"db_id":"swimming","query":"SELECT avg(capacity) FROM stadium WHERE opening_year  =  2005","query_toks":["SELECT","avg","(","capacity",")","FROM","stadium","WHERE","opening_year","=","2005"],"query_toks_no_value":["select","avg","(","capacity",")","from","stadium","where","opening_year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],2005.0,null]]},"question_toks":["Was","ist","die","durchschnittliche","Kapazit\u00e4t","der","Stadien",",","die","im","Jahr","2005","er\u00f6ffnet","wurden","?"],"question":"Was ist die durchschnittliche Kapazit\u00e4t der Stadien, die im Jahr 2005 er\u00f6ffnet wurden?"},{"db_id":"music_1","query":"SELECT song_name FROM song WHERE genre_is  =  \"modern\" OR languages  =  \"english\"","query_toks":["SELECT","song_name","FROM","song","WHERE","genre_is","=","``","modern","''","OR","languages","=","``","english","''"],"query_toks_no_value":["select","song_name","from","song","where","genre_is","=","value","or","languages","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"modern\"",null],"or",[false,2,[0,[0,19,false],null],"\"english\"",null]]},"question_toks":["Finde","die","Namen","von","Liedern",",","deren","Genre","modern","ist","oder","deren","Sprache","Englisch","ist","."],"question":"Finde die Namen von Liedern, deren Genre modern ist oder deren Sprache Englisch ist."},{"db_id":"loan_1","query":"SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan)","query_toks":["SELECT","avg","(","credit_score",")","FROM","customer","WHERE","cust_id","IN","(","SELECT","cust_id","FROM","loan",")"],"query_toks_no_value":["select","avg","(","credit_score",")","from","customer","where","cust_id","in","(","select","cust_id","from","loan",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,11,false],null]]]],"union":null,"where":[[false,8,[0,[0,6,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","hoch","ist","die","durchschnittliche","Kreditw\u00fcrdigkeit","von","Kunden",",","die","einen","Kredit","aufgenommen","haben","?"],"question":"Wie hoch ist die durchschnittliche Kreditw\u00fcrdigkeit von Kunden, die einen Kredit aufgenommen haben?"},{"db_id":"swimming","query":"SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","t1.name","FROM","swimmer","AS","t1","JOIN","record","AS","t2","ON","t1.id","=","t2.swimmer_id","GROUP","BY","t2.swimmer_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","swimmer","as","t1","join","record","as","t2","on","t1",".","id","=","t2",".","swimmer_id","group","by","t2",".","swimmer_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[[0,24,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","des","Schwimmers",",","der","die","meisten","Rekorde","hat","."],"question":"Finde den Namen des Schwimmers, der die meisten Rekorde hat."},{"db_id":"formula_1","query":"SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011","query_toks":["SELECT","name","FROM","races","WHERE","YEAR","BETWEEN","2009","AND","2011"],"query_toks_no_value":["select","name","from","races","where","year","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,1,[0,[0,11,false],null],2009.0,2011.0]]},"question_toks":["Was","sind","die","Namen","aller","Rennen",",","die","zwischen","2009","und","2011","stattfanden","?"],"question":"Was sind die Namen aller Rennen, die zwischen 2009 und 2011 stattfanden? "},{"db_id":"music_1","query":"SELECT f_id FROM files WHERE formats  =  \"mp3\"","query_toks":["SELECT","f_id","FROM","files","WHERE","formats","=","``","mp3","''"],"query_toks_no_value":["select","f_id","from","files","where","formats","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"mp3\"",null]]},"question_toks":["Was","sind","die","IDs","von","Liedern","im","mp3-Format","?"],"question":"Was sind die IDs von Liedern im mp3-Format?"},{"db_id":"music_1","query":"SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800","query_toks":["SELECT","avg","(","T1.duration",")","FROM","files","AS","T1","JOIN","song","AS","T2","ON","T1.f_id","=","T2.f_id","WHERE","T1.formats","=","``","mp3","''","AND","T2.resolution","<","800"],"query_toks_no_value":["select","avg","(","t1",".","duration",")","from","files","as","t1","join","song","as","t2","on","t1",".","f_id","=","t2",".","f_id","where","t1",".","formats","=","value","and","t2",".","resolution","<","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,16,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"mp3\"",null],"and",[false,4,[0,[0,21,false],null],800.0,null]]},"question_toks":["Was","ist","die","durchschnittliche","Dauer","von","Liedern","mit","mp3-Format","und","einer","Aufl\u00f6sung","unter","800","?"],"question":"Was ist die durchschnittliche Dauer von Liedern mit mp3-Format und einer Aufl\u00f6sung unter 800?"},{"db_id":"store_product","query":"SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"Miramichi\"","query_toks":["SELECT","t1.product","FROM","product","AS","t1","JOIN","store_product","AS","t2","ON","t1.product_id","=","t2.product_id","JOIN","store","AS","t3","ON","t2.store_id","=","t3.store_id","WHERE","t3.store_name","=","``","Miramichi","''"],"query_toks_no_value":["select","t1",".","product","from","product","as","t1","join","store_product","as","t2","on","t1",".","product_id","=","t2",".","product_id","join","store","as","t3","on","t2",".","store_id","=","t3",".","store_id","where","t3",".","store_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,20,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Miramichi\"",null]]},"question_toks":["Welche","Produkte","werden","in","dem","Gesch\u00e4ft","namens","Miramichi","verkauft","?"],"question":"Welche Produkte werden in dem Gesch\u00e4ft namens Miramichi verkauft?"},{"db_id":"formula_1","query":"SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year","query_toks":["SELECT","max","(","T2.fastestlapspeed",")",",","T1.name",",","T1.year","FROM","races","AS","T1","JOIN","results","AS","T2","ON","T1.raceid","=","T2.raceid","WHERE","T1.year",">","2014","GROUP","BY","T1.name","ORDER","BY","T1.year"],"query_toks_no_value":["select","max","(","t2",".","fastestlapspeed",")",",","t1",".","name",",","t1",".","year","from","races","as","t1","join","results","as","t2","on","t1",".","raceid","=","t2",".","raceid","where","t1",".","year",">","value","group","by","t1",".","name","order","by","t1",".","year"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,44,false],null]],"table_units":[["table_unit",1],["table_unit",7]]},"groupBy":[[0,14,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,11,false],null]]],"select":[false,[[1,[0,[0,59,false],null]],[0,[0,[0,14,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],2014.0,null]]},"question_toks":["F\u00fcr","jeden","Rennnamen",":","Wie","hoch","ist","die","maximale","schnellste","Rundengeschwindigkeit","f\u00fcr","Rennen","nach","2004",",","geordnet","nach","Jahren","?"],"question":"F\u00fcr jeden Rennnamen: Wie hoch ist die maximale schnellste Rundengeschwindigkeit f\u00fcr Rennen nach 2004, geordnet nach Jahren?"},{"db_id":"cinema","query":"SELECT title ,  directed_by FROM film","query_toks":["SELECT","title",",","directed_by","FROM","film"],"query_toks_no_value":["select","title",",","directed_by","from","film"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","den","Titel","und","den","Regisseur","f\u00fcr","alle","Filme","."],"question":"Zeige den Titel und den Regisseur f\u00fcr alle Filme. "},{"db_id":"twitter_1","query":"SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1","query_toks":["SELECT","T1.name",",","count","(","*",")","FROM","user_profiles","AS","T1","JOIN","tweets","AS","T2","ON","T1.uid","=","T2.uid","GROUP","BY","T2.uid","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","name",",","count","(","*",")","from","user_profiles","as","t1","join","tweets","as","t2","on","t1",".","uid","=","t2",".","uid","group","by","t2",".","uid","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,4,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,4,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","des","Nutzers",",","der","mehr","als","einmal","tweetete",",","und","die","Anzahl","der","Tweets",",","die","von","ihm","getweetet","wurden","."],"question":"Finde den Namen des Nutzers, der mehr als einmal tweetete, und die Anzahl der Tweets, die von ihm getweetet wurden."},{"db_id":"college_1","query":"SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'","query_toks":["SELECT","crs_credit",",","crs_description","FROM","course","WHERE","crs_code","=","'QM-261","'"],"query_toks_no_value":["select","crs_credit",",","crs_description","from","course","where","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"QM-261\"",null]]},"question_toks":["Wie","lautet","die","Kursbeschreibung","und","die","Anzahl","der","Credits","f\u00fcr","QM-261","?"],"question":"Wie lautet die Kursbeschreibung und die Anzahl der Credits f\u00fcr QM-261?"},{"db_id":"csu_1","query":"SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950","query_toks":["SELECT","campus","FROM","campuses","WHERE","county","=","``","Los","Angeles","''","AND","YEAR",">","1950"],"query_toks_no_value":["select","campus","from","campuses","where","county","=","value","and","year",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Los Angeles\"",null],"and",[false,3,[0,[0,5,false],null],1950.0,null]]},"question_toks":["Welche","Campusse","befinden","sich","im","Bezirk","Los","Angeles","und","wurden","nach","1950","er\u00f6ffnet","?"],"question":"Welche Campusse befinden sich im Bezirk Los Angeles und wurden nach 1950 er\u00f6ffnet?"},{"db_id":"debate","query":"SELECT count(*) FROM debate","query_toks":["SELECT","count","(","*",")","FROM","debate"],"query_toks_no_value":["select","count","(","*",")","from","debate"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Debatten","gibt","es","?"],"question":"Wie viele Debatten gibt es?"},{"db_id":"loan_1","query":"SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1","query_toks":["SELECT","state","FROM","bank","GROUP","BY","state","ORDER","BY","sum","(","no_of_customers",")","DESC","LIMIT","1"],"query_toks_no_value":["select","state","from","bank","group","by","state","order","by","sum","(","no_of_customers",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,3,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Staat","hat","die","gr\u00f6\u00dfte","Gesamtanzahl","von","Bankkunden","?"],"question":"Welcher Staat hat die gr\u00f6\u00dfte Gesamtanzahl von Bankkunden?"},{"db_id":"college_1","query":"SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"ACCT-211\"","query_toks":["SELECT","DISTINCT","T1.EMP_FNAME",",","T1.EMP_DOB","FROM","employee","AS","T1","JOIN","CLASS","AS","T2","ON","T1.EMP_NUM","=","T2.PROF_NUM","WHERE","CRS_CODE","=","``","ACCT-211","''"],"query_toks_no_value":["select","distinct","t1",".","emp_fname",",","t1",".","emp_dob","from","employee","as","t1","join","class","as","t2","on","t1",".","emp_num","=","t2",".","prof_num","where","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,19,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"ACCT-211\"",null]]},"question_toks":["Wie","lauten","die","Vornamen","und","das","Geburtsdatum","der","Professoren",",","die","den","Kurs","ACCT-211","unterrichten","?"],"question":"Wie lauten die Vornamen und das Geburtsdatum der Professoren, die den Kurs ACCT-211 unterrichten?"},{"db_id":"coffee_shop","query":"SELECT address FROM member EXCEPT SELECT address FROM member WHERE Membership_card  =  'Black'","query_toks":["SELECT","address","FROM","member","EXCEPT","SELECT","address","FROM","member","WHERE","Membership_card","=","'Black","'"],"query_toks_no_value":["select","address","from","member","except","select","address","from","member","where","membership_card","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"Black\"",null]]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["An","welcher","Adresse","gibt","es","kein","Mitglied","mit","der","schwarzen","Mitgliedskarte","?"],"question":"An welcher Adresse gibt es kein Mitglied mit der schwarzen Mitgliedskarte?"},{"db_id":"store_product","query":"SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  \"Khanewal District\"","query_toks":["SELECT","t1.store_name","FROM","store","AS","t1","JOIN","store_district","AS","t2","ON","t1.store_id","=","t2.store_id","JOIN","district","AS","t3","ON","t2.district_id","=","t3.district_id","WHERE","t3.district_name","=","``","Khanewal","District","''"],"query_toks_no_value":["select","t1",".","store_name","from","store","as","t1","join","store_district","as","t2","on","t1",".","store_id","=","t2",".","store_id","join","district","as","t3","on","t2",".","district_id","=","t3",".","district_id","where","t3",".","district_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,21,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"Khanewal District\"",null]]},"question_toks":["Finde","die","Namen","aller","Gesch\u00e4fte","im","Distrikt","Khanewal","."],"question":"Finde die Namen aller Gesch\u00e4fte im Distrikt Khanewal."},{"db_id":"college_1","query":"SELECT count(DISTINCT school_code) FROM department","query_toks":["SELECT","count","(","DISTINCT","school_code",")","FROM","department"],"query_toks_no_value":["select","count","(","distinct","school_code",")","from","department"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,13,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Schulen","gibt","es","in","der","Abteilung","?"],"question":"Wie viele Schulen gibt es in der Abteilung?"},{"db_id":"music_1","query":"SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","artist_name","FROM","song","WHERE","resolution",">","500","GROUP","BY","languages","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","artist_name","from","song","where","resolution",">","value","group","by","languages","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,3,[0,[0,21,false],null],500.0,null]]},"question_toks":["Wie","hei\u00dft","der","K\u00fcnstler","f\u00fcr","jede","Sprache",",","der","die","meisten","Lieder","mit","einer","h\u00f6heren","Aufl\u00f6sung","als","500","hat","?"],"question":"Wie hei\u00dft der K\u00fcnstler f\u00fcr jede Sprache, der die meisten Lieder mit einer h\u00f6heren Aufl\u00f6sung als 500 hat?"},{"db_id":"voter_2","query":"SELECT Major FROM STUDENT WHERE Sex  =  \"F\" GROUP BY major ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","Major","FROM","STUDENT","WHERE","Sex","=","``","F","''","GROUP","BY","major","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","major","from","student","where","sex","=","value","group","by","major","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"F\"",null]]},"question_toks":["Finde","die","Studienrichtung",",","die","von","den","meisten","Studentinnen","studiert","wird","."],"question":"Finde die Studienrichtung, die von den meisten Studentinnen studiert wird."},{"db_id":"twitter_1","query":"SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid","query_toks":["SELECT","T1.name",",","count","(","*",")","FROM","user_profiles","AS","T1","JOIN","tweets","AS","T2","ON","T1.uid","=","T2.uid","GROUP","BY","T2.uid"],"query_toks_no_value":["select","t1",".","name",",","count","(","*",")","from","user_profiles","as","t1","join","tweets","as","t2","on","t1",".","uid","=","t2",".","uid","group","by","t2",".","uid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,4,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","jedes","Benutzers","und","die","Anzahl","der","Tweets",",","die","von","jedem","von","ihnen","getwittert","wurden","."],"question":"Finde den Namen jedes Benutzers und die Anzahl der Tweets, die von jedem von ihnen getwittert wurden."},{"db_id":"manufacturer","query":"SELECT max(num_of_shops) ,  avg(Num_of_Factories) FROM manufacturer WHERE open_year  <  1990","query_toks":["SELECT","max","(","num_of_shops",")",",","avg","(","Num_of_Factories",")","FROM","manufacturer","WHERE","open_year","<","1990"],"query_toks_no_value":["select","max","(","num_of_shops",")",",","avg","(","num_of_factories",")","from","manufacturer","where","open_year","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,5,false],null]],[5,[0,[0,4,false],null]]]],"union":null,"where":[[false,4,[0,[0,2,false],null],1990.0,null]]},"question_toks":["Wie","hoch","ist","die","durchschnittliche","Anzahl","von","Fabriken","und","die","maximale","Anzahl","von","Gesch\u00e4ften","von","Herstellern",",","die","vor","1990","er\u00f6ffnet","wurden","."],"question":"Wie hoch ist die durchschnittliche Anzahl von Fabriken und die maximale Anzahl von Gesch\u00e4ften von Herstellern, die vor 1990 er\u00f6ffnet wurden."},{"db_id":"store_product","query":"SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\"","query_toks":["SELECT","t3.headquartered_city","FROM","store","AS","t1","JOIN","store_district","AS","t2","ON","t1.store_id","=","t2.store_id","JOIN","district","AS","t3","ON","t2.district_id","=","t3.district_id","WHERE","t1.store_name","=","``","Blackville","''"],"query_toks_no_value":["select","t3",".","headquartered_city","from","store","as","t1","join","store_district","as","t2","on","t1",".","store_id","=","t2",".","store_id","join","district","as","t3","on","t2",".","district_id","=","t3",".","district_id","where","t1",".","store_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,21,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Blackville\"",null]]},"question_toks":["In","welcher","Stadt","befindet","sich","der","Hauptsitz","des","Gesch\u00e4fts","namens","``","Blackville","''","?"],"question":"In welcher Stadt befindet sich der Hauptsitz des Gesch\u00e4fts namens \"Blackville\"?"},{"db_id":"loan_1","query":"SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah'","query_toks":["SELECT","avg","(","no_of_customers",")","FROM","bank","WHERE","state","=","'Utah","'"],"query_toks_no_value":["select","avg","(","no_of_customers",")","from","bank","where","state","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Utah\"",null]]},"question_toks":["Finde","die","durchschnittliche","Zahl","der","Kunden","f\u00fcr","alle","Banken","im","Staat","Utah","."],"question":"Finde die durchschnittliche Zahl der Kunden f\u00fcr alle Banken im Staat Utah."},{"db_id":"debate","query":"SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people)","query_toks":["SELECT","Name","FROM","people","WHERE","People_id","NOT","IN","(","SELECT","Affirmative","FROM","debate_people",")"],"query_toks_no_value":["select","name","from","people","where","people_id","not","in","(","select","affirmative","from","debate_people",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Liste","die","Namen","von","Personen",",","die","nicht","auf","der","positiven","Seite","der","Debatten","standen",",","auf","."],"question":"Liste die Namen von Personen, die nicht auf der positiven Seite der Debatten standen, auf."},{"db_id":"voter_2","query":"SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote","query_toks":["SELECT","DISTINCT","T1.Major","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","T2.Treasurer_Vote"],"query_toks_no_value":["select","distinct","t1",".","major","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","t2",".","treasurer_vote"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,15,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","verschiedenen","Hauptf\u00e4cher","der","Studenten",",","die","Schatzmeister-Stimmen","haben","."],"question":"Finde die verschiedenen Hauptf\u00e4cher der Studenten, die Schatzmeister-Stimmen haben."},{"db_id":"coffee_shop","query":"SELECT name FROM member WHERE address  =  'Harford' OR address  =  'Waterbury'","query_toks":["SELECT","name","FROM","member","WHERE","address","=","'Harford","'","OR","address","=","'Waterbury","'"],"query_toks_no_value":["select","name","from","member","where","address","=","value","or","address","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Harford\"",null],"or",[false,2,[0,[0,12,false],null],"\"Waterbury\"",null]]},"question_toks":["Gib","mir","die","Namen","der","Mitglieder","an",",","deren","Adresse","in","Harford","oder","Waterbury","liegt","."],"question":"Gib mir die Namen der Mitglieder an, deren Adresse in Harford oder Waterbury liegt."},{"db_id":"store_product","query":"SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\"","query_toks":["SELECT","t3.headquartered_city","FROM","store","AS","t1","JOIN","store_district","AS","t2","ON","t1.store_id","=","t2.store_id","JOIN","district","AS","t3","ON","t2.district_id","=","t3.district_id","WHERE","t1.store_name","=","``","Blackville","''"],"query_toks_no_value":["select","t3",".","headquartered_city","from","store","as","t1","join","store_district","as","t2","on","t1",".","store_id","=","t2",".","store_id","join","district","as","t3","on","t2",".","district_id","=","t3",".","district_id","where","t1",".","store_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,21,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Blackville\"",null]]},"question_toks":["In","welcher","Stadt","ist","die","Zentrale","des","Gesch\u00e4fts","Blackville","?"],"question":"In welcher Stadt ist die Zentrale des Gesch\u00e4fts Blackville?"},{"db_id":"entrepreneur","query":"SELECT avg(Money_Requested) FROM entrepreneur","query_toks":["SELECT","avg","(","Money_Requested",")","FROM","entrepreneur"],"query_toks_no_value":["select","avg","(","money_requested",")","from","entrepreneur"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","das","von","allen","Unternehmern","durchschnittlich","verlangte","Geld","zur\u00fcck","."],"question":"Gib das von allen Unternehmern durchschnittlich verlangte Geld zur\u00fcck."},{"db_id":"music_1","query":"SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000","query_toks":["SELECT","T2.song_name","FROM","files","AS","T1","JOIN","song","AS","T2","ON","T1.f_id","=","T2.f_id","WHERE","T1.formats","=","``","mp3","''","INTERSECT","SELECT","song_name","FROM","song","WHERE","resolution","<","1000"],"query_toks_no_value":["select","t2",".","song_name","from","files","as","t1","join","song","as","t2","on","t1",".","f_id","=","t2",".","f_id","where","t1",".","formats","=","value","intersect","select","song_name","from","song","where","resolution","<","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,16,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,4,[0,[0,21,false],null],1000.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"mp3\"",null]]},"question_toks":["Gib","die","Namen","von","Liedern","an",",","deren","Format","mp3","ist","und","deren","Aufl\u00f6sung","unter","1000","liegt","."],"question":"Gib die Namen von Liedern an, deren Format mp3 ist und deren Aufl\u00f6sung unter 1000 liegt."},{"db_id":"csu_1","query":"SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004","query_toks":["SELECT","T1.campus","FROM","campuses","AS","t1","JOIN","faculty","AS","t2","ON","t1.id","=","t2.campus","WHERE","t2.faculty",">","=","600","AND","t2.faculty","<","=","1000","AND","T1.year","=","2004"],"query_toks_no_value":["select","t1",".","campus","from","campuses","as","t1","join","faculty","as","t2","on","t1",".","id","=","t2",".","campus","where","t2",".","faculty",">","=","value","and","t2",".","faculty","<","=","value","and","t1",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,21,false],null]],"table_units":[["table_unit",0],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,5,[0,[0,23,false],null],600.0,null],"and",[false,6,[0,[0,23,false],null],1000.0,null],"and",[false,2,[0,[0,5,false],null],2004.0,null]]},"question_toks":["Liste","die","Campusse","auf",",","die","zwischen","sechshundert","und","eintausend","Fakult\u00e4tszweige","haben","im","Jahr","2004","."],"question":"Liste die Campusse auf, die zwischen sechshundert und eintausend Fakult\u00e4tszweige haben im Jahr 2004."},{"db_id":"store_product","query":"SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  \"Khanewal District\"","query_toks":["SELECT","t1.store_name","FROM","store","AS","t1","JOIN","store_district","AS","t2","ON","t1.store_id","=","t2.store_id","JOIN","district","AS","t3","ON","t2.district_id","=","t3.district_id","WHERE","t3.district_name","=","``","Khanewal","District","''"],"query_toks_no_value":["select","t1",".","store_name","from","store","as","t1","join","store_district","as","t2","on","t1",".","store_id","=","t2",".","store_id","join","district","as","t3","on","t2",".","district_id","=","t3",".","district_id","where","t3",".","district_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,21,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"Khanewal District\"",null]]},"question_toks":["Wie\u00df","hei\u00dfen","alle","Gesch\u00e4fte","im","Khanewal","Distrikt","?"],"question":"Wie\u00df hei\u00dfen alle Gesch\u00e4fte im Khanewal Distrikt? "},{"db_id":"music_1","query":"SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3","query_toks":["SELECT","T1.artist_name",",","count","(","*",")","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","GROUP","BY","T2.artist_name","ORDER","BY","count","(","*",")","DESC","LIMIT","3"],"query_toks_no_value":["select","t1",".","artist_name",",","count","(","*",")","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","group","by","t2",".","artist_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[[0,14,false]],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["WWie","hei\u00dfen","die","der","drei","K\u00fcnstler",",","die","die","meisten","Lieder","produziert","haben",",","und","wie","viele","Werke","haben","sie","produziert","?"],"question":"WWie hei\u00dfen die der drei K\u00fcnstler, die die meisten Lieder produziert haben, und wie viele Werke haben sie produziert?"},{"db_id":"activity_1","query":"SELECT activity_name FROM Activity","query_toks":["SELECT","activity_name","FROM","Activity"],"query_toks_no_value":["select","activity_name","from","activity"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","alle","Aktivit\u00e4ten","auf",",","die","wir","haben","."],"question":"Liste alle Aktivit\u00e4ten auf, die wir haben."},{"db_id":"loan_1","query":"SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Mortgages'","query_toks":["SELECT","cust_name","FROM","customer","EXCEPT","SELECT","T1.cust_name","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id","WHERE","T2.loan_type","=","'Mortgages","'"],"query_toks_no_value":["select","cust_name","from","customer","except","select","t1",".","cust_name","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id","where","t2",".","loan_type","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"Mortgages\"",null]]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Namen","der","Kunden",",","die","keinen","Hypothekenkredit","aufgenommen","haben","?"],"question":"Welches sind die Namen der Kunden, die keinen Hypothekenkredit aufgenommen haben?"},{"db_id":"swimming","query":"SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id HAVING count(*)  >=  2","query_toks":["SELECT","t1.name","FROM","swimmer","AS","t1","JOIN","record","AS","t2","ON","t1.id","=","t2.swimmer_id","GROUP","BY","t2.swimmer_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","name","from","swimmer","as","t1","join","record","as","t2","on","t1",".","id","=","t2",".","swimmer_id","group","by","t2",".","swimmer_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[[0,24,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Suche","den","Namen","des","Schwimmers",",","der","mindestens","zwei","Rekorde","hat","."],"question":"Suche den Namen des Schwimmers, der mindestens zwei Rekorde hat."},{"db_id":"csu_1","query":"SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939","query_toks":["SELECT","campus","FROM","campuses","WHERE","YEAR",">","=","1935","AND","YEAR","<","=","1939"],"query_toks_no_value":["select","campus","from","campuses","where","year",">","=","value","and","year","<","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,5,[0,[0,5,false],null],1935.0,null],"and",[false,6,[0,[0,5,false],null],1939.0,null]]},"question_toks":["Welcher","Campus","war","zwischen","1935","und","1939","ge\u00f6ffnet","?"],"question":"Welcher Campus war zwischen 1935 und 1939 ge\u00f6ffnet?"},{"db_id":"coffee_shop","query":"SELECT Membership_card FROM member GROUP BY Membership_card HAVING count(*)  >  5","query_toks":["SELECT","Membership_card","FROM","member","GROUP","BY","Membership_card","HAVING","count","(","*",")",">","5"],"query_toks_no_value":["select","membership_card","from","member","group","by","membership_card","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[[false,3,[0,[3,0,false],null],5.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Mitgliedskarte","hat","mehr","als","f\u00fcnf","Mitglieder","?"],"question":"Welche Mitgliedskarte hat mehr als f\u00fcnf Mitglieder?"},{"db_id":"tracking_orders","query":"SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"","query_toks":["SELECT","DISTINCT","invoice_details","FROM","invoices","WHERE","invoice_date","<","``","1989-09-03","''","OR","invoice_date",">","``","2007-12-25","''"],"query_toks_no_value":["select","distinct","invoice_details","from","invoices","where","invoice_date","<","value","or","invoice_date",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,4,[0,[0,5,false],null],"\"1989-09-03\"",null],"or",[false,3,[0,[0,5,false],null],"\"2007-12-25\"",null]]},"question_toks":["Welches","sind","die","unterschiedlichen","Details","der","Rechnungen",",","die","vor","dem","03.09.1989","oder","nach","dem","25.12.2007","erstellt","wurden","?"],"question":"Welches sind die unterschiedlichen Details der Rechnungen, die vor dem 03.09.1989 oder nach dem 25.12.2007 erstellt wurden?"},{"db_id":"activity_1","query":"SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID","query_toks":["SELECT","T1.fname",",","T1.lname",",","count","(","*",")",",","T1.FacID","FROM","Faculty","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.facID","=","T2.facID","GROUP","BY","T1.FacID"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","lname",",","count","(","*",")",",","t1",".","facid","from","faculty","as","t1","join","faculty_participates_in","as","t2","on","t1",".","facid","=","t2",".","facid","group","by","t1",".","facid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,5,false],null]],"table_units":[["table_unit",4],["table_unit",2]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]],[0,[0,[0,16,false],null]],[3,[0,[0,0,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Vor-","und","Zunamen","der","Fakult\u00e4tsmitglieder",",","die","an","mindestens","einer","Aktivit\u00e4t","teilgenommen","haben","?","F\u00fcr","jeden","davon","zeige","auch","die","Anzahl","der","Aktivit\u00e4ten",",","an","denen","sie","teilnahmen","."],"question":"Welches sind die Vor- und Zunamen der Fakult\u00e4tsmitglieder, die an mindestens einer Aktivit\u00e4t teilgenommen haben? F\u00fcr jeden davon zeige auch die Anzahl der Aktivit\u00e4ten, an denen sie teilnahmen. "},{"db_id":"game_injury","query":"SELECT player ,  number_of_matches ,  SOURCE FROM injury_accident WHERE injury != 'Knee problem'","query_toks":["SELECT","player",",","number_of_matches",",","SOURCE","FROM","injury_accident","WHERE","injury","!","=","'Knee","problem","'"],"query_toks_no_value":["select","player",",","number_of_matches",",","source","from","injury_accident","where","injury","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]],[0,[0,[0,19,false],null]],[0,[0,[0,20,false],null]]]],"union":null,"where":[[false,7,[0,[0,18,false],null],"\"Knee problem\"",null]]},"question_toks":["Welches","ist","der","Spielername",",","die","Anzahl","der","Partien","und","die","Informationsquelle","f\u00fcr","Spieler",",","die","nicht","an","der","Verletzung","``","Knieproblem","''","leiden","?"],"question":"Welches ist der Spielername, die Anzahl der Partien und die Informationsquelle f\u00fcr Spieler, die nicht an der Verletzung \"Knieproblem\" leiden?"},{"db_id":"phone_market","query":"SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID ORDER BY T2.Ranking","query_toks":["SELECT","T3.Name",",","T2.District","FROM","phone_market","AS","T1","JOIN","market","AS","T2","ON","T1.Market_ID","=","T2.Market_ID","JOIN","phone","AS","T3","ON","T1.Phone_ID","=","T3.Phone_ID","ORDER","BY","T2.Ranking"],"query_toks_no_value":["select","t3",".","name",",","t2",".","district","from","phone_market","as","t1","join","market","as","t2","on","t1",".","market_id","=","t2",".","market_id","join","phone","as","t3","on","t1",".","phone_id","=","t3",".","phone_id","order","by","t2",".","ranking"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,10,false],null]]],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Namen","von","Telefonen","und","den","Marktbezirken",",","auf","denen","sie","vertreten","sind",",","in","aufsteigender","Ordnung","der","Einstufung","des","Marktes","."],"question":"Zeige die Namen von Telefonen und den Marktbezirken, auf denen sie vertreten sind, in aufsteigender Ordnung der Einstufung des Marktes."},{"db_id":"loan_1","query":"SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000","query_toks":["SELECT","T1.cust_name","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id","WHERE","amount",">","3000"],"query_toks_no_value":["select","t1",".","cust_name","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id","where","amount",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],3000.0,null]]},"question_toks":["Welches","sind","Namen","der","Kunden",",","die","einen","Kredit","mit","einem","Betrag","von","mehr","als","3000","haben","?"],"question":"Welches sind Namen der Kunden, die einen Kredit mit einem Betrag von mehr als 3000 haben?"},{"db_id":"music_1","query":"SELECT artist_name FROM artist WHERE country  =  \"UK\" AND gender  =  \"Male\"","query_toks":["SELECT","artist_name","FROM","artist","WHERE","country","=","``","UK","''","AND","gender","=","``","Male","''"],"query_toks_no_value":["select","artist_name","from","artist","where","country","=","value","and","gender","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"UK\"",null],"and",[false,2,[0,[0,6,false],null],"\"Male\"",null]]},"question_toks":["Welches","sind","die","Namen","aller","m\u00e4nnlichen","britischen","K\u00fcnstler","?"],"question":"Welches sind die Namen aller m\u00e4nnlichen britischen K\u00fcnstler?"},{"db_id":"sakila_1","query":"SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.title",",","T2.inventory_id","FROM","film","AS","T1","JOIN","inventory","AS","T2","ON","T1.film_id","=","T2.film_id","JOIN","rental","AS","T3","ON","T2.inventory_id","=","T3.inventory_id","GROUP","BY","T2.inventory_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","title",",","t2",".","inventory_id","from","film","as","t1","join","inventory","as","t2","on","t1",".","film_id","=","t2",".","film_id","join","rental","as","t3","on","t2",".","inventory_id","=","t3",".","inventory_id","group","by","t2",".","inventory_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,55,false],null]],"table_units":[["table_unit",6],["table_unit",10]]},"groupBy":[[0,54,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,54,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","der","Filmtitel","und","die","Inventarnummer","des","Artikels","im","Inventar",",","der","am","h\u00e4ufigsten","ausgeliehen","wurde","?"],"question":"Welches sind der Filmtitel und die Inventarnummer des Artikels im Inventar, der am h\u00e4ufigsten ausgeliehen wurde?"},{"db_id":"college_1","query":"SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code","query_toks":["SELECT","sum","(","T1.crs_credit",")",",","T1.dept_code","FROM","course","AS","T1","JOIN","CLASS","AS","T2","ON","T1.crs_code","=","T2.crs_code","GROUP","BY","T1.dept_code"],"query_toks_no_value":["select","sum","(","t1",".","crs_credit",")",",","t1",".","dept_code","from","course","as","t1","join","class","as","t2","on","t1",".","crs_code","=","t2",".","crs_code","group","by","t1",".","dept_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,10,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","Gesamtzahl","der","Kredite",",","die","von","jeder","Abteilung","angeboten","werden","?"],"question":"Was ist die Gesamtzahl der Kredite, die von jeder Abteilung angeboten werden?"},{"db_id":"college_1","query":"SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1","query_toks":["SELECT","T1.stu_fname","FROM","student","AS","T1","JOIN","enroll","AS","T2","ON","T1.stu_num","=","T2.stu_num","GROUP","BY","T2.stu_num","HAVING","count","(","*",")","=","1"],"query_toks_no_value":["select","t1",".","stu_fname","from","student","as","t1","join","enroll","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","group","by","t2",".","stu_num","having","count","(","*",")","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,25,false],null]],"table_units":[["table_unit",6],["table_unit",4]]},"groupBy":[[0,25,false]],"having":[[false,2,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Vornamen","der","Studenten",",","die","nur","einen","Kurs","belegten","?"],"question":"Wie lauten die Vornamen der Studenten, die nur einen Kurs belegten?"},{"db_id":"activity_1","query":"SELECT lname FROM faculty WHERE rank  =  'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'","query_toks":["SELECT","lname","FROM","faculty","WHERE","rank","=","'Professor","'","EXCEPT","SELECT","DISTINCT","T1.lname","FROM","Faculty","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.facID","=","T2.facID","JOIN","activity","AS","T3","ON","T2.actid","=","T2.actid","WHERE","T3.activity_name","=","'Canoeing","'","OR","T3.activity_name","=","'Kayaking","'"],"query_toks_no_value":["select","lname","from","faculty","where","rank","=","value","except","select","distinct","t1",".","lname","from","faculty","as","t1","join","faculty_participates_in","as","t2","on","t1",".","facid","=","t2",".","facid","join","activity","as","t3","on","t2",".","actid","=","t2",".","actid","where","t3",".","activity_name","=","value","or","t3",".","activity_name","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,5,false],null]],"table_units":[["table_unit",4],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Canoeing\"",null],"or",[false,2,[0,[0,2,false],null],"\"Kayaking\"",null]]},"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"Professor\"",null]]},"question_toks":["Wie","lauten","die","Vornamen","der","Professoren",",","die","kein","Kanufahren","oder","Kajakfahren","als","Aktivit\u00e4ten","machen","?"],"question":"Wie lauten die Vornamen der Professoren, die kein Kanufahren oder Kajakfahren als Aktivit\u00e4ten machen?"},{"db_id":"phone_market","query":"SELECT count(*) FROM phone","query_toks":["SELECT","count","(","*",")","FROM","phone"],"query_toks_no_value":["select","count","(","*",")","from","phone"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Telefone","gibt","es","?"],"question":"Wie viele Telefone gibt es?"},{"db_id":"twitter_1","query":"SELECT avg(followers) FROM user_profiles WHERE UID IN (SELECT UID FROM tweets)","query_toks":["SELECT","avg","(","followers",")","FROM","user_profiles","WHERE","UID","IN","(","SELECT","UID","FROM","tweets",")"],"query_toks_no_value":["select","avg","(","followers",")","from","user_profiles","where","uid","in","(","select","uid","from","tweets",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,11,false],null]]]],"union":null,"where":[[false,8,[0,[0,7,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finde","die","durchschnittliche","Anzahl","der","Follower","von","Benutzern",",","die","einige","Tweets","hatten","."],"question":"Finde die durchschnittliche Anzahl der Follower von Benutzern, die einige Tweets hatten."},{"db_id":"mountain_photos","query":"SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  'Toubkal Atlas' INTERSECT SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  'Lasta Massif'","query_toks":["SELECT","T3.brand","FROM","mountain","AS","T1","JOIN","photos","AS","T2","ON","T1.id","=","T2.mountain_id","JOIN","camera_lens","AS","T3","ON","T2.camera_lens_id","=","T3.id","WHERE","T1.range","=","'Toubkal","Atlas","'","INTERSECT","SELECT","T3.brand","FROM","mountain","AS","T1","JOIN","photos","AS","T2","ON","T1.id","=","T2.mountain_id","JOIN","camera_lens","AS","T3","ON","T2.camera_lens_id","=","T3.id","WHERE","T1.range","=","'Lasta","Massif","'"],"query_toks_no_value":["select","t3",".","brand","from","mountain","as","t1","join","photos","as","t2","on","t1",".","id","=","t2",".","mountain_id","join","camera_lens","as","t3","on","t2",".","camera_lens_id","=","t3",".","id","where","t1",".","range","=","value","intersect","select","t3",".","brand","from","mountain","as","t1","join","photos","as","t2","on","t1",".","id","=","t2",".","mountain_id","join","camera_lens","as","t3","on","t2",".","camera_lens_id","=","t3",".","id","where","t1",".","range","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,14,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,14,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Lasta Massif\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Toubkal Atlas\"",null]]},"question_toks":["F\u00fchren","Sie","die","Marken","von","Objektiven","auf",",","die","sowohl","ein","Bild","von","Bergen","mit","dem","Gebirgszug","'Toubkal-Atlas","'","als","auch","ein","Bild","von","Bergen","mit","dem","Gebirgszug","'Lasta-Massiv","'","aufgenommen","haben"],"question":"F\u00fchren Sie die Marken von Objektiven auf, die sowohl ein Bild von Bergen mit dem Gebirgszug 'Toubkal-Atlas' als auch ein Bild von Bergen mit dem Gebirgszug 'Lasta-Massiv' aufgenommen haben"},{"db_id":"college_1","query":"SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code","query_toks":["SELECT","sum","(","stu_hrs",")",",","dept_code","FROM","student","GROUP","BY","dept_code"],"query_toks_no_value":["select","sum","(","stu_hrs",")",",","dept_code","from","student","group","by","dept_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[[0,41,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,37,false],null]],[0,[0,[0,41,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Stunden","verbringen","die","Studierenden","in","jeder","Abteilung","mit","dem","Studium","?"],"question":"Wie viele Stunden verbringen die Studierenden in jeder Abteilung mit dem Studium?"},{"db_id":"music_1","query":"SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)","query_toks":["SELECT","f_id","FROM","song","WHERE","resolution",">","(","SELECT","max","(","resolution",")","FROM","song","WHERE","rating","<","8",")"],"query_toks_no_value":["select","f_id","from","song","where","resolution",">","(","select","max","(","resolution",")","from","song","where","rating","<","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,3,[0,[0,21,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,21,false],null]]]],"union":null,"where":[[false,4,[0,[0,18,false],null],8.0,null]]},null]]},"question_toks":["Was","ist","die","ID","jedes","Liedes",",","dessen","Aufl\u00f6sung","h\u00f6her","ist","als","die","eines","Liedes","mit","einer","Bewertung","unter","8","?"],"question":"Was ist die ID jedes Liedes, dessen Aufl\u00f6sung h\u00f6her ist als die eines Liedes mit einer Bewertung unter 8?"},{"db_id":"college_1","query":"SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211'","query_toks":["SELECT","avg","(","T2.stu_gpa",")","FROM","enroll","AS","T1","JOIN","student","AS","T2","ON","T1.stu_num","=","T2.stu_num","JOIN","CLASS","AS","T3","ON","T1.class_code","=","T3.class_code","WHERE","T3.crs_code","=","'ACCT-211","'"],"query_toks_no_value":["select","avg","(","t2",".","stu_gpa",")","from","enroll","as","t1","join","student","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","join","class","as","t3","on","t1",".","class_code","=","t3",".","class_code","where","t3",".","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,25,false],null],[0,32,false],null]],"table_units":[["table_unit",4],["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,39,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"ACCT-211\"",null]]},"question_toks":["Was","ist","der","Notendurchschnitt","von","Studierenden",",","die","den","ACCT-211","absolvieren","?"],"question":"Was ist der Notendurchschnitt von Studierenden, die den ACCT-211 absolvieren? "},{"db_id":"activity_1","query":"SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student","query_toks":["SELECT","FacID","FROM","Faculty_participates_in","INTERSECT","SELECT","advisor","FROM","Student"],"query_toks_no_value":["select","facid","from","faculty_participates_in","intersect","select","advisor","from","student"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","die","Ausweise","aller","Fakult\u00e4tsmitglieder",",","die","an","einer","Aktivit\u00e4t","teilnehmen","und","einen","Studenten","beraten","."],"question":"Zeigen Sie die Ausweise aller Fakult\u00e4tsmitglieder, die an einer Aktivit\u00e4t teilnehmen und einen Studenten beraten."},{"db_id":"activity_1","query":"SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2","query_toks":["SELECT","T1.FacID","FROM","Faculty","AS","T1","JOIN","Student","AS","T2","ON","T1.FacID","=","T2.advisor","GROUP","BY","T1.FacID","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","facid","from","faculty","as","t1","join","student","as","t2","on","t1",".","facid","=","t2",".","advisor","group","by","t1",".","facid","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,13,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[[0,15,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","die","Ausweise","aller","Fakult\u00e4tsmitglieder",",","die","an","einer","Aktivit\u00e4t","teilnehmen","und","einen","Studenten","beraten","."],"question":"Zeigen Sie die Ausweise aller Fakult\u00e4tsmitglieder, die an einer Aktivit\u00e4t teilnehmen und einen Studenten beraten."},{"db_id":"mountain_photos","query":"SELECT avg(prominence) FROM mountain WHERE country  =  'Morocco'","query_toks":["SELECT","avg","(","prominence",")","FROM","mountain","WHERE","country","=","'Morocco","'"],"query_toks_no_value":["select","avg","(","prominence",")","from","mountain","where","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"Morocco\"",null]]},"question_toks":["Wie","hoch","ist","die","durchschnittliche","Sichtbarkeit","der","Berge","im","Land","'Marokko","'","?"],"question":"Wie hoch ist die durchschnittliche Sichtbarkeit der Berge im Land 'Marokko'? "},{"db_id":"activity_1","query":"SELECT DISTINCT rank FROM Faculty","query_toks":["SELECT","DISTINCT","rank","FROM","Faculty"],"query_toks_no_value":["select","distinct","rank","from","faculty"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,18,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","Liste","der","verschiedenen","R\u00e4nge","f\u00fcr","die","Fakult\u00e4t","."],"question":"Finden Sie die Liste der verschiedenen R\u00e4nge f\u00fcr die Fakult\u00e4t. "},{"db_id":"tracking_orders","query":"SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.order_id","FROM","orders","AS","T1","JOIN","order_items","AS","T2","ON","T1.order_id","=","T2.order_id","GROUP","BY","T1.order_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","order_id","from","orders","as","t1","join","order_items","as","t2","on","t1",".","order_id","=","t2",".","order_id","group","by","t1",".","order_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,17,false],null]],"table_units":[["table_unit",2],["table_unit",4]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","die","ID","der","Bestellung","mit","den","meisten","Artikeln","?"],"question":"Wie lautet die ID der Bestellung mit den meisten Artikeln? "},{"db_id":"twitter_1","query":"SELECT max(followers) ,  sum(followers) FROM user_profiles","query_toks":["SELECT","max","(","followers",")",",","sum","(","followers",")","FROM","user_profiles"],"query_toks_no_value":["select","max","(","followers",")",",","sum","(","followers",")","from","user_profiles"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,11,false],null]],[4,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","maximale","und","die","gesamte","Anzahl","der","Anh\u00e4nger","aller","Benutzer","."],"question":"Finden Sie die maximale und die gesamte Anzahl der Anh\u00e4nger aller Benutzer. "},{"db_id":"twitter_1","query":"SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5","query_toks":["SELECT","name","FROM","user_profiles","ORDER","BY","followers","DESC","LIMIT","5"],"query_toks_no_value":["select","name","from","user_profiles","order","by","followers","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":5,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["F\u00fchren","Sie","die","Namen","von","5","Benutzern","auf",",","die","von","der","gr\u00f6\u00dften","Anzahl","anderer","Benutzer","gefolgt","werden","."],"question":"F\u00fchren Sie die Namen von 5 Benutzern auf, die von der gr\u00f6\u00dften Anzahl anderer Benutzer gefolgt werden. "},{"db_id":"formula_1","query":"SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)","query_toks":["SELECT","DISTINCT","driverid",",","STOP","FROM","pitstops","WHERE","duration",">","(","SELECT","min","(","duration",")","FROM","pitstops","WHERE","raceid","=","841",")"],"query_toks_no_value":["select","distinct","driverid",",","stop","from","pitstops","where","duration",">","(","select","min","(","duration",")","from","pitstops","where","raceid","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",11]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,83,false],null]],[0,[0,[0,84,false],null]]]],"union":null,"where":[[false,3,[0,[0,87,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",11]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,87,false],null]]]],"union":null,"where":[[false,2,[0,[0,82,false],null],841.0,null]]},null]]},"question_toks":["Was","sind","die","unterschiedlichen","Kennungen","und","Stoppdauern","aller","Fahrer",",","deren","Stopp","l\u00e4nger","dauerte","als","der","Fahrer","im","Rennen","mit","der","Kennung","841","?"],"question":"Was sind die unterschiedlichen Kennungen und Stoppdauern aller Fahrer, deren Stopp l\u00e4nger dauerte als der Fahrer im Rennen mit der Kennung 841?"},{"db_id":"twitter_1","query":"SELECT count(*) FROM tweets","query_toks":["SELECT","count","(","*",")","FROM","tweets"],"query_toks_no_value":["select","count","(","*",")","from","tweets"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","Anzahl","der","Tweets","im","Datensatz","."],"question":"Finden Sie die Anzahl der Tweets im Datensatz. "},{"db_id":"phone_market","query":"SELECT T3.Name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID WHERE T2.Num_of_shops  >  50","query_toks":["SELECT","T3.Name","FROM","phone_market","AS","T1","JOIN","market","AS","T2","ON","T1.Market_ID","=","T2.Market_ID","JOIN","phone","AS","T3","ON","T1.Phone_ID","=","T3.Phone_ID","WHERE","T2.Num_of_shops",">","50"],"query_toks_no_value":["select","t3",".","name","from","phone_market","as","t1","join","market","as","t2","on","t1",".","market_id","=","t2",".","market_id","join","phone","as","t3","on","t1",".","phone_id","=","t3",".","phone_id","where","t2",".","num_of_shops",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],50.0,null]]},"question_toks":["Show","the","names","of","phones","that","are","on","market","with","number","of","shops","greater","than","50","."],"question":"Show the names of phones that are on market with number of shops greater than 50. "},{"db_id":"formula_1","query":"SELECT name FROM races WHERE YEAR = 2017","query_toks":["SELECT","name","FROM","races","WHERE","YEAR","=","2017"],"query_toks_no_value":["select","name","from","races","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],2017.0,null]]},"question_toks":["Finde","die","Namen","aller","Rennen",",","die","in","2017","stattfanden","."],"question":"Finde die Namen aller Rennen, die in 2017 stattfanden."},{"db_id":"activity_1","query":"SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"Linda\" AND T2.lname  =  \"Smith\"","query_toks":["SELECT","T1.fname",",","T1.lname","FROM","Faculty","AS","T1","JOIN","Student","AS","T2","ON","T1.FacID","=","T2.advisor","WHERE","T2.fname","=","``","Linda","''","AND","T2.lname","=","``","Smith","''"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","lname","from","faculty","as","t1","join","student","as","t2","on","t1",".","facid","=","t2",".","advisor","where","t2",".","fname","=","value","and","t2",".","lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,13,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Linda\"",null],"and",[false,2,[0,[0,8,false],null],"\"Smith\"",null]]},"question_toks":["Wer","ist","der","Berater","von","Linda","Smith","?","Gib","mir","den","Vornamen","und","Zunamen","."],"question":"Wer ist der Berater von Linda Smith? Gib mir den Vornamen und Zunamen."},{"db_id":"college_1","query":"SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'","query_toks":["SELECT","T1.emp_lname",",","T1.emp_hiredate","FROM","employee","AS","T1","JOIN","professor","AS","T2","ON","T1.emp_num","=","T2.emp_num","WHERE","T2.prof_office","=","'DRE","102","'"],"query_toks_no_value":["select","t1",".","emp_lname",",","t1",".","emp_hiredate","from","employee","as","t1","join","professor","as","t2","on","t1",".","emp_num","=","t2",".","emp_num","where","t2",".","prof_office","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,27,false],null]],"table_units":[["table_unit",3],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,29,false],null],"\"DRE 102\"",null]]},"question_toks":["Finde","den","Nachnamen","und","das","Einstellungsdatum","des","Professors",",","der","in","B\u00fcro","DRE","102","ist","."],"question":"Finde den Nachnamen und das Einstellungsdatum des Professors, der in B\u00fcro DRE 102 ist."},{"db_id":"coffee_shop","query":"SELECT address FROM member WHERE age  <  30 INTERSECT SELECT address FROM member WHERE age  >  40","query_toks":["SELECT","address","FROM","member","WHERE","age","<","30","INTERSECT","SELECT","address","FROM","member","WHERE","age",">","40"],"query_toks_no_value":["select","address","from","member","where","age","<","value","intersect","select","address","from","member","where","age",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],40.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,4,[0,[0,9,false],null],30.0,null]]},"question_toks":["Welche","Adresse","hat","gleichzeitig","Mitglieder","die","j\u00fcnger","als","30","und","\u00e4lter","als","40","sind","?"],"question":"Welche Adresse hat gleichzeitig Mitglieder die j\u00fcnger als 30 und \u00e4lter als 40 sind?"},{"db_id":"swimming","query":"SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' INTERSECT SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Loss'","query_toks":["SELECT","t1.name","FROM","swimmer","AS","t1","JOIN","record","AS","t2","ON","t1.id","=","t2.swimmer_id","WHERE","RESULT","=","'Win","'","INTERSECT","SELECT","t1.name","FROM","swimmer","AS","t1","JOIN","record","AS","t2","ON","t1.id","=","t2.swimmer_id","WHERE","RESULT","=","'Loss","'"],"query_toks_no_value":["select","t1",".","name","from","swimmer","as","t1","join","record","as","t2","on","t1",".","id","=","t2",".","swimmer_id","where","result","=","value","intersect","select","t1",".","name","from","swimmer","as","t1","join","record","as","t2","on","t1",".","id","=","t2",".","swimmer_id","where","result","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],"\"Loss\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],"\"Win\"",null]]},"question_toks":["Finde","die","Namen","der","Schwimmer",",","die","gleichzeitig","die","Ergebnisse","``","gewonnen","''","und","``","verloren","''","in","den","Aufzeichnungen","haben","."],"question":"Finde die Namen der Schwimmer, die gleichzeitig die Ergebnisse \"gewonnen\" und \"verloren\" in den Aufzeichnungen haben."},{"db_id":"loan_1","query":"SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0","query_toks":["SELECT","state",",","acc_type",",","credit_score","FROM","customer","WHERE","no_of_loans","=","0"],"query_toks_no_value":["select","state",",","acc_type",",","credit_score","from","customer","where","no_of_loans","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]],[0,[0,[0,8,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],0.0,null]]},"question_toks":["Welches","sind","die","Zust\u00e4nde",",","Kontoarten","und","Kredit-Scores","f\u00fcr","Kunden",",","die","0","Kredite","haben","?"],"question":"Welches sind die Zust\u00e4nde, Kontoarten und Kredit-Scores f\u00fcr Kunden, die 0 Kredite haben?"},{"db_id":"voter_2","query":"SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\"","query_toks":["SELECT","DISTINCT","T1.Fname",",","T1.LName","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","T2.President_VOTE","WHERE","T1.sex","=","``","F","''"],"query_toks_no_value":["select","distinct","t1",".","fname",",","t1",".","lname","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","t2",".","president_vote","where","t1",".","sex","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,12,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"F\"",null]]},"question_toks":["Welches","sind","die","Vornamen","und","Nachnamen","aller","weiblicher","Studenten",",","die","Stimmen","f\u00fcr","die","Pr\u00e4sidentschaft","haben","."],"question":"Welches sind die Vornamen und Nachnamen aller weiblicher Studenten, die Stimmen f\u00fcr die Pr\u00e4sidentschaft haben."},{"db_id":"loan_1","query":"SELECT count(*) FROM bank","query_toks":["SELECT","count","(","*",")","FROM","bank"],"query_toks_no_value":["select","count","(","*",")","from","bank"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Bankfilialen","gibt","es","?"],"question":"Wie viele Bankfilialen gibt es? "},{"db_id":"sakila_1","query":"SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1","query_toks":["SELECT","title",",","rental_rate","FROM","film","ORDER","BY","rental_rate","DESC","LIMIT","1"],"query_toks_no_value":["select","title",",","rental_rate","from","film","order","by","rental_rate","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,39,false],null]]],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,39,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","der","Titel","und","die","Verleihrate","des","Films","mit","der","h\u00f6chsten","Verleihrate","?"],"question":"Was sind der Titel und die Verleihrate des Films mit der h\u00f6chsten Verleihrate?"},{"db_id":"activity_1","query":"SELECT sex ,  count(*) FROM Faculty WHERE rank  =  \"AsstProf\" GROUP BY sex","query_toks":["SELECT","sex",",","count","(","*",")","FROM","Faculty","WHERE","rank","=","``","AsstProf","''","GROUP","BY","sex"],"query_toks_no_value":["select","sex",",","count","(","*",")","from","faculty","where","rank","=","value","group","by","sex"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"AsstProf\"",null]]},"question_toks":["Wie","viele","m\u00e4nnliche","und","weibliche","Assistenzprofessoren","haben","wir","?"],"question":"Wie viele m\u00e4nnliche und weibliche Assistenzprofessoren haben wir? "},{"db_id":"college_1","query":"SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211'","query_toks":["SELECT","count","(","*",")","FROM","CLASS","AS","T1","JOIN","enroll","AS","T2","ON","T1.class_code","=","T2.class_code","WHERE","T1.crs_code","=","'ACCT-211","'"],"query_toks_no_value":["select","count","(","*",")","from","class","as","t1","join","enroll","as","t2","on","t1",".","class_code","=","t2",".","class_code","where","t1",".","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"ACCT-211\"",null]]},"question_toks":["Wie","hoch","ist","die","Gesamtzahl","der","in","ACCT-211","eingeschriebenen","Studierenden","?"],"question":"Wie hoch ist die Gesamtzahl der in ACCT-211 eingeschriebenen Studierenden? "},{"db_id":"loan_1","query":"SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1","query_toks":["SELECT","T2.bname","FROM","loan","AS","T1","JOIN","bank","AS","T2","ON","T1.branch_id","=","T2.branch_id","JOIN","customer","AS","T3","ON","T1.cust_id","=","T3.cust_id","WHERE","T3.credit_score","<","100","GROUP","BY","T2.bname","ORDER","BY","sum","(","T1.amount",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","bname","from","loan","as","t1","join","bank","as","t2","on","t1",".","branch_id","=","t2",".","branch_id","join","customer","as","t3","on","t1",".","cust_id","=","t3",".","cust_id","where","t3",".","credit_score","<","value","group","by","t2",".","bname","order","by","sum","(","t1",".","amount",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,18,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,4,[0,[0,11,false],null],100.0,null]]},"question_toks":["Wie","lautet","der","Name","der","Bankfiliale",",","die","den","gr\u00f6\u00dften","Gesamtbetrag","an","Krediten","vergeben","hat",",","insbesondere","an","Kunden","mit","einer","Kreditw\u00fcrdigkeit","unter","100","?"],"question":"Wie lautet der Name der Bankfiliale, die den gr\u00f6\u00dften Gesamtbetrag an Krediten vergeben hat, insbesondere an Kunden mit einer Kreditw\u00fcrdigkeit unter 100? "},{"db_id":"college_1","query":"SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1","query_toks":["SELECT","T1.school_code","FROM","department","AS","T1","JOIN","professor","AS","T2","ON","T1.dept_code","=","T2.dept_code","GROUP","BY","T1.school_code","ORDER","BY","count","(","*",")","LIMIT","1"],"query_toks_no_value":["select","t1",".","school_code","from","department","as","t1","join","professor","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","group","by","t1",".","school_code","order","by","count","(","*",")","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,28,false],null]],"table_units":[["table_unit",2],["table_unit",5]]},"groupBy":[[0,13,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Schule","hat","die","geringste","Anzahl","von","Professoren","?"],"question":"Welche Schule hat die geringste Anzahl von Professoren? "},{"db_id":"voter_2","query":"SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","Major","FROM","STUDENT","GROUP","BY","major","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","major","from","student","group","by","major","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","das","Fach",",","das","von","der","h\u00f6chsten","Anzahl","Studierender","studiert","wird","."],"question":"Finde das Fach, das von der h\u00f6chsten Anzahl Studierender studiert wird."},{"db_id":"csu_1","query":"SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus","query_toks":["SELECT","T1.campus",",","sum","(","T2.degrees",")","FROM","campuses","AS","T1","JOIN","degrees","AS","T2","ON","T1.id","=","T2.campus","WHERE","T1.county","=","``","Orange","''","AND","T2.year",">","=","2000","GROUP","BY","T1.campus"],"query_toks_no_value":["select","t1",".","campus",",","sum","(","t2",".","degrees",")","from","campuses","as","t1","join","degrees","as","t2","on","t1",".","id","=","t2",".","campus","where","t1",".","county","=","value","and","t2",".","year",">","=","value","group","by","t1",".","campus"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[4,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Orange\"",null],"and",[false,5,[0,[0,9,false],null],2000.0,null]]},"question_toks":["Wie","hoch","ist","die","Gesamtzahl","der","nach","2000","f\u00fcr","jeden","Campus","in","Orange","County","verliehenen","Abschl\u00fcsse","?"],"question":"Wie hoch ist die Gesamtzahl der nach 2000 f\u00fcr jeden Campus in Orange County verliehenen Abschl\u00fcsse? "},{"db_id":"music_1","query":"SELECT f_id FROM files ORDER BY duration DESC LIMIT 1","query_toks":["SELECT","f_id","FROM","files","ORDER","BY","duration","DESC","LIMIT","1"],"query_toks_no_value":["select","f_id","from","files","order","by","duration","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","Id","des","l\u00e4ngsten","Liedes","?"],"question":"Was ist die Id des l\u00e4ngsten Liedes? "},{"db_id":"twitter_1","query":"SELECT email FROM user_profiles WHERE name  =  'Mary'","query_toks":["SELECT","email","FROM","user_profiles","WHERE","name","=","'Mary","'"],"query_toks_no_value":["select","email","from","user_profiles","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"Mary\"",null]]},"question_toks":["Finde","die","E-Mails","der","Nutzerin","namens","``","Mary","''","."],"question":"Finde die E-Mails der Nutzerin namens \"Mary\"."},{"db_id":"college_1","query":"SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'","query_toks":["SELECT","count","(","DISTINCT","class_section",")","FROM","CLASS","WHERE","crs_code","=","'ACCT-211","'"],"query_toks_no_value":["select","count","(","distinct","class_section",")","from","class","where","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,3,true],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"ACCT-211\"",null]]},"question_toks":["Welches","ist","Zahl","der","verschiedenen","Klassenabschnitte",",","die","im","Kurs","ACCT-211","angeboten","werden","?"],"question":"Welches ist Zahl der verschiedenen Klassenabschnitte, die im Kurs ACCT-211 angeboten werden?"},{"db_id":"csu_1","query":"SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)","query_toks":["SELECT","count","(","*",")","FROM","csu_fees","WHERE","campusfee",">","(","SELECT","avg","(","campusfee",")","FROM","csu_fees",")"],"query_toks_no_value":["select","count","(","*",")","from","csu_fees","where","campusfee",">","(","select","avg","(","campusfee",")","from","csu_fees",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,8,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,8,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finde","die","Anzahl","der","Universit\u00e4ten",",","deren","Semesterbeitrag","h\u00f6her","ist","als","der","durchschnittliche","Semesterbeitrag","."],"question":"Finde die Anzahl der Universit\u00e4ten, deren Semesterbeitrag h\u00f6her ist als der durchschnittliche Semesterbeitrag."},{"db_id":"formula_1","query":"SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.driverid",",","T1.surname","FROM","drivers","AS","T1","JOIN","results","AS","T2","ON","T1.driverid","=","T2.driverid","JOIN","races","AS","T3","ON","T2.raceid","=","T3.raceid","GROUP","BY","T1.driverid","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","driverid",",","t1",".","surname","from","drivers","as","t1","join","results","as","t2","on","t1",".","driverid","=","t2",".","driverid","join","races","as","t3","on","t2",".","raceid","=","t3",".","raceid","group","by","t1",".","driverid","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",2],["table_unit",7]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","den","Vor-","und","Nachnamen","des","Fahrers",",","der","die","meisten","Rennen","bestritten","hat","?"],"question":"Finden Sie den Vor- und Nachnamen des Fahrers, der die meisten Rennen bestritten hat? "},{"db_id":"music_1","query":"SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"4:%\" UNION SELECT song_name FROM song WHERE languages  =  \"english\"","query_toks":["SELECT","T2.song_name","FROM","files","AS","T1","JOIN","song","AS","T2","ON","T1.f_id","=","T2.f_id","WHERE","T1.duration","LIKE","``","4",":","%","''","UNION","SELECT","song_name","FROM","song","WHERE","languages","=","``","english","''"],"query_toks_no_value":["select","t2",".","song_name","from","files","as","t1","join","song","as","t2","on","t1",".","f_id","=","t2",".","f_id","where","t1",".","duration","like","value","union","select","song_name","from","song","where","languages","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,16,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},"where":[[false,9,[0,[0,11,false],null],"\"4:%\"",null]]},"question_toks":["Liste","die","Namen","auf","von","allen","Liedern","mit","vier","Minuten","L\u00e4nge","oder","die","in","Englisch","sind","."],"question":"Liste die Namen auf von allen Liedern mit vier Minuten L\u00e4nge oder die in Englisch sind."},{"db_id":"sakila_1","query":"SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'","query_toks":["SELECT","title","FROM","film","WHERE","special_features","LIKE","'","%","Deleted","Scenes","%","'"],"query_toks_no_value":["select","title","from","film","where","special_features","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]]]],"union":null,"where":[[false,9,[0,[0,43,false],null],"\"%Deleted Scenes%\"",null]]},"question_toks":["Welche","Filme","haben","'Gel\u00f6schte","Szenen","'","als","Teilstring","im","Special","Feature","?"],"question":"Welche Filme haben 'Gel\u00f6schte Szenen' als Teilstring im Special Feature? "},{"db_id":"voter_2","query":"SELECT count(*) FROM VOTING_RECORD","query_toks":["SELECT","count","(","*",")","FROM","VOTING_RECORD"],"query_toks_no_value":["select","count","(","*",")","from","voting_record"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Abstimmungsprotokolle","haben","wir","?"],"question":"Wie viele Abstimmungsprotokolle haben wir? "},{"db_id":"college_1","query":"SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biology\"","query_toks":["SELECT","T3.EMP_FNAME",",","T3.EMP_LNAME","FROM","professor","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","JOIN","employee","AS","T3","ON","T1.EMP_NUM","=","T3.EMP_NUM","WHERE","DEPT_NAME","=","``","Biology","''"],"query_toks_no_value":["select","t3",".","emp_fname",",","t3",".","emp_lname","from","professor","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","join","employee","as","t3","on","t1",".","emp_num","=","t3",".","emp_num","where","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,28,false],null],[0,11,false],null]],"table_units":[["table_unit",5],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,18,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Biology\"",null]]},"question_toks":["Wie","lautet","der","Vor-","und","Nachname","des","Professors","im","Fachbereich","Biologie","?"],"question":"Wie lautet der Vor- und Nachname des Professors im Fachbereich Biologie? "},{"db_id":"activity_1","query":"SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.activity_name","FROM","Activity","AS","T1","JOIN","Participates_in","AS","T2","ON","T1.actID","=","T2.actID","GROUP","BY","T1.actID","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","activity_name","from","activity","as","t1","join","participates_in","as","t2","on","t1",".","actid","=","t2",".","actid","group","by","t1",".","actid","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,4,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","den","Namen","der","Aktivit\u00e4t",",","die","die","gr\u00f6\u00dfte","Anzahl","studentischer","Teilnehmer","hat","."],"question":"Finden Sie den Namen der Aktivit\u00e4t, die die gr\u00f6\u00dfte Anzahl studentischer Teilnehmer hat. "},{"db_id":"college_1","query":"SELECT count(*) ,  dept_code FROM student GROUP BY dept_code","query_toks":["SELECT","count","(","*",")",",","dept_code","FROM","student","GROUP","BY","dept_code"],"query_toks_no_value":["select","count","(","*",")",",","dept_code","from","student","group","by","dept_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[[0,41,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,41,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","Anzahl","der","Studenten","f\u00fcr","jede","Abteilung","."],"question":"Finden Sie die Anzahl der Studenten f\u00fcr jede Abteilung. "},{"db_id":"activity_1","query":"SELECT count(*) FROM Faculty","query_toks":["SELECT","count","(","*",")","FROM","Faculty"],"query_toks_no_value":["select","count","(","*",")","from","faculty"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","Gesamtzahl","der","Fakult\u00e4tsangeh\u00f6rigen","?"],"question":"Was ist die Gesamtzahl der Fakult\u00e4tsangeh\u00f6rigen?"},{"db_id":"tracking_orders","query":"SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452","query_toks":["SELECT","T1.date_order_placed","FROM","orders","AS","T1","JOIN","shipments","AS","T2","ON","T1.order_id","=","T2.order_id","WHERE","T2.shipment_tracking_number","=","3452"],"query_toks_no_value":["select","t1",".","date_order_placed","from","orders","as","t1","join","shipments","as","t2","on","t1",".","order_id","=","t2",".","order_id","where","t2",".","shipment_tracking_number","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,21,false],null]],"table_units":[["table_unit",2],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],3452.0,null]]},"question_toks":["Wann","wurde","die","Bestellung","aufgegeben",",","deren","Sendenummer","3452","ist","?","Gib","mir","das","Datum","."],"question":"Wann wurde die Bestellung aufgegeben, deren Sendenummer 3452 ist? Gib mir das Datum."},{"db_id":"tracking_orders","query":"SELECT order_item_id FROM order_items WHERE product_id = 11","query_toks":["SELECT","order_item_id","FROM","order_items","WHERE","product_id","=","11"],"query_toks_no_value":["select","order_item_id","from","order_items","where","product_id","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,16,false],null],11.0,null]]},"question_toks":["Suchen","Sie","die","IDs","aller","Auftragspositionen",",","deren","Produkt-ID","11","ist","."],"question":"Suchen Sie die IDs aller Auftragspositionen, deren Produkt-ID 11 ist. "},{"db_id":"loan_1","query":"SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City'","query_toks":["SELECT","sum","(","no_of_customers",")","FROM","bank","WHERE","city","=","'New","York","City","'"],"query_toks_no_value":["select","sum","(","no_of_customers",")","from","bank","where","city","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"New York City\"",null]]},"question_toks":["Welches","ist","die","Gesamtzahl","der","Kunden",",","die","Banken","in","New","York","City","nutzen","?"],"question":"Welches ist die Gesamtzahl der Kunden, die Banken in New York City nutzen?"},{"db_id":"phone_market","query":"SELECT Carrier ,  COUNT(*) FROM phone GROUP BY Carrier","query_toks":["SELECT","Carrier",",","COUNT","(","*",")","FROM","phone","GROUP","BY","Carrier"],"query_toks_no_value":["select","carrier",",","count","(","*",")","from","phone","group","by","carrier"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","die","verschiedenen","Anbieter","von","Telefonen","zusammen","mit","der","Anzahl","der","Telefone","bei","jedem","Anbieter","an","."],"question":"Zeigen Sie die verschiedenen Anbieter von Telefonen zusammen mit der Anzahl der Telefone bei jedem Anbieter an. "},{"db_id":"voter_2","query":"SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"2192\"","query_toks":["SELECT","DISTINCT","T1.LName","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","PRESIDENT_Vote","EXCEPT","SELECT","DISTINCT","LName","FROM","STUDENT","WHERE","Advisor","=","``","2192","''"],"query_toks_no_value":["select","distinct","t1",".","lname","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","president_vote","except","select","distinct","lname","from","student","where","advisor","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"2192\"",null]]},"from":{"conds":[[false,2,[0,[0,1,false],null],[0,12,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","eindeutigen","Nachnamen","aller","Studenten",",","die","Pr\u00e4sidentschaftsstimmen","haben","und","deren","Berater","nicht","2192","ist","."],"question":"Finden Sie die eindeutigen Nachnamen aller Studenten, die Pr\u00e4sidentschaftsstimmen haben und deren Berater nicht 2192 ist. "},{"db_id":"college_1","query":"SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5","query_toks":["SELECT","count","(","DISTINCT","dept_name",")",",","school_code","FROM","department","GROUP","BY","school_code","HAVING","count","(","DISTINCT","dept_name",")","<","5"],"query_toks_no_value":["select","count","(","distinct","dept_name",")",",","school_code","from","department","group","by","school_code","having","count","(","distinct","dept_name",")","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,13,false]],"having":[[false,4,[0,[3,12,true],null],5.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,12,true],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","unterschiedliche","Abteilungen","gibt","es","in","jeder","Schule",",","die","weniger","als","5","Apartments","hat","?"],"question":"Wie viele unterschiedliche Abteilungen gibt es in jeder Schule, die weniger als 5 Apartments hat?"},{"db_id":"csu_1","query":"SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\"","query_toks":["SELECT","campus","FROM","campuses","WHERE","LOCATION","=","``","Chico","''"],"query_toks_no_value":["select","campus","from","campuses","where","location","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],"\"Chico\"",null]]},"question_toks":["Wie","lauten","die","Namen","aller","Campusse",",","die","sich","in","Chico","befinden","?"],"question":"Wie lauten die Namen aller Campusse, die sich in Chico befinden? "},{"db_id":"activity_1","query":"SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID","query_toks":["SELECT","T1.FacID",",","count","(","*",")","FROM","Faculty","AS","T1","JOIN","Student","AS","T2","ON","T1.FacID","=","T2.advisor","GROUP","BY","T1.FacID"],"query_toks_no_value":["select","t1",".","facid",",","count","(","*",")","from","faculty","as","t1","join","student","as","t2","on","t1",".","facid","=","t2",".","advisor","group","by","t1",".","facid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,13,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Fakult\u00e4ts-ID","und","die","Zahl","der","Studenten",",","die","jede","Fakult\u00e4t","hat","?"],"question":"Welches sind die Fakult\u00e4ts-ID und die Zahl der Studenten, die jede Fakult\u00e4t hat?"},{"db_id":"loan_1","query":"SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.state  =  'New York'","query_toks":["SELECT","sum","(","T2.amount",")","FROM","bank","AS","T1","JOIN","loan","AS","T2","ON","T1.branch_id","=","T2.branch_id","WHERE","T1.state","=","'New","York","'"],"query_toks_no_value":["select","sum","(","t2",".","amount",")","from","bank","as","t1","join","loan","as","t2","on","t1",".","branch_id","=","t2",".","branch_id","where","t1",".","state","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,18,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"New York\"",null]]},"question_toks":["Finden","Sie","den","Gesamtbetrag","der","von","Bankfilialen","im","Bundesstaat","New","York","gew\u00e4hrten","Kredite","."],"question":"Finden Sie den Gesamtbetrag der von Bankfilialen im Bundesstaat New York gew\u00e4hrten Kredite. "},{"db_id":"music_1","query":"SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT artist_name FROM song WHERE languages  =  \"english\"","query_toks":["SELECT","artist_name","FROM","artist","WHERE","country","=","``","UK","''","INTERSECT","SELECT","artist_name","FROM","song","WHERE","languages","=","``","english","''"],"query_toks_no_value":["select","artist_name","from","artist","where","country","=","value","intersect","select","artist_name","from","song","where","languages","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"UK\"",null]]},"question_toks":["Wie","lauten","die","Namen","der","K\u00fcnstler",",","die","aus","dem","Vereinigten","K\u00f6nigreich","stammen","und","Lieder","auf","Englisch","gesungen","haben","?"],"question":"Wie lauten die Namen der K\u00fcnstler, die aus dem Vereinigten K\u00f6nigreich stammen und Lieder auf Englisch gesungen haben? "},{"db_id":"activity_1","query":"SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'","query_toks":["SELECT","DISTINCT","T1.lname","FROM","Faculty","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.facID","=","T2.facID","JOIN","activity","AS","T3","ON","T2.actid","=","T2.actid","WHERE","T3.activity_name","=","'Canoeing","'","OR","T3.activity_name","=","'Kayaking","'"],"query_toks_no_value":["select","distinct","t1",".","lname","from","faculty","as","t1","join","faculty_participates_in","as","t2","on","t1",".","facid","=","t2",".","facid","join","activity","as","t3","on","t2",".","actid","=","t2",".","actid","where","t3",".","activity_name","=","value","or","t3",".","activity_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,5,false],null]],"table_units":[["table_unit",4],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Canoeing\"",null],"or",[false,2,[0,[0,2,false],null],"\"Kayaking\"",null]]},"question_toks":["Finden","Sie","die","Vornamen","der","Fakult\u00e4tsmitglieder",",","die","Kanu-","oder","Kajak","fahren","."],"question":"Finden Sie die Vornamen der Fakult\u00e4tsmitglieder, die Kanu- oder Kajak fahren. "},{"db_id":"activity_1","query":"SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1","query_toks":["SELECT","rank","FROM","Faculty","GROUP","BY","rank","ORDER","BY","count","(","*",")","ASC","LIMIT","1"],"query_toks_no_value":["select","rank","from","faculty","group","by","rank","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,18,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","den","Fakult\u00e4tsrang","mit","den","wenigsten","Mitgliedern","."],"question":"Finden Sie den Fakult\u00e4tsrang mit den wenigsten Mitgliedern. "},{"db_id":"sakila_1","query":"SELECT sum(amount) FROM payment","query_toks":["SELECT","sum","(","amount",")","FROM","payment"],"query_toks_no_value":["select","sum","(","amount",")","from","payment"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",12]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,65,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","die","Summe","aller","Zahlungsbetr\u00e4ge","zur\u00fcck","."],"question":"Geben Sie die Summe aller Zahlungsbetr\u00e4ge zur\u00fcck. "},{"db_id":"music_1","query":"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1","query_toks":["SELECT","T1.artist_name",",","T1.country","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T2.resolution",">","900","GROUP","BY","T2.artist_name","HAVING","count","(","*",")",">","=","1"],"query_toks_no_value":["select","t1",".","artist_name",",","t1",".","country","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t2",".","resolution",">","value","group","by","t2",".","artist_name","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[[0,14,false]],"having":[[false,5,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,3,[0,[0,21,false],null],900.0,null]]},"question_toks":["Finde","den","Namen","und","das","Herkunftsland","f\u00fcr","alle","K\u00fcnstler",",","die","mindestens","ein","Lied","mit","der","Aufl\u00f6sung","\u00fcber","900","ver\u00f6ffentlicht","haben","."],"question":"Finde den Namen und das Herkunftsland f\u00fcr alle K\u00fcnstler, die mindestens ein Lied mit der Aufl\u00f6sung \u00fcber 900 ver\u00f6ffentlicht haben."},{"db_id":"formula_1","query":"SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 )","query_toks":["SELECT","count","(","DISTINCT","driverId",")","FROM","results","WHERE","raceId","NOT","IN","(","SELECT","raceId","FROM","races","WHERE","YEAR","!","=","2009",")"],"query_toks_no_value":["select","count","(","distinct","driverid",")","from","results","where","raceid","not","in","(","select","raceid","from","races","where","year","!","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,45,true],null]]]],"union":null,"where":[[true,8,[0,[0,44,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,7,[0,[0,11,false],null],2009.0,null]]},null]]},"question_toks":["Wir","viele","Fahrer","sind","in","2009","kein","Rennen","gefahren","?"],"question":"Wir viele Fahrer sind in 2009 kein Rennen gefahren?"},{"db_id":"debate","query":"SELECT DISTINCT Venue FROM debate","query_toks":["SELECT","DISTINCT","Venue","FROM","debate"],"query_toks_no_value":["select","distinct","venue","from","debate"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","einzelnen","Veranstaltungsorte","von","Debatten","."],"question":"Zeige die einzelnen Veranstaltungsorte von Debatten."},{"db_id":"college_1","query":"SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' ORDER BY emp_dob","query_toks":["SELECT","emp_fname","FROM","employee","WHERE","emp_jobcode","=","'PROF","'","ORDER","BY","emp_dob"],"query_toks_no_value":["select","emp_fname","from","employee","where","emp_jobcode","=","value","order","by","emp_dob"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,23,false],null]]],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"PROF\"",null]]},"question_toks":["Welches","sind","die","Namen","aller","Angestellten",",","die","Professoren","sind",",","geordnet","nach","Geburtsdatum","?"],"question":"Welches sind die Namen aller Angestellten, die Professoren sind, geordnet nach Geburtsdatum?"},{"db_id":"formula_1","query":"SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\"","query_toks":["SELECT","circuitid",",","LOCATION","FROM","circuits","WHERE","country","=","``","France","''","OR","country","=","``","Belgium","''"],"query_toks_no_value":["select","circuitid",",","location","from","circuits","where","country","=","value","or","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"France\"",null],"or",[false,2,[0,[0,5,false],null],"\"Belgium\"",null]]},"question_toks":["Finden","Sie","die","ID","und","den","Standort","von","Rennstrecken",",","die","zu","Frankreich","oder","Belgien","geh\u00f6ren","?"],"question":"Finden Sie die ID und den Standort von Rennstrecken, die zu Frankreich oder Belgien geh\u00f6ren? "},{"db_id":"entrepreneur","query":"SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested","query_toks":["SELECT","T2.Name",",","T1.Company","FROM","entrepreneur","AS","T1","JOIN","people","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T1.Money_Requested"],"query_toks_no_value":["select","t2",".","name",",","t1",".","company","from","entrepreneur","as","t1","join","people","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t1",".","money_requested"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,4,false],null]]],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Namen","von","Unternehmern","und","ihren","zugeh\u00f6rigen","Investoren",",","absteigend","geordnet","nach","der","angefragten","Geldsumme","?"],"question":"Welches sind die Namen von Unternehmern und ihren zugeh\u00f6rigen Investoren, absteigend geordnet nach der angefragten Geldsumme?"},{"db_id":"loan_1","query":"SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1","query_toks":["SELECT","T1.cust_name","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id","GROUP","BY","T1.cust_name","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","cust_name","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id","group","by","t1",".","cust_name","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,7,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","den","Namen","von","Kunden",",","die","mehr","als","einen","Kredit","haben","."],"question":"Finden Sie den Namen von Kunden, die mehr als einen Kredit haben. "},{"db_id":"music_1","query":"SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english')","query_toks":["SELECT","song_name","FROM","song","WHERE","rating","<","(","SELECT","min","(","rating",")","FROM","song","WHERE","languages","=","'english","'",")"],"query_toks_no_value":["select","song_name","from","song","where","rating","<","(","select","min","(","rating",")","from","song","where","languages","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,4,[0,[0,18,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,18,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},null]]},"question_toks":["Wie","lauten","die","Namen","der","Lieder",",","deren","Bewertung","unter","der","Bewertung","aller","Lieder","in","englischer","Sprache","liegt","?"],"question":"Wie lauten die Namen der Lieder, deren Bewertung unter der Bewertung aller Lieder in englischer Sprache liegt? "},{"db_id":"formula_1","query":"SELECT count(*) ,  nationality FROM constructors GROUP BY nationality","query_toks":["SELECT","count","(","*",")",",","nationality","FROM","constructors","GROUP","BY","nationality"],"query_toks_no_value":["select","count","(","*",")",",","nationality","from","constructors","group","by","nationality"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,34,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,34,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Zahlen","der","Konstruktoren","f\u00fcr","unterschiedliche","Nationalit\u00e4ten","?"],"question":"Was sind die Zahlen der Konstruktoren f\u00fcr unterschiedliche Nationalit\u00e4ten?"},{"db_id":"twitter_1","query":"SELECT name ,  email FROM user_profiles WHERE followers  >  1000","query_toks":["SELECT","name",",","email","FROM","user_profiles","WHERE","followers",">","1000"],"query_toks_no_value":["select","name",",","email","from","user_profiles","where","followers",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],1000.0,null]]},"question_toks":["Finden","Sie","den","Namen","und","die","E-Mail","der","Benutzer",",","die","mehr","als","1000","Anh\u00e4nger","haben","."],"question":"Finden Sie den Namen und die E-Mail der Benutzer, die mehr als 1000 Anh\u00e4nger haben. "},{"db_id":"activity_1","query":"SELECT rank ,  count(*) FROM Faculty GROUP BY rank","query_toks":["SELECT","rank",",","count","(","*",")","FROM","Faculty","GROUP","BY","rank"],"query_toks_no_value":["select","rank",",","count","(","*",")","from","faculty","group","by","rank"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","f\u00fcr","jeden","Fakult\u00e4tsrang","die","Zahl","der","Mitglieder",",","die","ihn","haben","."],"question":"Zeige f\u00fcr jeden Fakult\u00e4tsrang die Zahl der Mitglieder, die ihn haben."},{"db_id":"college_1","query":"SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'","query_toks":["SELECT","count","(","DISTINCT","class_section",")","FROM","CLASS","WHERE","crs_code","=","'ACCT-211","'"],"query_toks_no_value":["select","count","(","distinct","class_section",")","from","class","where","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,3,true],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"ACCT-211\"",null]]},"question_toks":["Wie","viele","Abschnitte","hat","der","Kurs","ACCT-211","?"],"question":"Wie viele Abschnitte hat der Kurs ACCT-211? "},{"db_id":"debate","query":"SELECT Name FROM  people WHERE Age  =  35 OR Age  =  36","query_toks":["SELECT","Name","FROM","people","WHERE","Age","=","35","OR","Age","=","36"],"query_toks_no_value":["select","name","from","people","where","age","=","value","or","age","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],35.0,null],"or",[false,2,[0,[0,5,false],null],36.0,null]]},"question_toks":["Zeige","die","Namen","von","Leuten","des","Alters","35","oder","36","."],"question":"Zeige die Namen von Leuten des Alters 35 oder 36."},{"db_id":"college_1","query":"SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'","query_toks":["SELECT","T2.dept_name","FROM","course","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","WHERE","T1.crs_description","LIKE","'","%","Statistics","%","'"],"query_toks_no_value":["select","t2",".","dept_name","from","course","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","where","t1",".","crs_description","like","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,11,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,9,[0,[0,9,false],null],"\"%Statistics%\"",null]]},"question_toks":["Finde","den","Namen","der","Abteilung",",","die","die","Klasse","anbietet",",","deren","Beschreibung","das","Wort","``","Statistik","''","hat","."],"question":"Finde den Namen der Abteilung, die die Klasse anbietet, deren Beschreibung das Wort \"Statistik\" hat."},{"db_id":"cinema","query":"SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id","query_toks":["SELECT","T2.title",",","max","(","T1.price",")","FROM","schedule","AS","T1","JOIN","film","AS","T2","ON","T1.film_id","=","T2.film_id","GROUP","BY","T1.film_id"],"query_toks_no_value":["select","t2",".","title",",","max","(","t1",".","price",")","from","schedule","as","t1","join","film","as","t2","on","t1",".","film_id","=","t2",".","film_id","group","by","t1",".","film_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,14,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,14,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[1,[0,[0,17,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","der","Titel","und","H\u00f6chstpreis","jedes","Films","?"],"question":"Was sind der Titel und H\u00f6chstpreis jedes Films?"},{"db_id":"store_product","query":"SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3","query_toks":["SELECT","max_page_size","FROM","product","GROUP","BY","max_page_size","HAVING","count","(","*",")",">","3"],"query_toks_no_value":["select","max_page_size","from","product","group","by","max_page_size","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[[false,3,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","maximale","Seitengr\u00f6\u00dfe","f\u00fcr","alles",",","was","mehr","als","3","Produkte","gelistet","hat","?"],"question":"Was ist die maximale Seitengr\u00f6\u00dfe f\u00fcr alles, was mehr als 3 Produkte gelistet hat?"},{"db_id":"music_1","query":"SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1","query_toks":["SELECT","song_name",",","releasedate","FROM","song","ORDER","BY","releasedate","DESC","LIMIT","1"],"query_toks_no_value":["select","song_name",",","releasedate","from","song","order","by","releasedate","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,13,false],null]],[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Name","des","Liedes",",","das","im","letzten","Jahr","ver\u00f6ffentlicht","wurde","?"],"question":"Wie lautet der Name des Liedes, das im letzten Jahr ver\u00f6ffentlicht wurde? "},{"db_id":"loan_1","query":"SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1","query_toks":["SELECT","state","FROM","bank","GROUP","BY","state","ORDER","BY","sum","(","no_of_customers",")","DESC","LIMIT","1"],"query_toks_no_value":["select","state","from","bank","group","by","state","order","by","sum","(","no_of_customers",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,3,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","den","Staat",",","der","die","meisten","Kunden","hat","."],"question":"Finden Sie den Staat, der die meisten Kunden hat."},{"db_id":"music_1","query":"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3","query_toks":["SELECT","T1.artist_name",",","T1.country","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","ORDER","BY","T2.rating","DESC","LIMIT","3"],"query_toks_no_value":["select","t1",".","artist_name",",","t1",".","country","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","order","by","t2",".","rating","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[0,18,false],null]]],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","S\u00e4ngerinnen","und","S\u00e4nger",",","die","die","drei","am","h\u00f6chsten","bewerteten","Lieder","gesungen","haben",",","und","aus","welchen","L\u00e4ndern","stammen","sie","?"],"question":"Wie lauten die Namen der S\u00e4ngerinnen und S\u00e4nger, die die drei am h\u00f6chsten bewerteten Lieder gesungen haben, und aus welchen L\u00e4ndern stammen sie?"},{"db_id":"activity_1","query":"SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.activity_name","FROM","Activity","AS","T1","JOIN","Participates_in","AS","T2","ON","T1.actID","=","T2.actID","GROUP","BY","T1.actID","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","activity_name","from","activity","as","t1","join","participates_in","as","t2","on","t1",".","actid","=","t2",".","actid","group","by","t1",".","actid","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,4,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","ist","der","Name","der","Aktivit\u00e4t","mit","den","meisten","Studenten","?"],"question":"Wie ist der Name der Aktivit\u00e4t mit den meisten Studenten?"},{"db_id":"entrepreneur","query":"SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Investor","FROM","entrepreneur","GROUP","BY","Investor","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","investor","from","entrepreneur","group","by","investor","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","ist","der","Investor",",","der","in","die","meisten","Unternehmer","investiert","hat","?"],"question":"Welcher ist der Investor, der in die meisten Unternehmer investiert hat? "},{"db_id":"store_product","query":"SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","t3.headquartered_city","FROM","store","AS","t1","JOIN","store_district","AS","t2","ON","t1.store_id","=","t2.store_id","JOIN","district","AS","t3","ON","t2.district_id","=","t3.district_id","GROUP","BY","t3.headquartered_city","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t3",".","headquartered_city","from","store","as","t1","join","store_district","as","t2","on","t1",".","store_id","=","t2",".","store_id","join","district","as","t3","on","t2",".","district_id","=","t3",".","district_id","group","by","t3",".","headquartered_city","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,21,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[[0,16,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","die","Stadt","mit","den","meisten","Flagship-Stores","?"],"question":"Welches ist die Stadt mit den meisten Flagship-Stores? "},{"db_id":"formula_1","query":"SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20","query_toks":["SELECT","DISTINCT","T1.forename","FROM","drivers","AS","T1","JOIN","driverstandings","AS","T2","ON","T1.driverid","=","T2.driverid","WHERE","T2.position","=","1","AND","T2.wins","=","1","AND","T2.points",">","20"],"query_toks_no_value":["select","distinct","t1",".","forename","from","drivers","as","t1","join","driverstandings","as","t2","on","t1",".","driverid","=","t2",".","driverid","where","t2",".","position","=","value","and","t2",".","wins","=","value","and","t2",".","points",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,63,false],null]],"table_units":[["table_unit",2],["table_unit",8]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,65,false],null],1.0,null],"and",[false,2,[0,[0,67,false],null],1.0,null],"and",[false,3,[0,[0,64,false],null],20.0,null]]},"question_toks":["Finde","alle","Vornamen","unterschiedlicher","Fahrer",",","auf","Position","eins","als","stehender","Fahrer","gewonnen","haben","und","mehr","als","20","Punkte","hatten","."],"question":"Finde alle Vornamen unterschiedlicher Fahrer, auf Position eins als stehender Fahrer gewonnen haben und mehr als 20 Punkte hatten."},{"db_id":"music_1","query":"SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)","query_toks":["SELECT","f_id","FROM","song","WHERE","resolution",">","(","SELECT","max","(","resolution",")","FROM","song","WHERE","rating","<","8",")"],"query_toks_no_value":["select","f_id","from","song","where","resolution",">","(","select","max","(","resolution",")","from","song","where","rating","<","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,3,[0,[0,21,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,21,false],null]]]],"union":null,"where":[[false,4,[0,[0,18,false],null],8.0,null]]},null]]},"question_toks":["Was","sind","die","IDs","der","Lieder",",","deren","Aufl\u00f6sung","h\u00f6her","ist","als","die","Aufl\u00f6sung","von","jedweden","Liedern","mit","einer","Bewertung","von","unter","acht","?"],"question":"Was sind die IDs der Lieder, deren Aufl\u00f6sung h\u00f6her ist als die Aufl\u00f6sung von jedweden Liedern mit einer Bewertung von unter acht?"},{"db_id":"sakila_1","query":"SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.city",",","count","(","*",")",",","T1.city_id","FROM","address","AS","T1","JOIN","city","AS","T2","ON","T1.city_id","=","T2.city_id","GROUP","BY","T1.city_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","city",",","count","(","*",")",",","t1",".","city_id","from","address","as","t1","join","city","as","t2","on","t1",".","city_id","=","t2",".","city_id","group","by","t1",".","city_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,17,false],null]],[3,[0,[0,0,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Stadt","hat","die","meisten","Adressen","?","Liste","den","Stadtnamen","auf",",","die","Anzahl","der","Adressen","und","die","Identifikationsnummer","der","Stadt","."],"question":"Welche Stadt hat die meisten Adressen? Liste den Stadtnamen auf, die Anzahl der Adressen und die Identifikationsnummer der Stadt."},{"db_id":"store_product","query":"SELECT product FROM product WHERE product LIKE \"%Scanner%\"","query_toks":["SELECT","product","FROM","product","WHERE","product","LIKE","``","%","Scanner","%","''"],"query_toks_no_value":["select","product","from","product","where","product","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,9,[0,[0,2,false],null],"\"%Scanner%\"",null]]},"question_toks":["Welches","sind","all","die","Produkte",",","deren","Name","die","Unterzeichenfolge","``","Scanner","''","beinhaltet","?"],"question":"Welches sind all die Produkte, deren Name die Unterzeichenfolge \"Scanner\" beinhaltet?"},{"db_id":"store_product","query":"SELECT avg(pages_per_minute_color) FROM product","query_toks":["SELECT","avg","(","pages_per_minute_color",")","FROM","product"],"query_toks_no_value":["select","avg","(","pages_per_minute_color",")","from","product"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","die","durchschnittliche","Farbe","f\u00fcr","Seiten","pro","Minute","?"],"question":"Welches ist die durchschnittliche Farbe f\u00fcr Seiten pro Minute?          "},{"db_id":"voter_2","query":"SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\"","query_toks":["SELECT","avg","(","Age",")","FROM","STUDENT","WHERE","Sex","=","``","F","''"],"query_toks_no_value":["select","avg","(","age",")","from","student","where","sex","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"F\"",null]]},"question_toks":["Was","ist","das","Durchschnittsalter","weiblicher","(","Geschlecht","ist","W",")","Studierenden","?"],"question":"Was ist das Durchschnittsalter weiblicher (Geschlecht ist W) Studierenden?"},{"db_id":"cinema","query":"SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2","query_toks":["SELECT","LOCATION","FROM","cinema","WHERE","capacity",">","300","GROUP","BY","LOCATION","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","location","from","cinema","where","capacity",">","value","group","by","location","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,12,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],300.0,null]]},"question_toks":["Zeige","alle","Orte","mit","wenigstens","zwei","Kinos","mit","einer","Kapazit\u00e4t","\u00fcber","300","."],"question":"Zeige alle Orte mit wenigstens zwei Kinos mit einer Kapazit\u00e4t \u00fcber 300."},{"db_id":"store_product","query":"SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000","query_toks":["SELECT","district_name","FROM","district","WHERE","city_area",">","10","OR","City_Population",">","100000"],"query_toks_no_value":["select","district_name","from","district","where","city_area",">","value","or","city_population",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],10.0,null],"or",[false,3,[0,[0,17,false],null],100000.0,null]]},"question_toks":["Was","sind","die","Namen","aller","Bezirke","mit","einer","Stadtfl\u00e4che","gr\u00f6\u00dfer","als","10","oder","wo","mehr","als","100000","Menschen","leben","?"],"question":"Was sind die Namen aller Bezirke mit einer Stadtfl\u00e4che gr\u00f6\u00dfer als 10 oder wo mehr als 100000 Menschen leben?"},{"db_id":"cinema","query":"SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\"","query_toks":["SELECT","count","(","*",")","FROM","film","WHERE","title","LIKE","``","%","Dummy","%","''"],"query_toks_no_value":["select","count","(","*",")","from","film","where","title","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,9,[0,[0,4,false],null],"\"%Dummy%\"",null]]},"question_toks":["Z\u00e4hle","die","Filme",",","deren","Titel","das","Wort","``","Dummy","''","enth\u00e4lt","."],"question":"Z\u00e4hle die Filme, deren Titel das Wort \"Dummy\" enth\u00e4lt."},{"db_id":"csu_1","query":"SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND T2.year  =  1996","query_toks":["SELECT","campusfee","FROM","campuses","AS","T1","JOIN","csu_fees","AS","T2","ON","T1.id","=","t2.campus","WHERE","t1.campus","=","``","San","Francisco","State","University","''","AND","T2.year","=","1996"],"query_toks_no_value":["select","campusfee","from","campuses","as","t1","join","csu_fees","as","t2","on","t1",".","id","=","t2",".","campus","where","t1",".","campus","=","value","and","t2",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"San Francisco State University\"",null],"and",[false,2,[0,[0,7,false],null],1996.0,null]]},"question_toks":["Wie","hoch","ist","die","Campusgeb\u00fchr","f\u00fcr","die","San","Francisco","State","University","im","Jahr","1996","?"],"question":"Wie hoch ist die Campusgeb\u00fchr f\u00fcr die San Francisco State University im Jahr 1996? "},{"db_id":"sakila_1","query":"SELECT count(*) FROM inventory WHERE store_id  =  1","query_toks":["SELECT","count","(","*",")","FROM","inventory","WHERE","store_id","=","1"],"query_toks_no_value":["select","count","(","*",")","from","inventory","where","store_id","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",10]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,56,false],null],1.0,null]]},"question_toks":["Z\u00e4hlen","Sie","die","Anzahl","der","Artikel",",","die","Lager","1","auf","Lager","hat","."],"question":"Z\u00e4hlen Sie die Anzahl der Artikel, die Lager 1 auf Lager hat. "},{"db_id":"entrepreneur","query":"SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1","query_toks":["SELECT","T1.Company","FROM","entrepreneur","AS","T1","JOIN","people","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T2.Height","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","company","from","entrepreneur","as","t1","join","people","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t2",".","height","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,8,false],null]]],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","das","Unternehmen","des","gr\u00f6\u00dften","Unternehmers","."],"question":"Zeigen Sie das Unternehmen des gr\u00f6\u00dften Unternehmers. "},{"db_id":"debate","query":"SELECT Date FROM debate WHERE Num_of_Audience  >  150","query_toks":["SELECT","Date","FROM","debate","WHERE","Num_of_Audience",">","150"],"query_toks_no_value":["select","date","from","debate","where","num_of_audience",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],150.0,null]]},"question_toks":["Liste","die","Daten","von","Debatten","auf","mit","einer","Publikumszahl","gr\u00f6\u00dfer","als","150","."],"question":"Liste die Daten von Debatten auf mit einer Publikumszahl gr\u00f6\u00dfer als 150."},{"db_id":"music_1","query":"SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\" AND T2.languages  =  \"bangla\"","query_toks":["SELECT","T1.country","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T1.gender","=","``","Female","''","AND","T2.languages","=","``","bangla","''"],"query_toks_no_value":["select","t1",".","country","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t1",".","gender","=","value","and","t2",".","languages","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"Female\"",null],"and",[false,2,[0,[0,19,false],null],"\"bangla\"",null]]},"question_toks":["Welches","ist","das","Herkunftsland","der","K\u00fcnstlerin",",","die","weiblich","ist","und","ein","Lied","in","Bangla","produziert","hat","?"],"question":"Welches ist das Herkunftsland der K\u00fcnstlerin, die weiblich ist und ein Lied in Bangla produziert hat? "},{"db_id":"voter_2","query":"SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"8741\"","query_toks":["SELECT","DISTINCT","T1.LName","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","PRESIDENT_Vote","INTERSECT","SELECT","DISTINCT","LName","FROM","STUDENT","WHERE","Advisor","=","``","8741","''"],"query_toks_no_value":["select","distinct","t1",".","lname","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","president_vote","intersect","select","distinct","lname","from","student","where","advisor","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,12,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"8741\"",null]]},"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","eindeutigen","Nachnamen","aller","Studenten",",","die","Pr\u00e4sidentenstimmen","haben","und","deren","Berater","8741","ist","."],"question":"Finden Sie die eindeutigen Nachnamen aller Studenten, die Pr\u00e4sidentenstimmen haben und deren Berater 8741 ist. "},{"db_id":"swimming","query":"SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1","query_toks":["SELECT","name","FROM","stadium","ORDER","BY","capacity","DESC","LIMIT","1"],"query_toks_no_value":["select","name","from","stadium","order","by","capacity","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,14,false],null]]],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","des","Stadiums",",","das","die","h\u00f6chste","Kapazit\u00e4t","hat","."],"question":"Finde den Namen des Stadiums, das die h\u00f6chste Kapazit\u00e4t hat."},{"db_id":"college_1","query":"SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5","query_toks":["SELECT","stu_gpa",",","stu_phone",",","stu_fname","FROM","student","ORDER","BY","stu_gpa","DESC","LIMIT","5"],"query_toks_no_value":["select","stu_gpa",",","stu_phone",",","stu_fname","from","student","order","by","stu_gpa","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":5,"orderBy":["desc",[[0,[0,39,false],null]]],"select":[false,[[0,[0,[0,39,false],null]],[0,[0,[0,42,false],null]],[0,[0,[0,34,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","ist","der","Vorname",",","Notendurchschnitt","und","die","Telefonnummer","der","Studenten","mit","den","f\u00fcnf","besten","Notendurchschnitten","?"],"question":"Wie ist der Vorname, Notendurchschnitt und die Telefonnummer der Studenten mit den f\u00fcnf besten Notendurchschnitten?"},{"db_id":"college_1","query":"SELECT count(DISTINCT crs_code) FROM CLASS","query_toks":["SELECT","count","(","DISTINCT","crs_code",")","FROM","CLASS"],"query_toks_no_value":["select","count","(","distinct","crs_code",")","from","class"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,2,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Kurse","werden","angeboten","?"],"question":"Wie viele Kurse werden angeboten?"},{"db_id":"formula_1","query":"SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Australian Grand Prix\" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Chinese Grand Prix\"","query_toks":["SELECT","T2.driverid",",","T3.forename","FROM","races","AS","T1","JOIN","results","AS","T2","ON","T1.raceid","=","T2.raceid","JOIN","drivers","AS","T3","ON","T2.driverid","=","T3.driverid","WHERE","T1.name","=","``","Australian","Grand","Prix","''","INTERSECT","SELECT","T2.driverid",",","T3.forename","FROM","races","AS","T1","JOIN","results","AS","T2","ON","T1.raceid","=","T2.raceid","JOIN","drivers","AS","T3","ON","T2.driverid","=","T3.driverid","WHERE","T1.name","=","``","Chinese","Grand","Prix","''"],"query_toks_no_value":["select","t2",".","driverid",",","t3",".","forename","from","races","as","t1","join","results","as","t2","on","t1",".","raceid","=","t2",".","raceid","join","drivers","as","t3","on","t2",".","driverid","=","t3",".","driverid","where","t1",".","name","=","value","intersect","select","t2",".","driverid",",","t3",".","forename","from","races","as","t1","join","results","as","t2","on","t1",".","raceid","=","t2",".","raceid","join","drivers","as","t3","on","t2",".","driverid","=","t3",".","driverid","where","t1",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,44,false],null]],"table_units":[["table_unit",1],["table_unit",7]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,44,false],null]],"table_units":[["table_unit",1],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,45,false],null]],[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"Chinese Grand Prix\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,45,false],null]],[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"Australian Grand Prix\"",null]]},"question_toks":["Welches","ist","die","ID","und","der","Vorname","aller","Fahrer",",","die","am","Gro\u00dfen","Preis","von","Australien","und","Gro\u00dfen","Preis","von","China","teilnahmen","?"],"question":"Welches ist die ID und der Vorname aller Fahrer, die am Gro\u00dfen Preis von Australien und Gro\u00dfen Preis von China teilnahmen?"},{"db_id":"sakila_1","query":"SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  'AIRPORT POLLOCK'","query_toks":["SELECT","T2.name","FROM","film","AS","T1","JOIN","LANGUAGE","AS","T2","ON","T1.language_id","=","T2.language_id","WHERE","T1.title","=","'AIRPORT","POLLOCK","'"],"query_toks_no_value":["select","t2",".","name","from","film","as","t1","join","language","as","t2","on","t1",".","language_id","=","t2",".","language_id","where","t1",".","title","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,36,false],null],[0,58,false],null]],"table_units":[["table_unit",6],["table_unit",11]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,59,false],null]]]],"union":null,"where":[[false,2,[0,[0,33,false],null],"\"AIRPORT POLLOCK\"",null]]},"question_toks":["Welche","Sprache","wird","in","dem","Film","AIRPORT","POLLOCK","benutzt","?","F\u00fchre","den","Sprachnamen","an","."],"question":"Welche Sprache wird in dem Film AIRPORT POLLOCK benutzt? F\u00fchre den Sprachnamen an."},{"db_id":"activity_1","query":"SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.activity_name","FROM","Activity","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.actID","=","T2.actID","GROUP","BY","T1.actID","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","activity_name","from","activity","as","t1","join","faculty_participates_in","as","t2","on","t1",".","actid","=","t2",".","actid","group","by","t1",".","actid","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Name","der","Aktivit\u00e4t",",","an","der","sich","die","meisten","Fakult\u00e4tsangeh\u00f6rigen","beteiligen","?"],"question":"Wie lautet der Name der Aktivit\u00e4t, an der sich die meisten Fakult\u00e4tsangeh\u00f6rigen beteiligen?"},{"db_id":"activity_1","query":"SELECT count(*) FROM Activity","query_toks":["SELECT","count","(","*",")","FROM","Activity"],"query_toks_no_value":["select","count","(","*",")","from","activity"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Suche","die","Anzahl","der","verf\u00fcgbaren","Aktivit\u00e4ten","."],"question":"Suche die Anzahl der verf\u00fcgbaren Aktivit\u00e4ten."},{"db_id":"game_injury","query":"SELECT average_attendance FROM stadium WHERE capacity_percentage  >  100","query_toks":["SELECT","average_attendance","FROM","stadium","WHERE","capacity_percentage",">","100"],"query_toks_no_value":["select","average_attendance","from","stadium","where","capacity_percentage",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,3,[0,[0,6,false],null],100.0,null]]},"question_toks":["Welches","ist","die","durchschnittliche","Besucherzahl","bei","Stadien","mit","einer","prozentualen","Kapazit\u00e4t","h\u00f6her","als","100","%","?"],"question":"Welches ist die durchschnittliche Besucherzahl bei Stadien mit einer prozentualen Kapazit\u00e4t h\u00f6her als 100 %?"},{"db_id":"college_1","query":"SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code","query_toks":["SELECT","T1.stu_fname",",","T1.stu_lname",",","T4.crs_description","FROM","student","AS","T1","JOIN","enroll","AS","T2","ON","T1.stu_num","=","T2.stu_num","JOIN","CLASS","AS","T3","ON","T2.class_code","=","T3.class_code","JOIN","course","AS","T4","ON","T3.crs_code","=","T4.crs_code"],"query_toks_no_value":["select","t1",".","stu_fname",",","t1",".","stu_lname",",","t4",".","crs_description","from","student","as","t1","join","enroll","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","join","class","as","t3","on","t2",".","class_code","=","t3",".","class_code","join","course","as","t4","on","t3",".","crs_code","=","t4",".","crs_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,25,false],null]],"table_units":[["table_unit",6],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,33,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Namen","aller","Studenten",",","die","einen","Kurs","und","die","zugeh\u00f6rigen","Kursbeschreibungen","nahmen","?"],"question":"Welches sind die Namen aller Studenten, die einen Kurs und die zugeh\u00f6rigen Kursbeschreibungen nahmen?"},{"db_id":"entrepreneur","query":"SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"Rachel Elnaugh\"","query_toks":["SELECT","T2.Name","FROM","entrepreneur","AS","T1","JOIN","people","AS","T2","ON","T1.People_ID","=","T2.People_ID","WHERE","T1.Investor","!","=","``","Rachel","Elnaugh","''"],"query_toks_no_value":["select","t2",".","name","from","entrepreneur","as","t1","join","people","as","t2","on","t1",".","people_id","=","t2",".","people_id","where","t1",".","investor","!","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,7,[0,[0,5,false],null],"\"Rachel Elnaugh\"",null]]},"question_toks":["Gib","die","Namen","von","Unternehmern","wieder",",","die","nicht","den","Investor","Rachel","Elnaugh","haben","."],"question":"Gib die Namen von Unternehmern wieder, die nicht den Investor Rachel Elnaugh haben."},{"db_id":"sakila_1","query":"SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1","query_toks":["SELECT","T2.address","FROM","store","AS","T1","JOIN","address","AS","T2","ON","T1.address_id","=","T2.address_id","WHERE","store_id","=","1"],"query_toks_no_value":["select","t2",".","address","from","store","as","t1","join","address","as","t2","on","t1",".","address_id","=","t2",".","address_id","where","store_id","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,88,false],null],[0,5,false],null]],"table_units":[["table_unit",15],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,2,[0,[0,86,false],null],1.0,null]]},"question_toks":["Gib","die","Adresse","von","Gesch\u00e4ft","1","wieder","."],"question":"Gib die Adresse von Gesch\u00e4ft 1 wieder."},{"db_id":"voter_2","query":"SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2","query_toks":["SELECT","Advisor","FROM","STUDENT","GROUP","BY","Advisor","HAVING","count","(","*",")",">","2"],"query_toks_no_value":["select","advisor","from","student","group","by","advisor","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,7,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Berater","beraten","mehr","als","zwei","Studierende","?"],"question":"Welche Berater beraten mehr als zwei Studierende?"},{"db_id":"csu_1","query":"SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)","query_toks":["SELECT","count","(","*",")","FROM","csu_fees","WHERE","campusfee",">","(","SELECT","avg","(","campusfee",")","FROM","csu_fees",")"],"query_toks_no_value":["select","count","(","*",")","from","csu_fees","where","campusfee",">","(","select","avg","(","campusfee",")","from","csu_fees",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,8,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,8,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","viele","Universit\u00e4ten","haben","einen","Semesterbeitrag","\u00fcber","dem","Durchschnitt","?"],"question":"Wie viele Universit\u00e4ten haben einen  Semesterbeitrag \u00fcber dem Durchschnitt?"},{"db_id":"activity_1","query":"SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.fname",",","T1.lname","FROM","Faculty","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.facID","=","T2.facID","GROUP","BY","T1.FacID","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","lname","from","faculty","as","t1","join","faculty_participates_in","as","t2","on","t1",".","facid","=","t2",".","facid","group","by","t1",".","facid","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,5,false],null]],"table_units":[["table_unit",4],["table_unit",2]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,17,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","der","Vor-","und","Zunahme","der","Fakult\u00e4t",",","die","an","den","meisten","Aktivit\u00e4ten","teilnimmt","?"],"question":"Welches ist der Vor- und Zunahme der Fakult\u00e4t, die an den meisten Aktivit\u00e4ten teilnimmt?"},{"db_id":"formula_1","query":"SELECT name FROM races WHERE YEAR = 2017","query_toks":["SELECT","name","FROM","races","WHERE","YEAR","=","2017"],"query_toks_no_value":["select","name","from","races","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],2017.0,null]]},"question_toks":["Wie","lauten","die","Namen","aller","Rennen",",","die","im","Jahr","2017","stattfanden","?"],"question":"Wie lauten die Namen aller Rennen, die im Jahr 2017 stattfanden?"},{"db_id":"sakila_1","query":"SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.city",",","count","(","*",")",",","T1.city_id","FROM","address","AS","T1","JOIN","city","AS","T2","ON","T1.city_id","=","T2.city_id","GROUP","BY","T1.city_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","city",",","count","(","*",")",",","t1",".","city_id","from","address","as","t1","join","city","as","t2","on","t1",".","city_id","=","t2",".","city_id","group","by","t1",".","city_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,17,false],null]],[3,[0,[0,0,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","der","Stadtname",",","ID","und","Anzahl","der","Adressen",",","die","zu","der","Stadt","mit","den","meisten","Adressaten","geh\u00f6ren","?"],"question":"Welches sind der Stadtname, ID und Anzahl der Adressen, die zu der Stadt mit den meisten Adressaten geh\u00f6ren?"},{"db_id":"sakila_1","query":"SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1","query_toks":["SELECT","T1.first_name",",","T1.last_name","FROM","customer","AS","T1","JOIN","rental","AS","T2","ON","T1.customer_id","=","T2.customer_id","ORDER","BY","T2.rental_date","ASC","LIMIT","1"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","last_name","from","customer","as","t1","join","rental","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","order","by","t2",".","rental_date","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,23,false],null],[0,71,false],null]],"table_units":[["table_unit",5],["table_unit",13]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,69,false],null]]],"select":[false,[[0,[0,[0,25,false],null]],[0,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","den","vollen","Namen","des","Kunden","wieder",",","der","die","erste","Ausleihe","t\u00e4tigte","."],"question":"Gib den vollen Namen des Kunden wieder, der die erste Ausleihe t\u00e4tigte."},{"db_id":"college_1","query":"SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname","query_toks":["SELECT","T2.emp_fname",",","T1.prof_office","FROM","professor","AS","T1","JOIN","employee","AS","T2","ON","T1.emp_num","=","T2.emp_num","ORDER","BY","T2.emp_fname"],"query_toks_no_value":["select","t2",".","emp_fname",",","t1",".","prof_office","from","professor","as","t1","join","employee","as","t2","on","t1",".","emp_num","=","t2",".","emp_num","order","by","t2",".","emp_fname"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,27,false],null],[0,17,false],null]],"table_units":[["table_unit",5],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,19,false],null]]],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,29,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Vornamen","und","B\u00fcrostandorte","f\u00fcr","alle","Professoren",",","alphabetisch","geordnet","nach","Vorname","?"],"question":"Welches sind die Vornamen und B\u00fcrostandorte f\u00fcr alle Professoren, alphabetisch geordnet nach Vorname?"},{"db_id":"formula_1","query":"SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2000","query_toks":["SELECT","DISTINCT","T1.name","FROM","races","AS","T1","JOIN","circuits","AS","T2","ON","T1.circuitid","=","T2.circuitid","WHERE","T2.country","=","``","Spain","''","AND","T1.year",">","2000"],"query_toks_no_value":["select","distinct","t1",".","name","from","races","as","t1","join","circuits","as","t2","on","t1",".","circuitid","=","t2",".","circuitid","where","t2",".","country","=","value","and","t1",".","year",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Spain\"",null],"and",[false,3,[0,[0,11,false],null],2000.0,null]]},"question_toks":["Welches","sind","die","eindeutigen","Namen","der","Rennen",",","die","nach","2000","und","nachdem","die","Pisten","in","Spanien","waren","stattfanden","?"],"question":"Welches sind die eindeutigen Namen der Rennen, die nach 2000 und nachdem die Pisten in Spanien waren stattfanden? "},{"db_id":"formula_1","query":"SELECT count(*) ,  constructorid FROM constructorStandings GROUP BY constructorid","query_toks":["SELECT","count","(","*",")",",","constructorid","FROM","constructorStandings","GROUP","BY","constructorid"],"query_toks_no_value":["select","count","(","*",")",",","constructorid","from","constructorstandings","group","by","constructorid"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[[0,38,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,38,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","Zahl","der","Rennen","f\u00fcr","jede","Konstruktoren-ID","?"],"question":"Was ist die Zahl der Rennen f\u00fcr jede Konstruktoren-ID?"},{"db_id":"cinema","query":"SELECT directed_by ,  count(*) FROM film GROUP BY directed_by","query_toks":["SELECT","directed_by",",","count","(","*",")","FROM","film","GROUP","BY","directed_by"],"query_toks_no_value":["select","directed_by",",","count","(","*",")","from","film","group","by","directed_by"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","alle","Regisseure","auf",",","zusammen","mit","der","Anzahl","der","Filme","unter","der","Regie","jedes","Regisseurs","."],"question":"Liste alle Regisseure auf, zusammen mit der Anzahl der Filme unter der Regie jedes Regisseurs."},{"db_id":"music_1","query":"SELECT DISTINCT artist_name FROM artist WHERE country  =  \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7","query_toks":["SELECT","DISTINCT","artist_name","FROM","artist","WHERE","country","=","``","Bangladesh","''","EXCEPT","SELECT","DISTINCT","artist_name","FROM","song","WHERE","rating",">","7"],"query_toks_no_value":["select","distinct","artist_name","from","artist","where","country","=","value","except","select","distinct","artist_name","from","song","where","rating",">","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],7.0,null]]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Bangladesh\"",null]]},"question_toks":["Wie","lauten","die","Namen","der","verschiedenen","K\u00fcnstler","aus","Bangladesch",",","die","nie","eine","Bewertung","\u00fcber","sieben","erhielten","?"],"question":"Wie lauten die Namen der verschiedenen K\u00fcnstler aus Bangladesch, die nie eine Bewertung \u00fcber sieben erhielten?"},{"db_id":"store_product","query":"SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)","query_toks":["SELECT","sum","(","city_population",")","FROM","district","WHERE","city_area",">","(","SELECT","avg","(","city_area",")","FROM","district",")"],"query_toks_no_value":["select","sum","(","city_population",")","from","district","where","city_area",">","(","select","avg","(","city_area",")","from","district",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,17,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,18,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","gro\u00df","ist","die","Gesamtbev\u00f6lkerung","aller","Bezirke",",","die","ein","gr\u00f6\u00dferes","Gebiet","umfassen","als","das","durchschnittliche","Stadtgebiet","?"],"question":"Wie gro\u00df ist die Gesamtbev\u00f6lkerung aller Bezirke, die ein gr\u00f6\u00dferes Gebiet umfassen als das durchschnittliche Stadtgebiet?"},{"db_id":"csu_1","query":"SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND t2.year  =  2001","query_toks":["SELECT","degrees","FROM","campuses","AS","T1","JOIN","degrees","AS","T2","ON","t1.id","=","t2.campus","WHERE","t1.campus","=","``","San","Francisco","State","University","''","AND","t2.year","=","2001"],"query_toks_no_value":["select","degrees","from","campuses","as","t1","join","degrees","as","t2","on","t1",".","id","=","t2",".","campus","where","t1",".","campus","=","value","and","t2",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"San Francisco State University\"",null],"and",[false,2,[0,[0,9,false],null],2001.0,null]]},"question_toks":["Welche","Abschl\u00fcsse","wurden","im","Jahr","2001","an","der","San","Francisco","State","University","verliehen","?"],"question":"Welche Abschl\u00fcsse wurden im Jahr 2001 an der San Francisco State University verliehen?"},{"db_id":"loan_1","query":"SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)","query_toks":["SELECT","cust_name","FROM","customer","WHERE","credit_score","<","(","SELECT","avg","(","credit_score",")","FROM","customer",")"],"query_toks_no_value":["select","cust_name","from","customer","where","credit_score","<","(","select","avg","(","credit_score",")","from","customer",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,4,[0,[0,11,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,11,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Welches","sind","die","Namen","der","Kunden","mit","einer","geringeren","Kreditw\u00fcrdigkeit","als","die","durchschnittliche","Kreditw\u00fcrdigkeit","der","Kunden","?"],"question":"Welches sind die Namen der Kunden mit einer geringeren Kreditw\u00fcrdigkeit als die durchschnittliche Kreditw\u00fcrdigkeit der Kunden?"},{"db_id":"college_1","query":"SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code","query_toks":["SELECT","T2.emp_fname",",","T3.crs_description","FROM","CLASS","AS","T1","JOIN","employee","AS","T2","ON","T1.prof_num","=","T2.emp_num","JOIN","course","AS","T3","ON","T1.crs_code","=","T3.crs_code"],"query_toks_no_value":["select","t2",".","emp_fname",",","t3",".","crs_description","from","class","as","t1","join","employee","as","t2","on","t1",".","prof_num","=","t2",".","emp_num","join","course","as","t3","on","t1",".","crs_code","=","t3",".","crs_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Vornamen","aller","Lehrer",",","die","einen","Kurs","und","die","Kursbeschreibung","unterrichtet","haben","."],"question":"Finde die Vornamen aller Lehrer, die einen Kurs und die Kursbeschreibung unterrichtet haben."},{"db_id":"tracking_orders","query":"SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\"","query_toks":["SELECT","order_id","FROM","shipments","WHERE","shipment_tracking_number","=","``","3452","''"],"query_toks_no_value":["select","order_id","from","shipments","where","shipment_tracking_number","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,21,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],"\"3452\"",null]]},"question_toks":["Von","welcher","Bestellung","ist","die","Sendeverfolgungsnummer","``","3452","''","?","Gib","mir","dir","ID","der","Bestellung","."],"question":"Von welcher Bestellung ist die Sendeverfolgungsnummer \"3452\"? Gib mir dir ID der Bestellung."},{"db_id":"music_1","query":"SELECT count(*) ,  gender FROM artist GROUP BY gender","query_toks":["SELECT","count","(","*",")",",","gender","FROM","artist","GROUP","BY","gender"],"query_toks_no_value":["select","count","(","*",")",",","gender","from","artist","group","by","gender"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","Anzahl","der","K\u00fcnstler","f\u00fcr","jedes","Geschlecht","?"],"question":"Was ist die Anzahl der K\u00fcnstler f\u00fcr jedes Geschlecht?"},{"db_id":"loan_1","query":"SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1","query_toks":["SELECT","T1.cust_name","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id","GROUP","BY","T1.cust_name","ORDER","BY","sum","(","T2.amount",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","cust_name","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id","group","by","t1",".","cust_name","order","by","sum","(","t2",".","amount",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,18,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","des","Kunden",",","der","die","h\u00f6chste","Summe","an","Krediten","hat","."],"question":"Finde den Namen des Kunden, der die h\u00f6chste Summe an Krediten hat."},{"db_id":"cinema","query":"SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2","query_toks":["SELECT","LOCATION","FROM","cinema","WHERE","capacity",">","300","GROUP","BY","LOCATION","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","location","from","cinema","where","capacity",">","value","group","by","location","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,12,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],300.0,null]]},"question_toks":["Welche","Orte","haben","zwei","oder","mehr","Kinos","mit","einer","Kapazit\u00e4t","\u00fcber","300","?"],"question":"Welche Orte haben zwei oder mehr Kinos mit einer Kapazit\u00e4t \u00fcber 300?"},{"db_id":"college_1","query":"SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"ACCT-211\"","query_toks":["SELECT","DISTINCT","T1.EMP_FNAME",",","T1.EMP_DOB","FROM","employee","AS","T1","JOIN","CLASS","AS","T2","ON","T1.EMP_NUM","=","T2.PROF_NUM","WHERE","CRS_CODE","=","``","ACCT-211","''"],"query_toks_no_value":["select","distinct","t1",".","emp_fname",",","t1",".","emp_dob","from","employee","as","t1","join","class","as","t2","on","t1",".","emp_num","=","t2",".","prof_num","where","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,19,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"ACCT-211\"",null]]},"question_toks":["Welches","sind","die","Vornamen","und","Geburtsdaten","der","Professoren",",","die","f\u00fcr","ACCT-211","verantwortlich","sind","?"],"question":"Welches sind die Vornamen und Geburtsdaten der Professoren, die f\u00fcr ACCT-211 verantwortlich sind?"},{"db_id":"sakila_1","query":"SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  'AIRPORT POLLOCK'","query_toks":["SELECT","T2.name","FROM","film","AS","T1","JOIN","LANGUAGE","AS","T2","ON","T1.language_id","=","T2.language_id","WHERE","T1.title","=","'AIRPORT","POLLOCK","'"],"query_toks_no_value":["select","t2",".","name","from","film","as","t1","join","language","as","t2","on","t1",".","language_id","=","t2",".","language_id","where","t1",".","title","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,36,false],null],[0,58,false],null]],"table_units":[["table_unit",6],["table_unit",11]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,59,false],null]]]],"union":null,"where":[[false,2,[0,[0,33,false],null],"\"AIRPORT POLLOCK\"",null]]},"question_toks":["Wie","lautet","der","Name","der","Sprache",",","in","welcher","der","Film","``","AIRPORT","POLLOCK","''","ist","?"],"question":"Wie lautet der Name der Sprache, in welcher der Film \"AIRPORT POLLOCK\" ist?"},{"db_id":"entrepreneur","query":"SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1","query_toks":["SELECT","T2.Name","FROM","entrepreneur","AS","T1","JOIN","people","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T2.Weight","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name","from","entrepreneur","as","t1","join","people","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t2",".","weight","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","den","Namen","des","schwersten","Unternehmers","wieder","."],"question":"Gib den Namen des schwersten Unternehmers wieder."},{"db_id":"manufacturer","query":"SELECT Num_of_Component ,  name FROM furniture WHERE Num_of_Component  >  10","query_toks":["SELECT","Num_of_Component",",","name","FROM","furniture","WHERE","Num_of_Component",">","10"],"query_toks_no_value":["select","num_of_component",",","name","from","furniture","where","num_of_component",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,3,[0,[0,8,false],null],10.0,null]]},"question_toks":["Finde","die","Anzahlen","der","Bauteile","und","Namen","aller","M\u00f6belst\u00fccke",",","die","mehr","als","10","Bauteile","haben","."],"question":"Finde die Anzahlen der Bauteile und Namen aller M\u00f6belst\u00fccke, die mehr als 10 Bauteile haben."},{"db_id":"store_product","query":"SELECT DISTINCT District_name FROM district ORDER BY city_area DESC","query_toks":["SELECT","DISTINCT","District_name","FROM","district","ORDER","BY","city_area","DESC"],"query_toks_no_value":["select","distinct","district_name","from","district","order","by","city_area","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,18,false],null]]],"select":[true,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","einzelnen","Bezirksnamen","in","absteigender","Ordnung","des","Stadtgebiets","?"],"question":"Welches sind die einzelnen Bezirksnamen in absteigender Ordnung des Stadtgebiets?"},{"db_id":"tracking_orders","query":"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= \"2009-01-01\" AND T2.date_order_placed <= \"2010-01-01\"","query_toks":["SELECT","T1.customer_name","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T2.date_order_placed",">","=","``","2009-01-01","''","AND","T2.date_order_placed","<","=","``","2010-01-01","''"],"query_toks_no_value":["select","t1",".","customer_name","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t2",".","date_order_placed",">","=","value","and","t2",".","date_order_placed","<","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,5,[0,[0,10,false],null],"\"2009-01-01\"",null],"and",[false,6,[0,[0,10,false],null],"\"2010-01-01\"",null]]},"question_toks":["Gib","mir","die","Namen","der","Kunden",",","die","eine","Bestellung","aufgegeben","haben","zwischen","dem","01.01.2009","und","dem","01.01.2010","."],"question":"Gib mir die Namen der Kunden, die eine Bestellung aufgegeben haben zwischen dem 01.01.2009 und dem 01.01.2010."},{"db_id":"phone_market","query":"SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name HAVING sum(T1.Num_of_stock)  >=  2000 ORDER BY sum(T1.Num_of_stock) DESC","query_toks":["SELECT","T2.Name","FROM","phone_market","AS","T1","JOIN","phone","AS","T2","ON","T1.Phone_ID","=","T2.Phone_ID","GROUP","BY","T2.Name","HAVING","sum","(","T1.Num_of_stock",")",">","=","2000","ORDER","BY","sum","(","T1.Num_of_stock",")","DESC"],"query_toks_no_value":["select","t2",".","name","from","phone_market","as","t1","join","phone","as","t2","on","t1",".","phone_id","=","t2",".","phone_id","group","by","t2",".","name","having","sum","(","t1",".","num_of_stock",")",">","=","value","order","by","sum","(","t1",".","num_of_stock",")","desc"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,2,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,1,false]],"having":[[false,5,[0,[4,13,false],null],2000.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Namen","und","Telefone",",","die","eine","Gesamtzahl","an","Aktien","gr\u00f6\u00dfer","als","2000","haben",",","in","absteigender","Ordnung","der","Gesamtzahl","der","Aktien","."],"question":"Zeige die Namen und Telefone, die eine Gesamtzahl an Aktien gr\u00f6\u00dfer als 2000 haben, in absteigender Ordnung der Gesamtzahl der Aktien."},{"db_id":"tracking_orders","query":"SELECT DISTINCT product_name FROM products ORDER BY product_name","query_toks":["SELECT","DISTINCT","product_name","FROM","products","ORDER","BY","product_name"],"query_toks_no_value":["select","distinct","product_name","from","products","order","by","product_name"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[true,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","die","Namen","aller","einzelnen","Produkte","in","alphabetischer","Ordnung","auf","."],"question":"Liste die Namen aller einzelnen Produkte in alphabetischer Ordnung auf."},{"db_id":"college_1","query":"SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3","query_toks":["SELECT","T2.dept_name",",","T2.dept_address",",","count","(","*",")","FROM","student","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","GROUP","BY","T1.dept_code","ORDER","BY","count","(","*",")","DESC","LIMIT","3"],"query_toks_no_value":["select","t2",".","dept_name",",","t2",".","dept_address",",","count","(","*",")","from","student","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","group","by","t1",".","dept_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,41,false],null],[0,11,false],null]],"table_units":[["table_unit",6],["table_unit",2]]},"groupBy":[[0,41,false]],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,12,false],null]],[0,[0,[0,15,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","der","Name",",","die","Adresse","und","Anzahl","der","Studierenden","in","den","Abteilungen",",","welche","die","drei","meisten","Studierenden","haben","?"],"question":"Was ist der Name, die Adresse und Anzahl der Studierenden in den Abteilungen, welche die drei meisten Studierenden haben?"},{"db_id":"music_1","query":"SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","languages","FROM","song","GROUP","BY","languages","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","languages","from","song","group","by","languages","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Sprache","wird","in","den","Liedern","am","h\u00e4ufigsten","verwendet","?"],"question":"Welche Sprache wird in den Liedern am h\u00e4ufigsten verwendet?"},{"db_id":"college_1","query":"SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems'","query_toks":["SELECT","DISTINCT","T2.emp_fname",",","T3.prof_high_degree","FROM","CLASS","AS","T1","JOIN","employee","AS","T2","ON","T1.prof_num","=","T2.emp_num","JOIN","professor","AS","T3","ON","T2.emp_num","=","T3.emp_num","JOIN","department","AS","T4","ON","T4.dept_code","=","T3.dept_code","WHERE","T4.dept_name","=","'Computer","Info",".","Systems","'"],"query_toks_no_value":["select","distinct","t2",".","emp_fname",",","t3",".","prof_high_degree","from","class","as","t1","join","employee","as","t2","on","t1",".","prof_num","=","t2",".","emp_num","join","professor","as","t3","on","t2",".","emp_num","=","t3",".","emp_num","join","department","as","t4","on","t4",".","dept_code","=","t3",".","dept_code","where","t4",".","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,19,false],null]],[0,[0,[0,31,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Computer Info. Systems\"",null]]},"question_toks":["Welches","sind","die","unterschiedlichen","Vornamen","und","der","h\u00f6chste","erreichte","Abschluss","der","Professoren",",","die","in","der","Abteilung","f\u00fcr","Computer-Informationssysteme","lehren","?"],"question":"Welches sind die unterschiedlichen Vornamen und der h\u00f6chste erreichte Abschluss der Professoren, die in der Abteilung f\u00fcr Computer-Informationssysteme lehren?"},{"db_id":"tracking_orders","query":"SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id","query_toks":["SELECT","T3.product_name",",","count","(","*",")","FROM","orders","AS","T1","JOIN","order_items","AS","T2","JOIN","products","AS","T3","ON","T1.order_id","=","T2.order_id","AND","T2.product_id","=","T3.product_id","GROUP","BY","T3.product_id"],"query_toks_no_value":["select","t3",".","product_name",",","count","(","*",")","from","orders","as","t1","join","order_items","as","t2","join","products","as","t3","on","t1",".","order_id","=","t2",".","order_id","and","t2",".","product_id","=","t3",".","product_id","group","by","t3",".","product_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,17,false],null],"and",[false,2,[0,[0,16,false],null],[0,12,false],null]],"table_units":[["table_unit",2],["table_unit",4],["table_unit",3]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","f\u00fcr","jedes","Produkt","seinen","Namen","und","die","Anzahl",",","wie","oft","es","bestellt","wurde","."],"question":"Zeige f\u00fcr jedes Produkt seinen Namen und die Anzahl, wie oft es bestellt wurde."},{"db_id":"formula_1","query":"SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1","query_toks":["SELECT","T1.forename",",","T1.surname","FROM","drivers","AS","T1","JOIN","laptimes","AS","T2","ON","T1.driverid","=","T2.driverid","ORDER","BY","T2.milliseconds","LIMIT","1"],"query_toks_no_value":["select","t1",".","forename",",","t1",".","surname","from","drivers","as","t1","join","laptimes","as","t2","on","t1",".","driverid","=","t2",".","driverid","order","by","t2",".","milliseconds","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,90,false],null]],"table_units":[["table_unit",2],["table_unit",12]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,94,false],null]]],"select":[false,[[0,[0,[0,22,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","der","Vorname","und","der","Nachname","des","Fahrers","mit","der","k\u00fcrzesten","Stoppzeit","?"],"question":"Wie lauten der Vorname und der Nachname des Fahrers mit der k\u00fcrzesten Stoppzeit?"},{"db_id":"music_1","query":"SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1","query_toks":["SELECT","T1.artist_name",",","count","(","*",")","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T2.languages","=","``","english","''","GROUP","BY","T2.artist_name","HAVING","count","(","*",")",">","=","1"],"query_toks_no_value":["select","t1",".","artist_name",",","count","(","*",")","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t2",".","languages","=","value","group","by","t2",".","artist_name","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[[0,14,false]],"having":[[false,5,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},"question_toks":["Was","sind","die","Namen","und","Anzahlen","der","Arbeiten","aller","K\u00fcnstler",",","die","mindestens","ein","Lied","auf","Englisch","gesungen","haben","?"],"question":"Was sind die Namen und Anzahlen der Arbeiten aller K\u00fcnstler, die mindestens ein Lied auf Englisch gesungen haben?"},{"db_id":"entrepreneur","query":"SELECT sum(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  1.85","query_toks":["SELECT","sum","(","T1.Money_Requested",")","FROM","entrepreneur","AS","T1","JOIN","people","AS","T2","ON","T1.People_ID","=","T2.People_ID","WHERE","T2.Height",">","1.85"],"query_toks_no_value":["select","sum","(","t1",".","money_requested",")","from","entrepreneur","as","t1","join","people","as","t2","on","t1",".","people_id","=","t2",".","people_id","where","t2",".","height",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,4,false],null]]]],"union":null,"where":[[false,3,[0,[0,8,false],null],1.85,null]]},"question_toks":["Gib","die","Summe","des","angefragten","Geldes","an","f\u00fcr","Unternehmer",",","die","gr\u00f6\u00dfer","als","1,85","sind","."],"question":"Gib die Summe des angefragten Geldes an f\u00fcr Unternehmer, die gr\u00f6\u00dfer als 1,85 sind."},{"db_id":"activity_1","query":"SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age  <  20","query_toks":["SELECT","StuID","FROM","Participates_in","INTERSECT","SELECT","StuID","FROM","Student","WHERE","age","<","20"],"query_toks_no_value":["select","stuid","from","participates_in","intersect","select","stuid","from","student","where","age","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,4,[0,[0,10,false],null],20.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Identifikationsnummern","der","Studierenden",",","die","unter","20","Jahre","alt","und","an","mindestens","einer","Aktivit\u00e4t","beteiligt","sind","?"],"question":"Welches sind die Identifikationsnummern der Studierenden, die unter 20 Jahre alt und an mindestens einer Aktivit\u00e4t beteiligt sind?"},{"db_id":"tracking_orders","query":"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= \"2009-01-01\" AND T2.date_order_placed <= \"2010-01-01\"","query_toks":["SELECT","T1.customer_name","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T2.date_order_placed",">","=","``","2009-01-01","''","AND","T2.date_order_placed","<","=","``","2010-01-01","''"],"query_toks_no_value":["select","t1",".","customer_name","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t2",".","date_order_placed",">","=","value","and","t2",".","date_order_placed","<","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,5,[0,[0,10,false],null],"\"2009-01-01\"",null],"and",[false,6,[0,[0,10,false],null],"\"2010-01-01\"",null]]},"question_toks":["Welche","Kunden","machten","Bestellungen","zwischen","dem","01.01.2009","und","dem","01.01.2010","?"],"question":"Welche Kunden machten Bestellungen zwischen dem 01.01.2009 und dem 01.01.2010?"},{"db_id":"tracking_orders","query":"SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2","query_toks":["SELECT","T2.customer_name","FROM","orders","AS","T1","JOIN","customers","AS","T2","ON","T1.customer_id","=","T2.customer_id","GROUP","BY","T2.customer_id","HAVING","count","(","*",")","<","=","2"],"query_toks_no_value":["select","t2",".","customer_name","from","orders","as","t1","join","customers","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","group","by","t2",".","customer_id","having","count","(","*",")","<","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,1,false]],"having":[[false,6,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","Kunden",",","die","zwei","oder","weniger","Bestellungen","aufgegeben","haben","?"],"question":"Wie lauten die Namen der Kunden, die zwei oder weniger Bestellungen aufgegeben haben?"},{"db_id":"activity_1","query":"SELECT count(DISTINCT FacID) FROM Faculty_participates_in","query_toks":["SELECT","count","(","DISTINCT","FacID",")","FROM","Faculty_participates_in"],"query_toks_no_value":["select","count","(","distinct","facid",")","from","faculty_participates_in"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,5,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Fakult\u00e4tsangeh\u00f6rige","nehmen","an","einer","Aktivit\u00e4t","teil","?"],"question":"Wie viele Fakult\u00e4tsangeh\u00f6rige nehmen an einer Aktivit\u00e4t teil?"},{"db_id":"cinema","query":"SELECT name ,  openning_year FROM cinema ORDER BY openning_year DESC","query_toks":["SELECT","name",",","openning_year","FROM","cinema","ORDER","BY","openning_year","DESC"],"query_toks_no_value":["select","name",",","openning_year","from","cinema","order","by","openning_year","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,10,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","alle","Kinonamen","und","Er\u00f6ffnungsjahre","in","absteigender","Reihenfolge","des","Er\u00f6ffnungsjahres","an","."],"question":"Zeige alle Kinonamen und Er\u00f6ffnungsjahre in absteigender Reihenfolge des Er\u00f6ffnungsjahres an."},{"db_id":"tracking_orders","query":"SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Packing\"","query_toks":["SELECT","DISTINCT","T1.customer_name","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T2.order_status","=","``","Packing","''"],"query_toks_no_value":["select","distinct","t1",".","customer_name","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t2",".","order_status","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Packing\"",null]]},"question_toks":["Liste","die","Namen","aller","verschiedenen","Kunden","auf",",","die","Bestellungen","mit","dem","Status","``","Verpackung","''","haben","."],"question":"Liste die Namen aller verschiedenen Kunden auf, die Bestellungen mit dem Status \"Verpackung\" haben."},{"db_id":"music_1","query":"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"%love%\"","query_toks":["SELECT","T1.artist_name",",","T1.country","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T2.song_name","LIKE","``","%","love","%","''"],"query_toks_no_value":["select","t1",".","artist_name",",","t1",".","country","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t2",".","song_name","like","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,9,[0,[0,13,false],null],"\"%love%\"",null]]},"question_toks":["Wie","lauten","Name","und","Ursprungsland","des","K\u00fcnstlers",",","der","ein","Lied","mit","``","love","''","im","Titel","ver\u00f6ffentlicht","hat","?"],"question":"Wie lauten Name und Ursprungsland des K\u00fcnstlers, der ein Lied mit \"love\" im Titel ver\u00f6ffentlicht hat?"},{"db_id":"music_1","query":"SELECT g_name ,  rating FROM genre ORDER BY g_name","query_toks":["SELECT","g_name",",","rating","FROM","genre","ORDER","BY","g_name"],"query_toks_no_value":["select","g_name",",","rating","from","genre","order","by","g_name"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,1,false],null]]],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Namen","aller","Genres","in","alphabetischer","Reihenfolge",",","kombiniert","mit","ihren","Bewertungen","?"],"question":"Was sind die Namen aller Genres in alphabetischer Reihenfolge, kombiniert mit ihren Bewertungen?"},{"db_id":"formula_1","query":"SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1","query_toks":["SELECT","name",",","date","FROM","races","ORDER","BY","date","DESC","LIMIT","1"],"query_toks_no_value":["select","name",",","date","from","races","order","by","date","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,15,false],null]]],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","Name","und","Datum","des","letzten","stattgefundenen","Rennens","?"],"question":"Welches sind Name und Datum des letzten stattgefundenen Rennens?"},{"db_id":"music_1","query":"SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\"","query_toks":["SELECT","T1.artist_name",",","T1.gender","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T2.releasedate","LIKE","``","%","Mar","%","''"],"query_toks_no_value":["select","t1",".","artist_name",",","t1",".","gender","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t2",".","releasedate","like","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,9,[0,[0,20,false],null],"\"%Mar%\"",null]]},"question_toks":["Liste","die","Namen","und","die","Geschlechter","aller","K\u00fcnstler","auf",",","die","im","M\u00e4rz","Lieder","ver\u00f6ffentlicht","haben","."],"question":"Liste die Namen und die Geschlechter aller K\u00fcnstler auf, die im M\u00e4rz Lieder ver\u00f6ffentlicht haben. "},{"db_id":"college_1","query":"SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code","query_toks":["SELECT","T2.emp_fname",",","T4.prof_office",",","T3.crs_description",",","T5.dept_name","FROM","CLASS","AS","T1","JOIN","employee","AS","T2","ON","T1.prof_num","=","T2.emp_num","JOIN","course","AS","T3","ON","T1.crs_code","=","T3.crs_code","JOIN","professor","AS","T4","ON","T2.emp_num","=","T4.emp_num","JOIN","department","AS","T5","ON","T4.dept_code","=","T5.dept_code"],"query_toks_no_value":["select","t2",".","emp_fname",",","t4",".","prof_office",",","t3",".","crs_description",",","t5",".","dept_name","from","class","as","t1","join","employee","as","t2","on","t1",".","prof_num","=","t2",".","emp_num","join","course","as","t3","on","t1",".","crs_code","=","t3",".","crs_code","join","professor","as","t4","on","t2",".","emp_num","=","t4",".","emp_num","join","department","as","t5","on","t4",".","dept_code","=","t5",".","dept_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,29,false],null]],[0,[0,[0,9,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Vornamen","und","B\u00fcros","aller","Dozenten",",","die","einen","Kurs","unterrichtet","haben","sowie","die","Kursbeschreibung","und","den","Namen","der","Abteilung","."],"question":"Finde die Vornamen und B\u00fcros aller Dozenten, die einen Kurs unterrichtet haben sowie die Kursbeschreibung und den Namen der Abteilung."},{"db_id":"manufacturer","query":"SELECT name ,  Num_of_Component FROM furniture ORDER BY market_rate LIMIT 1","query_toks":["SELECT","name",",","Num_of_Component","FROM","furniture","ORDER","BY","market_rate","LIMIT","1"],"query_toks_no_value":["select","name",",","num_of_component","from","furniture","order","by","market_rate","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","und","die","Anzahl","der","Bauteile","des","am","wenigsten","beliebten","M\u00f6bels","."],"question":"Finde den Namen und die Anzahl der Bauteile des am wenigsten beliebten M\u00f6bels."},{"db_id":"cinema","query":"SELECT count(*) FROM cinema","query_toks":["SELECT","count","(","*",")","FROM","cinema"],"query_toks_no_value":["select","count","(","*",")","from","cinema"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Kinos","haben","wir","?"],"question":"Wie viele Kinos haben wir?"},{"db_id":"college_1","query":"SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Computer Info. Systems\"","query_toks":["SELECT","count","(","*",")","FROM","department","AS","T1","JOIN","course","AS","T2","ON","T1.dept_code","=","T2.dept_code","WHERE","dept_name","=","``","Computer","Info",".","Systems","''"],"query_toks_no_value":["select","count","(","*",")","from","department","as","t1","join","course","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","where","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,8,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Computer Info. Systems\"",null]]},"question_toks":["Wie","viele","Kurse","bietet","die","Abteilung","Computer-Informationssysteme","an","?"],"question":"Wie viele Kurse bietet die Abteilung Computer-Informationssysteme an?"},{"db_id":"activity_1","query":"SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex","query_toks":["SELECT","rank",",","sex",",","count","(","*",")","FROM","Faculty","GROUP","BY","rank",",","sex"],"query_toks_no_value":["select","rank",",","sex",",","count","(","*",")","from","faculty","group","by","rank",",","sex"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,18,false],[0,19,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,19,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","alle","R\u00e4nge","und","die","Anzahl","der","m\u00e4nnlichen","und","weiblichen","Lehrk\u00f6rper","f\u00fcr","jeden","Rang","an","."],"question":"Zeige alle R\u00e4nge und die Anzahl der m\u00e4nnlichen und weiblichen Lehrk\u00f6rper f\u00fcr jeden Rang an."},{"db_id":"sakila_1","query":"SELECT amount FROM payment ORDER BY amount DESC LIMIT 1","query_toks":["SELECT","amount","FROM","payment","ORDER","BY","amount","DESC","LIMIT","1"],"query_toks_no_value":["select","amount","from","payment","order","by","amount","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",12]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,65,false],null]]],"select":[false,[[0,[0,[0,65,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","den","Betrag","der","gr\u00f6\u00dften","Zahlung","aus","."],"question":"Gib den Betrag der gr\u00f6\u00dften Zahlung aus."},{"db_id":"activity_1","query":"SELECT count(*) FROM Faculty WHERE Rank  =  \"Professor\" AND building  =  \"NEB\"","query_toks":["SELECT","count","(","*",")","FROM","Faculty","WHERE","Rank","=","``","Professor","''","AND","building","=","``","NEB","''"],"query_toks_no_value":["select","count","(","*",")","from","faculty","where","rank","=","value","and","building","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"Professor\"",null],"and",[false,2,[0,[0,22,false],null],"\"NEB\"",null]]},"question_toks":["Z\u00e4hle","die","Anzahl","der","Professoren",",","die","ein","B\u00fcro","im","Geb\u00e4ude","NEB","haben","."],"question":"Z\u00e4hle die Anzahl der Professoren, die ein B\u00fcro im Geb\u00e4ude NEB haben."},{"db_id":"coffee_shop","query":"SELECT membership_card FROM member WHERE address  =  'Hartford' INTERSECT SELECT membership_card FROM member WHERE address  =  'Waterbury'","query_toks":["SELECT","membership_card","FROM","member","WHERE","address","=","'Hartford","'","INTERSECT","SELECT","membership_card","FROM","member","WHERE","address","=","'Waterbury","'"],"query_toks_no_value":["select","membership_card","from","member","where","address","=","value","intersect","select","membership_card","from","member","where","address","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Waterbury\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Hartford\"",null]]},"question_toks":["Welche","Mitgliedskarte","wird","zugleich","von","Mitgliedern","gehalten",",","die","in","Hartford","wohnen",",","und","solchen",",","die","an","einer","Waterbury-Adresse","leben","?"],"question":"Welche Mitgliedskarte wird zugleich von Mitgliedern gehalten, die in Hartford wohnen, und solchen, die an einer Waterbury-Adresse leben?"},{"db_id":"store_product","query":"SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5","query_toks":["SELECT","product","FROM","product","WHERE","max_page_size","=","``","A4","''","OR","pages_per_minute_color","<","5"],"query_toks_no_value":["select","product","from","product","where","max_page_size","=","value","or","pages_per_minute_color","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"A4\"",null],"or",[false,4,[0,[0,5,false],null],5.0,null]]},"question_toks":["Finde","Produkte","mit","maximaler","Seitengr\u00f6\u00dfe","von","``","A4","''","oder","Seiten","pro","Minute","in","Farbe","kleiner","als","5","."],"question":"Finde Produkte mit maximaler Seitengr\u00f6\u00dfe von \"A4\" oder Seiten pro Minute in Farbe kleiner als 5."},{"db_id":"csu_1","query":"SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1","query_toks":["SELECT","YEAR","FROM","degrees","GROUP","BY","YEAR","ORDER","BY","sum","(","degrees",")","DESC","LIMIT","1"],"query_toks_no_value":["select","year","from","degrees","group","by","year","order","by","sum","(","degrees",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,11,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["In","welchem","Jahr","wurden","die","meisten","Abschl\u00fcsse","verliehen","?"],"question":"In welchem Jahr wurden die meisten Abschl\u00fcsse verliehen?"},{"db_id":"tracking_orders","query":"SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"","query_toks":["SELECT","T2.order_id",",","T2.order_status","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T1.customer_name","=","``","Jeramie","''"],"query_toks_no_value":["select","t2",".","order_id",",","t2",".","order_status","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t1",".","customer_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Jeramie\"",null]]},"question_toks":["Welche","Bestellungen","werden","von","dem","Kunden","namens","``","Jeramie","''","get\u00e4tigt","?","Gib","mir","die","Bestellnummern","und","den","Status","."],"question":"Welche Bestellungen werden von dem Kunden namens \"Jeramie\" get\u00e4tigt? Gib mir die Bestellnummern und den Status."},{"db_id":"csu_1","query":"SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T2.year  >=  1998 AND T2.year  <=  2002 GROUP BY T1.campus","query_toks":["SELECT","T1.campus",",","sum","(","T2.degrees",")","FROM","campuses","AS","T1","JOIN","degrees","AS","T2","ON","T1.id","=","T2.campus","WHERE","T2.year",">","=","1998","AND","T2.year","<","=","2002","GROUP","BY","T1.campus"],"query_toks_no_value":["select","t1",".","campus",",","sum","(","t2",".","degrees",")","from","campuses","as","t1","join","degrees","as","t2","on","t1",".","id","=","t2",".","campus","where","t2",".","year",">","=","value","and","t2",".","year","<","=","value","group","by","t1",".","campus"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[4,[0,[0,11,false],null]]]],"union":null,"where":[[false,5,[0,[0,9,false],null],1998.0,null],"and",[false,6,[0,[0,9,false],null],2002.0,null]]},"question_toks":["Wie","viele","Abschl\u00fcsse","wurden","zwischen","1998","und","2002","verliehen","?"],"question":"Wie viele Abschl\u00fcsse wurden zwischen 1998 und 2002 verliehen?"},{"db_id":"cinema","query":"SELECT name ,  openning_year ,  capacity FROM cinema","query_toks":["SELECT","name",",","openning_year",",","capacity","FROM","cinema"],"query_toks_no_value":["select","name",",","openning_year",",","capacity","from","cinema"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","Namen",",","Er\u00f6ffnungsjahr","und","Kapazit\u00e4t","f\u00fcr","jedes","Kino","."],"question":"Zeige Namen, Er\u00f6ffnungsjahr und Kapazit\u00e4t f\u00fcr jedes Kino. "},{"db_id":"formula_1","query":"SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2","query_toks":["SELECT","T1.driverid",",","T1.forename",",","T1.surname","FROM","drivers","AS","T1","JOIN","laptimes","AS","T2","ON","T1.driverid","=","T2.driverid","WHERE","POSITION","=","'1","'","GROUP","BY","T1.driverid","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","driverid",",","t1",".","forename",",","t1",".","surname","from","drivers","as","t1","join","laptimes","as","t2","on","t1",".","driverid","=","t2",".","driverid","where","position","=","value","group","by","t1",".","driverid","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,90,false],null]],"table_units":[["table_unit",2],["table_unit",12]]},"groupBy":[[0,18,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,22,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,92,false],null],"\"1\"",null]]},"question_toks":["Was","ist","die","ID",",","Vor-","und","Nachname","des","Fahrers",",","der","mindestens","zweimal","die","erste","Position","in","Bezug","auf","die","Rundenzeit","hatte","?"],"question":"Was ist die ID, Vor- und Nachname des Fahrers, der mindestens zweimal die erste Position in Bezug auf die Rundenzeit hatte?"},{"db_id":"twitter_1","query":"SELECT name ,  email FROM user_profiles WHERE name LIKE '%Swift%'","query_toks":["SELECT","name",",","email","FROM","user_profiles","WHERE","name","LIKE","'","%","Swift","%","'"],"query_toks_no_value":["select","name",",","email","from","user_profiles","where","name","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,9,[0,[0,8,false],null],"\"%Swift%\"",null]]},"question_toks":["Finde","den","Namen","und","die","E-Mail","des","Benutzers",",","dessen","Name","das","Wort","``","Swift","''","enth\u00e4lt","."],"question":"Finde den Namen und die E-Mail des Benutzers, dessen Name das Wort \"Swift\" enth\u00e4lt."},{"db_id":"formula_1","query":"SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\"","query_toks":["SELECT","name","FROM","races","WHERE","TIME",">","``","12:00:00","''","OR","TIME","<","``","09:00:00","''"],"query_toks_no_value":["select","name","from","races","where","time",">","value","or","time","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,3,[0,[0,16,false],null],"\"12:00:00\"",null],"or",[false,4,[0,[0,16,false],null],"\"09:00:00\"",null]]},"question_toks":["Wie","sind","die","Namen","der","Rennen",",","die","nach","12:00:00","Uhr","oder","vor","09:00:00","Uhr","stattfinden","?"],"question":"Wie sind die Namen der Rennen, die nach 12:00:00 Uhr oder vor 09:00:00 Uhr stattfinden? "},{"db_id":"loan_1","query":"SELECT avg(no_of_customers) FROM bank","query_toks":["SELECT","avg","(","no_of_customers",")","FROM","bank"],"query_toks_no_value":["select","avg","(","no_of_customers",")","from","bank"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","durchschnittliche","Anzahl","der","Kunden","aller","Banken","."],"question":"Finde die durchschnittliche Anzahl der Kunden aller Banken."},{"db_id":"debate","query":"SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID","query_toks":["SELECT","T3.Name",",","T2.Date",",","T2.Venue","FROM","debate_people","AS","T1","JOIN","debate","AS","T2","ON","T1.Debate_ID","=","T2.Debate_ID","JOIN","people","AS","T3","ON","T1.Affirmative","=","T3.People_ID"],"query_toks_no_value":["select","t3",".","name",",","t2",".","date",",","t2",".","venue","from","debate_people","as","t1","join","debate","as","t2","on","t1",".","debate_id","=","t2",".","debate_id","join","people","as","t3","on","t1",".","affirmative","=","t3",".","people_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,7,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Namen","der","Personen","sowie","die","Daten","und","Orte","der","Debatten","an",",","an","denen","sie","sich","auf","der","zustimmenden","Seite","befinden","."],"question":"Zeige die Namen der Personen sowie die Daten und Orte der Debatten an, an denen sie sich auf der zustimmenden Seite befinden."},{"db_id":"sakila_1","query":"SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","first_name","FROM","actor","GROUP","BY","first_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","first_name","from","actor","group","by","first_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","der","beliebteste","Vorname","der","Schauspieler","?"],"question":"Was ist der beliebteste Vorname der Schauspieler?"},{"db_id":"music_1","query":"SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\"","query_toks":["SELECT","artist_name","FROM","artist","WHERE","country","=","``","UK","''","INTERSECT","SELECT","T1.artist_name","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T2.languages","=","``","english","''"],"query_toks_no_value":["select","artist_name","from","artist","where","country","=","value","intersect","select","t1",".","artist_name","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t2",".","languages","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"UK\"",null]]},"question_toks":["Gib","die","Namen","von","S\u00e4ngern","an",",","die","aus","dem","Vereinigten","K\u00f6nigreich","stammen","und","ein","englisches","Lied","ver\u00f6ffentlicht","haben","."],"question":"Gib die Namen von S\u00e4ngern an, die aus dem Vereinigten K\u00f6nigreich stammen und ein englisches Lied ver\u00f6ffentlicht haben."},{"db_id":"college_1","query":"SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3","query_toks":["SELECT","T2.dept_name",",","T2.dept_address",",","count","(","*",")","FROM","student","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","GROUP","BY","T1.dept_code","ORDER","BY","count","(","*",")","DESC","LIMIT","3"],"query_toks_no_value":["select","t2",".","dept_name",",","t2",".","dept_address",",","count","(","*",")","from","student","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","group","by","t1",".","dept_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,41,false],null],[0,11,false],null]],"table_units":[["table_unit",6],["table_unit",2]]},"groupBy":[[0,41,false]],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,12,false],null]],[0,[0,[0,15,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen",",","die","Adresse",",","die","Anzahl","der","Studierenden","in","den","Fachbereichen",",","die","die","drei","h\u00f6chsten","Studierendenzahlen","aufweisen","."],"question":"Finde den Namen, die Adresse, die Anzahl der Studierenden in den Fachbereichen, die die drei h\u00f6chsten Studierendenzahlen aufweisen."},{"db_id":"activity_1","query":"SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in","query_toks":["SELECT","FacID","FROM","Faculty","EXCEPT","SELECT","FacID","FROM","Faculty_participates_in"],"query_toks_no_value":["select","facid","from","faculty","except","select","facid","from","faculty_participates_in"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Fakult\u00e4t","nimmt","an","keiner","Aktivit\u00e4t","teil","?","Finde","ihre","Fakult\u00e4tskennungen","."],"question":"Welche Fakult\u00e4t nimmt an keiner Aktivit\u00e4t teil? Finde ihre Fakult\u00e4tskennungen."},{"db_id":"formula_1","query":"SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017","query_toks":["SELECT","DISTINCT","name","FROM","races","WHERE","YEAR","BETWEEN","2014","AND","2017"],"query_toks_no_value":["select","distinct","name","from","races","where","year","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,1,[0,[0,11,false],null],2014.0,2017.0]]},"question_toks":["Wie","lauten","die","eindeutigen","Namen","aller","Rennen",",","die","zwischen","2014","und","2017","stattfinden","?"],"question":"Wie lauten die eindeutigen Namen aller Rennen, die zwischen 2014 und 2017 stattfinden?"},{"db_id":"formula_1","query":"SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"","query_toks":["SELECT","T2.name",",","T2.year","FROM","results","AS","T1","JOIN","races","AS","T2","ON","T1.raceid","=","T2.raceid","JOIN","drivers","AS","T3","ON","T1.driverid","=","T3.driverid","WHERE","T3.forename","=","``","Lewis","''"],"query_toks_no_value":["select","t2",".","name",",","t2",".","year","from","results","as","t1","join","races","as","t2","on","t1",".","raceid","=","t2",".","raceid","join","drivers","as","t3","on","t1",".","driverid","=","t3",".","driverid","where","t3",".","forename","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,44,false],null],[0,10,false],null]],"table_units":[["table_unit",7],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],"\"Lewis\"",null]]},"question_toks":["Wie","lauten","die","Namen","und","Jahre","aller","Rennen",",","bei","denen","ein","Fahrer","mit","dem","Nachnamen","Lewis","dabei","war","?"],"question":"Wie lauten die Namen und Jahre aller Rennen, bei denen ein Fahrer mit dem Nachnamen Lewis dabei war?"},{"db_id":"coffee_shop","query":"SELECT t1.address ,  t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id  =  t2.shop_id WHERE MONTH  =  'May'","query_toks":["SELECT","t1.address",",","t1.shop_id","FROM","shop","AS","t1","JOIN","happy_hour","AS","t2","ON","t1.shop_id","=","t2.shop_id","WHERE","MONTH","=","'May","'"],"query_toks_no_value":["select","t1",".","address",",","t1",".","shop_id","from","shop","as","t1","join","happy_hour","as","t2","on","t1",".","shop_id","=","t2",".","shop_id","where","month","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,14,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"May\"",null]]},"question_toks":["Was","sind","die","Bezeichnung","und","Adresse","der","Gesch\u00e4fte",",","die","eine","Happy","Hour","im","Mai","haben","?"],"question":"Was sind die Bezeichnung und Adresse der Gesch\u00e4fte, die eine Happy Hour im Mai haben?"},{"db_id":"college_1","query":"SELECT dept_address FROM department WHERE dept_name  =  'History'","query_toks":["SELECT","dept_address","FROM","department","WHERE","dept_name","=","'History","'"],"query_toks_no_value":["select","dept_address","from","department","where","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"History\"",null]]},"question_toks":["Wo","ist","der","Fachbereich","Geschichte","?"],"question":"Wo ist der Fachbereich Geschichte?"},{"db_id":"csu_1","query":"SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Jose State University\"","query_toks":["SELECT","sum","(","t1.undergraduate",")","FROM","discipline_enrollments","AS","t1","JOIN","campuses","AS","t2","ON","t1.campus","=","t2.id","WHERE","t1.year","=","2004","AND","t2.campus","=","``","San","Jose","State","University","''"],"query_toks_no_value":["select","sum","(","t1",".","undergraduate",")","from","discipline_enrollments","as","t1","join","campuses","as","t2","on","t1",".","campus","=","t2",".","id","where","t1",".","year","=","value","and","t2",".","campus","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,1,false],null]],"table_units":[["table_unit",3],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],2004.0,null],"and",[false,2,[0,[0,2,false],null],"\"San Jose State University\"",null]]},"question_toks":["Wie","viele","Studenten","gibt","es","im","Staat","San","Jose"],"question":"Wie viele Studenten gibt es im Staat San Jose"},{"db_id":"activity_1","query":"SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age  <  20","query_toks":["SELECT","StuID","FROM","Participates_in","INTERSECT","SELECT","StuID","FROM","Student","WHERE","age","<","20"],"query_toks_no_value":["select","stuid","from","participates_in","intersect","select","stuid","from","student","where","age","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,4,[0,[0,10,false],null],20.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Ausweise","aller","Studierenden","an",",","die","an","einer","Aktivit\u00e4t","teilnehmen","und","j\u00fcnger","als","20","Jahre","sind","."],"question":"Zeige die Ausweise aller Studierenden an, die an einer Aktivit\u00e4t teilnehmen und j\u00fcnger als 20 Jahre sind."},{"db_id":"twitter_1","query":"SELECT avg(followers) FROM user_profiles WHERE UID NOT IN (SELECT UID FROM tweets)","query_toks":["SELECT","avg","(","followers",")","FROM","user_profiles","WHERE","UID","NOT","IN","(","SELECT","UID","FROM","tweets",")"],"query_toks_no_value":["select","avg","(","followers",")","from","user_profiles","where","uid","not","in","(","select","uid","from","tweets",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,11,false],null]]]],"union":null,"where":[[true,8,[0,[0,7,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finde","die","durchschnittliche","Anzahl","der","Follower","f\u00fcr","die","Benutzer",",","die","keinen","Tweet","haben","."],"question":"Finde die durchschnittliche Anzahl der Follower f\u00fcr die Benutzer, die keinen Tweet haben."},{"db_id":"college_1","query":"SELECT count(*) ,  dept_code FROM student GROUP BY dept_code","query_toks":["SELECT","count","(","*",")",",","dept_code","FROM","student","GROUP","BY","dept_code"],"query_toks_no_value":["select","count","(","*",")",",","dept_code","from","student","group","by","dept_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[[0,41,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,41,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Studierende","gibt","es","in","jeder","Abteilung","?"],"question":"Wie viele Studierende gibt es in jeder Abteilung?"},{"db_id":"college_1","query":"SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student)","query_toks":["SELECT","stu_fname",",","stu_gpa","FROM","student","WHERE","stu_gpa","<","(","SELECT","avg","(","stu_gpa",")","FROM","student",")"],"query_toks_no_value":["select","stu_fname",",","stu_gpa","from","student","where","stu_gpa","<","(","select","avg","(","stu_gpa",")","from","student",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,39,false],null]]]],"union":null,"where":[[false,4,[0,[0,39,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,39,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finde","den","Vornamen","und","GPA","der","Studenten",",","deren","GPA","niedriger","als","der","durchschnittliche","GPA","aller","Studenten","ist","."],"question":"Finde den Vornamen und GPA der Studenten, deren GPA niedriger als der durchschnittliche GPA aller Studenten ist."},{"db_id":"entrepreneur","query":"SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Investor","FROM","entrepreneur","GROUP","BY","Investor","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","investor","from","entrepreneur","group","by","investor","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","den","Investor","an",",","der","in","die","gr\u00f6\u00dfte","Anzahl","von","Unternehmern","investiert","hat","."],"question":"Gib den Investor an, der in die gr\u00f6\u00dfte Anzahl von Unternehmern investiert hat."},{"db_id":"activity_1","query":"SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\"","query_toks":["SELECT","phone",",","room",",","building","FROM","Faculty","WHERE","Fname","=","``","Jerry","''","AND","Lname","=","``","Prince","''"],"query_toks_no_value":["select","phone",",","room",",","building","from","faculty","where","fname","=","value","and","lname","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,20,false],null]],[0,[0,[0,21,false],null]],[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"Jerry\"",null],"and",[false,2,[0,[0,16,false],null],"\"Prince\"",null]]},"question_toks":["Zeige","die","Telefonnummer",",","den","Raum","und","das","Geb\u00e4ude","f\u00fcr","die","Fakult\u00e4t","namens","Jerry","Prince","an","."],"question":"Zeige die Telefonnummer, den Raum und das Geb\u00e4ude f\u00fcr die Fakult\u00e4t namens Jerry Prince an."},{"db_id":"entrepreneur","query":"SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID","query_toks":["SELECT","T2.Name","FROM","entrepreneur","AS","T1","JOIN","people","AS","T2","ON","T1.People_ID","=","T2.People_ID"],"query_toks_no_value":["select","t2",".","name","from","entrepreneur","as","t1","join","people","as","t2","on","t1",".","people_id","=","t2",".","people_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","die","Namen","der","Unternehmer","an","."],"question":"Gib die Namen der Unternehmer an."},{"db_id":"formula_1","query":"SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Australian Grand Prix\" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Chinese Grand Prix\"","query_toks":["SELECT","T3.forename",",","T3.surname","FROM","races","AS","T1","JOIN","results","AS","T2","ON","T1.raceid","=","T2.raceid","JOIN","drivers","AS","T3","ON","T2.driverid","=","T3.driverid","WHERE","T1.name","=","``","Australian","Grand","Prix","''","EXCEPT","SELECT","T3.forename",",","T3.surname","FROM","races","AS","T1","JOIN","results","AS","T2","ON","T1.raceid","=","T2.raceid","JOIN","drivers","AS","T3","ON","T2.driverid","=","T3.driverid","WHERE","T1.name","=","``","Chinese","Grand","Prix","''"],"query_toks_no_value":["select","t3",".","forename",",","t3",".","surname","from","races","as","t1","join","results","as","t2","on","t1",".","raceid","=","t2",".","raceid","join","drivers","as","t3","on","t2",".","driverid","=","t3",".","driverid","where","t1",".","name","=","value","except","select","t3",".","forename",",","t3",".","surname","from","races","as","t1","join","results","as","t2","on","t1",".","raceid","=","t2",".","raceid","join","drivers","as","t3","on","t2",".","driverid","=","t3",".","driverid","where","t1",".","name","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,44,false],null]],"table_units":[["table_unit",1],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"Chinese Grand Prix\"",null]]},"from":{"conds":[[false,2,[0,[0,10,false],null],[0,44,false],null]],"table_units":[["table_unit",1],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"Australian Grand Prix\"",null]]},"question_toks":["Wie","hei\u00dfen","die","Vor-","und","Nachnamen","aller","Fahrer",",","die","am","Gro\u00dfen","Preis","von","Australien",",","aber","nicht","am","Gro\u00dfen","Preis","von","China","teilgenommen","haben","?"],"question":"Wie hei\u00dfen die Vor- und Nachnamen aller Fahrer, die am Gro\u00dfen Preis von Australien, aber nicht am Gro\u00dfen Preis von China teilgenommen haben?"},{"db_id":"csu_1","query":"SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1","query_toks":["SELECT","T2.faculty","FROM","campuses","AS","T1","JOIN","faculty","AS","T2","ON","T1.id","=","t2.campus","JOIN","degrees","AS","T3","ON","T1.id","=","t3.campus","AND","t2.year","=","t3.year","WHERE","t2.year","=","2001","ORDER","BY","t3.degrees","LIMIT","1"],"query_toks_no_value":["select","t2",".","faculty","from","campuses","as","t1","join","faculty","as","t2","on","t1",".","id","=","t2",".","campus","join","degrees","as","t3","on","t1",".","id","=","t3",".","campus","and","t2",".","year","=","t3",".","year","where","t2",".","year","=","value","order","by","t3",".","degrees","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,21,false],null],"and",[false,2,[0,[0,22,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],2001.0,null]]},"question_toks":["Wie","viele","Fakult\u00e4ten","gibt","es","an","der","Universit\u00e4t",",","die","im","Jahr","2001","die","wenigsten","Abschl\u00fcsse","verliehen","haben","?"],"question":"Wie viele Fakult\u00e4ten gibt es an der Universit\u00e4t, die im Jahr 2001 die wenigsten Abschl\u00fcsse verliehen haben?"},{"db_id":"voter_2","query":"SELECT max(Age) FROM STUDENT","query_toks":["SELECT","max","(","Age",")","FROM","STUDENT"],"query_toks_no_value":["select","max","(","age",")","from","student"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","das","H\u00f6chstalter","aller","Studierenden","."],"question":"Finde das H\u00f6chstalter aller Studierenden."},{"db_id":"debate","query":"SELECT Party ,  COUNT(*) FROM people GROUP BY Party","query_toks":["SELECT","Party",",","COUNT","(","*",")","FROM","people","GROUP","BY","Party"],"query_toks_no_value":["select","party",",","count","(","*",")","from","people","group","by","party"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","verschiedenen","Parteien","von","Personen","zusammen","mit","der","Anzahl","der","Personen","in","jeder","Partei","an","."],"question":"Zeige die verschiedenen Parteien von Personen zusammen mit der Anzahl der Personen in jeder Partei an."},{"db_id":"loan_1","query":"SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.state  =  'New York'","query_toks":["SELECT","sum","(","T2.amount",")","FROM","bank","AS","T1","JOIN","loan","AS","T2","ON","T1.branch_id","=","T2.branch_id","WHERE","T1.state","=","'New","York","'"],"query_toks_no_value":["select","sum","(","t2",".","amount",")","from","bank","as","t1","join","loan","as","t2","on","t1",".","branch_id","=","t2",".","branch_id","where","t1",".","state","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,18,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"New York\"",null]]},"question_toks":["Wie","hoch","ist","der","Gesamtbetrag","der","von","Banken","im","Bundesstaat","New","York","verliehenen","Gelder","?"],"question":"Wie hoch ist der Gesamtbetrag der von Banken im Bundesstaat New York verliehenen Gelder?"},{"db_id":"college_1","query":"SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211' AND T1.stu_lname LIKE 'S%'","query_toks":["SELECT","T1.stu_fname","FROM","student","AS","T1","JOIN","enroll","AS","T2","ON","T1.stu_num","=","T2.stu_num","JOIN","CLASS","AS","T3","ON","T2.class_code","=","T3.class_code","WHERE","T3.crs_code","=","'ACCT-211","'","AND","T1.stu_lname","LIKE","'S","%","'"],"query_toks_no_value":["select","t1",".","stu_fname","from","student","as","t1","join","enroll","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","join","class","as","t3","on","t2",".","class_code","=","t3",".","class_code","where","t3",".","crs_code","=","value","and","t1",".","stu_lname","like","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,25,false],null]],"table_units":[["table_unit",6],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"ACCT-211\"",null],"and",[false,9,[0,[0,33,false],null],"\"S%\"",null]]},"question_toks":["Was","ist","der","Vorname","des","Sch\u00fclers",",","dessen","Nachname","mit","dem","Buchstaben","S","beginnt","und","der","am","Kurs","ACCT-211","teilnimmt","?"],"question":"Was ist der Vorname des Sch\u00fclers, dessen Nachname mit dem Buchstaben S beginnt und der am Kurs ACCT-211 teilnimmt?"},{"db_id":"music_1","query":"SELECT count(*) FROM files WHERE duration LIKE \"4:%\"","query_toks":["SELECT","count","(","*",")","FROM","files","WHERE","duration","LIKE","``","4",":","%","''"],"query_toks_no_value":["select","count","(","*",")","from","files","where","duration","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,9,[0,[0,11,false],null],"\"4:%\"",null]]},"question_toks":["Wie","viele","Lieder","mit","einer","Dauer","von","etwa","4","Minuten","gibt","es","?"],"question":"Wie viele Lieder mit einer Dauer von etwa 4 Minuten gibt es?"},{"db_id":"music_1","query":"SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"4:%\" UNION SELECT song_name FROM song WHERE languages  =  \"english\"","query_toks":["SELECT","T2.song_name","FROM","files","AS","T1","JOIN","song","AS","T2","ON","T1.f_id","=","T2.f_id","WHERE","T1.duration","LIKE","``","4",":","%","''","UNION","SELECT","song_name","FROM","song","WHERE","languages","=","``","english","''"],"query_toks_no_value":["select","t2",".","song_name","from","files","as","t1","join","song","as","t2","on","t1",".","f_id","=","t2",".","f_id","where","t1",".","duration","like","value","union","select","song_name","from","song","where","languages","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,16,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},"where":[[false,9,[0,[0,11,false],null],"\"4:%\"",null]]},"question_toks":["Wie","hei\u00dfen","die","Namen","aller","Lieder",",","die","etwa","4","Minuten","lang","oder","auf","Englisch","sind","?"],"question":"Wie hei\u00dfen die Namen aller Lieder, die etwa 4 Minuten lang oder auf Englisch sind?"},{"db_id":"cinema","query":"SELECT title ,  directed_by FROM film WHERE film_id NOT IN (SELECT film_id FROM schedule)","query_toks":["SELECT","title",",","directed_by","FROM","film","WHERE","film_id","NOT","IN","(","SELECT","film_id","FROM","schedule",")"],"query_toks_no_value":["select","title",",","directed_by","from","film","where","film_id","not","in","(","select","film_id","from","schedule",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","hei\u00dfen","Titel","und","Regisseur","der","Filme","ohne","Zeitplan","?"],"question":"Wie hei\u00dfen Titel und Regisseur der Filme ohne Zeitplan?"},{"db_id":"college_1","query":"SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student)","query_toks":["SELECT","stu_fname",",","stu_gpa","FROM","student","WHERE","stu_gpa","<","(","SELECT","avg","(","stu_gpa",")","FROM","student",")"],"query_toks_no_value":["select","stu_fname",",","stu_gpa","from","student","where","stu_gpa","<","(","select","avg","(","stu_gpa",")","from","student",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,39,false],null]]]],"union":null,"where":[[false,4,[0,[0,39,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,39,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","lautet","der","Vorname","und","der","GPA","jedes","Studenten",",","dessen","GPA","unter","dem","Durchschnitt","liegt","?"],"question":"Wie lautet der Vorname und der GPA jedes Studenten, dessen GPA unter dem Durchschnitt liegt?"},{"db_id":"voter_2","query":"SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18","query_toks":["SELECT","DISTINCT","T1.Fname",",","T1.LName","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","T2.VICE_President_VOTE","WHERE","T1.age","=","18"],"query_toks_no_value":["select","distinct","t1",".","fname",",","t1",".","lname","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","t2",".","vice_president_vote","where","t1",".","age","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,13,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],18.0,null]]},"question_toks":["Finde","den","Vor-","und","Nachnamen","aller","Studierenden","im","Alter","von","18","Jahren",",","die","Vizepr\u00e4sidenten-Stimmen","haben","."],"question":"Finde den Vor- und Nachnamen aller Studierenden im Alter von 18 Jahren, die Vizepr\u00e4sidenten-Stimmen haben."},{"db_id":"manufacturer","query":"SELECT sum(num_of_component) FROM furniture","query_toks":["SELECT","sum","(","num_of_component",")","FROM","furniture"],"query_toks_no_value":["select","sum","(","num_of_component",")","from","furniture"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","M\u00f6belkomponenten","gibt","es","insgesamt","?"],"question":"Wie viele M\u00f6belkomponenten gibt es insgesamt?"},{"db_id":"music_1","query":"SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\"","query_toks":["SELECT","avg","(","T2.rating",")","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T1.gender","=","``","Female","''"],"query_toks_no_value":["select","avg","(","t2",".","rating",")","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t1",".","gender","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,18,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"Female\"",null]]},"question_toks":["Wie","ist","die","durchschnittliche","Bewertung","der","Lieder",",","die","von","K\u00fcnstlerinnen","produzierten","werden","?"],"question":"Wie ist die durchschnittliche Bewertung der Lieder, die von K\u00fcnstlerinnen produzierten werden?"},{"db_id":"debate","query":"SELECT T2.Name ,  COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative  =  T2.People_ID GROUP BY T2.Name","query_toks":["SELECT","T2.Name",",","COUNT","(","*",")","FROM","debate_people","AS","T1","JOIN","people","AS","T2","ON","T1.Affirmative","=","T2.People_ID","GROUP","BY","T2.Name"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","debate_people","as","t1","join","people","as","t2","on","t1",".","affirmative","=","t2",".","people_id","group","by","t2",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,3,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Namen","der","Personen","und","die","Anzahl",",","in","denen","sie","auf","der","zustimmenden","Seite","der","Debatten","gestanden","haben","."],"question":"Zeige die Namen der Personen und die Anzahl, in denen sie auf der zustimmenden Seite der Debatten gestanden haben."},{"db_id":"college_1","query":"SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems'","query_toks":["SELECT","DISTINCT","T2.emp_fname",",","T3.prof_high_degree","FROM","CLASS","AS","T1","JOIN","employee","AS","T2","ON","T1.prof_num","=","T2.emp_num","JOIN","professor","AS","T3","ON","T2.emp_num","=","T3.emp_num","JOIN","department","AS","T4","ON","T4.dept_code","=","T3.dept_code","WHERE","T4.dept_name","=","'Computer","Info",".","Systems","'"],"query_toks_no_value":["select","distinct","t2",".","emp_fname",",","t3",".","prof_high_degree","from","class","as","t1","join","employee","as","t2","on","t1",".","prof_num","=","t2",".","emp_num","join","professor","as","t3","on","t2",".","emp_num","=","t3",".","emp_num","join","department","as","t4","on","t4",".","dept_code","=","t3",".","dept_code","where","t4",".","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,19,false],null]],[0,[0,[0,31,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Computer Info. Systems\"",null]]},"question_toks":["Finde","die","Vornamen","und","Abschl\u00fcsse","aller","Professoren",",","die","eine","Klasse","in","der","Computer-",",","Informatik-",",","System-Abteilung","Systeme","unterrichten","."],"question":"Finde die Vornamen und Abschl\u00fcsse aller Professoren, die eine Klasse in der Computer-, Informatik-, System-Abteilung Systeme unterrichten."},{"db_id":"college_1","query":"SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code","query_toks":["SELECT","count","(","*",")",",","T3.school_code","FROM","CLASS","AS","T1","JOIN","course","AS","T2","ON","T1.crs_code","=","T2.crs_code","JOIN","department","AS","T3","ON","T2.dept_code","=","T3.dept_code","GROUP","BY","T3.school_code"],"query_toks_no_value":["select","count","(","*",")",",","t3",".","school_code","from","class","as","t1","join","course","as","t2","on","t1",".","crs_code","=","t2",".","crs_code","join","department","as","t3","on","t2",".","dept_code","=","t3",".","dept_code","group","by","t3",".","school_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,13,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Klassen","gibt","es","f\u00fcr","jede","Schule","?"],"question":"Wie viele Klassen gibt es f\u00fcr jede Schule?"},{"db_id":"voter_2","query":"SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.Sex  =  \"M\" AND T2.Election_Cycle  =  \"Fall\"","query_toks":["SELECT","count","(","*",")","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","Class_Senator_Vote","WHERE","T1.Sex","=","``","M","''","AND","T2.Election_Cycle","=","``","Fall","''"],"query_toks_no_value":["select","count","(","*",")","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","class_senator_vote","where","t1",".","sex","=","value","and","t2",".","election_cycle","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"M\"",null],"and",[false,2,[0,[0,11,false],null],"\"Fall\"",null]]},"question_toks":["Z\u00e4hle","die","Anzahl","der","m\u00e4nnlichen","Studenten",",","die","im","Herbstwahlzyklus","Klassensenatoren-Stimmen","hatten","."],"question":"Z\u00e4hle die Anzahl der m\u00e4nnlichen Studenten, die im Herbstwahlzyklus Klassensenatoren-Stimmen hatten."},{"db_id":"twitter_1","query":"SELECT T1.name ,  T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  1","query_toks":["SELECT","T1.name",",","T1.email","FROM","user_profiles","AS","T1","JOIN","follows","AS","T2","ON","T1.uid","=","T2.f1","GROUP","BY","T2.f1","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","name",",","t1",".","email","from","user_profiles","as","t1","join","follows","as","t2","on","t1",".","uid","=","t2",".","f1","group","by","t2",".","f1","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,1,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","und","die","E-Mail","der","Benutzer",",","die","mehr","als","einen","Follower","haben","."],"question":"Finde den Namen und die E-Mail der Benutzer, die mehr als einen Follower haben."},{"db_id":"entrepreneur","query":"SELECT avg(Money_Requested) FROM entrepreneur","query_toks":["SELECT","avg","(","Money_Requested",")","FROM","entrepreneur"],"query_toks_no_value":["select","avg","(","money_requested",")","from","entrepreneur"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","das","durchschnittliche","Geld",",","dass","von","allen","Unternehmern","verlangt","wird","?"],"question":"Wie hoch ist das durchschnittliche Geld, dass von allen Unternehmern verlangt wird?"},{"db_id":"swimming","query":"SELECT country FROM stadium GROUP BY country HAVING count(*)  <=  3","query_toks":["SELECT","country","FROM","stadium","GROUP","BY","country","HAVING","count","(","*",")","<","=","3"],"query_toks_no_value":["select","country","from","stadium","group","by","country","having","count","(","*",")","<","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,16,false]],"having":[[false,6,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","Land","hat","h\u00f6chstens","3","Stadien","auf","der","Liste","?"],"question":"Welches Land hat h\u00f6chstens 3 Stadien auf der Liste?"},{"db_id":"activity_1","query":"SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1","query_toks":["SELECT","rank","FROM","Faculty","GROUP","BY","rank","ORDER","BY","count","(","*",")","ASC","LIMIT","1"],"query_toks_no_value":["select","rank","from","faculty","group","by","rank","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,18,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Rang","hat","die","geringste","Anzahl","von","Fakult\u00e4tsmitgliedern","?"],"question":"Welcher Rang hat die geringste Anzahl von Fakult\u00e4tsmitgliedern?"},{"db_id":"college_1","query":"SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1","query_toks":["SELECT","T2.emp_fname","FROM","CLASS","AS","T1","JOIN","employee","AS","T2","ON","T1.prof_num","=","T2.emp_num","GROUP","BY","T1.prof_num","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","t2",".","emp_fname","from","class","as","t1","join","employee","as","t2","on","t1",".","prof_num","=","t2",".","emp_num","group","by","t1",".","prof_num","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Vornamen","von","Professoren",",","die","mehr","als","eine","Klasse","unterrichten","."],"question":"Finde die Vornamen von Professoren, die mehr als eine Klasse unterrichten."},{"db_id":"college_1","query":"SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code","query_toks":["SELECT","sum","(","T1.crs_credit",")",",","T1.dept_code","FROM","course","AS","T1","JOIN","CLASS","AS","T2","ON","T1.crs_code","=","T2.crs_code","GROUP","BY","T1.dept_code"],"query_toks_no_value":["select","sum","(","t1",".","crs_credit",")",",","t1",".","dept_code","from","course","as","t1","join","class","as","t2","on","t1",".","crs_code","=","t2",".","crs_code","group","by","t1",".","dept_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,10,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Gesamtkreditpunkte","von","jeder","Abteilung","angebotenen","Kurse","."],"question":"Finde die Gesamtkreditpunkte von jeder Abteilung angebotenen Kurse."},{"db_id":"sakila_1","query":"SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia'","query_toks":["SELECT","count","(","*",")","FROM","city","AS","T1","JOIN","country","AS","T2","ON","T1.country_id","=","T2.country_id","WHERE","T2.country","=","'Australia","'"],"query_toks_no_value":["select","count","(","*",")","from","city","as","t1","join","country","as","t2","on","t1",".","country_id","=","t2",".","country_id","where","t2",".","country","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,20,false],null]],"table_units":[["table_unit",3],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Australia\"",null]]},"question_toks":["Wie","viele","St\u00e4dte","gibt","es","in","Australien","?"],"question":"Wie viele St\u00e4dte gibt es in Australien?"},{"db_id":"tracking_orders","query":"SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"","query_toks":["SELECT","invoice_number","FROM","invoices","WHERE","invoice_date","<","``","1989-09-03","''","OR","invoice_date",">","``","2007-12-25","''"],"query_toks_no_value":["select","invoice_number","from","invoices","where","invoice_date","<","value","or","invoice_date",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,4,[0,[0,5,false],null],"\"1989-09-03\"",null],"or",[false,3,[0,[0,5,false],null],"\"2007-12-25\"",null]]},"question_toks":["Wie","lauten","die","Rechnungsnummern",",","die","vor","dem","03.09.1989","oder","nach","dem","25.12.2007","erstellt","wurden","?"],"question":"Wie lauten die Rechnungsnummern, die vor dem 03.09.1989 oder nach dem 25.12.2007 erstellt wurden?"},{"db_id":"store_product","query":"SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"Miramichi\"","query_toks":["SELECT","t1.product","FROM","product","AS","t1","JOIN","store_product","AS","t2","ON","t1.product_id","=","t2.product_id","JOIN","store","AS","t3","ON","t2.store_id","=","t3.store_id","WHERE","t3.store_name","=","``","Miramichi","''"],"query_toks_no_value":["select","t1",".","product","from","product","as","t1","join","store_product","as","t2","on","t1",".","product_id","=","t2",".","product_id","join","store","as","t3","on","t2",".","store_id","=","t3",".","store_id","where","t3",".","store_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,20,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Miramichi\"",null]]},"question_toks":["Welche","Produkte","sind","im","Gesch\u00e4ft","mit","dem","Namen","``","Miramichi","''","erh\u00e4ltlich","?"],"question":"Welche Produkte sind im Gesch\u00e4ft mit dem Namen \"Miramichi\" erh\u00e4ltlich?"},{"db_id":"formula_1","query":"SELECT DISTINCT forename FROM drivers ORDER BY forename ASC","query_toks":["SELECT","DISTINCT","forename","FROM","drivers","ORDER","BY","forename","ASC"],"query_toks_no_value":["select","distinct","forename","from","drivers","order","by","forename","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,22,false],null]]],"select":[true,[[0,[0,[0,22,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","die","Vornamen","aller","verschiedenen","Fahrer","in","alphabetischer","Reihenfolge","?"],"question":"Liste die Vornamen aller verschiedenen Fahrer in alphabetischer Reihenfolge?"},{"db_id":"sakila_1","query":"SELECT count(DISTINCT last_name) FROM actor","query_toks":["SELECT","count","(","DISTINCT","last_name",")","FROM","actor"],"query_toks_no_value":["select","count","(","distinct","last_name",")","from","actor"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,3,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Nachnamen","haben","die","Schauspieler","und","Schauspielerinnen","?"],"question":"Wie viele verschiedene Nachnamen haben die Schauspieler und Schauspielerinnen?"},{"db_id":"game_injury","query":"SELECT name FROM stadium WHERE name LIKE \"%Bank%\"","query_toks":["SELECT","name","FROM","stadium","WHERE","name","LIKE","``","%","Bank","%","''"],"query_toks_no_value":["select","name","from","stadium","where","name","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,9,[0,[0,2,false],null],"\"%Bank%\"",null]]},"question_toks":["Welcher","Stadionname","enth\u00e4lt","die","Teilzeichenfolge","``","Bank","''","?"],"question":"Welcher Stadionname enth\u00e4lt die Teilzeichenfolge \"Bank\"?"},{"db_id":"game_injury","query":"SELECT count(*) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident )","query_toks":["SELECT","count","(","*",")","FROM","game","WHERE","id","NOT","IN","(","SELECT","game_id","FROM","injury_accident",")"],"query_toks_no_value":["select","count","(","*",")","from","game","where","id","not","in","(","select","game_id","from","injury_accident",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,8,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","viele","Spiele","sind","frei","von","Verletzungsunf\u00e4llen","?"],"question":"Wie viele Spiele sind frei von Verletzungsunf\u00e4llen?"},{"db_id":"formula_1","query":"SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2","query_toks":["SELECT","T1.driverid",",","T1.forename",",","T1.surname","FROM","drivers","AS","T1","JOIN","laptimes","AS","T2","ON","T1.driverid","=","T2.driverid","WHERE","POSITION","=","'1","'","GROUP","BY","T1.driverid","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","driverid",",","t1",".","forename",",","t1",".","surname","from","drivers","as","t1","join","laptimes","as","t2","on","t1",".","driverid","=","t2",".","driverid","where","position","=","value","group","by","t1",".","driverid","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,90,false],null]],"table_units":[["table_unit",2],["table_unit",12]]},"groupBy":[[0,18,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,22,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,92,false],null],"\"1\"",null]]},"question_toks":["Wie","lautet","die","ID",",","der","Vor-","und","Nachname","des","Fahrers",",","der","mindestens","zweimal","die","erste","Position","in","der","Rundenzeit","belegt","hat","?"],"question":"Wie lautet die ID, der Vor- und Nachname des Fahrers, der mindestens zweimal die erste Position in der Rundenzeit belegt hat?"},{"db_id":"csu_1","query":"SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"","query_toks":["SELECT","campus","FROM","campuses","WHERE","county","=","``","Los","Angeles","''"],"query_toks_no_value":["select","campus","from","campuses","where","county","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Los Angeles\"",null]]},"question_toks":["Welche","Campusse","befinden","sich","im","Bezirk","Los","Angeles","?"],"question":"Welche Campusse befinden sich im Bezirk Los Angeles?"},{"db_id":"formula_1","query":"SELECT forename ,  surname FROM drivers WHERE nationality = \"German\"","query_toks":["SELECT","forename",",","surname","FROM","drivers","WHERE","nationality","=","``","German","''"],"query_toks_no_value":["select","forename",",","surname","from","drivers","where","nationality","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"German\"",null]]},"question_toks":["Finde","den","Vor-","und","Nachnamen","von","Fahrern","mit","deutscher","Nationalit\u00e4t","?"],"question":"Finde den Vor- und Nachnamen von Fahrern mit deutscher Nationalit\u00e4t?"},{"db_id":"swimming","query":"SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year  >  2006","query_toks":["SELECT","country","FROM","stadium","EXCEPT","SELECT","country","FROM","stadium","WHERE","opening_year",">","2006"],"query_toks_no_value":["select","country","from","stadium","except","select","country","from","stadium","where","opening_year",">","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,3,[0,[0,17,false],null],2006.0,null]]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","L\u00e4nder","haben","kein","Stadion",",","das","nach","2006","er\u00f6ffnet","wurde","?"],"question":"Welche L\u00e4nder haben kein Stadion, das nach 2006 er\u00f6ffnet wurde?"},{"db_id":"sakila_1","query":"SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1","query_toks":["SELECT","payment_date","FROM","payment","ORDER","BY","payment_date","ASC","LIMIT","1"],"query_toks_no_value":["select","payment_date","from","payment","order","by","payment_date","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",12]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,66,false],null]]],"select":[false,[[0,[0,[0,66,false],null]]]],"union":null,"where":[]},"question_toks":["Was","war","das","Datum","der","fr\u00fchesten","Bezahlung","?"],"question":"Was war das Datum der fr\u00fchesten Bezahlung?"},{"db_id":"formula_1","query":"SELECT count(*) ,  constructorid FROM constructorStandings GROUP BY constructorid","query_toks":["SELECT","count","(","*",")",",","constructorid","FROM","constructorStandings","GROUP","BY","constructorid"],"query_toks_no_value":["select","count","(","*",")",",","constructorid","from","constructorstandings","group","by","constructorid"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[[0,38,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,38,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Rennen","gibt","es","f\u00fcr","jedes","Konstrukteurskennzeichen","?"],"question":"Wie viele Rennen gibt es f\u00fcr jedes Konstrukteurskennzeichen?"},{"db_id":"voter_2","query":"SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  \"Fall\"","query_toks":["SELECT","DISTINCT","T1.Age","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","T2.Secretary_Vote","WHERE","T2.Election_Cycle","=","``","Fall","''"],"query_toks_no_value":["select","distinct","t1",".","age","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","t2",".","secretary_vote","where","t2",".","election_cycle","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,14,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Fall\"",null]]},"question_toks":["Finde","das","unterschiedliche","Alter","der","Studierenden",",","die","im","Herbstwahlzyklus","Sekret\u00e4r-Stimmen","haben","."],"question":"Finde das unterschiedliche Alter der Studierenden, die im Herbstwahlzyklus Sekret\u00e4r-Stimmen haben. "},{"db_id":"sakila_1","query":"SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'","query_toks":["SELECT","DISTINCT","T1.first_name",",","T1.last_name","FROM","staff","AS","T1","JOIN","rental","AS","T2","ON","T1.staff_id","=","T2.staff_id","JOIN","customer","AS","T3","ON","T2.customer_id","=","T3.customer_id","WHERE","T3.first_name","=","'APRIL","'","AND","T3.last_name","=","'BURNS","'"],"query_toks_no_value":["select","distinct","t1",".","first_name",",","t1",".","last_name","from","staff","as","t1","join","rental","as","t2","on","t1",".","staff_id","=","t2",".","staff_id","join","customer","as","t3","on","t2",".","customer_id","=","t3",".","customer_id","where","t3",".","first_name","=","value","and","t3",".","last_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,75,false],null],[0,73,false],null]],"table_units":[["table_unit",14],["table_unit",13]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,76,false],null]],[0,[0,[0,77,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"APRIL\"",null],"and",[false,2,[0,[0,26,false],null],"\"BURNS\"",null]]},"question_toks":["Wie","lautet","der","vollst\u00e4ndige","Name","des","Mitarbeiters",",","der","einen","Film","an","einen","Kunden","mit","dem","Vornamen","April","und","dem","Nachnamen","Burns","ausgeliehen","hat","?"],"question":"Wie lautet der vollst\u00e4ndige Name des Mitarbeiters, der einen Film an einen Kunden mit dem Vornamen April und dem Nachnamen Burns ausgeliehen hat?"},{"db_id":"voter_2","query":"SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  \"Fall\"","query_toks":["SELECT","DISTINCT","T1.Age","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","T2.Secretary_Vote","WHERE","T2.Election_Cycle","=","``","Fall","''"],"query_toks_no_value":["select","distinct","t1",".","age","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","t2",".","secretary_vote","where","t2",".","election_cycle","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,14,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Fall\"",null]]},"question_toks":["Was","sind","die","verschiedenen","Altersgruppen","der","Studierenden",",","die","im","Herbstwahlzyklus","Sekret\u00e4r-Stimmen","haben","?"],"question":"Was sind die verschiedenen Altersgruppen der Studierenden, die im Herbstwahlzyklus Sekret\u00e4r-Stimmen haben?"},{"db_id":"college_1","query":"SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  'Accounting' OR T2.dept_name  =  'Biology'","query_toks":["SELECT","count","(","*",")","FROM","professor","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","WHERE","T2.dept_name","=","'Accounting","'","OR","T2.dept_name","=","'Biology","'"],"query_toks_no_value":["select","count","(","*",")","from","professor","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","where","t2",".","dept_name","=","value","or","t2",".","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,28,false],null],[0,11,false],null]],"table_units":[["table_unit",5],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Accounting\"",null],"or",[false,2,[0,[0,12,false],null],"\"Biology\"",null]]},"question_toks":["Was","ist","die","Anzahl","der","Professoren",",","die","im","Fachbereich","Rechnungswesen","oder","Biologie","t\u00e4tig","sind","?"],"question":"Was ist die Anzahl der Professoren, die im Fachbereich Rechnungswesen oder Biologie t\u00e4tig sind?"},{"db_id":"activity_1","query":"SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in","query_toks":["SELECT","StuID","FROM","Student","EXCEPT","SELECT","StuID","FROM","Participates_in"],"query_toks_no_value":["select","stuid","from","student","except","select","stuid","from","participates_in"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Kennungen","der","Studierenden",",","die","an","keiner","Aktivit\u00e4t","beteiligt","sind","?"],"question":"Wie lauten die Kennungen der Studierenden, die an keiner Aktivit\u00e4t beteiligt sind?"},{"db_id":"cinema","query":"SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.directed_by ORDER BY sum(T1.show_times_per_day) DESC LIMIT 1","query_toks":["SELECT","T2.directed_by","FROM","schedule","AS","T1","JOIN","film","AS","T2","ON","T1.film_id","=","T2.film_id","GROUP","BY","T2.directed_by","ORDER","BY","sum","(","T1.show_times_per_day",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","directed_by","from","schedule","as","t1","join","film","as","t2","on","t1",".","film_id","=","t2",".","film_id","group","by","t2",".","directed_by","order","by","sum","(","t1",".","show_times_per_day",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,14,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,16,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Zeig","den","Regisseur","mit","der","gr\u00f6\u00dften","Anzahl","an","Sendezeit","insgesamt","."],"question":"Zeig den Regisseur mit der gr\u00f6\u00dften Anzahl an Sendezeit insgesamt. "},{"db_id":"twitter_1","query":"SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1","query_toks":["SELECT","name","FROM","user_profiles","ORDER","BY","followers","DESC","LIMIT","1"],"query_toks_no_value":["select","name","from","user_profiles","order","by","followers","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","des","Benutzers",",","der","die","gr\u00f6\u00dfte","Anzahl","von","Followern","hat","."],"question":"Finde den Namen des Benutzers, der die gr\u00f6\u00dfte Anzahl von Followern hat."},{"db_id":"college_1","query":"SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname","query_toks":["SELECT","T2.emp_fname",",","T1.prof_office","FROM","professor","AS","T1","JOIN","employee","AS","T2","ON","T1.emp_num","=","T2.emp_num","ORDER","BY","T2.emp_fname"],"query_toks_no_value":["select","t2",".","emp_fname",",","t1",".","prof_office","from","professor","as","t1","join","employee","as","t2","on","t1",".","emp_num","=","t2",".","emp_num","order","by","t2",".","emp_fname"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,27,false],null],[0,17,false],null]],"table_units":[["table_unit",5],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,19,false],null]]],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,29,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Vornamen","und","B\u00fcros","aller","Professoren","in","alphabetischer","Reihenfolge","ihres","Vornamens","."],"question":"Finde die Vornamen und B\u00fcros aller Professoren in alphabetischer Reihenfolge ihres Vornamens."},{"db_id":"college_1","query":"SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'QM-261'","query_toks":["SELECT","T1.emp_fname","FROM","employee","AS","T1","JOIN","CLASS","AS","T2","ON","T1.emp_num","=","T2.prof_num","WHERE","crs_code","=","'CIS-220","'","INTERSECT","SELECT","T1.emp_fname","FROM","employee","AS","T1","JOIN","CLASS","AS","T2","ON","T1.emp_num","=","T2.prof_num","WHERE","crs_code","=","'QM-261","'"],"query_toks_no_value":["select","t1",".","emp_fname","from","employee","as","t1","join","class","as","t2","on","t1",".","emp_num","=","t2",".","prof_num","where","crs_code","=","value","intersect","select","t1",".","emp_fname","from","employee","as","t1","join","class","as","t2","on","t1",".","emp_num","=","t2",".","prof_num","where","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"QM-261\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"CIS-220\"",null]]},"question_toks":["Finde","den","Vornamen","des","Professors",",","der","zwei","Kurse","mit","dem","Code","CIS-220","und","QM-261","unterrichtet","."],"question":"Finde den Vornamen des Professors, der zwei Kurse mit dem Code CIS-220 und QM-261 unterrichtet."},{"db_id":"music_1","query":"SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is","query_toks":["SELECT","min","(","T1.duration",")",",","min","(","T2.rating",")",",","T2.genre_is","FROM","files","AS","T1","JOIN","song","AS","T2","ON","T1.f_id","=","T2.f_id","GROUP","BY","T2.genre_is","ORDER","BY","T2.genre_is"],"query_toks_no_value":["select","min","(","t1",".","duration",")",",","min","(","t2",".","rating",")",",","t2",".","genre_is","from","files","as","t1","join","song","as","t2","on","t1",".","f_id","=","t2",".","f_id","group","by","t2",".","genre_is","order","by","t2",".","genre_is"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,16,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,17,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,17,false],null]]],"select":[false,[[2,[0,[0,11,false],null]],[2,[0,[0,18,false],null]],[0,[0,[0,17,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","k\u00fcrzeste","Dauer","und","die","niedrigste","Bewertung","von","Liedern",",","die","nach","Genres","gruppiert","und","nach","Genres","geordnet","sind","?"],"question":"Was sind die k\u00fcrzeste Dauer und die niedrigste Bewertung von Liedern, die nach Genres gruppiert und nach Genres geordnet sind?"},{"db_id":"tracking_orders","query":"SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\"","query_toks":["SELECT","order_id","FROM","shipments","WHERE","shipment_date",">","``","2000-01-01","''"],"query_toks_no_value":["select","order_id","from","shipments","where","shipment_date",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,21,false],null]]]],"union":null,"where":[[false,3,[0,[0,24,false],null],"\"2000-01-01\"",null]]},"question_toks":["Finde","die","IDs","von","Bestellungen",",","die","nach","dem","01.01.2000","versandt","wurden","."],"question":"Finde die IDs von Bestellungen, die nach dem 01.01.2000 versandt wurden."},{"db_id":"college_1","query":"SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code","query_toks":["SELECT","count","(","*",")",",","T3.school_code","FROM","CLASS","AS","T1","JOIN","course","AS","T2","ON","T1.crs_code","=","T2.crs_code","JOIN","department","AS","T3","ON","T2.dept_code","=","T3.dept_code","GROUP","BY","T3.school_code"],"query_toks_no_value":["select","count","(","*",")",",","t3",".","school_code","from","class","as","t1","join","course","as","t2","on","t1",".","crs_code","=","t2",".","crs_code","join","department","as","t3","on","t2",".","dept_code","=","t3",".","dept_code","group","by","t3",".","school_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,13,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Anzahl","der","Klassen","in","jeder","Schule","."],"question":"Finde die Anzahl der Klassen in jeder Schule."},{"db_id":"music_1","query":"SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"3:%\"","query_toks":["SELECT","max","(","T2.resolution",")",",","min","(","T2.resolution",")","FROM","files","AS","T1","JOIN","song","AS","T2","ON","T1.f_id","=","T2.f_id","WHERE","T1.duration","LIKE","``","3",":","%","''"],"query_toks_no_value":["select","max","(","t2",".","resolution",")",",","min","(","t2",".","resolution",")","from","files","as","t1","join","song","as","t2","on","t1",".","f_id","=","t2",".","f_id","where","t1",".","duration","like","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,16,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,21,false],null]],[2,[0,[0,21,false],null]]]],"union":null,"where":[[false,9,[0,[0,11,false],null],"\"3:%\"",null]]},"question_toks":["Welche","sind","die","maximale","und","minimale","Aufl\u00f6sung","von","Liedern","mit","einer","Dauer","von","3","Minuten","?"],"question":"Welche sind die maximale und minimale Aufl\u00f6sung von Liedern mit einer Dauer von 3 Minuten?"},{"db_id":"cinema","query":"SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\"","query_toks":["SELECT","count","(","*",")","FROM","film","WHERE","title","LIKE","``","%","Dummy","%","''"],"query_toks_no_value":["select","count","(","*",")","from","film","where","title","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,9,[0,[0,4,false],null],"\"%Dummy%\"",null]]},"question_toks":["Wie","viele","Filme","haben","das","Wort","'Dummy","'","in","ihrem","Titel","?"],"question":"Wie viele Filme haben das Wort 'Dummy' in ihrem Titel?"},{"db_id":"tracking_orders","query":"SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id","query_toks":["SELECT","T3.product_name",",","count","(","*",")","FROM","orders","AS","T1","JOIN","order_items","AS","T2","JOIN","products","AS","T3","ON","T1.order_id","=","T2.order_id","AND","T2.product_id","=","T3.product_id","GROUP","BY","T3.product_id"],"query_toks_no_value":["select","t3",".","product_name",",","count","(","*",")","from","orders","as","t1","join","order_items","as","t2","join","products","as","t3","on","t1",".","order_id","=","t2",".","order_id","and","t2",".","product_id","=","t3",".","product_id","group","by","t3",".","product_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,17,false],null],"and",[false,2,[0,[0,16,false],null],[0,12,false],null]],"table_units":[["table_unit",2],["table_unit",4],["table_unit",3]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","den","Namen","und","die","Anzahl","jedes","Produkts","in","allen","Bestellungen","auf","."],"question":"Liste den Namen und die Anzahl jedes Produkts in allen Bestellungen auf."},{"db_id":"college_1","query":"SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code","query_toks":["SELECT","count","(","DISTINCT","dept_name",")",",","school_code","FROM","department","GROUP","BY","school_code"],"query_toks_no_value":["select","count","(","distinct","dept_name",")",",","school_code","from","department","group","by","school_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,13,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,12,true],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Anzahl","der","Abteilungen","in","jeder","Schule","."],"question":"Finde die Anzahl der Abteilungen in jeder Schule. "},{"db_id":"music_1","query":"SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")","query_toks":["SELECT","DISTINCT","song_name","FROM","song","WHERE","resolution",">","(","SELECT","min","(","resolution",")","FROM","song","WHERE","languages","=","``","english","''",")"],"query_toks_no_value":["select","distinct","song_name","from","song","where","resolution",">","(","select","min","(","resolution",")","from","song","where","languages","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,3,[0,[0,21,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,21,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},null]]},"question_toks":["Welches","sind","die","verschiedenen","Namen","f\u00fcr","alle","Lieder",",","die","eine","h\u00f6here","Aufl\u00f6sung","als","englische","Lieder","haben","?"],"question":"Welches sind die verschiedenen Namen f\u00fcr alle Lieder, die eine h\u00f6here Aufl\u00f6sung als englische Lieder haben?"},{"db_id":"cinema","query":"SELECT DISTINCT directed_by FROM film","query_toks":["SELECT","DISTINCT","directed_by","FROM","film"],"query_toks_no_value":["select","distinct","directed_by","from","film"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Wer","sind","alle","Regisseure","?"],"question":"Wer sind alle Regisseure?"},{"db_id":"college_1","query":"SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1","query_toks":["SELECT","T1.stu_fname","FROM","student","AS","T1","JOIN","enroll","AS","T2","ON","T1.stu_num","=","T2.stu_num","GROUP","BY","T2.stu_num","HAVING","count","(","*",")","=","1"],"query_toks_no_value":["select","t1",".","stu_fname","from","student","as","t1","join","enroll","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","group","by","t2",".","stu_num","having","count","(","*",")","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,25,false],null]],"table_units":[["table_unit",6],["table_unit",4]]},"groupBy":[[0,25,false]],"having":[[false,2,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Vornamen","von","Studenten",",","die","genau","einen","Kurs","besuchten","."],"question":"Finde die Vornamen von Studenten, die genau einen Kurs besuchten."},{"db_id":"formula_1","query":"SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 )","query_toks":["SELECT","count","(","DISTINCT","driverId",")","FROM","results","WHERE","raceId","NOT","IN","(","SELECT","raceId","FROM","races","WHERE","YEAR","!","=","2009",")"],"query_toks_no_value":["select","count","(","distinct","driverid",")","from","results","where","raceid","not","in","(","select","raceid","from","races","where","year","!","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,45,true],null]]]],"union":null,"where":[[true,8,[0,[0,44,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,7,[0,[0,11,false],null],2009.0,null]]},null]]},"question_toks":["Wie","viele","Fahrer","haben","2009","nicht","an","den","Rennen","teilgenommen","?"],"question":"Wie viele Fahrer haben 2009 nicht an den Rennen teilgenommen?"},{"db_id":"mountain_photos","query":"SELECT count(DISTINCT T2.camera_lens_id) FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.country  =  'Ethiopia'","query_toks":["SELECT","count","(","DISTINCT","T2.camera_lens_id",")","FROM","mountain","AS","T1","JOIN","photos","AS","T2","ON","T1.id","=","T2.mountain_id","WHERE","T1.country","=","'Ethiopia","'"],"query_toks_no_value":["select","count","(","distinct","t2",".","camera_lens_id",")","from","mountain","as","t1","join","photos","as","t2","on","t1",".","id","=","t2",".","mountain_id","where","t1",".","country","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,14,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,13,true],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"Ethiopia\"",null]]},"question_toks":["Wie","viele","verschiedene","Arten","von","Kameraobjektiven","werden","verwendet",",","um","Fotos","von","Bergen","in","'\u00c4thiopien","'","zu","machen","?"],"question":"Wie viele verschiedene Arten von Kameraobjektiven werden verwendet, um Fotos von Bergen in '\u00c4thiopien' zu machen?"},{"db_id":"college_1","query":"SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code","query_toks":["SELECT","count","(","*",")",",","crs_code","FROM","CLASS","GROUP","BY","crs_code"],"query_toks_no_value":["select","count","(","*",")",",","crs_code","from","class","group","by","crs_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Unterteilungen","hat","jeder","Kurs","?"],"question":"Wie viele Unterteilungen hat jeder Kurs?"},{"db_id":"voter_2","query":"SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor","query_toks":["SELECT","Advisor",",","count","(","*",")","FROM","STUDENT","GROUP","BY","Advisor"],"query_toks_no_value":["select","advisor",",","count","(","*",")","from","student","group","by","advisor"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","f\u00fcr","jeden","Berater","die","Gesamtanzahl","der","von","ihm","oder","ihr","beratenen","Studierenden","an","."],"question":"Gib f\u00fcr jeden Berater die Gesamtanzahl der von ihm oder ihr beratenen Studierenden an."},{"db_id":"activity_1","query":"SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank","query_toks":["SELECT","T1.rank",",","count","(","*",")","FROM","Faculty","AS","T1","JOIN","Student","AS","T2","ON","T1.FacID","=","T2.advisor","GROUP","BY","T1.rank"],"query_toks_no_value":["select","t1",".","rank",",","count","(","*",")","from","faculty","as","t1","join","student","as","t2","on","t1",".","facid","=","t2",".","advisor","group","by","t1",".","rank"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,13,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Studierende","werden","von","jedem","Rang","der","Fakult\u00e4t","beraten","?","Gib","den","Rang","und","die","Anzahl","der","Studierenden","an","."],"question":"Wie viele Studierende werden von jedem Rang der Fakult\u00e4t beraten? Gib den Rang und die Anzahl der Studierenden an."},{"db_id":"entrepreneur","query":"SELECT count(DISTINCT Company) FROM entrepreneur","query_toks":["SELECT","count","(","DISTINCT","Company",")","FROM","entrepreneur"],"query_toks_no_value":["select","count","(","distinct","company",")","from","entrepreneur"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,3,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Unternehmen","gibt","es","?"],"question":"Wie viele verschiedene Unternehmen gibt es?"},{"db_id":"cinema","query":"SELECT avg(capacity) ,  min(capacity) ,  max(capacity) FROM cinema WHERE openning_year  >=  2011","query_toks":["SELECT","avg","(","capacity",")",",","min","(","capacity",")",",","max","(","capacity",")","FROM","cinema","WHERE","openning_year",">","=","2011"],"query_toks_no_value":["select","avg","(","capacity",")",",","min","(","capacity",")",",","max","(","capacity",")","from","cinema","where","openning_year",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,11,false],null]],[2,[0,[0,11,false],null]],[1,[0,[0,11,false],null]]]],"union":null,"where":[[false,5,[0,[0,10,false],null],2011.0,null]]},"question_toks":["Zeige","die","durchschnittliche",",","minimale","und","maximale","Kapazit\u00e4t","f\u00fcr","alle","Kinos","an",",","die","im","Jahr","2011","oder","sp\u00e4ter","er\u00f6ffnet","wurden","."],"question":"Zeige die durchschnittliche, minimale und maximale Kapazit\u00e4t f\u00fcr alle Kinos an, die im Jahr 2011 oder sp\u00e4ter er\u00f6ffnet wurden."},{"db_id":"csu_1","query":"SELECT campus FROM campuses WHERE YEAR  <  1800","query_toks":["SELECT","campus","FROM","campuses","WHERE","YEAR","<","1800"],"query_toks_no_value":["select","campus","from","campuses","where","year","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,4,[0,[0,5,false],null],1800.0,null]]},"question_toks":["Finde","die","Namen","der","vor","1800","er\u00f6ffneten","Campusse","."],"question":"Finde die Namen der vor 1800 er\u00f6ffneten Campusse."},{"db_id":"csu_1","query":"SELECT count(*) FROM campuses","query_toks":["SELECT","count","(","*",")","FROM","campuses"],"query_toks_no_value":["select","count","(","*",")","from","campuses"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","CSU-Campusse","gibt","es","?"],"question":"Wie viele CSU-Campusse gibt es?"},{"db_id":"music_1","query":"SELECT f_id FROM files WHERE formats  =  \"mp4\" UNION SELECT f_id FROM song WHERE resolution  >  720","query_toks":["SELECT","f_id","FROM","files","WHERE","formats","=","``","mp4","''","UNION","SELECT","f_id","FROM","song","WHERE","resolution",">","720"],"query_toks_no_value":["select","f_id","from","files","where","formats","=","value","union","select","f_id","from","song","where","resolution",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,3,[0,[0,21,false],null],720.0,null]]},"where":[[false,2,[0,[0,12,false],null],"\"mp4\"",null]]},"question_toks":["Was","sind","die","Kennungen","aller","Lieder",",","die","als","mp4","verf\u00fcgbar","sind","oder","eine","h\u00f6here","Aufl\u00f6sung","als","720","haben","?"],"question":"Was sind die Kennungen aller Lieder, die als mp4 verf\u00fcgbar sind oder eine h\u00f6here Aufl\u00f6sung als 720 haben?"},{"db_id":"tracking_orders","query":"SELECT order_item_id FROM order_items WHERE product_id = 11","query_toks":["SELECT","order_item_id","FROM","order_items","WHERE","product_id","=","11"],"query_toks_no_value":["select","order_item_id","from","order_items","where","product_id","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,16,false],null],11.0,null]]},"question_toks":["Finde","alle","Bestellvorg\u00e4nge",",","deren","Produktnummer","11","ist",".","Welches","sind","die","Bestellnummern","?"],"question":"Finde alle Bestellvorg\u00e4nge, deren Produktnummer 11 ist. Welches sind die Bestellnummern?"},{"db_id":"music_1","query":"SELECT f_id FROM files WHERE formats  =  \"mp4\" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000","query_toks":["SELECT","f_id","FROM","files","WHERE","formats","=","``","mp4","''","INTERSECT","SELECT","f_id","FROM","song","WHERE","resolution","<","1000"],"query_toks_no_value":["select","f_id","from","files","where","formats","=","value","intersect","select","f_id","from","song","where","resolution","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,4,[0,[0,21,false],null],1000.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"mp4\"",null]]},"question_toks":["Wie","lautet","die","Kennung","der","Dateien",",","die","im","mp4-Format","und","einer","Aufl\u00f6sung","von","weniger","als","1000","verf\u00fcgbar","sind","?"],"question":"Wie lautet die Kennung der Dateien, die im mp4-Format und einer Aufl\u00f6sung von weniger als 1000 verf\u00fcgbar sind?"},{"db_id":"music_1","query":"SELECT f_id FROM files WHERE formats  =  \"mp3\"","query_toks":["SELECT","f_id","FROM","files","WHERE","formats","=","``","mp3","''"],"query_toks_no_value":["select","f_id","from","files","where","formats","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"mp3\"",null]]},"question_toks":["Was","sind","die","Kennungen","aller","Dateien","im","mp3-Format","?"],"question":"Was sind die Kennungen aller Dateien im mp3-Format?"},{"db_id":"sakila_1","query":"SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","store_id","FROM","customer","GROUP","BY","store_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","store_id","from","customer","group","by","store_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,24,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Laden","hat","die","meisten","Kunden","?"],"question":"Welcher Laden hat die meisten Kunden?"},{"db_id":"entrepreneur","query":"SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC","query_toks":["SELECT","Company","FROM","entrepreneur","ORDER","BY","Money_Requested","DESC"],"query_toks_no_value":["select","company","from","entrepreneur","order","by","money_requested","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,4,false],null]]],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","die","Firmen","der","Unternehmer","in","absteigender","Reihenfolge","der","beantragten","Gelder","auf","."],"question":"Liste die Firmen der Unternehmer in absteigender Reihenfolge der beantragten Gelder auf."},{"db_id":"sakila_1","query":"SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.title",",","T2.film_id",",","T2.description","FROM","film_actor","AS","T1","JOIN","film","AS","T2","ON","T1.film_id","=","T2.film_id","GROUP","BY","T2.film_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","title",",","t2",".","film_id",",","t2",".","description","from","film_actor","as","t1","join","film","as","t2","on","t1",".","film_id","=","t2",".","film_id","group","by","t2",".","film_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,46,false],null],[0,32,false],null]],"table_units":[["table_unit",7],["table_unit",6]]},"groupBy":[[0,32,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,32,false],null]],[0,[0,[0,34,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Film","hat","die","meisten","Schauspieler","oder","Schauspielerinnen","?","Liste","den","Filmnamen",",","die","Film-ID","und","die","Beschreibung","auf","."],"question":"Welcher Film hat die meisten Schauspieler oder Schauspielerinnen? Liste den Filmnamen, die Film-ID und die Beschreibung auf."},{"db_id":"music_1","query":"SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\"","query_toks":["SELECT","avg","(","T2.rating",")","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T1.gender","=","``","Female","''"],"query_toks_no_value":["select","avg","(","t2",".","rating",")","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t1",".","gender","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,18,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"Female\"",null]]},"question_toks":["Wie","viele","Lieder","werden","im","Durchschnitt","von","einer","K\u00fcnstlerin","gesungen","?"],"question":"Wie viele Lieder werden im Durchschnitt von einer K\u00fcnstlerin gesungen?"},{"db_id":"college_1","query":"SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num","query_toks":["SELECT","T2.emp_fname",",","T4.prof_office",",","T3.crs_description","FROM","CLASS","AS","T1","JOIN","employee","AS","T2","ON","T1.prof_num","=","T2.emp_num","JOIN","course","AS","T3","ON","T1.crs_code","=","T3.crs_code","JOIN","professor","AS","T4","ON","T2.emp_num","=","T4.emp_num"],"query_toks_no_value":["select","t2",".","emp_fname",",","t4",".","prof_office",",","t3",".","crs_description","from","class","as","t1","join","employee","as","t2","on","t1",".","prof_num","=","t2",".","emp_num","join","course","as","t3","on","t1",".","crs_code","=","t3",".","crs_code","join","professor","as","t4","on","t2",".","emp_num","=","t4",".","emp_num"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,29,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Wir","lauten","die","Vornamen",",","B\u00fcrostandorte","aller","Dozenten",",","die","Kurse","unterrichtet","haben","?"],"question":"Wir lauten die Vornamen, B\u00fcrostandorte aller Dozenten, die Kurse unterrichtet haben?"},{"db_id":"college_1","query":"SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting'","query_toks":["SELECT","count","(","*",")","FROM","CLASS","AS","T1","JOIN","enroll","AS","T2","ON","T1.class_code","=","T2.class_code","JOIN","course","AS","T3","ON","T1.crs_code","=","T3.crs_code","JOIN","department","AS","T4","ON","T3.dept_code","=","T4.dept_code","WHERE","T4.dept_name","=","'Accounting","'"],"query_toks_no_value":["select","count","(","*",")","from","class","as","t1","join","enroll","as","t2","on","t1",".","class_code","=","t2",".","class_code","join","course","as","t3","on","t1",".","crs_code","=","t3",".","crs_code","join","department","as","t4","on","t3",".","dept_code","=","t4",".","dept_code","where","t4",".","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Accounting\"",null]]},"question_toks":["Wie","viele","Studierende","sind","in","einigen","Kursen","eingeschrieben",",","die","von","einem","Rechnungswesen-Professor","unterrichtet","werden","?"],"question":"Wie viele Studierende sind in einigen Kursen eingeschrieben, die von einem Rechnungswesen-Professor unterrichtet werden?"},{"db_id":"voter_2","query":"SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  \"PIT\"","query_toks":["SELECT","DISTINCT","T1.Fname","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","T2.VICE_PRESIDENT_Vote","EXCEPT","SELECT","DISTINCT","Fname","FROM","STUDENT","WHERE","city_code","=","``","PIT","''"],"query_toks_no_value":["select","distinct","t1",".","fname","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","t2",".","vice_president_vote","except","select","distinct","fname","from","student","where","city_code","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"PIT\"",null]]},"from":{"conds":[[false,2,[0,[0,1,false],null],[0,13,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","verschiedenen","Vornamen","der","Studierenden",",","die","Vizepr\u00e4sidenten-Stimmen","haben","und","in","einer","Stadt","wohnen",",","deren","Stadtcode","nicht","PIT","lautet","?"],"question":"Wie lauten die verschiedenen Vornamen der Studierenden, die Vizepr\u00e4sidenten-Stimmen haben und in einer Stadt wohnen, deren Stadtcode nicht PIT lautet?"},{"db_id":"activity_1","query":"SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Kayaking'","query_toks":["SELECT","T1.stuid","FROM","participates_in","AS","T1","JOIN","activity","AS","T2","ON","T2.actid","=","T2.actid","WHERE","T2.activity_name","=","'Canoeing","'","INTERSECT","SELECT","T1.stuid","FROM","participates_in","AS","T1","JOIN","activity","AS","T2","ON","T2.actid","=","T2.actid","WHERE","T2.activity_name","=","'Kayaking","'"],"query_toks_no_value":["select","t1",".","stuid","from","participates_in","as","t1","join","activity","as","t2","on","t2",".","actid","=","t2",".","actid","where","t2",".","activity_name","=","value","intersect","select","t1",".","stuid","from","participates_in","as","t1","join","activity","as","t2","on","t2",".","actid","=","t2",".","actid","where","t2",".","activity_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kayaking\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Canoeing\"",null]]},"question_toks":["Welche","Studenten","nehmen","zugleich","teil","an","Kanufahren","und","Kayakfahren","als","ihre","Aktivit\u00e4ten","?","Sage","mir","ihre","Studenten-IDs","."],"question":"Welche Studenten nehmen zugleich teil an Kanufahren und Kayakfahren als ihre Aktivit\u00e4ten? Sage mir ihre Studenten-IDs."},{"db_id":"music_1","query":"SELECT song_name FROM song ORDER BY resolution","query_toks":["SELECT","song_name","FROM","song","ORDER","BY","resolution"],"query_toks_no_value":["select","song_name","from","song","order","by","resolution"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,21,false],null]]],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","mir","eine","Liste","mit","den","Namen","aller","Lieder",",","geordnet","nach","ihrer","Aufl\u00f6sung","."],"question":"Gib mir eine Liste mit den Namen aller Lieder, geordnet nach ihrer Aufl\u00f6sung."},{"db_id":"voter_2","query":"SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"2192\"","query_toks":["SELECT","DISTINCT","T1.LName","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","PRESIDENT_Vote","EXCEPT","SELECT","DISTINCT","LName","FROM","STUDENT","WHERE","Advisor","=","``","2192","''"],"query_toks_no_value":["select","distinct","t1",".","lname","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","president_vote","except","select","distinct","lname","from","student","where","advisor","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"2192\"",null]]},"from":{"conds":[[false,2,[0,[0,1,false],null],[0,12,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","einzelnen","Nachnamen","der","Studenten",",","die","Stimmen","f\u00fcr","die","Pr\u00e4sidentschaft","haben",",","aber","nicht","2192","als","ihren","Berater","?"],"question":"Wie lauten die einzelnen Nachnamen der Studenten, die Stimmen f\u00fcr die Pr\u00e4sidentschaft haben, aber nicht 2192 als ihren Berater?"},{"db_id":"sakila_1","query":"SELECT count(*) FROM address WHERE district  =  'California'","query_toks":["SELECT","count","(","*",")","FROM","address","WHERE","district","=","'California","'"],"query_toks_no_value":["select","count","(","*",")","from","address","where","district","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"California\"",null]]},"question_toks":["Wie","viele","Adressen","gibt","es","im","Bezirk","Kalifornien","?"],"question":"Wie viele Adressen gibt es im Bezirk Kalifornien?"},{"db_id":"tracking_orders","query":"SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.order_id","FROM","orders","AS","T1","JOIN","order_items","AS","T2","ON","T1.order_id","=","T2.order_id","GROUP","BY","T1.order_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","order_id","from","orders","as","t1","join","order_items","as","t2","on","t1",".","order_id","=","t2",".","order_id","group","by","t1",".","order_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,17,false],null]],"table_units":[["table_unit",2],["table_unit",4]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Bestellung","geht","\u00fcber","die","meisten","Artikel","?","Gib","die","Bestellnummer","an","."],"question":"Welche Bestellung geht \u00fcber die meisten Artikel? Gib die Bestellnummer an."},{"db_id":"manufacturer","query":"SELECT t1.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID WHERE t2.Price_in_Dollar  <  (SELECT max(Price_in_Dollar) FROM furniture_manufacte)","query_toks":["SELECT","t1.name","FROM","furniture","AS","t1","JOIN","furniture_manufacte","AS","t2","ON","t1.Furniture_ID","=","t2.Furniture_ID","WHERE","t2.Price_in_Dollar","<","(","SELECT","max","(","Price_in_Dollar",")","FROM","furniture_manufacte",")"],"query_toks_no_value":["select","t1",".","name","from","furniture","as","t1","join","furniture_manufacte","as","t2","on","t1",".","furniture_id","=","t2",".","furniture_id","where","t2",".","price_in_dollar","<","(","select","max","(","price_in_dollar",")","from","furniture_manufacte",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,4,[0,[0,12,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,12,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finde","die","Namen","von","M\u00f6beln",",","deren","Preise","niedriger","sind","als","der","h\u00f6chste","Preis","."],"question":"Finde die Namen von M\u00f6beln, deren Preise niedriger sind als der h\u00f6chste Preis."},{"db_id":"csu_1","query":"SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND t2.year  =  2001","query_toks":["SELECT","degrees","FROM","campuses","AS","T1","JOIN","degrees","AS","T2","ON","t1.id","=","t2.campus","WHERE","t1.campus","=","``","San","Francisco","State","University","''","AND","t2.year","=","2001"],"query_toks_no_value":["select","degrees","from","campuses","as","t1","join","degrees","as","t2","on","t1",".","id","=","t2",".","campus","where","t1",".","campus","=","value","and","t2",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"San Francisco State University\"",null],"and",[false,2,[0,[0,9,false],null],2001.0,null]]},"question_toks":["Welches","sind","die","Abschl\u00fcsse",",","die","2001","an","der","San","Francisco","State","University","verliehen","wurden","?"],"question":"Welches sind die Abschl\u00fcsse, die 2001 an der San Francisco State University verliehen wurden?"},{"db_id":"formula_1","query":"SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2","query_toks":["SELECT","T1.driverid",",","T1.forename",",","count","(","*",")","FROM","drivers","AS","T1","JOIN","results","AS","T2","ON","T1.driverid","=","T2.driverid","JOIN","races","AS","T3","ON","T2.raceid","=","T3.raceid","GROUP","BY","T1.driverid","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","driverid",",","t1",".","forename",",","count","(","*",")","from","drivers","as","t1","join","results","as","t2","on","t1",".","driverid","=","t2",".","driverid","join","races","as","t3","on","t2",".","raceid","=","t3",".","raceid","group","by","t1",".","driverid","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",2],["table_unit",7]]},"groupBy":[[0,18,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,22,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Kennung",",","den","Vornamen","und","die","Anzahl","der","Rennen","aller","Fahrer",",","die","mindestens","an","zwei","Rennen","teilgenommen","haben","?"],"question":"Finde die Kennung, den Vornamen und die Anzahl der Rennen aller Fahrer, die mindestens an zwei Rennen teilgenommen haben? "},{"db_id":"college_1","query":"SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.'","query_toks":["SELECT","T1.emp_fname",",","T2.prof_office","FROM","employee","AS","T1","JOIN","professor","AS","T2","ON","T1.emp_num","=","T2.emp_num","JOIN","department","AS","T3","ON","T3.dept_code","=","T2.dept_code","WHERE","T3.dept_name","=","'History","'","AND","T2.prof_high_degree","=","'Ph.D",".","'"],"query_toks_no_value":["select","t1",".","emp_fname",",","t2",".","prof_office","from","employee","as","t1","join","professor","as","t2","on","t1",".","emp_num","=","t2",".","emp_num","join","department","as","t3","on","t3",".","dept_code","=","t2",".","dept_code","where","t3",".","dept_name","=","value","and","t2",".","prof_high_degree","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,27,false],null]],"table_units":[["table_unit",3],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,29,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"History\"",null],"and",[false,2,[0,[0,31,false],null],"\"Ph.D.\"",null]]},"question_toks":["Finde","den","Vornamen","und","das","B\u00fcro","des","Professors",",","der","in","der","Geschichtsabteilung","ist","und","einen","Ph.D.","hat","."],"question":"Finde den Vornamen und das B\u00fcro des Professors, der in der Geschichtsabteilung ist und einen Ph.D. hat."},{"db_id":"music_1","query":"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3","query_toks":["SELECT","T1.artist_name",",","T1.country","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","ORDER","BY","T2.rating","DESC","LIMIT","3"],"query_toks_no_value":["select","t1",".","artist_name",",","t1",".","country","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","order","by","t2",".","rating","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[0,18,false],null]]],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","und","Herkunftsl\u00e4nder","der","K\u00fcnstler",",","die","die","drei","am","besten","bewerteten","Lieder","produziert","haben","?"],"question":"Wie lauten die Namen und Herkunftsl\u00e4nder der K\u00fcnstler, die die drei am besten bewerteten Lieder produziert haben?"},{"db_id":"mountain_photos","query":"SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id GROUP BY T1.id HAVING count(*)  >=  2","query_toks":["SELECT","T1.id",",","T1.name","FROM","mountain","AS","T1","JOIN","photos","AS","T2","ON","T1.id","=","T2.mountain_id","GROUP","BY","T1.id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","id",",","t1",".","name","from","mountain","as","t1","join","photos","as","t2","on","t1",".","id","=","t2",".","mountain_id","group","by","t1",".","id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,14,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,1,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","ID","und","der","Name","der","Berge",",","die","mindestens","2","Fotos","haben","?"],"question":"Wie lauten die ID und der Name der Berge, die mindestens 2 Fotos haben?"},{"db_id":"sakila_1","query":"SELECT amount FROM payment ORDER BY amount DESC LIMIT 1","query_toks":["SELECT","amount","FROM","payment","ORDER","BY","amount","DESC","LIMIT","1"],"query_toks_no_value":["select","amount","from","payment","order","by","amount","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",12]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,65,false],null]]],"select":[false,[[0,[0,[0,65,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","der","gr\u00f6\u00dfte","Zahlbetrag","?"],"question":"Welches ist der gr\u00f6\u00dfte Zahlbetrag?"},{"db_id":"music_1","query":"SELECT T1.gender ,  T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.resolution LIMIT 1","query_toks":["SELECT","T1.gender",",","T1.artist_name","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","ORDER","BY","T2.resolution","LIMIT","1"],"query_toks_no_value":["select","t1",".","gender",",","t1",".","artist_name","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","order","by","t2",".","resolution","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,21,false],null]]],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","das","Geschlecht","und","den","Namen","des","K\u00fcnstlers","an",",","der","das","Lied","mit","der","niedrigsten","Aufl\u00f6sung","produziert","hat","."],"question":"Gib das Geschlecht und den Namen des K\u00fcnstlers an, der das Lied mit der niedrigsten Aufl\u00f6sung produziert hat."},{"db_id":"csu_1","query":"SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1","query_toks":["SELECT","T1.campus","FROM","campuses","AS","T1","JOIN","faculty","AS","T2","ON","T1.id","=","T2.campus","WHERE","T2.year","=","2003","ORDER","BY","T2.faculty","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","campus","from","campuses","as","t1","join","faculty","as","t2","on","t1",".","id","=","t2",".","campus","where","t2",".","year","=","value","order","by","t2",".","faculty","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,21,false],null]],"table_units":[["table_unit",0],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,23,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],2003.0,null]]},"question_toks":["Welcher","Campus","hat","die","meisten","Fakult\u00e4ten","im","Jahr","2003","?"],"question":"Welcher Campus hat die meisten Fakult\u00e4ten im Jahr 2003?"},{"db_id":"college_1","query":"SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS'","query_toks":["SELECT","count","(","DISTINCT","dept_address",")","FROM","department","WHERE","school_code","=","'BUS","'"],"query_toks_no_value":["select","count","(","distinct","dept_address",")","from","department","where","school_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,15,true],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"BUS\"",null]]},"question_toks":["Wie","viele","verschiedene","Standorte","hat","die","Schule","mit","dem","Code","BUS","?"],"question":"Wie viele verschiedene Standorte hat die Schule mit dem Code BUS?"},{"db_id":"sakila_1","query":"SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'","query_toks":["SELECT","T1.name","FROM","category","AS","T1","JOIN","film_category","AS","T2","ON","T1.category_id","=","T2.category_id","JOIN","film","AS","T3","ON","T2.film_id","=","T3.film_id","WHERE","T3.title","=","'HUNGER","ROOF","'"],"query_toks_no_value":["select","t1",".","name","from","category","as","t1","join","film_category","as","t2","on","t1",".","category_id","=","t2",".","category_id","join","film","as","t3","on","t2",".","film_id","=","t3",".","film_id","where","t3",".","title","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,49,false],null]],"table_units":[["table_unit",2],["table_unit",8]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,33,false],null],"\"HUNGER ROOF\"",null]]},"question_toks":["Was","ist","der","Genrename","des","Films","HUNGER","ROOF","?"],"question":"Was ist der Genrename des Films HUNGER ROOF?"},{"db_id":"mountain_photos","query":"SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.height  >  4000","query_toks":["SELECT","T1.id",",","T1.name","FROM","mountain","AS","T1","JOIN","photos","AS","T2","ON","T1.id","=","T2.mountain_id","WHERE","T1.height",">","4000"],"query_toks_no_value":["select","t1",".","id",",","t1",".","name","from","mountain","as","t1","join","photos","as","t2","on","t1",".","id","=","t2",".","mountain_id","where","t1",".","height",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,14,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,3,[0,[0,3,false],null],4000.0,null]]},"question_toks":["Welches","sind","die","ID","und","der","Name","der","Fotos","von","Bergen","?"],"question":"Welches sind die ID und der Name der Fotos von Bergen?"},{"db_id":"college_1","query":"SELECT count(*) FROM employee","query_toks":["SELECT","count","(","*",")","FROM","employee"],"query_toks_no_value":["select","count","(","*",")","from","employee"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Gesamtanzahl","der","Arbeitnehmer","."],"question":"Finde die Gesamtanzahl der Arbeitnehmer."},{"db_id":"loan_1","query":"SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1","query_toks":["SELECT","bname","FROM","bank","ORDER","BY","no_of_customers","DESC","LIMIT","1"],"query_toks_no_value":["select","bname","from","bank","order","by","no_of_customers","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,3,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dft","die","Bankfiliale","mit","der","gr\u00f6\u00dften","Kundenzahl","?"],"question":"Wie hei\u00dft die Bankfiliale mit der gr\u00f6\u00dften Kundenzahl?"},{"db_id":"sakila_1","query":"SELECT district FROM address GROUP BY district HAVING count(*)  >=  2","query_toks":["SELECT","district","FROM","address","GROUP","BY","district","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","district","from","address","group","by","district","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Bezirke","haben","mindestens","zwei","Adressen","?"],"question":"Welche Bezirke haben mindestens zwei Adressen?"},{"db_id":"cinema","query":"SELECT name ,  LOCATION FROM cinema WHERE capacity  >  (SELECT avg(capacity) FROM cinema)","query_toks":["SELECT","name",",","LOCATION","FROM","cinema","WHERE","capacity",">","(","SELECT","avg","(","capacity",")","FROM","cinema",")"],"query_toks_no_value":["select","name",",","location","from","cinema","where","capacity",">","(","select","avg","(","capacity",")","from","cinema",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,11,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Zeige","bei","Kinos","mit","\u00fcberdurchschnittlicher","Kapazit\u00e4t","den","Kinonamen","und","den","Standort","an","."],"question":"Zeige bei Kinos mit \u00fcberdurchschnittlicher Kapazit\u00e4t den Kinonamen und den Standort an."},{"db_id":"tracking_orders","query":"SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"","query_toks":["SELECT","DISTINCT","invoice_details","FROM","invoices","WHERE","invoice_date","<","``","1989-09-03","''","OR","invoice_date",">","``","2007-12-25","''"],"query_toks_no_value":["select","distinct","invoice_details","from","invoices","where","invoice_date","<","value","or","invoice_date",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,4,[0,[0,5,false],null],"\"1989-09-03\"",null],"or",[false,3,[0,[0,5,false],null],"\"2007-12-25\"",null]]},"question_toks":["Finde","die","einzelnen","Details","von","Rechnungen",",","die","vor","dem","03.09.1989","oder","nach","dem","25.12.2007","erstellt","wurden","."],"question":"Finde die einzelnen Details von Rechnungen, die vor dem 03.09.1989 oder nach dem 25.12.2007 erstellt wurden."},{"db_id":"formula_1","query":"SELECT T1.driverid ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30","query_toks":["SELECT","T1.driverid",",","count","(","*",")","FROM","drivers","AS","T1","JOIN","results","AS","T2","ON","T1.driverid","=","T2.driverid","JOIN","races","AS","T3","ON","T2.raceid","=","T3.raceid","GROUP","BY","T1.driverid","HAVING","count","(","*",")","<","=","30"],"query_toks_no_value":["select","t1",".","driverid",",","count","(","*",")","from","drivers","as","t1","join","results","as","t2","on","t1",".","driverid","=","t2",".","driverid","join","races","as","t3","on","t2",".","raceid","=","t3",".","raceid","group","by","t1",".","driverid","having","count","(","*",")","<","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",2],["table_unit",7]]},"groupBy":[[0,18,false]],"having":[[false,6,[0,[3,0,false],null],30.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Fahrerkennung","und","die","Anzahl","der","Rennen","aller","Fahrer",",","die","h\u00f6chstens","an","30","Rennen","teilgenommen","haben","?"],"question":"Finde die Fahrerkennung und die Anzahl der Rennen aller Fahrer, die h\u00f6chstens an 30 Rennen teilgenommen haben?"},{"db_id":"manufacturer","query":"SELECT name ,  manufacturer_id FROM manufacturer ORDER BY open_year","query_toks":["SELECT","name",",","manufacturer_id","FROM","manufacturer","ORDER","BY","open_year"],"query_toks_no_value":["select","name",",","manufacturer_id","from","manufacturer","order","by","open_year"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,2,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","alle","Herstellernamen","und","IDs","auf",",","sortiert","nach","ihrem","Er\u00f6ffnungsjahr","."],"question":"Liste alle Herstellernamen und IDs auf, sortiert nach ihrem Er\u00f6ffnungsjahr."},{"db_id":"cinema","query":"SELECT LOCATION FROM cinema WHERE openning_year  =  2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year  =  2011","query_toks":["SELECT","LOCATION","FROM","cinema","WHERE","openning_year","=","2010","INTERSECT","SELECT","LOCATION","FROM","cinema","WHERE","openning_year","=","2011"],"query_toks_no_value":["select","location","from","cinema","where","openning_year","=","value","intersect","select","location","from","cinema","where","openning_year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],2011.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],2010.0,null]]},"question_toks":["Zeige","alle","Standorte",",","wo","Kinos","zugleich","im","Jahr","2010","und","2011","er\u00f6ffnet","wurden","."],"question":"Zeige alle Standorte, wo Kinos zugleich im Jahr 2010 und 2011 er\u00f6ffnet wurden."},{"db_id":"voter_2","query":"SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\"","query_toks":["SELECT","avg","(","T1.Age",")","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","SECRETARY_Vote","WHERE","T1.city_code","=","``","NYC","''","AND","T2.Election_Cycle","=","``","Spring","''"],"query_toks_no_value":["select","avg","(","t1",".","age",")","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","secretary_vote","where","t1",".","city_code","=","value","and","t2",".","election_cycle","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,14,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"NYC\"",null],"and",[false,2,[0,[0,11,false],null],"\"Spring\"",null]]},"question_toks":["Was","ist","das","Durchschnittsalter","der","Studierenden","mit","dem","St\u00e4dtecode","``","NYC","''","und","den","Sekret\u00e4r-Stimmen","f\u00fcr","den","Fr\u00fchlingswahlzyklus","?"],"question":"Was ist das Durchschnittsalter der Studierenden mit dem St\u00e4dtecode \"NYC\" und den Sekret\u00e4r-Stimmen f\u00fcr den Fr\u00fchlingswahlzyklus?"},{"db_id":"college_1","query":"SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Computer Info. Systems\"","query_toks":["SELECT","count","(","*",")","FROM","department","AS","T1","JOIN","course","AS","T2","ON","T1.dept_code","=","T2.dept_code","WHERE","dept_name","=","``","Computer","Info",".","Systems","''"],"query_toks_no_value":["select","count","(","*",")","from","department","as","t1","join","course","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","where","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,8,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Computer Info. Systems\"",null]]},"question_toks":["Wie","viele","Kurse","werden","angeboten","von","der","Abteilung","Computer-Informationssysteme","?"],"question":"Wie viele Kurse werden angeboten von der Abteilung Computer-Informationssysteme?"},{"db_id":"loan_1","query":"SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'","query_toks":["SELECT","cust_name",",","acc_bal","FROM","customer","WHERE","cust_name","LIKE","'","%","a","%","'"],"query_toks_no_value":["select","cust_name",",","acc_bal","from","customer","where","cust_name","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,9,[0,[0,7,false],null],"\"%a%\"",null]]},"question_toks":["Finde","den","Namen","und","Kontostand","des","Kunden",",","dessen","Name","den","Buchstaben","``","a","''","enth\u00e4lt","."],"question":"Finde den Namen und Kontostand des Kunden, dessen Name den Buchstaben \"a\" enth\u00e4lt. "},{"db_id":"cinema","query":"SELECT DISTINCT directed_by FROM film","query_toks":["SELECT","DISTINCT","directed_by","FROM","film"],"query_toks_no_value":["select","distinct","directed_by","from","film"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","alle","Regisseure","."],"question":"Zeige alle Regisseure."},{"db_id":"college_1","query":"SELECT count(DISTINCT dept_name) FROM department","query_toks":["SELECT","count","(","DISTINCT","dept_name",")","FROM","department"],"query_toks_no_value":["select","count","(","distinct","dept_name",")","from","department"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,12,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Abteilungen","hat","die","Hochschule","?"],"question":"Wie viele Abteilungen hat die Hochschule?"},{"db_id":"music_1","query":"SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1","query_toks":["SELECT","song_name",",","releasedate","FROM","song","ORDER","BY","releasedate","DESC","LIMIT","1"],"query_toks_no_value":["select","song_name",",","releasedate","from","song","order","by","releasedate","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,13,false],null]],[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Name","des","Liedes",",","das","als","Letztes","ver\u00f6ffentlicht","wurde","?"],"question":"Wie lautet der Name des Liedes, das als Letztes ver\u00f6ffentlicht wurde?"},{"db_id":"loan_1","query":"SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1","query_toks":["SELECT","bname","FROM","bank","ORDER","BY","no_of_customers","DESC","LIMIT","1"],"query_toks_no_value":["select","bname","from","bank","order","by","no_of_customers","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,3,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Filialnamen","der","Bank",",","welche","die","gr\u00f6\u00dfte","Anzahl","Kunden","hat","."],"question":"Finde den Filialnamen der Bank, welche die gr\u00f6\u00dfte Anzahl Kunden hat."},{"db_id":"swimming","query":"SELECT name FROM event ORDER BY YEAR DESC","query_toks":["SELECT","name","FROM","event","ORDER","BY","YEAR","DESC"],"query_toks_no_value":["select","name","from","event","order","by","year","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,21,false],null]]],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","alle","Veranstaltungsnamen","nach","Jahr","auf",",","vom","j\u00fcngsten","bis","zum","\u00e4ltesten","."],"question":"Liste alle Veranstaltungsnamen nach Jahr auf, vom j\u00fcngsten bis zum \u00e4ltesten."},{"db_id":"college_1","query":"SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211'","query_toks":["SELECT","T3.stu_fname","FROM","CLASS","AS","T1","JOIN","enroll","AS","T2","ON","T1.class_code","=","T2.class_code","JOIN","student","AS","T3","ON","T2.stu_num","=","T3.stu_num","WHERE","T1.crs_code","=","'ACCT-211","'"],"query_toks_no_value":["select","t3",".","stu_fname","from","class","as","t1","join","enroll","as","t2","on","t1",".","class_code","=","t2",".","class_code","join","student","as","t3","on","t2",".","stu_num","=","t3",".","stu_num","where","t1",".","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"ACCT-211\"",null]]},"question_toks":["Wie","lauten","die","Vornamen","aller","Studierenden","im","Kurs","ACCT-211","?"],"question":"Wie lauten die Vornamen aller Studierenden im Kurs ACCT-211?"},{"db_id":"formula_1","query":"SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5","query_toks":["SELECT","T1.surname",",","T1.driverid","FROM","drivers","AS","T1","JOIN","pitstops","AS","T2","ON","T1.driverid","=","T2.driverid","GROUP","BY","T1.driverid","HAVING","count","(","*",")","=","11","INTERSECT","SELECT","T1.surname",",","T1.driverid","FROM","drivers","AS","T1","JOIN","results","AS","T2","ON","T1.driverid","=","T2.driverid","GROUP","BY","T1.driverid","HAVING","count","(","*",")",">","5"],"query_toks_no_value":["select","t1",".","surname",",","t1",".","driverid","from","drivers","as","t1","join","pitstops","as","t2","on","t1",".","driverid","=","t2",".","driverid","group","by","t1",".","driverid","having","count","(","*",")","=","value","intersect","select","t1",".","surname",",","t1",".","driverid","from","drivers","as","t1","join","results","as","t2","on","t1",".","driverid","=","t2",".","driverid","group","by","t1",".","driverid","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",2],["table_unit",11]]},"groupBy":[[0,18,false]],"having":[[false,2,[0,[3,0,false],null],11.0,null]],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",2],["table_unit",7]]},"groupBy":[[0,18,false]],"having":[[false,3,[0,[3,0,false],null],5.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]],[0,[0,[0,18,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]],[0,[0,[0,18,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Nachnamen","und","IDs","der","Fahrer",",","die","11","Boxenstopps","hatten","und","an","mehr","als","5","Rennergebnissen","teilnahmen","?"],"question":"Wie lauten die Nachnamen und IDs der Fahrer, die 11 Boxenstopps hatten und an mehr als 5 Rennergebnissen teilnahmen?"},{"db_id":"college_1","query":"SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  'Accounting' OR T2.dept_name  =  'Biology'","query_toks":["SELECT","count","(","*",")","FROM","professor","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","WHERE","T2.dept_name","=","'Accounting","'","OR","T2.dept_name","=","'Biology","'"],"query_toks_no_value":["select","count","(","*",")","from","professor","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","where","t2",".","dept_name","=","value","or","t2",".","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,28,false],null],[0,11,false],null]],"table_units":[["table_unit",5],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Accounting\"",null],"or",[false,2,[0,[0,12,false],null],"\"Biology\"",null]]},"question_toks":["Wie","viele","Professoren","geh\u00f6ren","dem","Fachbereich","Rechnungswesen","oder","Biologie","an","?"],"question":"Wie viele Professoren geh\u00f6ren dem Fachbereich Rechnungswesen oder Biologie an?"},{"db_id":"sakila_1","query":"SELECT sum(amount) FROM payment","query_toks":["SELECT","sum","(","amount",")","FROM","payment"],"query_toks_no_value":["select","sum","(","amount",")","from","payment"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",12]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,65,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","der","Gesamtbetrag","aller","Bezahlungen","?"],"question":"Wie hoch ist der Gesamtbetrag aller Bezahlungen?"},{"db_id":"entrepreneur","query":"SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000","query_toks":["SELECT","Investor","FROM","entrepreneur","WHERE","Money_Requested",">","140000","INTERSECT","SELECT","Investor","FROM","entrepreneur","WHERE","Money_Requested","<","120000"],"query_toks_no_value":["select","investor","from","entrepreneur","where","money_requested",">","value","intersect","select","investor","from","entrepreneur","where","money_requested","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,4,[0,[0,4,false],null],120000.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],140000.0,null]]},"question_toks":["Wer","sind","die","Investoren",",","die","zugleich","in","Unternehmer","investiert","haben",",","die","mehr","als","140000","anfragten",",","und","in","Unternehmer",",","die","weniger","als","120000","anfragten","?"],"question":"Wer sind die Investoren, die zugleich in Unternehmer investiert haben, die mehr als 140000 anfragten, und in Unternehmer, die weniger als 120000 anfragten?"},{"db_id":"activity_1","query":"SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  \"Professor\"","query_toks":["SELECT","T2.StuID","FROM","Faculty","AS","T1","JOIN","Student","AS","T2","ON","T1.FacID","=","T2.advisor","WHERE","T1.rank","=","``","Professor","''"],"query_toks_no_value":["select","t2",".","stuid","from","faculty","as","t1","join","student","as","t2","on","t1",".","facid","=","t2",".","advisor","where","t1",".","rank","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,13,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"Professor\"",null]]},"question_toks":["Zeige","die","IDs","von","Studierenden",",","deren","Betreuer","Professoren","sind","."],"question":"Zeige die IDs von Studierenden, deren Betreuer Professoren sind."},{"db_id":"entrepreneur","query":"SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1","query_toks":["SELECT","T2.Name","FROM","entrepreneur","AS","T1","JOIN","people","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T2.Weight","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name","from","entrepreneur","as","t1","join","people","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t2",".","weight","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Name","des","Unternehmers","mit","dem","gr\u00f6\u00dften","Gewicht","?"],"question":"Wie lautet der Name des Unternehmers mit dem gr\u00f6\u00dften Gewicht?"},{"db_id":"formula_1","query":"SELECT name FROM races ORDER BY date DESC LIMIT 1","query_toks":["SELECT","name","FROM","races","ORDER","BY","date","DESC","LIMIT","1"],"query_toks_no_value":["select","name","from","races","order","by","date","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,15,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Name","des","zuletzt","durchgef\u00fchrten","Rennens","?"],"question":"Wie lautet der Name des zuletzt durchgef\u00fchrten Rennens?"},{"db_id":"tracking_orders","query":"SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.customer_id","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","GROUP","BY","T1.customer_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","customer_id","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","group","by","t1",".","customer_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","ID","des","Kunden",",","der","die","meisten","Bestellungen","get\u00e4tigt","hat","."],"question":"Finde die ID des Kunden, der die meisten Bestellungen get\u00e4tigt hat."},{"db_id":"swimming","query":"SELECT t1.name FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","t1.name","FROM","stadium","AS","t1","JOIN","event","AS","t2","ON","t1.id","=","t2.stadium_id","GROUP","BY","t2.stadium_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","stadium","as","t1","join","event","as","t2","on","t1",".","id","=","t2",".","stadium_id","group","by","t2",".","stadium_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,20,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,20,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dft","das","Stadions",",","in","dem","die","meisten","Veranstaltungen","stattfanden","?"],"question":"Wie hei\u00dft das Stadions, in dem die meisten Veranstaltungen stattfanden?"},{"db_id":"store_product","query":"SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city","query_toks":["SELECT","t3.headquartered_city",",","count","(","*",")","FROM","store","AS","t1","JOIN","store_district","AS","t2","ON","t1.store_id","=","t2.store_id","JOIN","district","AS","t3","ON","t2.district_id","=","t3.district_id","GROUP","BY","t3.headquartered_city"],"query_toks_no_value":["select","t3",".","headquartered_city",",","count","(","*",")","from","store","as","t1","join","store_district","as","t2","on","t1",".","store_id","=","t2",".","store_id","join","district","as","t3","on","t2",".","district_id","=","t3",".","district_id","group","by","t3",".","headquartered_city"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,21,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[[0,16,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Gesch\u00e4fte","haben","ihren","Hauptsitz","in","jeder","Stadt","?"],"question":"Wie viele Gesch\u00e4fte haben ihren Hauptsitz in jeder Stadt?"},{"db_id":"tracking_orders","query":"SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"","query_toks":["SELECT","T2.date_order_placed","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T1.customer_name","=","``","Jeramie","''"],"query_toks_no_value":["select","t2",".","date_order_placed","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t1",".","customer_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Jeramie\"",null]]},"question_toks":["Was","sind","die","Daten","der","Bestellungen","des","Kunden","mit","dem","Namen","``","Jeramie","''","?"],"question":"Was sind die Daten der Bestellungen des Kunden mit dem Namen \"Jeramie\"?"},{"db_id":"formula_1","query":"SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = \"Australian Grand Prix\" AND YEAR = 2009","query_toks":["SELECT","count","(","*",")","FROM","results","AS","T1","JOIN","races","AS","T2","ON","T1.raceid","=","T2.raceid","WHERE","T2.name","=","``","Australian","Grand","Prix","''","AND","YEAR","=","2009"],"query_toks_no_value":["select","count","(","*",")","from","results","as","t1","join","races","as","t2","on","t1",".","raceid","=","t2",".","raceid","where","t2",".","name","=","value","and","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,44,false],null],[0,10,false],null]],"table_units":[["table_unit",7],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"Australian Grand Prix\"",null],"and",[false,2,[0,[0,11,false],null],2009.0,null]]},"question_toks":["Wie","viele","Fahrer","nahmen","an","dem","Rennen","Gro\u00dfer","Preis","von","Australien","in","2009","teil","?"],"question":"Wie viele Fahrer nahmen an dem Rennen Gro\u00dfer Preis von Australien in 2009 teil?"},{"db_id":"loan_1","query":"SELECT bname FROM bank WHERE state  =  'New York'","query_toks":["SELECT","bname","FROM","bank","WHERE","state","=","'New","York","'"],"query_toks_no_value":["select","bname","from","bank","where","state","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"New York\"",null]]},"question_toks":["Wie","hei\u00dfen","die","Banken","im","Bundesstaat","New","York","?"],"question":"Wie hei\u00dfen die Banken im Bundesstaat New York? "},{"db_id":"voter_2","query":"SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE","query_toks":["SELECT","DISTINCT","T1.Fname","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","T2.CLASS_Senator_VOTE"],"query_toks_no_value":["select","distinct","t1",".","fname","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","t2",".","class_senator_vote"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","verschiedenen","Vornamen","der","Studierenden",",","die","eine","Stimme","als","Klassensprecher","haben","?"],"question":"Wie lauten die verschiedenen Vornamen der Studierenden, die eine Stimme als Klassensprecher haben?"},{"db_id":"formula_1","query":"SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\"","query_toks":["SELECT","avg","(","T2.fastestlapspeed",")","FROM","races","AS","T1","JOIN","results","AS","T2","ON","T1.raceid","=","T2.raceid","WHERE","T1.year","=","2008","AND","T1.name","=","``","Monaco","Grand","Prix","''"],"query_toks_no_value":["select","avg","(","t2",".","fastestlapspeed",")","from","races","as","t1","join","results","as","t2","on","t1",".","raceid","=","t2",".","raceid","where","t1",".","year","=","value","and","t1",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,44,false],null]],"table_units":[["table_unit",1],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,59,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],2008.0,null],"and",[false,2,[0,[0,14,false],null],"\"Monaco Grand Prix\"",null]]},"question_toks":["Was","ist","die","durchschnittliche","schnellste","Rundengeschwindigkeit","beim","Gro\u00dfen","Preis","von","Monaco","2008","?"],"question":"Was ist die durchschnittliche schnellste Rundengeschwindigkeit beim Gro\u00dfen Preis von Monaco 2008?"},{"db_id":"swimming","query":"SELECT name FROM stadium WHERE capacity  <  (SELECT avg(capacity) FROM stadium)","query_toks":["SELECT","name","FROM","stadium","WHERE","capacity","<","(","SELECT","avg","(","capacity",")","FROM","stadium",")"],"query_toks_no_value":["select","name","from","stadium","where","capacity","<","(","select","avg","(","capacity",")","from","stadium",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,4,[0,[0,14,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,14,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finde","die","Namen","von","Stadien",",","deren","Kapazit\u00e4t","kleiner","als","die","durchschnittliche","Kapazit\u00e4t","ist","."],"question":"Finde die Namen von Stadien, deren Kapazit\u00e4t kleiner als die durchschnittliche Kapazit\u00e4t ist."},{"db_id":"loan_1","query":"SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving'","query_toks":["SELECT","cust_name","FROM","customer","EXCEPT","SELECT","cust_name","FROM","customer","WHERE","acc_type","=","'saving","'"],"query_toks_no_value":["select","cust_name","from","customer","except","select","cust_name","from","customer","where","acc_type","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"saving\"",null]]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Namen","von","Kunden",",","die","kein","Sparkonto","haben","."],"question":"Finde die Namen von Kunden, die kein Sparkonto haben."},{"db_id":"loan_1","query":"SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'","query_toks":["SELECT","cust_name",",","acc_bal","FROM","customer","WHERE","cust_name","LIKE","'","%","a","%","'"],"query_toks_no_value":["select","cust_name",",","acc_bal","from","customer","where","cust_name","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,9,[0,[0,7,false],null],"\"%a%\"",null]]},"question_toks":["Was","sind","die","Namen","und","Kontost\u00e4nde","der","Kunden","mit","dem","Buchstaben","A","im","Namen","?"],"question":"Was sind die Namen und Kontost\u00e4nde der Kunden mit dem Buchstaben A im Namen?"},{"db_id":"music_1","query":"SELECT f_id FROM files WHERE formats  =  \"mp4\" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000","query_toks":["SELECT","f_id","FROM","files","WHERE","formats","=","``","mp4","''","INTERSECT","SELECT","f_id","FROM","song","WHERE","resolution","<","1000"],"query_toks_no_value":["select","f_id","from","files","where","formats","=","value","intersect","select","f_id","from","song","where","resolution","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,4,[0,[0,21,false],null],1000.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"mp4\"",null]]},"question_toks":["Finde","die","ID","der","Lieder",",","die","im","MP4-Format","verf\u00fcgbar","sind","und","eine","Aufl\u00f6sung","von","kleiner","als","1000","haben","."],"question":"Finde die ID der Lieder, die im MP4-Format verf\u00fcgbar sind und eine Aufl\u00f6sung von kleiner als 1000 haben."},{"db_id":"sakila_1","query":"SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'","query_toks":["SELECT","T1.name","FROM","category","AS","T1","JOIN","film_category","AS","T2","ON","T1.category_id","=","T2.category_id","JOIN","film","AS","T3","ON","T2.film_id","=","T3.film_id","WHERE","T3.title","=","'HUNGER","ROOF","'"],"query_toks_no_value":["select","t1",".","name","from","category","as","t1","join","film_category","as","t2","on","t1",".","category_id","=","t2",".","category_id","join","film","as","t3","on","t2",".","film_id","=","t3",".","film_id","where","t3",".","title","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,49,false],null]],"table_units":[["table_unit",2],["table_unit",8]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,33,false],null],"\"HUNGER ROOF\"",null]]},"question_toks":["Gib","den","Namen","der","Kategorie","an",",","zu","der","der","Film","'HUNGER","ROOF","'","geh\u00f6rt","."],"question":"Gib den Namen der Kategorie an, zu der der Film 'HUNGER ROOF' geh\u00f6rt."},{"db_id":"swimming","query":"SELECT nationality ,  count(*) FROM swimmer GROUP BY nationality HAVING count(*)  >  1","query_toks":["SELECT","nationality",",","count","(","*",")","FROM","swimmer","GROUP","BY","nationality","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","nationality",",","count","(","*",")","from","swimmer","group","by","nationality","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","die","L\u00e4nder","auf",",","die","mehr","als","einen","Schwimmer","haben","."],"question":"Liste die L\u00e4nder auf, die mehr als einen Schwimmer haben."},{"db_id":"sakila_1","query":"SELECT count(*) FROM customer WHERE active = '1'","query_toks":["SELECT","count","(","*",")","FROM","customer","WHERE","active","=","'1","'"],"query_toks_no_value":["select","count","(","*",")","from","customer","where","active","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,29,false],null],"\"1\"",null]]},"question_toks":["Wie","viele","Kunden","haben","einen","aktiven","Wert","von","1","?"],"question":"Wie viele Kunden haben einen aktiven Wert von 1?"},{"db_id":"formula_1","query":"SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Australian Grand Prix\" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Chinese Grand Prix\"","query_toks":["SELECT","T3.forename",",","T3.surname","FROM","races","AS","T1","JOIN","results","AS","T2","ON","T1.raceid","=","T2.raceid","JOIN","drivers","AS","T3","ON","T2.driverid","=","T3.driverid","WHERE","T1.name","=","``","Australian","Grand","Prix","''","EXCEPT","SELECT","T3.forename",",","T3.surname","FROM","races","AS","T1","JOIN","results","AS","T2","ON","T1.raceid","=","T2.raceid","JOIN","drivers","AS","T3","ON","T2.driverid","=","T3.driverid","WHERE","T1.name","=","``","Chinese","Grand","Prix","''"],"query_toks_no_value":["select","t3",".","forename",",","t3",".","surname","from","races","as","t1","join","results","as","t2","on","t1",".","raceid","=","t2",".","raceid","join","drivers","as","t3","on","t2",".","driverid","=","t3",".","driverid","where","t1",".","name","=","value","except","select","t3",".","forename",",","t3",".","surname","from","races","as","t1","join","results","as","t2","on","t1",".","raceid","=","t2",".","raceid","join","drivers","as","t3","on","t2",".","driverid","=","t3",".","driverid","where","t1",".","name","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,44,false],null]],"table_units":[["table_unit",1],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"Chinese Grand Prix\"",null]]},"from":{"conds":[[false,2,[0,[0,10,false],null],[0,44,false],null]],"table_units":[["table_unit",1],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"Australian Grand Prix\"",null]]},"question_toks":["Wie","lauten","die","Vor-","und","Nachnamen","der","Fahrer",",","die","an","den","Rennen","des","Gro\u00dfen","Preis","von","Australien",",","aber","nicht","an","den","Rennen","des","Gro\u00dfen","Preis","von","China","teilgenommen","haben","?"],"question":"Wie lauten die Vor- und Nachnamen der Fahrer, die an den Rennen des Gro\u00dfen Preis von Australien, aber nicht an den Rennen des Gro\u00dfen Preis von China teilgenommen haben?"},{"db_id":"sakila_1","query":"SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1","query_toks":["SELECT","T1.first_name",",","T1.last_name",",","T1.staff_id","FROM","staff","AS","T1","JOIN","payment","AS","T2","ON","T1.staff_id","=","T2.staff_id","GROUP","BY","T1.staff_id","ORDER","BY","count","(","*",")","ASC","LIMIT","1"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","last_name",",","t1",".","staff_id","from","staff","as","t1","join","payment","as","t2","on","t1",".","staff_id","=","t2",".","staff_id","group","by","t1",".","staff_id","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,75,false],null],[0,63,false],null]],"table_units":[["table_unit",14],["table_unit",12]]},"groupBy":[[0,75,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,76,false],null]],[0,[0,[0,77,false],null]],[0,[0,[0,75,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","Personal","wickelte","die","wenigsten","Zahlungen","ab","?","Gib","den","vollst\u00e4ndigen","Namen","und","die","ID","an","."],"question":"Welches Personal wickelte die wenigsten Zahlungen ab? Gib den vollst\u00e4ndigen Namen und die ID an."},{"db_id":"mountain_photos","query":"SELECT id ,  color ,  name FROM photos","query_toks":["SELECT","id",",","color",",","name","FROM","photos"],"query_toks_no_value":["select","id",",","color",",","name","from","photos"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]],[0,[0,[0,15,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","die","Kennung",",","das","Farbschema","und","den","Namen","f\u00fcr","alle","Fotos","an","."],"question":"Gib die Kennung, das Farbschema und den Namen f\u00fcr alle Fotos an."},{"db_id":"loan_1","query":"SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname","query_toks":["SELECT","sum","(","amount",")",",","T1.bname","FROM","bank","AS","T1","JOIN","loan","AS","T2","ON","T1.branch_id","=","T2.branch_id","GROUP","BY","T1.bname"],"query_toks_no_value":["select","sum","(","amount",")",",","t1",".","bname","from","bank","as","t1","join","loan","as","t2","on","t1",".","branch_id","=","t2",".","branch_id","group","by","t1",".","bname"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,18,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dfen","die","verschiedenen","Bankfilialen","und","wie","hoch","sind","ihre","Gesamtkreditsummen","?"],"question":"Wie hei\u00dfen die verschiedenen Bankfilialen und wie hoch sind ihre Gesamtkreditsummen?"},{"db_id":"college_1","query":"SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018","query_toks":["SELECT","T1.stu_lname","FROM","student","AS","T1","JOIN","enroll","AS","T2","ON","T1.stu_num","=","T2.stu_num","WHERE","T2.enroll_grade","=","'A","'","AND","T2.class_code","=","10018"],"query_toks_no_value":["select","t1",".","stu_lname","from","student","as","t1","join","enroll","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","where","t2",".","enroll_grade","=","value","and","t2",".","class_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,25,false],null]],"table_units":[["table_unit",6],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]]]],"union":null,"where":[[false,2,[0,[0,26,false],null],"\"A\"",null],"and",[false,2,[0,[0,24,false],null],10018.0,null]]},"question_toks":["Was","ist","der","Nachname","des","Sch\u00fclers",",","der","in","der","Klasse","mit","dem","Code","10018","die","Note","1","erhalten","hat","?"],"question":"Was ist der Nachname des Sch\u00fclers, der in der Klasse mit dem Code 10018 die Note 1 erhalten hat?"},{"db_id":"sakila_1","query":"SELECT count(DISTINCT language_id) FROM film","query_toks":["SELECT","count","(","DISTINCT","language_id",")","FROM","film"],"query_toks_no_value":["select","count","(","distinct","language_id",")","from","film"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,36,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Sprachen","gibt","es","in","diesen","Filmen","?"],"question":"Wie viele Sprachen gibt es in diesen Filmen?"},{"db_id":"voter_2","query":"SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\"","query_toks":["SELECT","count","(","*",")","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","Class_Senator_Vote","WHERE","T1.city_code","=","``","NYC","''","AND","T2.Election_Cycle","=","``","Spring","''"],"query_toks_no_value":["select","count","(","*",")","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","class_senator_vote","where","t1",".","city_code","=","value","and","t2",".","election_cycle","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"NYC\"",null],"and",[false,2,[0,[0,11,false],null],"\"Spring\"",null]]},"question_toks":["Finde","die","Anzahl","der","Studierenden",",","deren","Stadtcode","NYC","ist","und","die","im","Fr\u00fchlingswahlzyklus","Klassensenatorenstimmen","haben","."],"question":"Finde die Anzahl der Studierenden, deren Stadtcode NYC ist und die im Fr\u00fchlingswahlzyklus Klassensenatorenstimmen haben."},{"db_id":"sakila_1","query":"SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'","query_toks":["SELECT","DISTINCT","T1.first_name",",","T1.last_name","FROM","staff","AS","T1","JOIN","rental","AS","T2","ON","T1.staff_id","=","T2.staff_id","JOIN","customer","AS","T3","ON","T2.customer_id","=","T3.customer_id","WHERE","T3.first_name","=","'APRIL","'","AND","T3.last_name","=","'BURNS","'"],"query_toks_no_value":["select","distinct","t1",".","first_name",",","t1",".","last_name","from","staff","as","t1","join","rental","as","t2","on","t1",".","staff_id","=","t2",".","staff_id","join","customer","as","t3","on","t2",".","customer_id","=","t3",".","customer_id","where","t3",".","first_name","=","value","and","t3",".","last_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,75,false],null],[0,73,false],null]],"table_units":[["table_unit",14],["table_unit",13]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,76,false],null]],[0,[0,[0,77,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"APRIL\"",null],"and",[false,2,[0,[0,26,false],null],"\"BURNS\"",null]]},"question_toks":["Gib","den","vollst\u00e4ndigen","Namen","des","Personals","an",",","das","einen","Kunden","mit","dem","Vornamen","April","und","dem","Nachnamen","Burns","mit","einem","Filmverleih","versorgt","hat","."],"question":"Gib den vollst\u00e4ndigen Namen des Personals an, das einen Kunden mit dem Vornamen April und dem Nachnamen Burns mit einem Filmverleih versorgt hat."},{"db_id":"sakila_1","query":"SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.title",",","T1.film_id","FROM","film","AS","T1","JOIN","inventory","AS","T2","ON","T1.film_id","=","T2.film_id","GROUP","BY","T1.film_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","title",",","t1",".","film_id","from","film","as","t1","join","inventory","as","t2","on","t1",".","film_id","=","t2",".","film_id","group","by","t1",".","film_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,55,false],null]],"table_units":[["table_unit",6],["table_unit",10]]},"groupBy":[[0,32,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Film","hat","die","meisten","Kopien","im","Bestand","?","Liste","beide",",","sowohl","Titel","als","auch","ID",",","auf","."],"question":"Welcher Film hat die meisten Kopien im Bestand? Liste beide, sowohl Titel als auch ID, auf."},{"db_id":"loan_1","query":"SELECT count(DISTINCT city) FROM bank","query_toks":["SELECT","count","(","DISTINCT","city",")","FROM","bank"],"query_toks_no_value":["select","count","(","distinct","city",")","from","bank"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,4,true],null]]]],"union":null,"where":[]},"question_toks":["In","wie","vielen","verschiedenen","St\u00e4dten","befinden","sich","Banken","?"],"question":"In wie vielen verschiedenen St\u00e4dten befinden sich Banken?"},{"db_id":"tracking_orders","query":"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.customer_name","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","GROUP","BY","T1.customer_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","customer_name","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","group","by","t1",".","customer_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dft","der","Kunde",",","der","die","gr\u00f6\u00dfte","Anzahl","von","Auftr\u00e4gen","hat","?"],"question":"Wie hei\u00dft der Kunde, der die gr\u00f6\u00dfte Anzahl von Auftr\u00e4gen hat?"},{"db_id":"college_1","query":"SELECT count(*) FROM employee","query_toks":["SELECT","count","(","*",")","FROM","employee"],"query_toks_no_value":["select","count","(","*",")","from","employee"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Besch\u00e4ftigte","gibt","es","insgesamt","?"],"question":"Wie viele Besch\u00e4ftigte gibt es insgesamt?"},{"db_id":"csu_1","query":"SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002","query_toks":["SELECT","sum","(","faculty",")","FROM","faculty","WHERE","YEAR","=","2002"],"query_toks_no_value":["select","sum","(","faculty",")","from","faculty","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],2002.0,null]]},"question_toks":["Wie","viele","Lehrkr\u00e4fte","gab","es","im","Jahr","2002","insgesamt","?"],"question":"Wie viele Lehrkr\u00e4fte gab es im Jahr 2002 insgesamt?"},{"db_id":"sakila_1","query":"SELECT count(DISTINCT rating) FROM film","query_toks":["SELECT","count","(","DISTINCT","rating",")","FROM","film"],"query_toks_no_value":["select","count","(","distinct","rating",")","from","film"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,42,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Arten","von","Bewertungen","werden","aufgelistet","?"],"question":"Wie viele verschiedene Arten von Bewertungen werden aufgelistet?"},{"db_id":"music_1","query":"SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")","query_toks":["SELECT","song_name","FROM","song","WHERE","rating","<","(","SELECT","max","(","rating",")","FROM","song","WHERE","genre_is","=","``","blues","''",")"],"query_toks_no_value":["select","song_name","from","song","where","rating","<","(","select","max","(","rating",")","from","song","where","genre_is","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,4,[0,[0,18,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,18,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"blues\"",null]]},null]]},"question_toks":["Wie","hei\u00dfen","alle","Lieder",",","die","eine","niedrigere","Bewertung","als","manche","Lieder","des","Blues-Genres","haben","?"],"question":"Wie hei\u00dfen alle Lieder, die eine niedrigere Bewertung als manche Lieder des Blues-Genres haben?"},{"db_id":"music_1","query":"SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\" AND T2.languages  =  \"bangla\"","query_toks":["SELECT","T1.country","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T1.gender","=","``","Female","''","AND","T2.languages","=","``","bangla","''"],"query_toks_no_value":["select","t1",".","country","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t1",".","gender","=","value","and","t2",".","languages","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"Female\"",null],"and",[false,2,[0,[0,19,false],null],"\"bangla\"",null]]},"question_toks":["Aus","welchen","L\u00e4ndern","stammen","die","K\u00fcnstlerinnen",",","die","in","der","Sprache","Bangla","sangen","?"],"question":"Aus welchen L\u00e4ndern stammen die K\u00fcnstlerinnen, die in der Sprache Bangla sangen?"},{"db_id":"store_product","query":"SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"City Mall\" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"Village Store\"","query_toks":["SELECT","t3.District_name","FROM","store","AS","t1","JOIN","store_district","AS","t2","ON","t1.store_id","=","t2.store_id","JOIN","district","AS","t3","ON","t2.district_id","=","t3.district_id","WHERE","t1.Type","=","``","City","Mall","''","INTERSECT","SELECT","t3.District_name","FROM","store","AS","t1","JOIN","store_district","AS","t2","ON","t1.store_id","=","t2.store_id","JOIN","district","AS","t3","ON","t2.district_id","=","t3.district_id","WHERE","t1.Type","=","``","Village","Store","''"],"query_toks_no_value":["select","t3",".","district_name","from","store","as","t1","join","store_district","as","t2","on","t1",".","store_id","=","t2",".","store_id","join","district","as","t3","on","t2",".","district_id","=","t3",".","district_id","where","t1",".","type","=","value","intersect","select","t3",".","district_name","from","store","as","t1","join","store_district","as","t2","on","t1",".","store_id","=","t2",".","store_id","join","district","as","t3","on","t2",".","district_id","=","t3",".","district_id","where","t1",".","type","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,21,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,21,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Village Store\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"City Mall\"",null]]},"question_toks":["Finde","die","Namen","der","Bezirke",",","in","denen","es","sowohl","Gesch\u00e4fte","vom","Typ","Einkaufszentrum","als","auch","vom","Typ","Dorfladen","gibt","."],"question":"Finde die Namen der Bezirke, in denen es sowohl Gesch\u00e4fte vom Typ Einkaufszentrum als auch vom Typ Dorfladen gibt."},{"db_id":"csu_1","query":"SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T2.year  >=  1998 AND T2.year  <=  2002 GROUP BY T1.campus","query_toks":["SELECT","T1.campus",",","sum","(","T2.degrees",")","FROM","campuses","AS","T1","JOIN","degrees","AS","T2","ON","T1.id","=","T2.campus","WHERE","T2.year",">","=","1998","AND","T2.year","<","=","2002","GROUP","BY","T1.campus"],"query_toks_no_value":["select","t1",".","campus",",","sum","(","t2",".","degrees",")","from","campuses","as","t1","join","degrees","as","t2","on","t1",".","id","=","t2",".","campus","where","t2",".","year",">","=","value","and","t2",".","year","<","=","value","group","by","t1",".","campus"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[4,[0,[0,11,false],null]]]],"union":null,"where":[[false,5,[0,[0,9,false],null],1998.0,null],"and",[false,6,[0,[0,9,false],null],2002.0,null]]},"question_toks":["Gib","die","Gesamtanzahl","der","zwischen","1998","und","2002","verliehenen","Abschl\u00fcsse","wieder","."],"question":"Gib die Gesamtanzahl der zwischen 1998 und 2002 verliehenen Abschl\u00fcsse wieder."},{"db_id":"college_1","query":"SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T4.dept_name","FROM","CLASS","AS","T1","JOIN","enroll","AS","T2","ON","T1.class_code","=","T2.class_code","JOIN","course","AS","T3","ON","T1.crs_code","=","T3.crs_code","JOIN","department","AS","T4","ON","T3.dept_code","=","T4.dept_code","GROUP","BY","T3.dept_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t4",".","dept_name","from","class","as","t1","join","enroll","as","t2","on","t1",".","class_code","=","t2",".","class_code","join","course","as","t3","on","t1",".","crs_code","=","t3",".","crs_code","join","department","as","t4","on","t3",".","dept_code","=","t4",".","dept_code","group","by","t3",".","dept_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",4]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dft","die","Abteilung",",","in","der","die","meisten","Studierenden","eingeschrieben","sind","?"],"question":"Wie hei\u00dft die Abteilung, in der die meisten Studierenden eingeschrieben sind?"},{"db_id":"loan_1","query":"SELECT cust_name FROM customer ORDER BY acc_bal","query_toks":["SELECT","cust_name","FROM","customer","ORDER","BY","acc_bal"],"query_toks_no_value":["select","cust_name","from","customer","order","by","acc_bal"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dfen","die","Namen","aller","Kunden",",","geordnet","nach","Kontostand","?"],"question":"Wie hei\u00dfen die Namen aller Kunden, geordnet nach Kontostand?"},{"db_id":"loan_1","query":"SELECT city ,  state FROM bank WHERE bname  =  'morningside'","query_toks":["SELECT","city",",","state","FROM","bank","WHERE","bname","=","'morningside","'"],"query_toks_no_value":["select","city",",","state","from","bank","where","bname","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"morningside\"",null]]},"question_toks":["In","welcher","Stadt","und","welchem","Bundesstaat","befindet","sich","die","Bank","mit","dem","Namen","Morningside","?"],"question":"In welcher Stadt und welchem Bundesstaat befindet sich die Bank mit dem Namen Morningside?"},{"db_id":"csu_1","query":"SELECT campus FROM campuses WHERE YEAR  =  1958","query_toks":["SELECT","campus","FROM","campuses","WHERE","YEAR","=","1958"],"query_toks_no_value":["select","campus","from","campuses","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],1958.0,null]]},"question_toks":["Finde","alle","im","Jahr","1958","ge\u00f6ffneten","Campusse","."],"question":"Finde alle im Jahr 1958 ge\u00f6ffneten Campusse."},{"db_id":"sakila_1","query":"SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","store_id","FROM","inventory","GROUP","BY","store_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","store_id","from","inventory","group","by","store_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",10]]},"groupBy":[[0,56,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,56,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","Gesch\u00e4ft","besitzt","die","meisten","Artikel","?"],"question":"Welches Gesch\u00e4ft besitzt die meisten Artikel?"},{"db_id":"college_1","query":"SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1","query_toks":["SELECT","T2.dept_name",",","avg","(","T1.stu_gpa",")","FROM","student","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","GROUP","BY","T1.dept_code","ORDER","BY","avg","(","T1.stu_gpa",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","dept_name",",","avg","(","t1",".","stu_gpa",")","from","student","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","group","by","t1",".","dept_code","order","by","avg","(","t1",".","stu_gpa",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,41,false],null],[0,11,false],null]],"table_units":[["table_unit",6],["table_unit",2]]},"groupBy":[[0,41,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[5,39,false],null]]],"select":[false,[[0,[0,[0,12,false],null]],[5,[0,[0,39,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Abteilung","hat","den","h\u00f6chsten","durchschnittlichen","GPA","der","Studierenden","und","wie","hoch","ist","der","durchschnittliche","GPA","?"],"question":"Welche Abteilung hat den h\u00f6chsten durchschnittlichen GPA der Studierenden und wie hoch ist der durchschnittliche GPA?"},{"db_id":"formula_1","query":"SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000","query_toks":["SELECT","DISTINCT","T1.forename",",","T1.surname","FROM","drivers","AS","T1","JOIN","laptimes","AS","T2","ON","T1.driverid","=","T2.driverid","WHERE","T2.milliseconds","<","93000"],"query_toks_no_value":["select","distinct","t1",".","forename",",","t1",".","surname","from","drivers","as","t1","join","laptimes","as","t2","on","t1",".","driverid","=","t2",".","driverid","where","t2",".","milliseconds","<","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,90,false],null]],"table_units":[["table_unit",2],["table_unit",12]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,22,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,4,[0,[0,94,false],null],93000.0,null]]},"question_toks":["Liste","die","Vor-","und","Nachnamen","aller","verschiedenen","Fahrer","auf",",","die","einmal","eine","Rundenzeit","von","weniger","als","93000","Millisekunden","hatten","."],"question":"Liste die Vor- und Nachnamen aller verschiedenen Fahrer auf, die einmal eine Rundenzeit von weniger als 93000 Millisekunden hatten."},{"db_id":"swimming","query":"SELECT * FROM swimmer","query_toks":["SELECT","*","FROM","swimmer"],"query_toks_no_value":["select","*","from","swimmer"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","alle","Details","jedes","Schwimmers","."],"question":"Finde alle Details jedes Schwimmers."},{"db_id":"music_1","query":"SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000","query_toks":["SELECT","T2.song_name","FROM","files","AS","T1","JOIN","song","AS","T2","ON","T1.f_id","=","T2.f_id","WHERE","T1.formats","=","``","mp3","''","INTERSECT","SELECT","song_name","FROM","song","WHERE","resolution","<","1000"],"query_toks_no_value":["select","t2",".","song_name","from","files","as","t1","join","song","as","t2","on","t1",".","f_id","=","t2",".","f_id","where","t1",".","formats","=","value","intersect","select","song_name","from","song","where","resolution","<","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,16,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,4,[0,[0,21,false],null],1000.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"mp3\"",null]]},"question_toks":["Wie","hei\u00dfen","alle","Lieder",",","die","im","mp3-Format","vorliegen","und","eine","Aufl\u00f6sung","von","weniger","als","1000","haben","?"],"question":"Wie hei\u00dfen alle Lieder, die im mp3-Format vorliegen und eine Aufl\u00f6sung von weniger als 1000 haben?"},{"db_id":"activity_1","query":"SELECT building ,  count(*) FROM Faculty GROUP BY building","query_toks":["SELECT","building",",","count","(","*",")","FROM","Faculty","GROUP","BY","building"],"query_toks_no_value":["select","building",",","count","(","*",")","from","faculty","group","by","building"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,22,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","alle","Geb\u00e4ude","zusammen","mit","der","Anzahl","der","Fakult\u00e4tsmitglieder",",","die","die","Geb\u00e4ude","haben","."],"question":"Zeige alle Geb\u00e4ude zusammen mit der Anzahl der Fakult\u00e4tsmitglieder, die die Geb\u00e4ude haben."},{"db_id":"entrepreneur","query":"SELECT Weight FROM people ORDER BY Height ASC LIMIT 1","query_toks":["SELECT","Weight","FROM","people","ORDER","BY","Height","ASC","LIMIT","1"],"query_toks_no_value":["select","weight","from","people","order","by","height","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,8,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","das","Gewicht","der","kleinsten","Person","?"],"question":"Was ist das Gewicht der kleinsten Person?"},{"db_id":"college_1","query":"SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C'","query_toks":["SELECT","DISTINCT","stu_fname","FROM","student","AS","T1","JOIN","enroll","AS","T2","ON","T1.stu_num","=","T2.stu_num","WHERE","enroll_grade","=","'C","'"],"query_toks_no_value":["select","distinct","stu_fname","from","student","as","t1","join","enroll","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","where","enroll_grade","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,25,false],null]],"table_units":[["table_unit",6],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,26,false],null],"\"C\"",null]]},"question_toks":["Wie","lautet","der","Vorname","der","Studierenden",",","die","in","einer","Klasse","die","Note","3","erhalten","haben","?"],"question":"Wie lautet der Vorname der Studierenden, die in einer Klasse die Note 3 erhalten haben?"},{"db_id":"voter_2","query":"SELECT count(*) FROM STUDENT","query_toks":["SELECT","count","(","*",")","FROM","STUDENT"],"query_toks_no_value":["select","count","(","*",")","from","student"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Studierenden","gibt","es","insgesamt","dort","?"],"question":"Wie viele Studierenden gibt es insgesamt dort?"},{"db_id":"loan_1","query":"SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type","query_toks":["SELECT","avg","(","acc_bal",")",",","acc_type","FROM","customer","WHERE","credit_score","<","50","GROUP","BY","acc_type"],"query_toks_no_value":["select","avg","(","acc_bal",")",",","acc_type","from","customer","where","credit_score","<","value","group","by","acc_type"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,9,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,4,[0,[0,11,false],null],50.0,null]]},"question_toks":["Finde","f\u00fcr","jede","Kontoart","den","durchschnittlichen","Kontostand","von","Kunden","mit","einer","Kreditw\u00fcrdigkeit","von","weniger","als","50","."],"question":"Finde f\u00fcr jede Kontoart den durchschnittlichen Kontostand von Kunden mit einer Kreditw\u00fcrdigkeit von weniger als 50."},{"db_id":"voter_2","query":"SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle","query_toks":["SELECT","Election_Cycle",",","count","(","*",")","FROM","VOTING_RECORD","GROUP","BY","Election_Cycle"],"query_toks_no_value":["select","election_cycle",",","count","(","*",")","from","voting_record","group","by","election_cycle"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,11,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hle","die","Anzahl","der","Stimmzettel","f\u00fcr","jeden","Wahlzyklus","."],"question":"Z\u00e4hle die Anzahl der Stimmzettel f\u00fcr jeden Wahlzyklus."},{"db_id":"college_1","query":"SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1","query_toks":["SELECT","stu_fname",",","stu_lname",",","stu_gpa","FROM","student","WHERE","stu_gpa",">","3","ORDER","BY","stu_dob","DESC","LIMIT","1"],"query_toks_no_value":["select","stu_fname",",","stu_lname",",","stu_gpa","from","student","where","stu_gpa",">","value","order","by","stu_dob","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,36,false],null]]],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,33,false],null]],[0,[0,[0,39,false],null]]]],"union":null,"where":[[false,3,[0,[0,39,false],null],3.0,null]]},"question_toks":["Was","ist","der","Vorname",",","Nachname",",","GPA","des","J\u00fcngsten","unter","den","Studierenden",",","deren","GPA","\u00fcber","3","liegt","?"],"question":"Was ist der Vorname, Nachname, GPA des J\u00fcngsten unter den Studierenden, deren GPA \u00fcber 3 liegt?"},{"db_id":"entrepreneur","query":"SELECT sum(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  1.85","query_toks":["SELECT","sum","(","T1.Money_Requested",")","FROM","entrepreneur","AS","T1","JOIN","people","AS","T2","ON","T1.People_ID","=","T2.People_ID","WHERE","T2.Height",">","1.85"],"query_toks_no_value":["select","sum","(","t1",".","money_requested",")","from","entrepreneur","as","t1","join","people","as","t2","on","t1",".","people_id","=","t2",".","people_id","where","t2",".","height",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,4,false],null]]]],"union":null,"where":[[false,3,[0,[0,8,false],null],1.85,null]]},"question_toks":["Wie","hoch","ist","der","Gesamtbetrag",",","der","von","Unternehmern","mit","einer","H\u00f6he","von","mehr","als","1,85","beantragt","wird","?"],"question":"Wie hoch ist der Gesamtbetrag, der von Unternehmern mit einer H\u00f6he von mehr als 1,85 beantragt wird?"},{"db_id":"cinema","query":"SELECT DISTINCT LOCATION FROM cinema","query_toks":["SELECT","DISTINCT","LOCATION","FROM","cinema"],"query_toks_no_value":["select","distinct","location","from","cinema"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","verschiedenen","Standorte",",","die","ein","Kino","haben","."],"question":"Finde die verschiedenen Standorte, die ein Kino haben."},{"db_id":"tracking_orders","query":"SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\"","query_toks":["SELECT","order_id","FROM","shipments","WHERE","shipment_date",">","``","2000-01-01","''"],"query_toks_no_value":["select","order_id","from","shipments","where","shipment_date",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,21,false],null]]]],"union":null,"where":[[false,3,[0,[0,24,false],null],"\"2000-01-01\"",null]]},"question_toks":["Welche","Bestellungen","werden","nach","dem","01.01.2000","ausgeliefert","?","Gib","mir","die","Auftragskennungen","."],"question":"Welche Bestellungen werden nach dem 01.01.2000 ausgeliefert? Gib mir die Auftragskennungen."},{"db_id":"formula_1","query":"SELECT T1.driverid ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30","query_toks":["SELECT","T1.driverid",",","count","(","*",")","FROM","drivers","AS","T1","JOIN","results","AS","T2","ON","T1.driverid","=","T2.driverid","JOIN","races","AS","T3","ON","T2.raceid","=","T3.raceid","GROUP","BY","T1.driverid","HAVING","count","(","*",")","<","=","30"],"query_toks_no_value":["select","t1",".","driverid",",","count","(","*",")","from","drivers","as","t1","join","results","as","t2","on","t1",".","driverid","=","t2",".","driverid","join","races","as","t3","on","t2",".","raceid","=","t3",".","raceid","group","by","t1",".","driverid","having","count","(","*",")","<","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",2],["table_unit",7]]},"groupBy":[[0,18,false]],"having":[[false,6,[0,[3,0,false],null],30.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["F\u00fcr","jede","ID","eines","Fahrers",",","der","an","h\u00f6chstens","30","Rennen","teilgenommen","hat",",","wie","viele","Rennen","hat","er","gefahren","?"],"question":"F\u00fcr jede ID eines Fahrers, der an h\u00f6chstens 30 Rennen teilgenommen hat, wie viele Rennen hat er gefahren?"},{"db_id":"game_injury","query":"SELECT Date FROM game ORDER BY home_team DESC","query_toks":["SELECT","Date","FROM","game","ORDER","BY","home_team","DESC"],"query_toks_no_value":["select","date","from","game","order","by","home_team","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","die","Spieldaten","nach","dem","Namen","der","Heimmannschaft","in","absteigender","Reihenfolge","auf","."],"question":"Liste die Spieldaten nach dem Namen der Heimmannschaft in absteigender Reihenfolge auf."},{"db_id":"swimming","query":"SELECT count(*) FROM stadium WHERE country != 'Russia'","query_toks":["SELECT","count","(","*",")","FROM","stadium","WHERE","country","!","=","'Russia","'"],"query_toks_no_value":["select","count","(","*",")","from","stadium","where","country","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,7,[0,[0,16,false],null],"\"Russia\"",null]]},"question_toks":["Wie","viele","Stadien","sind","nicht","in","``","Russland","''","?"],"question":"Wie viele Stadien sind nicht in \"Russland\"?"},{"db_id":"college_1","query":"SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'","query_toks":["SELECT","T2.dept_name","FROM","course","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","WHERE","T1.crs_description","LIKE","'","%","Statistics","%","'"],"query_toks_no_value":["select","t2",".","dept_name","from","course","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","where","t1",".","crs_description","like","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,11,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,9,[0,[0,9,false],null],"\"%Statistics%\"",null]]},"question_toks":["Wie","hei\u00dft","die","Abteilung",",","die","einen","Kurs","anbietet",",","dessen","Beschreibung","das","Wort","``","Statistik","''","enth\u00e4lt","?"],"question":"Wie hei\u00dft die Abteilung, die einen Kurs anbietet, dessen Beschreibung das Wort \"Statistik\" enth\u00e4lt?"},{"db_id":"college_1","query":"SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1","query_toks":["SELECT","T2.dept_name",",","avg","(","T1.stu_gpa",")","FROM","student","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","GROUP","BY","T1.dept_code","ORDER","BY","avg","(","T1.stu_gpa",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","dept_name",",","avg","(","t1",".","stu_gpa",")","from","student","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","group","by","t1",".","dept_code","order","by","avg","(","t1",".","stu_gpa",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,41,false],null],[0,11,false],null]],"table_units":[["table_unit",6],["table_unit",2]]},"groupBy":[[0,41,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[5,39,false],null]]],"select":[false,[[0,[0,[0,12,false],null]],[5,[0,[0,39,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Name","und","der","durchschnittliche","GPA","der","Abteilung",",","deren","Studierenden","das","h\u00f6chste","durchschnittliche","GPA","haben","?"],"question":"Wie lautet der Name und der durchschnittliche GPA der Abteilung, deren Studierenden das h\u00f6chste durchschnittliche GPA haben?"},{"db_id":"coffee_shop","query":"SELECT shop_id ,  address FROM shop WHERE score  <  (SELECT avg(score) FROM shop)","query_toks":["SELECT","shop_id",",","address","FROM","shop","WHERE","score","<","(","SELECT","avg","(","score",")","FROM","shop",")"],"query_toks_no_value":["select","shop_id",",","address","from","shop","where","score","<","(","select","avg","(","score",")","from","shop",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,4,[0,[0,4,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finde","die","Kennung","und","die","Adresse","der","Gesch\u00e4fte",",","deren","Punktzahl","unter","der","durchschnittlichen","Punktzahl","liegt","."],"question":"Finde die Kennung und die Adresse der Gesch\u00e4fte, deren Punktzahl unter der durchschnittlichen Punktzahl liegt."},{"db_id":"twitter_1","query":"SELECT count(DISTINCT UID) FROM tweets","query_toks":["SELECT","count","(","DISTINCT","UID",")","FROM","tweets"],"query_toks_no_value":["select","count","(","distinct","uid",")","from","tweets"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,4,true],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Anzahl","der","Benutzer",",","die","einige","Tweets","gepostet","haben","."],"question":"Finde die Anzahl der Benutzer, die einige Tweets gepostet haben."},{"db_id":"store_product","query":"SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000","query_toks":["SELECT","District_name",",","City_Population","FROM","district","WHERE","City_Population","BETWEEN","200000","AND","2000000"],"query_toks_no_value":["select","district_name",",","city_population","from","district","where","city_population","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,1,[0,[0,17,false],null],200000.0,2000000.0]]},"question_toks":["Finde","den","Namen","und","die","Einwohnerzahl","eines","Bezirks","mit","einer","Einwohnerzahl","zwischen","200000","und","2000000","."],"question":"Finde den Namen und die Einwohnerzahl eines Bezirks mit einer Einwohnerzahl zwischen 200000 und 2000000."},{"db_id":"formula_1","query":"SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year","query_toks":["SELECT","avg","(","T2.fastestlapspeed",")",",","T1.name",",","T1.year","FROM","races","AS","T1","JOIN","results","AS","T2","ON","T1.raceid","=","T2.raceid","WHERE","T1.year",">","2014","GROUP","BY","T1.name","ORDER","BY","T1.year"],"query_toks_no_value":["select","avg","(","t2",".","fastestlapspeed",")",",","t1",".","name",",","t1",".","year","from","races","as","t1","join","results","as","t2","on","t1",".","raceid","=","t2",".","raceid","where","t1",".","year",">","value","group","by","t1",".","name","order","by","t1",".","year"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,44,false],null]],"table_units":[["table_unit",1],["table_unit",7]]},"groupBy":[[0,14,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,11,false],null]]],"select":[false,[[5,[0,[0,59,false],null]],[0,[0,[0,14,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],2014.0,null]]},"question_toks":["Welches","sind","die","durchschnittlich","schnellsten","Rundengeschwindigkeiten","in","den","nach","2004","ausgetragenen","Rennen",",","gruppiert","nach","Rennnamen","und","sortiert","nach","Jahren","?"],"question":"Welches sind die durchschnittlich schnellsten Rundengeschwindigkeiten in den nach 2004 ausgetragenen Rennen, gruppiert nach Rennnamen und sortiert nach Jahren?"},{"db_id":"store_product","query":"SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5","query_toks":["SELECT","product","FROM","product","WHERE","max_page_size","=","``","A4","''","OR","pages_per_minute_color","<","5"],"query_toks_no_value":["select","product","from","product","where","max_page_size","=","value","or","pages_per_minute_color","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"A4\"",null],"or",[false,4,[0,[0,5,false],null],5.0,null]]},"question_toks":["Welche","Produkte","haben","ein","maximales","Seitenformat","von","A4","oder","weniger","als","5","Seiten","pro","Minute","in","Farbe","?"],"question":"Welche Produkte haben ein maximales Seitenformat von A4 oder weniger als 5 Seiten pro Minute in Farbe?"},{"db_id":"cinema","query":"SELECT T3.name ,  T2.title ,  T1.date ,  T1.price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id JOIN cinema AS T3 ON T1.cinema_id  =  T3.cinema_id","query_toks":["SELECT","T3.name",",","T2.title",",","T1.date",",","T1.price","FROM","schedule","AS","T1","JOIN","film","AS","T2","ON","T1.film_id","=","T2.film_id","JOIN","cinema","AS","T3","ON","T1.cinema_id","=","T3.cinema_id"],"query_toks_no_value":["select","t3",".","name",",","t2",".","title",",","t1",".","date",",","t1",".","price","from","schedule","as","t1","join","film","as","t2","on","t1",".","film_id","=","t2",".","film_id","join","cinema","as","t3","on","t1",".","cinema_id","=","t3",".","cinema_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,14,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,4,false],null]],[0,[0,[0,15,false],null]],[0,[0,[0,17,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","den","Namen","des","Kinos",",","den","Filmtitel",",","das","Datum","und","den","Preis","f\u00fcr","jede","Aufzeichnung","im","Zeitplan","an","."],"question":"Zeige den Namen des Kinos, den Filmtitel, das Datum und den Preis f\u00fcr jede Aufzeichnung im Zeitplan an."},{"db_id":"csu_1","query":"SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus","query_toks":["SELECT","T1.campus",",","sum","(","T2.degrees",")","FROM","campuses","AS","T1","JOIN","degrees","AS","T2","ON","T1.id","=","T2.campus","WHERE","T1.county","=","``","Orange","''","AND","T2.year",">","=","2000","GROUP","BY","T1.campus"],"query_toks_no_value":["select","t1",".","campus",",","sum","(","t2",".","degrees",")","from","campuses","as","t1","join","degrees","as","t2","on","t1",".","id","=","t2",".","campus","where","t1",".","county","=","value","and","t2",".","year",">","=","value","group","by","t1",".","campus"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[4,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Orange\"",null],"and",[false,5,[0,[0,9,false],null],2000.0,null]]},"question_toks":["Gib","f\u00fcr","jeden","Campus","in","Orange","County","die","Anzahl","der","nach","2000","verliehenen","Abschl\u00fcsse","an","."],"question":"Gib f\u00fcr jeden Campus in Orange County die Anzahl der nach 2000 verliehenen Abschl\u00fcsse an."},{"db_id":"entrepreneur","query":"SELECT Name FROM People ORDER BY Weight ASC","query_toks":["SELECT","Name","FROM","People","ORDER","BY","Weight","ASC"],"query_toks_no_value":["select","name","from","people","order","by","weight","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","die","Namen","der","Personen",",","geordnet","nach","Gewicht","aufsteigend",",","an","."],"question":"Gib die Namen der Personen, geordnet nach Gewicht aufsteigend, an."},{"db_id":"voter_2","query":"SELECT Fname FROM STUDENT WHERE Age  >  22","query_toks":["SELECT","Fname","FROM","STUDENT","WHERE","Age",">","22"],"query_toks_no_value":["select","fname","from","student","where","age",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],22.0,null]]},"question_toks":["Finde","die","Vornamen","von","Studierenden","Mit","einem","Alter","\u00fcber","22","Jahren","."],"question":"Finde die Vornamen von Studierenden Mit einem Alter \u00fcber 22 Jahren."},{"db_id":"store_product","query":"SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)","query_toks":["SELECT","t1.store_name","FROM","store","AS","t1","JOIN","store_district","AS","t2","ON","t1.store_id","=","t2.store_id","WHERE","district_id","=","(","SELECT","district_id","FROM","district","ORDER","BY","city_population","DESC","LIMIT","1",")"],"query_toks_no_value":["select","t1",".","store_name","from","store","as","t1","join","store_district","as","t2","on","t1",".","store_id","=","t2",".","store_id","where","district_id","=","(","select","district_id","from","district","order","by","city_population","desc","limit","value",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,21,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,17,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finde","alle","Gesch\u00e4fte","im","Bezirk","mit","der","meisten","Bev\u00f6lkerung","."],"question":"Finde alle Gesch\u00e4fte im Bezirk mit der meisten Bev\u00f6lkerung."},{"db_id":"college_1","query":"SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biology\"","query_toks":["SELECT","T3.EMP_FNAME",",","T3.EMP_LNAME","FROM","professor","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","JOIN","employee","AS","T3","ON","T1.EMP_NUM","=","T3.EMP_NUM","WHERE","DEPT_NAME","=","``","Biology","''"],"query_toks_no_value":["select","t3",".","emp_fname",",","t3",".","emp_lname","from","professor","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","join","employee","as","t3","on","t1",".","emp_num","=","t3",".","emp_num","where","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,28,false],null],[0,11,false],null]],"table_units":[["table_unit",5],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,18,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Biology\"",null]]},"question_toks":["Was","sind","die","Vor-","und","Nachnamen","aller","Biologieprofessoren","?"],"question":"Was sind die Vor- und Nachnamen aller Biologieprofessoren?"},{"db_id":"coffee_shop","query":"SELECT count(*) FROM member WHERE Membership_card  =  'Black'","query_toks":["SELECT","count","(","*",")","FROM","member","WHERE","Membership_card","=","'Black","'"],"query_toks_no_value":["select","count","(","*",")","from","member","where","membership_card","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"Black\"",null]]},"question_toks":["Wie","viele","Mitglieder","haben","die","schwarze","Mitgliedskarte","?"],"question":"Wie viele Mitglieder haben die schwarze Mitgliedskarte?"},{"db_id":"twitter_1","query":"SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1","query_toks":["SELECT","T1.name","FROM","user_profiles","AS","T1","JOIN","tweets","AS","T2","ON","T1.uid","=","T2.uid","GROUP","BY","T2.uid","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","name","from","user_profiles","as","t1","join","tweets","as","t2","on","t1",".","uid","=","t2",".","uid","group","by","t2",".","uid","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,4,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,4,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","von","Benutzern",",","die","mehr","als","einen","Tweet","haben","."],"question":"Finde den Namen von Benutzern, die mehr als einen Tweet haben."},{"db_id":"sakila_1","query":"SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3","query_toks":["SELECT","T2.country","FROM","city","AS","T1","JOIN","country","AS","T2","ON","T1.country_id","=","T2.country_id","GROUP","BY","T2.country_id","HAVING","count","(","*",")",">","=","3"],"query_toks_no_value":["select","t2",".","country","from","city","as","t1","join","country","as","t2","on","t1",".","country_id","=","t2",".","country_id","group","by","t2",".","country_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,20,false],null]],"table_units":[["table_unit",3],["table_unit",4]]},"groupBy":[[0,20,false]],"having":[[false,5,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,21,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","L\u00e4nder",",","die","3","oder","mehr","St\u00e4dte","umfassen","?"],"question":"Welches sind die L\u00e4nder, die 3 oder mehr St\u00e4dte umfassen?"},{"db_id":"tracking_orders","query":"SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\"","query_toks":["SELECT","DISTINCT","T2.product_id","FROM","orders","AS","T1","JOIN","order_items","AS","T2","ON","T1.order_id","=","T2.order_id","WHERE","T1.date_order_placed",">","=","``","1975-01-01","''","AND","T1.date_order_placed","<","=","``","1976-01-01","''"],"query_toks_no_value":["select","distinct","t2",".","product_id","from","orders","as","t1","join","order_items","as","t2","on","t1",".","order_id","=","t2",".","order_id","where","t1",".","date_order_placed",">","=","value","and","t1",".","date_order_placed","<","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,17,false],null]],"table_units":[["table_unit",2],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,5,[0,[0,10,false],null],"\"1975-01-01\"",null],"and",[false,6,[0,[0,10,false],null],"\"1976-01-01\"",null]]},"question_toks":["Gib","mir","eine","Liste","der","verschiedenen","Produkt-IDs","von","Bestellungen",",","die","zwischen","dem","01.01.1975","und","dem","01.01.1976","aufgegeben","wurden","."],"question":"Gib mir eine Liste der verschiedenen Produkt-IDs von Bestellungen, die zwischen dem 01.01.1975 und dem 01.01.1976 aufgegeben wurden."},{"db_id":"college_1","query":"SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'","query_toks":["SELECT","T2.emp_fname",",","T1.class_room","FROM","CLASS","AS","T1","JOIN","employee","AS","T2","ON","T1.prof_num","=","T2.emp_num","JOIN","professor","AS","T3","ON","T2.emp_num","=","T3.emp_num","JOIN","department","AS","T4","ON","T4.dept_code","=","T3.dept_code","WHERE","T4.dept_name","=","'Accounting","'"],"query_toks_no_value":["select","t2",".","emp_fname",",","t1",".","class_room","from","class","as","t1","join","employee","as","t2","on","t1",".","prof_num","=","t2",".","emp_num","join","professor","as","t3","on","t2",".","emp_num","=","t3",".","emp_num","join","department","as","t4","on","t4",".","dept_code","=","t3",".","dept_code","where","t4",".","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Accounting\"",null]]},"question_toks":["Wie","lauten","die","Vornamen","aller","Rechnungswesenprofessoren",",","die","unterrichten",",","und","in","welchen","Klassenzimmern","werden","die","Kurse","abgehalten","?"],"question":"Wie lauten die Vornamen aller Rechnungswesenprofessoren, die unterrichten, und in welchen Klassenzimmern werden die Kurse abgehalten?"},{"db_id":"store_product","query":"SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000","query_toks":["SELECT","District_name",",","City_Population","FROM","district","WHERE","City_Population","BETWEEN","200000","AND","2000000"],"query_toks_no_value":["select","district_name",",","city_population","from","district","where","city_population","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,1,[0,[0,17,false],null],200000.0,2000000.0]]},"question_toks":["Wie","lauten","die","Bezirksnamen","und","Stadtbev\u00f6lkerungen","f\u00fcr","alle","Bezirke","mit","200.000","bis","2.000.000","Einwohnern","?"],"question":"Wie lauten die Bezirksnamen und Stadtbev\u00f6lkerungen f\u00fcr alle Bezirke mit 200.000 bis 2.000.000 Einwohnern?"},{"db_id":"music_1","query":"SELECT count(*) FROM files WHERE duration LIKE \"4:%\"","query_toks":["SELECT","count","(","*",")","FROM","files","WHERE","duration","LIKE","``","4",":","%","''"],"query_toks_no_value":["select","count","(","*",")","from","files","where","duration","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,9,[0,[0,11,false],null],"\"4:%\"",null]]},"question_toks":["Wie","viele","Lieder","haben","eine","Dauer","von","4","Minuten","?"],"question":"Wie viele Lieder haben eine Dauer von 4 Minuten?"},{"db_id":"mountain_photos","query":"SELECT max(height) ,  avg(height) FROM mountain","query_toks":["SELECT","max","(","height",")",",","avg","(","height",")","FROM","mountain"],"query_toks_no_value":["select","max","(","height",")",",","avg","(","height",")","from","mountain"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,3,false],null]],[5,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","maximale","und","durchschnittliche","H\u00f6he","der","Berge","?"],"question":"Was sind die maximale und durchschnittliche H\u00f6he der Berge?"},{"db_id":"sakila_1","query":"SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.title",",","T1.film_id","FROM","film","AS","T1","JOIN","inventory","AS","T2","ON","T1.film_id","=","T2.film_id","GROUP","BY","T1.film_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","title",",","t1",".","film_id","from","film","as","t1","join","inventory","as","t2","on","t1",".","film_id","=","t2",".","film_id","group","by","t1",".","film_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,55,false],null]],"table_units":[["table_unit",6],["table_unit",10]]},"groupBy":[[0,32,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Titel","und","Kennung","des","Films",",","von","dem","die","meisten","Kopien","im","Inventar","sind","?"],"question":"Was sind die Titel und Kennung des Films, von dem die meisten Kopien im Inventar sind?"},{"db_id":"voter_2","query":"SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor","query_toks":["SELECT","Advisor",",","count","(","*",")","FROM","STUDENT","GROUP","BY","Advisor"],"query_toks_no_value":["select","advisor",",","count","(","*",")","from","student","group","by","advisor"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Studierende","hat","jeder","Berater","?"],"question":"Wie viele Studierende hat jeder Berater?"},{"db_id":"activity_1","query":"SELECT FacID FROM Faculty WHERE Sex  =  'M'","query_toks":["SELECT","FacID","FROM","Faculty","WHERE","Sex","=","'M","'"],"query_toks_no_value":["select","facid","from","faculty","where","sex","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"M\"",null]]},"question_toks":["Zeige","die","Kennungen","f\u00fcr","alle","m\u00e4nnlichen","Fakult\u00e4ten","an","."],"question":"Zeige die Kennungen f\u00fcr alle m\u00e4nnlichen Fakult\u00e4ten an."},{"db_id":"college_1","query":"SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1","query_toks":["SELECT","T3.dept_name","FROM","course","AS","T1","JOIN","CLASS","AS","T2","ON","T1.crs_code","=","T2.crs_code","JOIN","department","AS","T3","ON","T1.dept_code","=","T3.dept_code","GROUP","BY","T1.dept_code","ORDER","BY","sum","(","T1.crs_credit",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t3",".","dept_name","from","course","as","t1","join","class","as","t2","on","t1",".","crs_code","=","t2",".","crs_code","join","department","as","t3","on","t1",".","dept_code","=","t3",".","dept_code","group","by","t1",".","dept_code","order","by","sum","(","t1",".","crs_credit",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,10,false],null]]],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Abteilung","bietet","insgesamt","die","meisten","Kredite","an","?"],"question":"Welche Abteilung bietet insgesamt die meisten Kredite an?"},{"db_id":"loan_1","query":"SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah'","query_toks":["SELECT","avg","(","no_of_customers",")","FROM","bank","WHERE","state","=","'Utah","'"],"query_toks_no_value":["select","avg","(","no_of_customers",")","from","bank","where","state","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Utah\"",null]]},"question_toks":["Wie","hoch","ist","die","durchschnittliche","Kundenzahl","der","Banken","im","Bundesstaat","Utah","?"],"question":"Wie hoch ist die durchschnittliche Kundenzahl der Banken im Bundesstaat Utah?"},{"db_id":"voter_2","query":"SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"Spring\"","query_toks":["SELECT","DISTINCT","T1.Advisor","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","T2.Treasurer_Vote","WHERE","T2.Election_Cycle","=","``","Spring","''"],"query_toks_no_value":["select","distinct","t1",".","advisor","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","t2",".","treasurer_vote","where","t2",".","election_cycle","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,15,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Spring\"",null]]},"question_toks":["Finde","den","jeweiligen","Berater","der","Studierenden",",","die","im","Fr\u00fchlingswahlzyklus","die","Stimmen","f\u00fcr","den","Schatzmeisters","haben","."],"question":"Finde den jeweiligen Berater der Studierenden, die im Fr\u00fchlingswahlzyklus die Stimmen f\u00fcr den Schatzmeisters haben."},{"db_id":"loan_1","query":"SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id","query_toks":["SELECT","DISTINCT","T1.bname","FROM","bank","AS","T1","JOIN","loan","AS","T2","ON","T1.branch_id","=","T2.branch_id"],"query_toks_no_value":["select","distinct","t1",".","bname","from","bank","as","t1","join","loan","as","t2","on","t1",".","branch_id","=","t2",".","branch_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dfen","die","verschiedenen","Banken",",","die","Kredite","vergeben","haben","?"],"question":"Wie hei\u00dfen die verschiedenen Banken, die Kredite vergeben haben?"},{"db_id":"formula_1","query":"SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5","query_toks":["SELECT","T1.forename",",","T1.surname",",","T1.driverid","FROM","drivers","AS","T1","JOIN","pitstops","AS","T2","ON","T1.driverid","=","T2.driverid","GROUP","BY","T1.driverid","HAVING","count","(","*",")",">","8","UNION","SELECT","T1.forename",",","T1.surname",",","T1.driverid","FROM","drivers","AS","T1","JOIN","results","AS","T2","ON","T1.driverid","=","T2.driverid","GROUP","BY","T1.driverid","HAVING","count","(","*",")",">","5"],"query_toks_no_value":["select","t1",".","forename",",","t1",".","surname",",","t1",".","driverid","from","drivers","as","t1","join","pitstops","as","t2","on","t1",".","driverid","=","t2",".","driverid","group","by","t1",".","driverid","having","count","(","*",")",">","value","union","select","t1",".","forename",",","t1",".","surname",",","t1",".","driverid","from","drivers","as","t1","join","results","as","t2","on","t1",".","driverid","=","t2",".","driverid","group","by","t1",".","driverid","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",2],["table_unit",11]]},"groupBy":[[0,18,false]],"having":[[false,3,[0,[3,0,false],null],8.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]],[0,[0,[0,23,false],null]],[0,[0,[0,18,false],null]]]],"union":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",2],["table_unit",7]]},"groupBy":[[0,18,false]],"having":[[false,3,[0,[3,0,false],null],5.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]],[0,[0,[0,23,false],null]],[0,[0,[0,18,false],null]]]],"union":null,"where":[]},"where":[]},"question_toks":["Wie","lauten","die","Vor-","und","Nachnamen","sowie","die","ID","der","Fahrer",",","die","mehr","als","8","Boxenstopps","hatten","oder","an","mehr","als","5","Rennen","teilgenommen","haben","?"],"question":"Wie lauten die Vor- und Nachnamen sowie die ID der Fahrer, die mehr als 8 Boxenstopps hatten oder an mehr als 5 Rennen teilgenommen haben?"},{"db_id":"music_1","query":"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"%love%\"","query_toks":["SELECT","T1.artist_name",",","T1.country","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T2.song_name","LIKE","``","%","love","%","''"],"query_toks_no_value":["select","t1",".","artist_name",",","t1",".","country","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t2",".","song_name","like","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,9,[0,[0,13,false],null],"\"%love%\"",null]]},"question_toks":["Wie","hei\u00dfen","die","K\u00fcnstler",",","die","ein","Lied","ver\u00f6ffentlicht","haben",",","das","das","Wort","Liebe","im","Titel","tr\u00e4gt",",","und","woher","kommen","die","K\u00fcnstler","?"],"question":"Wie hei\u00dfen die K\u00fcnstler, die ein Lied ver\u00f6ffentlicht haben, das das Wort Liebe im Titel tr\u00e4gt, und woher kommen die K\u00fcnstler?"},{"db_id":"loan_1","query":"SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking'","query_toks":["SELECT","cust_name","FROM","customer","WHERE","acc_type","=","'saving","'","INTERSECT","SELECT","cust_name","FROM","customer","WHERE","acc_type","=","'checking","'"],"query_toks_no_value":["select","cust_name","from","customer","where","acc_type","=","value","intersect","select","cust_name","from","customer","where","acc_type","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"checking\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"saving\"",null]]},"question_toks":["Wie","hei\u00dfen","die","Kunden",",","die","sowohl","\u00fcber","Spar-","als","auch","\u00fcber","Girokonten","verf\u00fcgen","?"],"question":"Wie hei\u00dfen die Kunden, die sowohl \u00fcber Spar- als auch \u00fcber Girokonten verf\u00fcgen? "},{"db_id":"sakila_1","query":"SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1","query_toks":["SELECT","T2.address","FROM","store","AS","T1","JOIN","address","AS","T2","ON","T1.address_id","=","T2.address_id","WHERE","store_id","=","1"],"query_toks_no_value":["select","t2",".","address","from","store","as","t1","join","address","as","t2","on","t1",".","address_id","=","t2",".","address_id","where","store_id","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,88,false],null],[0,5,false],null]],"table_units":[["table_unit",15],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,2,[0,[0,86,false],null],1.0,null]]},"question_toks":["Wo","befindet","sich","Lager","1","?"],"question":"Wo befindet sich Lager 1?"},{"db_id":"college_1","query":"SELECT dept_name FROM department ORDER BY dept_name","query_toks":["SELECT","dept_name","FROM","department","ORDER","BY","dept_name"],"query_toks_no_value":["select","dept_name","from","department","order","by","dept_name"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,12,false],null]]],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","aller","Abteilungen","in","alphabetischer","Reihenfolge","?"],"question":"Wie lauten die Namen aller Abteilungen in alphabetischer Reihenfolge?"},{"db_id":"college_1","query":"SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.'","query_toks":["SELECT","count","(","*",")","FROM","professor","WHERE","prof_high_degree","=","'Ph.D",".","'"],"query_toks_no_value":["select","count","(","*",")","from","professor","where","prof_high_degree","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,31,false],null],"\"Ph.D.\"",null]]},"question_toks":["Wie","viele","Professoren","haben","einen","Doktortitel","?"],"question":"Wie viele Professoren haben einen Doktortitel?"},{"db_id":"csu_1","query":"SELECT campus FROM campuses WHERE YEAR  <  1800","query_toks":["SELECT","campus","FROM","campuses","WHERE","YEAR","<","1800"],"query_toks_no_value":["select","campus","from","campuses","where","year","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,4,[0,[0,5,false],null],1800.0,null]]},"question_toks":["Welche","Campusse","wurden","vor","1800","er\u00f6ffnet","?"],"question":"Welche Campusse wurden vor 1800 er\u00f6ffnet?"},{"db_id":"activity_1","query":"SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in","query_toks":["SELECT","StuID","FROM","Student","EXCEPT","SELECT","StuID","FROM","Participates_in"],"query_toks_no_value":["select","stuid","from","student","except","select","stuid","from","participates_in"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Kennungen","der","Studierenden",",","die","an","keiner","Aktivit\u00e4t","teilnehmen","."],"question":"Zeige die Kennungen der Studierenden, die an keiner Aktivit\u00e4t teilnehmen."},{"db_id":"music_1","query":"SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating","query_toks":["SELECT","f_id",",","genre_is",",","artist_name","FROM","song","WHERE","languages","=","``","english","''","ORDER","BY","rating"],"query_toks_no_value":["select","f_id",",","genre_is",",","artist_name","from","song","where","languages","=","value","order","by","rating"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,18,false],null]]],"select":[false,[[0,[0,[0,16,false],null]],[0,[0,[0,17,false],null]],[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},"question_toks":["Liste","die","ID",",","das","Genre","und","den","Interpreten","englischer","Lieder","geordnet","nach","Bewertung","auf","."],"question":"Liste die ID, das Genre und den Interpreten englischer Lieder geordnet nach Bewertung auf."},{"db_id":"voter_2","query":"SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"8741\"","query_toks":["SELECT","DISTINCT","T1.LName","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","PRESIDENT_Vote","INTERSECT","SELECT","DISTINCT","LName","FROM","STUDENT","WHERE","Advisor","=","``","8741","''"],"query_toks_no_value":["select","distinct","t1",".","lname","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","president_vote","intersect","select","distinct","lname","from","student","where","advisor","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,12,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"8741\"",null]]},"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","eindeutigen","Nachnamen","der","Studierenden",",","die","Pr\u00e4sidentschaftsstimmen","und","8741","als","Berater","haben","?"],"question":"Wie lauten die eindeutigen Nachnamen der Studierenden, die Pr\u00e4sidentschaftsstimmen und 8741 als Berater haben?"},{"db_id":"formula_1","query":"SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2017","query_toks":["SELECT","T1.name","FROM","races","AS","T1","JOIN","circuits","AS","T2","ON","T1.circuitid","=","T2.circuitid","WHERE","T2.country","=","``","Spain","''","AND","T1.year",">","2017"],"query_toks_no_value":["select","t1",".","name","from","races","as","t1","join","circuits","as","t2","on","t1",".","circuitid","=","t2",".","circuitid","where","t2",".","country","=","value","and","t1",".","year",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Spain\"",null],"and",[false,3,[0,[0,11,false],null],2017.0,null]]},"question_toks":["Wie","hei\u00dfen","die","Rennen",",","die","nach","2017","in","Spanien","stattfinden","?"],"question":"Wie hei\u00dfen die Rennen, die nach 2017 in Spanien stattfinden?"},{"db_id":"twitter_1","query":"SELECT count(*) FROM user_profiles","query_toks":["SELECT","count","(","*",")","FROM","user_profiles"],"query_toks_no_value":["select","count","(","*",")","from","user_profiles"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Benutzer","gibt","es","?"],"question":"Wie viele Benutzer gibt es?"},{"db_id":"tracking_orders","query":"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"Cancel\" AND T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1","query_toks":["SELECT","T1.customer_name","FROM","customers","AS","T1","JOIN","orders","AS","T2","JOIN","order_items","AS","T3","JOIN","products","AS","T4","ON","T1.customer_id","=","T2.customer_id","AND","T2.order_id","=","T3.order_id","AND","T3.product_id","=","T4.product_id","WHERE","T3.order_item_status","=","``","Cancel","''","AND","T4.product_name","=","``","food","''","GROUP","BY","T1.customer_id","HAVING","count","(","*",")",">","=","1"],"query_toks_no_value":["select","t1",".","customer_name","from","customers","as","t1","join","orders","as","t2","join","order_items","as","t3","join","products","as","t4","on","t1",".","customer_id","=","t2",".","customer_id","and","t2",".","order_id","=","t3",".","order_id","and","t3",".","product_id","=","t4",".","product_id","where","t3",".","order_item_status","=","value","and","t4",".","product_name","=","value","group","by","t1",".","customer_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null],"and",[false,2,[0,[0,7,false],null],[0,17,false],null],"and",[false,2,[0,[0,16,false],null],[0,12,false],null]],"table_units":[["table_unit",0],["table_unit",2],["table_unit",4],["table_unit",3]]},"groupBy":[[0,1,false]],"having":[[false,5,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"Cancel\"",null],"and",[false,2,[0,[0,13,false],null],"\"food\"",null]]},"question_toks":["Liste","die","Namen","der","Kunden","auf",",","die","einmal","den","Kauf","des","Produkts","``","Lebensmittel","''","storniert","haben","(","der","Artikelstatus","ist","``","stornieren","''",")","."],"question":"Liste die Namen der Kunden auf, die einmal den Kauf des Produkts \"Lebensmittel\" storniert haben (der Artikelstatus ist \"stornieren\")."},{"db_id":"college_1","query":"SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  'Smithson'","query_toks":["SELECT","T1.crs_code","FROM","CLASS","AS","T1","JOIN","enroll","AS","T2","ON","T1.class_code","=","T2.class_code","JOIN","student","AS","T3","ON","T3.stu_num","=","T2.stu_num","WHERE","T3.stu_lname","=","'Smithson","'"],"query_toks_no_value":["select","t1",".","crs_code","from","class","as","t1","join","enroll","as","t2","on","t1",".","class_code","=","t2",".","class_code","join","student","as","t3","on","t3",".","stu_num","=","t2",".","stu_num","where","t3",".","stu_lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,33,false],null],"\"Smithson\"",null]]},"question_toks":["Wie","lautet","der","Code","des","Kurses",",","den","der","Student","mit","dem","Nachnamen","Smithson","belegt","hat","?"],"question":"Wie lautet der Code des Kurses, den der Student mit dem Nachnamen Smithson belegt hat?"},{"db_id":"voter_2","query":"SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3","query_toks":["SELECT","Major","FROM","STUDENT","GROUP","BY","Major","HAVING","COUNT","(","*",")","<","3"],"query_toks_no_value":["select","major","from","student","group","by","major","having","count","(","*",")","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[[false,4,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","alle","Studieng\u00e4nge","an",",","die","weniger","als","3","Studierende","haben","."],"question":"Gib alle Studieng\u00e4nge an, die weniger als 3 Studierende haben."},{"db_id":"activity_1","query":"SELECT count(*) FROM Faculty","query_toks":["SELECT","count","(","*",")","FROM","Faculty"],"query_toks_no_value":["select","count","(","*",")","from","faculty"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Fakult\u00e4ten","haben","wir","?"],"question":"Wie viele Fakult\u00e4ten haben wir?"},{"db_id":"twitter_1","query":"SELECT T1.name ,  T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  <  2","query_toks":["SELECT","T1.name",",","T1.partitionid","FROM","user_profiles","AS","T1","JOIN","tweets","AS","T2","ON","T1.uid","=","T2.uid","GROUP","BY","T2.uid","HAVING","count","(","*",")","<","2"],"query_toks_no_value":["select","t1",".","name",",","t1",".","partitionid","from","user_profiles","as","t1","join","tweets","as","t2","on","t1",".","uid","=","t2",".","uid","group","by","t2",".","uid","having","count","(","*",")","<","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,4,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,4,false]],"having":[[false,4,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","und","die","Partitionskennung","f\u00fcr","Benutzer",",","die","weniger","als","zweimal","getwittert","haben","."],"question":"Finde den Namen und die Partitionskennung f\u00fcr Benutzer, die weniger als zweimal getwittert haben."},{"db_id":"college_1","query":"SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History'","query_toks":["SELECT","T1.emp_lname",",","T2.prof_office","FROM","employee","AS","T1","JOIN","professor","AS","T2","ON","T1.emp_num","=","T2.emp_num","JOIN","department","AS","T3","ON","T2.dept_code","=","T3.dept_code","WHERE","T3.dept_name","=","'History","'"],"query_toks_no_value":["select","t1",".","emp_lname",",","t2",".","prof_office","from","employee","as","t1","join","professor","as","t2","on","t1",".","emp_num","=","t2",".","emp_num","join","department","as","t3","on","t2",".","dept_code","=","t3",".","dept_code","where","t3",".","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,27,false],null]],"table_units":[["table_unit",3],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,29,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"History\"",null]]},"question_toks":["Wie","lautet","der","Nachname","und","das","Amt","des","Professors","des","Fachbereichs","Geschichte","?"],"question":"Wie lautet der Nachname und das Amt des Professors des Fachbereichs Geschichte?"},{"db_id":"store_product","query":"SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","max_page_size","FROM","product","GROUP","BY","max_page_size","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","max_page_size","from","product","group","by","max_page_size","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","auff\u00e4lligste","maximale","Seitengr\u00f6\u00dfe","unter","allen","Produkten","."],"question":"Finde die auff\u00e4lligste maximale Seitengr\u00f6\u00dfe unter allen Produkten."},{"db_id":"college_1","query":"SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting'","query_toks":["SELECT","count","(","*",")","FROM","CLASS","AS","T1","JOIN","enroll","AS","T2","ON","T1.class_code","=","T2.class_code","JOIN","course","AS","T3","ON","T1.crs_code","=","T3.crs_code","JOIN","department","AS","T4","ON","T3.dept_code","=","T4.dept_code","WHERE","T4.dept_name","=","'Accounting","'"],"query_toks_no_value":["select","count","(","*",")","from","class","as","t1","join","enroll","as","t2","on","t1",".","class_code","=","t2",".","class_code","join","course","as","t3","on","t1",".","crs_code","=","t3",".","crs_code","join","department","as","t4","on","t3",".","dept_code","=","t4",".","dept_code","where","t4",".","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Accounting\"",null]]},"question_toks":["Wie","viele","Studenten","sind","in","der","Klasse","eingeschrieben",",","die","von","einem","Professor","aus","der","Rechnungswesenabteilung","unterrichtet","wird","?"],"question":"Wie viele Studenten sind in der Klasse eingeschrieben, die von einem Professor aus der Rechnungswesenabteilung unterrichtet wird?"},{"db_id":"activity_1","query":"SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student","query_toks":["SELECT","FacID","FROM","Faculty","EXCEPT","SELECT","advisor","FROM","Student"],"query_toks_no_value":["select","facid","from","faculty","except","select","advisor","from","student"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Kennungen","der","Fakult\u00e4tsmitglieder",",","die","keinen","Studenten","beraten","."],"question":"Wie lauten die Kennungen der Fakult\u00e4tsmitglieder, die keinen Studenten beraten."},{"db_id":"voter_2","query":"SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD","query_toks":["SELECT","DISTINCT","President_Vote",",","VICE_President_Vote","FROM","VOTING_RECORD"],"query_toks_no_value":["select","distinct","president_vote",",","vice_president_vote","from","voting_record"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","alle","einzelnen","Stimmen","des","Pr\u00e4sidenten","und","des","Vizepr\u00e4sidenten","auf","."],"question":"Liste alle einzelnen Stimmen des Pr\u00e4sidenten und des Vizepr\u00e4sidenten auf."},{"db_id":"loan_1","query":"SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100","query_toks":["SELECT","T2.bname","FROM","loan","AS","T1","JOIN","bank","AS","T2","ON","T1.branch_id","=","T2.branch_id","JOIN","customer","AS","T3","ON","T1.cust_id","=","T3.cust_id","WHERE","T3.credit_score","<","100"],"query_toks_no_value":["select","t2",".","bname","from","loan","as","t1","join","bank","as","t2","on","t1",".","branch_id","=","t2",".","branch_id","join","customer","as","t3","on","t1",".","cust_id","=","t3",".","cust_id","where","t3",".","credit_score","<","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,4,[0,[0,11,false],null],100.0,null]]},"question_toks":["Finde","die","Namen","der","Bankfilialen",",","die","jedem","Kunden",",","dessen","Kreditw\u00fcrdigkeit","unter","100","liegt",",","einen","Kredit","gew\u00e4hrt","haben","."],"question":"Finde die Namen der Bankfilialen, die jedem Kunden, dessen Kreditw\u00fcrdigkeit unter 100 liegt, einen Kredit gew\u00e4hrt haben."},{"db_id":"tracking_orders","query":"SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10","query_toks":["SELECT","T1.date_order_placed","FROM","orders","AS","T1","JOIN","shipments","AS","T2","ON","T1.order_id","=","T2.order_id","WHERE","T2.invoice_number","=","10"],"query_toks_no_value":["select","t1",".","date_order_placed","from","orders","as","t1","join","shipments","as","t2","on","t1",".","order_id","=","t2",".","order_id","where","t2",".","invoice_number","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,21,false],null]],"table_units":[["table_unit",2],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],10.0,null]]},"question_toks":["Was","ist","das","Platzierungsdatum","der","Bestellung",",","deren","Rechnungsnummer","10","ist","?"],"question":"Was ist das Platzierungsdatum der Bestellung, deren Rechnungsnummer 10 ist?"},{"db_id":"college_1","query":"SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211' AND T2.enroll_grade  =  'C'","query_toks":["SELECT","T3.stu_fname","FROM","CLASS","AS","T1","JOIN","enroll","AS","T2","ON","T1.class_code","=","T2.class_code","JOIN","student","AS","T3","ON","T2.stu_num","=","T3.stu_num","WHERE","T1.crs_code","=","'ACCT-211","'","AND","T2.enroll_grade","=","'C","'"],"query_toks_no_value":["select","t3",".","stu_fname","from","class","as","t1","join","enroll","as","t2","on","t1",".","class_code","=","t2",".","class_code","join","student","as","t3","on","t2",".","stu_num","=","t3",".","stu_num","where","t1",".","crs_code","=","value","and","t2",".","enroll_grade","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"ACCT-211\"",null],"and",[false,2,[0,[0,26,false],null],"\"C\"",null]]},"question_toks":["Wie","lauten","der","Vorname","der","Studierenden",",","die","in","der","Klasse","ACCT-211","eingeschrieben","sind","und","die","Note","3","erhalten","haben","?"],"question":"Wie lauten der Vorname der Studierenden, die in der Klasse ACCT-211 eingeschrieben sind und die Note 3 erhalten haben?"},{"db_id":"formula_1","query":"SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20","query_toks":["SELECT","DISTINCT","T1.forename","FROM","drivers","AS","T1","JOIN","driverstandings","AS","T2","ON","T1.driverid","=","T2.driverid","WHERE","T2.position","=","1","AND","T2.wins","=","1","AND","T2.points",">","20"],"query_toks_no_value":["select","distinct","t1",".","forename","from","drivers","as","t1","join","driverstandings","as","t2","on","t1",".","driverid","=","t2",".","driverid","where","t2",".","position","=","value","and","t2",".","wins","=","value","and","t2",".","points",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,63,false],null]],"table_units":[["table_unit",2],["table_unit",8]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,65,false],null],1.0,null],"and",[false,2,[0,[0,67,false],null],1.0,null],"and",[false,3,[0,[0,64,false],null],20.0,null]]},"question_toks":["Wie","lauten","die","Vornamen","der","verschiedenen","Fahrer",",","die","als","Fahrer","Platz","1","gewonnen","haben","und","mehr","als","20","Punkte","hatten","?"],"question":"Wie lauten die Vornamen der verschiedenen Fahrer, die als Fahrer Platz 1 gewonnen haben und mehr als 20 Punkte hatten?"},{"db_id":"music_1","query":"SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1","query_toks":["SELECT","T1.country","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","GROUP","BY","T2.artist_name","ORDER","BY","count","(","*",")","LIMIT","1"],"query_toks_no_value":["select","t1",".","country","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","group","by","t2",".","artist_name","order","by","count","(","*",")","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[[0,14,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","das","Herkunftsland","des","K\u00fcnstlers",",","der","am","wenigsten","Lieder","gemacht","hat","?"],"question":"Finde das Herkunftsland des K\u00fcnstlers, der am wenigsten Lieder gemacht hat?"},{"db_id":"music_1","query":"SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"pop\" ORDER BY T2.song_name","query_toks":["SELECT","T1.duration",",","T1.file_size",",","T1.formats","FROM","files","AS","T1","JOIN","song","AS","T2","ON","T1.f_id","=","T2.f_id","WHERE","T2.genre_is","=","``","pop","''","ORDER","BY","T2.song_name"],"query_toks_no_value":["select","t1",".","duration",",","t1",".","file_size",",","t1",".","formats","from","files","as","t1","join","song","as","t2","on","t1",".","f_id","=","t2",".","f_id","where","t2",".","genre_is","=","value","order","by","t2",".","song_name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,16,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,10,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"pop\"",null]]},"question_toks":["Liste","die","Dauer",",","Dateigr\u00f6\u00dfe","und","das","Format","von","Liedern",",","deren","Genre","Pop","ist",",","nach","Titel","geordnet","auf","."],"question":"Liste die Dauer, Dateigr\u00f6\u00dfe und das Format von Liedern, deren Genre Pop ist, nach Titel geordnet auf. "},{"db_id":"college_1","query":"SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Computer Info. Systems'","query_toks":["SELECT","T1.stu_fname","FROM","student","AS","T1","JOIN","enroll","AS","T2","ON","T1.stu_num","=","T2.stu_num","JOIN","CLASS","AS","T3","ON","T2.class_code","=","T3.class_code","JOIN","course","AS","T4","ON","T3.crs_code","=","T4.crs_code","JOIN","department","AS","T5","ON","T5.dept_code","=","T4.dept_code","WHERE","T5.dept_name","=","'Accounting","'","INTERSECT","SELECT","T1.stu_fname","FROM","student","AS","T1","JOIN","enroll","AS","T2","ON","T1.stu_num","=","T2.stu_num","JOIN","CLASS","AS","T3","ON","T2.class_code","=","T3.class_code","JOIN","course","AS","T4","ON","T3.crs_code","=","T4.crs_code","JOIN","department","AS","T5","ON","T5.dept_code","=","T4.dept_code","WHERE","T5.dept_name","=","'Computer","Info",".","Systems","'"],"query_toks_no_value":["select","t1",".","stu_fname","from","student","as","t1","join","enroll","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","join","class","as","t3","on","t2",".","class_code","=","t3",".","class_code","join","course","as","t4","on","t3",".","crs_code","=","t4",".","crs_code","join","department","as","t5","on","t5",".","dept_code","=","t4",".","dept_code","where","t5",".","dept_name","=","value","intersect","select","t1",".","stu_fname","from","student","as","t1","join","enroll","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","join","class","as","t3","on","t2",".","class_code","=","t3",".","class_code","join","course","as","t4","on","t3",".","crs_code","=","t4",".","crs_code","join","department","as","t5","on","t5",".","dept_code","=","t4",".","dept_code","where","t5",".","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,25,false],null]],"table_units":[["table_unit",6],["table_unit",4]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,25,false],null]],"table_units":[["table_unit",6],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Computer Info. Systems\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Accounting\"",null]]},"question_toks":["Wie","lauten","die","Vornamen","aller","Studierender",",","die","an","den","Kursen","f\u00fcr","Rechnungswesen","und","Computerinformationssysteme","teilnehmen","?"],"question":"Wie lauten die Vornamen aller Studierender, die an den Kursen f\u00fcr Rechnungswesen und Computerinformationssysteme teilnehmen?"},{"db_id":"activity_1","query":"SELECT count(*) FROM Faculty WHERE Rank  =  \"Professor\" AND building  =  \"NEB\"","query_toks":["SELECT","count","(","*",")","FROM","Faculty","WHERE","Rank","=","``","Professor","''","AND","building","=","``","NEB","''"],"query_toks_no_value":["select","count","(","*",")","from","faculty","where","rank","=","value","and","building","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"Professor\"",null],"and",[false,2,[0,[0,22,false],null],"\"NEB\"",null]]},"question_toks":["Wie","viele","Professoren","sind","im","Geb\u00e4ude","NEB","?"],"question":"Wie viele Professoren sind im Geb\u00e4ude NEB?"},{"db_id":"sakila_1","query":"SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30","query_toks":["SELECT","T2.first_name",",","T2.last_name","FROM","film_actor","AS","T1","JOIN","actor","AS","T2","ON","T1.actor_id","=","T2.actor_id","GROUP","BY","T2.actor_id","HAVING","count","(","*",")",">","30"],"query_toks_no_value":["select","t2",".","first_name",",","t2",".","last_name","from","film_actor","as","t1","join","actor","as","t2","on","t1",".","actor_id","=","t2",".","actor_id","group","by","t2",".","actor_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,45,false],null],[0,1,false],null]],"table_units":[["table_unit",7],["table_unit",0]]},"groupBy":[[0,1,false]],"having":[[false,3,[0,[3,0,false],null],30.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","vollst\u00e4ndigen","Namen","der","Schauspieler",",","die","in","mehr","als","30","Filmen","mitgespielt","haben","?"],"question":"Wie lauten die vollst\u00e4ndigen Namen der Schauspieler, die in mehr als 30 Filmen mitgespielt haben?"},{"db_id":"swimming","query":"SELECT name FROM swimmer WHERE id NOT IN (SELECT swimmer_id FROM record)","query_toks":["SELECT","name","FROM","swimmer","WHERE","id","NOT","IN","(","SELECT","swimmer_id","FROM","record",")"],"query_toks_no_value":["select","name","from","swimmer","where","id","not","in","(","select","swimmer_id","from","record",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finde","die","Namen","der","Schwimmer",",","die","keinen","Rekord","haben","."],"question":"Finde die Namen der Schwimmer, die keinen Rekord haben."},{"db_id":"formula_1","query":"SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)","query_toks":["SELECT","DISTINCT","driverid",",","STOP","FROM","pitstops","WHERE","duration","<","(","SELECT","max","(","duration",")","FROM","pitstops","WHERE","raceid","=","841",")"],"query_toks_no_value":["select","distinct","driverid",",","stop","from","pitstops","where","duration","<","(","select","max","(","duration",")","from","pitstops","where","raceid","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",11]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,83,false],null]],[0,[0,[0,84,false],null]]]],"union":null,"where":[[false,4,[0,[0,87,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",11]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,87,false],null]]]],"union":null,"where":[[false,2,[0,[0,82,false],null],841.0,null]]},null]]},"question_toks":["Wie","lautet","die","Kennung","und","Stoppnummer","f\u00fcr","jeden","Fahrer",",","der","einen","k\u00fcrzeren","Boxenstopp","hat","als","der","Fahrer","im","Rennen","mit","der","Kennung","841","?"],"question":"Wie lautet die Kennung und Stoppnummer f\u00fcr jeden Fahrer, der einen k\u00fcrzeren Boxenstopp hat als der Fahrer im Rennen mit der Kennung 841?"},{"db_id":"entrepreneur","query":"SELECT count(DISTINCT Company) FROM entrepreneur","query_toks":["SELECT","count","(","DISTINCT","Company",")","FROM","entrepreneur"],"query_toks_no_value":["select","count","(","distinct","company",")","from","entrepreneur"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,3,true],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hle","die","Anzahl","der","verschiedenen","Unternehmen","."],"question":"Z\u00e4hle die Anzahl der verschiedenen Unternehmen."},{"db_id":"college_1","query":"SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.dept_name",",","T1.dept_code","FROM","professor","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","WHERE","T1.prof_high_degree","=","'Ph.D",".","'","GROUP","BY","T1.dept_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","dept_name",",","t1",".","dept_code","from","professor","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","where","t1",".","prof_high_degree","=","value","group","by","t1",".","dept_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,28,false],null],[0,11,false],null]],"table_units":[["table_unit",5],["table_unit",2]]},"groupBy":[[0,28,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,12,false],null]],[0,[0,[0,28,false],null]]]],"union":null,"where":[[false,2,[0,[0,31,false],null],"\"Ph.D.\"",null]]},"question_toks":["Wie","hei\u00dft","der","Fachbereich",",","in","dem","die","meisten","Professoren","mit","einem","Doktortitel","t\u00e4tig","sind","?"],"question":"Wie hei\u00dft der Fachbereich, in dem die meisten Professoren mit einem Doktortitel t\u00e4tig sind?"},{"db_id":"college_1","query":"SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.'","query_toks":["SELECT","count","(","*",")","FROM","professor","WHERE","prof_high_degree","=","'Ph.D",".","'"],"query_toks_no_value":["select","count","(","*",")","from","professor","where","prof_high_degree","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,31,false],null],"\"Ph.D.\"",null]]},"question_toks":["Was","ist","die","Gesamtzahl","der","Professoren","mit","einem","Doktortitel","?"],"question":"Was ist die Gesamtzahl der Professoren mit einem Doktortitel?"},{"db_id":"debate","query":"SELECT Venue FROM debate ORDER BY Num_of_Audience ASC","query_toks":["SELECT","Venue","FROM","debate","ORDER","BY","Num_of_Audience","ASC"],"query_toks_no_value":["select","venue","from","debate","order","by","num_of_audience","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","die","Veranstaltungsorte","der","Debatten","in","aufsteigender","Reihenfolge","der","Anzahl","der","Zuh\u00f6rer","auf","."],"question":"Liste die Veranstaltungsorte der Debatten in aufsteigender Reihenfolge der Anzahl der Zuh\u00f6rer auf."},{"db_id":"sakila_1","query":"SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30","query_toks":["SELECT","T2.first_name",",","T2.last_name","FROM","film_actor","AS","T1","JOIN","actor","AS","T2","ON","T1.actor_id","=","T2.actor_id","GROUP","BY","T2.actor_id","HAVING","count","(","*",")",">","30"],"query_toks_no_value":["select","t2",".","first_name",",","t2",".","last_name","from","film_actor","as","t1","join","actor","as","t2","on","t1",".","actor_id","=","t2",".","actor_id","group","by","t2",".","actor_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,45,false],null],[0,1,false],null]],"table_units":[["table_unit",7],["table_unit",0]]},"groupBy":[[0,1,false]],"having":[[false,3,[0,[3,0,false],null],30.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Film-Schauspieler","(","-Schauspielerinnen",")","spielten","in","mehr","als","30","Filmen","eine","Rolle","?","Liste","ihren","Vor-","und","Nachnamen","auf","."],"question":"Welche Film-Schauspieler (-Schauspielerinnen) spielten in mehr als 30 Filmen eine Rolle? Liste ihren Vor- und Nachnamen auf. "},{"db_id":"music_1","query":"SELECT avg(rating) ,  languages FROM song GROUP BY languages","query_toks":["SELECT","avg","(","rating",")",",","languages","FROM","song","GROUP","BY","languages"],"query_toks_no_value":["select","avg","(","rating",")",",","languages","from","song","group","by","languages"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,18,false],null]],[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","ist","die","durchschnittliche","Bewertung","der","Lieder","f\u00fcr","jede","Sprache","?"],"question":"Wie ist die durchschnittliche Bewertung der Lieder f\u00fcr jede Sprache?"},{"db_id":"college_1","query":"SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1","query_toks":["SELECT","T3.dept_name","FROM","course","AS","T1","JOIN","CLASS","AS","T2","ON","T1.crs_code","=","T2.crs_code","JOIN","department","AS","T3","ON","T1.dept_code","=","T3.dept_code","GROUP","BY","T1.dept_code","ORDER","BY","sum","(","T1.crs_credit",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t3",".","dept_name","from","course","as","t1","join","class","as","t2","on","t1",".","crs_code","=","t2",".","crs_code","join","department","as","t3","on","t1",".","dept_code","=","t3",".","dept_code","group","by","t1",".","dept_code","order","by","sum","(","t1",".","crs_credit",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,10,false],null]]],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","der","Abteilung",",","die","von","allen","Klassen","die","meisten","Kredite","anbietet","."],"question":"Finde den Namen der Abteilung, die von allen Klassen die meisten Kredite anbietet."},{"db_id":"tracking_orders","query":"SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed","query_toks":["SELECT","DISTINCT","order_id","FROM","orders","ORDER","BY","date_order_placed"],"query_toks_no_value":["select","distinct","order_id","from","orders","order","by","date_order_placed"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,10,false],null]]],"select":[true,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","die","Kennungen","aller","verschiedenen","Bestellungen","nach","dem","Datum","der","Bestellung","auf","."],"question":"Liste die Kennungen aller verschiedenen Bestellungen nach dem Datum der Bestellung auf."},{"db_id":"tracking_orders","query":"SELECT DISTINCT product_name FROM products ORDER BY product_name","query_toks":["SELECT","DISTINCT","product_name","FROM","products","ORDER","BY","product_name"],"query_toks_no_value":["select","distinct","product_name","from","products","order","by","product_name"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[true,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Sortiere","alle","einzelnen","Produkte","nach","alphabetischer","Reihenfolge","."],"question":"Sortiere alle einzelnen Produkte nach alphabetischer Reihenfolge."},{"db_id":"formula_1","query":"SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2","query_toks":["SELECT","T1.driverid",",","T1.forename",",","count","(","*",")","FROM","drivers","AS","T1","JOIN","results","AS","T2","ON","T1.driverid","=","T2.driverid","JOIN","races","AS","T3","ON","T2.raceid","=","T3.raceid","GROUP","BY","T1.driverid","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","driverid",",","t1",".","forename",",","count","(","*",")","from","drivers","as","t1","join","results","as","t2","on","t1",".","driverid","=","t2",".","driverid","join","races","as","t3","on","t2",".","raceid","=","t3",".","raceid","group","by","t1",".","driverid","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",2],["table_unit",7]]},"groupBy":[[0,18,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,22,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","die","Kennung",",","der","Vorname","und","die","Anzahl","der","Rennen","f\u00fcr","alle","Fahrer",",","die","an","mindestens","2","Rennen","teilgenommen","haben","?"],"question":"Wie lautet die Kennung, der Vorname und die Anzahl der Rennen f\u00fcr alle Fahrer, die an mindestens 2 Rennen teilgenommen haben?"},{"db_id":"activity_1","query":"SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  \"Professor\"","query_toks":["SELECT","T2.StuID","FROM","Faculty","AS","T1","JOIN","Student","AS","T2","ON","T1.FacID","=","T2.advisor","WHERE","T1.rank","=","``","Professor","''"],"query_toks_no_value":["select","t2",".","stuid","from","faculty","as","t1","join","student","as","t2","on","t1",".","facid","=","t2",".","advisor","where","t1",".","rank","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,13,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"Professor\"",null]]},"question_toks":["Welche","Studierenden","haben","Professore","als","Berater","?","Finde","ihre","Studierenden-ID","."],"question":"Welche Studierenden haben Professore als Berater? Finde ihre Studierenden-ID."},{"db_id":"voter_2","query":"SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","city_code","FROM","STUDENT","GROUP","BY","city_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","city_code","from","student","group","by","city_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","den","Code","der","Stadt","mit","den","meisten","Studierenden","an","."],"question":"Gib den Code der Stadt mit den meisten Studierenden an."},{"db_id":"music_1","query":"SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\"","query_toks":["SELECT","T1.artist_name",",","T1.gender","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T2.releasedate","LIKE","``","%","Mar","%","''"],"query_toks_no_value":["select","t1",".","artist_name",",","t1",".","gender","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t2",".","releasedate","like","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,9,[0,[0,20,false],null],"\"%Mar%\"",null]]},"question_toks":["Wie","lauten","die","Namen","und","Geschlechter","aller","K\u00fcnstler",",","die","im","Monat","M\u00e4rz","Lieder","ver\u00f6ffentlicht","haben","?"],"question":"Wie lauten die Namen und Geschlechter aller K\u00fcnstler, die im Monat M\u00e4rz Lieder ver\u00f6ffentlicht haben?"},{"db_id":"college_1","query":"SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'","query_toks":["SELECT","crs_credit",",","crs_description","FROM","course","WHERE","crs_code","=","'QM-261","'"],"query_toks_no_value":["select","crs_credit",",","crs_description","from","course","where","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"QM-261\"",null]]},"question_toks":["Finde","die","Beschreibung","und","die","Credits","f\u00fcr","den","Kurs","QM-261","?"],"question":"Finde die Beschreibung und die Credits f\u00fcr den Kurs QM-261?"},{"db_id":"entrepreneur","query":"SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\"","query_toks":["SELECT","T2.Date_of_Birth","FROM","entrepreneur","AS","T1","JOIN","people","AS","T2","ON","T1.People_ID","=","T2.People_ID","WHERE","T1.Investor","=","``","Simon","Woodroffe","''","OR","T1.Investor","=","``","Peter","Jones","''"],"query_toks_no_value":["select","t2",".","date_of_birth","from","entrepreneur","as","t1","join","people","as","t2","on","t1",".","people_id","=","t2",".","people_id","where","t1",".","investor","=","value","or","t1",".","investor","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Simon Woodroffe\"",null],"or",[false,2,[0,[0,5,false],null],"\"Peter Jones\"",null]]},"question_toks":["Welches","sind","die","Geburtsdaten","von","Unternehmern","mit","dem","Investor","``","Simon","Woodroffe","''","oder","``","Peter","Jones","''","?"],"question":"Welches sind die Geburtsdaten von Unternehmern mit dem Investor \"Simon Woodroffe\" oder \"Peter Jones\"?"},{"db_id":"csu_1","query":"SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Francisco State University\" AND t1.year  =  2000","query_toks":["SELECT","t1.campusfee","FROM","csu_fees","AS","t1","JOIN","campuses","AS","t2","ON","t1.campus","=","t2.id","WHERE","t2.campus","=","``","San","Francisco","State","University","''","AND","t1.year","=","2000"],"query_toks_no_value":["select","t1",".","campusfee","from","csu_fees","as","t1","join","campuses","as","t2","on","t1",".","campus","=","t2",".","id","where","t2",".","campus","=","value","and","t1",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"San Francisco State University\"",null],"and",[false,2,[0,[0,7,false],null],2000.0,null]]},"question_toks":["Wie","hoch","ist","die","Campusgeb\u00fchr","f\u00fcr","die","San","Francisco","State","University","im","Jahr","2000","?"],"question":"Wie hoch ist die Campusgeb\u00fchr f\u00fcr die San Francisco State University im Jahr 2000?"},{"db_id":"cinema","query":"SELECT DISTINCT LOCATION FROM cinema","query_toks":["SELECT","DISTINCT","LOCATION","FROM","cinema"],"query_toks_no_value":["select","distinct","location","from","cinema"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","sind","alle","Orte","mit","einem","Kino","?"],"question":"Welche sind alle Orte mit einem Kino?"},{"db_id":"college_1","query":"SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History'","query_toks":["SELECT","T1.emp_lname",",","T2.prof_office","FROM","employee","AS","T1","JOIN","professor","AS","T2","ON","T1.emp_num","=","T2.emp_num","JOIN","department","AS","T3","ON","T2.dept_code","=","T3.dept_code","WHERE","T3.dept_name","=","'History","'"],"query_toks_no_value":["select","t1",".","emp_lname",",","t2",".","prof_office","from","employee","as","t1","join","professor","as","t2","on","t1",".","emp_num","=","t2",".","emp_num","join","department","as","t3","on","t2",".","dept_code","=","t3",".","dept_code","where","t3",".","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,27,false],null]],"table_units":[["table_unit",3],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,29,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"History\"",null]]},"question_toks":["Wie","lauten","Nachname","und","B\u00fcro","aller","Geschichtsprofessoren","?"],"question":"Wie lauten Nachname und B\u00fcro aller Geschichtsprofessoren?"},{"db_id":"csu_1","query":"SELECT count(*) FROM campuses","query_toks":["SELECT","count","(","*",")","FROM","campuses"],"query_toks_no_value":["select","count","(","*",")","from","campuses"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","Gesamtanzahl","der","Campusse","?"],"question":"Was ist die Gesamtanzahl der Campusse?"},{"db_id":"cinema","query":"SELECT T2.name ,  sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id  =  T2.cinema_id GROUP BY T1.cinema_id","query_toks":["SELECT","T2.name",",","sum","(","T1.show_times_per_day",")","FROM","schedule","AS","T1","JOIN","cinema","AS","T2","ON","T1.cinema_id","=","T2.cinema_id","GROUP","BY","T1.cinema_id"],"query_toks_no_value":["select","t2",".","name",",","sum","(","t1",".","show_times_per_day",")","from","schedule","as","t1","join","cinema","as","t2","on","t1",".","cinema_id","=","t2",".","cinema_id","group","by","t1",".","cinema_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,8,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,13,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[4,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","die","Gesamtzahl","der","Vorf\u00fchrungen","pro","Datum","f\u00fcr","jedes","Kino","?"],"question":"Wie hoch ist die Gesamtzahl der Vorf\u00fchrungen pro Datum f\u00fcr jedes Kino?"},{"db_id":"college_1","query":"SELECT count(*) ,  dept_code FROM professor WHERE prof_high_degree  =  'Ph.D.' GROUP BY dept_code","query_toks":["SELECT","count","(","*",")",",","dept_code","FROM","professor","WHERE","prof_high_degree","=","'Ph.D",".","'","GROUP","BY","dept_code"],"query_toks_no_value":["select","count","(","*",")",",","dept_code","from","professor","where","prof_high_degree","=","value","group","by","dept_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,28,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,28,false],null]]]],"union":null,"where":[[false,2,[0,[0,31,false],null],"\"Ph.D.\"",null]]},"question_toks":["Wie","viele","Professoren","haben","einen","Doktortitel","in","jeder","Abteilung","?"],"question":"Wie viele Professoren haben einen Doktortitel in jeder Abteilung?"},{"db_id":"swimming","query":"SELECT country FROM stadium GROUP BY country ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","country","FROM","stadium","GROUP","BY","country","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","country","from","stadium","group","by","country","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,16,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","das","Land",",","das","die","meisten","Stadien","hat","."],"question":"Finde das Land, das die meisten Stadien hat."},{"db_id":"activity_1","query":"SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in","query_toks":["SELECT","FacID","FROM","Faculty","EXCEPT","SELECT","FacID","FROM","Faculty_participates_in"],"query_toks_no_value":["select","facid","from","faculty","except","select","facid","from","faculty_participates_in"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Kennungen","der","Fakult\u00e4t",",","die","an","keiner","Aktivit\u00e4t","teilnehmen","."],"question":"Zeige die Kennungen der Fakult\u00e4t, die an keiner Aktivit\u00e4t teilnehmen."},{"db_id":"loan_1","query":"SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1","query_toks":["SELECT","T1.cust_name","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id","GROUP","BY","T1.cust_name","ORDER","BY","sum","(","T2.amount",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","cust_name","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id","group","by","t1",".","cust_name","order","by","sum","(","t2",".","amount",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,18,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dft","der","Kunde","mit","dem","h\u00f6chsten","Gesamtkreditbetrag","?"],"question":"Wie hei\u00dft der Kunde mit dem h\u00f6chsten Gesamtkreditbetrag?"},{"db_id":"music_1","query":"SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","artist_name","FROM","song","WHERE","resolution",">","500","GROUP","BY","languages","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","artist_name","from","song","where","resolution",">","value","group","by","languages","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,3,[0,[0,21,false],null],500.0,null]]},"question_toks":["Welches","ist","die","Sprache",",","die","am","h\u00e4ufigsten","benutzt","wurde","in","Liedern","mit","einer","Aufl\u00f6sung","\u00fcber","500","?"],"question":"Welches ist die Sprache, die am h\u00e4ufigsten benutzt wurde in Liedern mit einer Aufl\u00f6sung \u00fcber 500?"},{"db_id":"music_1","query":"SELECT count(*) FROM artist WHERE country  =  \"Bangladesh\"","query_toks":["SELECT","count","(","*",")","FROM","artist","WHERE","country","=","``","Bangladesh","''"],"query_toks_no_value":["select","count","(","*",")","from","artist","where","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Bangladesh\"",null]]},"question_toks":["Wie","viele","K\u00fcnstler","aus","Bangladesch","sind","gelistet","?"],"question":"Wie viele K\u00fcnstler aus Bangladesch sind gelistet?"},{"db_id":"csu_1","query":"SELECT campus FROM campuses WHERE YEAR  =  1958","query_toks":["SELECT","campus","FROM","campuses","WHERE","YEAR","=","1958"],"query_toks_no_value":["select","campus","from","campuses","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],1958.0,null]]},"question_toks":["Welches","sind","die","Campusse",",","die","1958","\u00f6ffneten","?"],"question":"Welches sind die Campusse, die 1958 \u00f6ffneten?"},{"db_id":"twitter_1","query":"SELECT count(*) FROM follows GROUP BY f1","query_toks":["SELECT","count","(","*",")","FROM","follows","GROUP","BY","f1"],"query_toks_no_value":["select","count","(","*",")","from","follows","group","by","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Anzahl","der","Follower","f\u00fcr","jeden","Benutzer","."],"question":"Finde die Anzahl der Follower f\u00fcr jeden Benutzer."},{"db_id":"activity_1","query":"SELECT rank ,  Fname ,  Lname FROM Faculty","query_toks":["SELECT","rank",",","Fname",",","Lname","FROM","Faculty"],"query_toks_no_value":["select","rank",",","fname",",","lname","from","faculty"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,17,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","der","Rang",",","Vorname","und","Nachname","der","Fakult\u00e4tsmitglieder","?"],"question":"Welches sind der Rang, Vorname und Nachname der Fakult\u00e4tsmitglieder?"},{"db_id":"tracking_orders","query":"SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2","query_toks":["SELECT","T2.customer_name",",","count","(","*",")","FROM","orders","AS","T1","JOIN","customers","AS","T2","ON","T1.customer_id","=","T2.customer_id","GROUP","BY","T2.customer_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","customer_name",",","count","(","*",")","from","orders","as","t1","join","customers","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","group","by","t2",".","customer_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,1,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Kunden","haben","mindestens","zwei","Bestellungen","get\u00e4tigt","?","Gib","mir","jeden","Kundennamen","und","die","Zahl","der","get\u00e4tigten","Bestellungen","."],"question":"Welche Kunden haben mindestens zwei Bestellungen get\u00e4tigt? Gib mir jeden Kundennamen und die Zahl der get\u00e4tigten Bestellungen."},{"db_id":"activity_1","query":"SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  \"Michael\" AND T1.lname  =  \"Goodrich\"","query_toks":["SELECT","T2.fname",",","T2.lname","FROM","Faculty","AS","T1","JOIN","Student","AS","T2","ON","T1.FacID","=","T2.advisor","WHERE","T1.fname","=","``","Michael","''","AND","T1.lname","=","``","Goodrich","''"],"query_toks_no_value":["select","t2",".","fname",",","t2",".","lname","from","faculty","as","t1","join","student","as","t2","on","t1",".","facid","=","t2",".","advisor","where","t1",".","fname","=","value","and","t1",".","lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,13,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"Michael\"",null],"and",[false,2,[0,[0,16,false],null],"\"Goodrich\"",null]]},"question_toks":["Welche","Studierenden","werden","von","Michael","Goodrich","betreut","?","Gib","mir","ihren","Vor-","und","Zunamen","."],"question":"Welche Studierenden werden von Michael Goodrich betreut? Gib mir ihren Vor- und Zunamen."},{"db_id":"formula_1","query":"SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5","query_toks":["SELECT","T1.forename",",","T1.surname",",","T1.driverid","FROM","drivers","AS","T1","JOIN","pitstops","AS","T2","ON","T1.driverid","=","T2.driverid","GROUP","BY","T1.driverid","HAVING","count","(","*",")",">","8","UNION","SELECT","T1.forename",",","T1.surname",",","T1.driverid","FROM","drivers","AS","T1","JOIN","results","AS","T2","ON","T1.driverid","=","T2.driverid","GROUP","BY","T1.driverid","HAVING","count","(","*",")",">","5"],"query_toks_no_value":["select","t1",".","forename",",","t1",".","surname",",","t1",".","driverid","from","drivers","as","t1","join","pitstops","as","t2","on","t1",".","driverid","=","t2",".","driverid","group","by","t1",".","driverid","having","count","(","*",")",">","value","union","select","t1",".","forename",",","t1",".","surname",",","t1",".","driverid","from","drivers","as","t1","join","results","as","t2","on","t1",".","driverid","=","t2",".","driverid","group","by","t1",".","driverid","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",2],["table_unit",11]]},"groupBy":[[0,18,false]],"having":[[false,3,[0,[3,0,false],null],8.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]],[0,[0,[0,23,false],null]],[0,[0,[0,18,false],null]]]],"union":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",2],["table_unit",7]]},"groupBy":[[0,18,false]],"having":[[false,3,[0,[3,0,false],null],5.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]],[0,[0,[0,23,false],null]],[0,[0,[0,18,false],null]]]],"union":null,"where":[]},"where":[]},"question_toks":["Welches","sind","die","Vornamen",",","Zunamen","und","IDs","der","Fahrer","f\u00fcr","alle",",","die","mehr","als","acht","Stopps","hatten","oder","an","mehr","als","f\u00fcnf","Rennen","teilnahmen","?"],"question":"Welches sind die Vornamen, Zunamen und IDs der Fahrer f\u00fcr alle, die mehr als acht Stopps hatten oder an mehr als f\u00fcnf Rennen teilnahmen?"},{"db_id":"cinema","query":"SELECT name ,  LOCATION FROM cinema ORDER BY capacity DESC LIMIT 1","query_toks":["SELECT","name",",","LOCATION","FROM","cinema","ORDER","BY","capacity","DESC","LIMIT","1"],"query_toks_no_value":["select","name",",","location","from","cinema","order","by","capacity","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","der","Name","und","der","Standort","des","Kinos","mit","der","gr\u00f6\u00dften","Kapazit\u00e4t","?"],"question":"Welches sind der Name und der Standort des Kinos mit der gr\u00f6\u00dften Kapazit\u00e4t?"},{"db_id":"college_1","query":"SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' ORDER BY emp_dob","query_toks":["SELECT","emp_fname","FROM","employee","WHERE","emp_jobcode","=","'PROF","'","ORDER","BY","emp_dob"],"query_toks_no_value":["select","emp_fname","from","employee","where","emp_jobcode","=","value","order","by","emp_dob"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,23,false],null]]],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"PROF\"",null]]},"question_toks":["Liste","den","Vornamen","aller","Angestellten","auf","mit","dem","Job-Code","PROF",",","geordnet","nach","ihrem","Geburtsdatum","."],"question":"Liste den Vornamen aller Angestellten auf mit dem Job-Code PROF, geordnet nach ihrem Geburtsdatum."},{"db_id":"store_product","query":"SELECT TYPE ,  count(*) FROM store GROUP BY TYPE","query_toks":["SELECT","TYPE",",","count","(","*",")","FROM","store","GROUP","BY","TYPE"],"query_toks_no_value":["select","type",",","count","(","*",")","from","store","group","by","type"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["F\u00fcr","jeden","Ladentyp",",","wie","viele","gibt","es","davon","?"],"question":"F\u00fcr jeden Ladentyp, wie viele gibt es davon?"},{"db_id":"activity_1","query":"SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"","query_toks":["SELECT","count","(","*",")","FROM","Faculty","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.facID","=","T2.facID","WHERE","T1.fname","=","``","Mark","''","AND","T1.lname","=","``","Giuliano","''"],"query_toks_no_value":["select","count","(","*",")","from","faculty","as","t1","join","faculty_participates_in","as","t2","on","t1",".","facid","=","t2",".","facid","where","t1",".","fname","=","value","and","t1",".","lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,5,false],null]],"table_units":[["table_unit",4],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"Mark\"",null],"and",[false,2,[0,[0,16,false],null],"\"Giuliano\"",null]]},"question_toks":["An","wie","vielen","Aktivit\u00e4ten","nimmt","Mark","Giuliano","teil","?"],"question":"An wie vielen Aktivit\u00e4ten nimmt Mark Giuliano teil?"},{"db_id":"loan_1","query":"SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000","query_toks":["SELECT","T1.cust_name",",","T1.acc_type","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id","GROUP","BY","T1.cust_name","HAVING","sum","(","T2.amount",")",">","5000"],"query_toks_no_value":["select","t1",".","cust_name",",","t1",".","acc_type","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id","group","by","t1",".","cust_name","having","sum","(","t2",".","amount",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,7,false]],"having":[[false,3,[0,[4,18,false],null],5000.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","und","Kontostand","der","Kunden",",","die","Kredite","haben","\u00fcber","einen","Gesamtbetrag","von","\u00fcber","5000","."],"question":"Finde den Namen und Kontostand der Kunden, die Kredite haben \u00fcber einen Gesamtbetrag von \u00fcber 5000."},{"db_id":"mountain_photos","query":"SELECT name FROM camera_lens WHERE name LIKE \"%Digital%\"","query_toks":["SELECT","name","FROM","camera_lens","WHERE","name","LIKE","``","%","Digital","%","''"],"query_toks_no_value":["select","name","from","camera_lens","where","name","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,9,[0,[0,9,false],null],"\"%Digital%\"",null]]},"question_toks":["Liste","die","Namen","der","Kameralinsen","auf",",","welche","die","Unterzeichenfolge","``","Digital","''","enthalten","."],"question":"Liste die Namen der Kameralinsen auf, welche die Unterzeichenfolge \"Digital\" enthalten."},{"db_id":"college_1","query":"SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  \"ACCT-211\"","query_toks":["SELECT","count","(","DISTINCT","PROF_NUM",")","FROM","CLASS","WHERE","CRS_CODE","=","``","ACCT-211","''"],"query_toks_no_value":["select","count","(","distinct","prof_num",")","from","class","where","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,6,true],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"ACCT-211\"",null]]},"question_toks":["Wie","viele","Professoren","unterrichten","eine","Klasse","mit","dem","Code","ACCT-211","?"],"question":"Wie viele Professoren unterrichten eine Klasse mit dem Code ACCT-211?"},{"db_id":"tracking_orders","query":"SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10","query_toks":["SELECT","T1.date_order_placed","FROM","orders","AS","T1","JOIN","shipments","AS","T2","ON","T1.order_id","=","T2.order_id","WHERE","T2.invoice_number","=","10"],"query_toks_no_value":["select","t1",".","date_order_placed","from","orders","as","t1","join","shipments","as","t2","on","t1",".","order_id","=","t2",".","order_id","where","t2",".","invoice_number","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,21,false],null]],"table_units":[["table_unit",2],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],10.0,null]]},"question_toks":["An","welchem","Tag","wurde","die","Bestellung","mit","der","Rechnungsnummer","10","get\u00e4tigt","?"],"question":"An welchem Tag wurde die Bestellung mit der Rechnungsnummer 10 get\u00e4tigt?"},{"db_id":"college_1","query":"SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num","query_toks":["SELECT","emp_fname","FROM","employee","WHERE","emp_jobcode","=","'PROF","'","EXCEPT","SELECT","T1.emp_fname","FROM","employee","AS","T1","JOIN","CLASS","AS","T2","ON","T1.emp_num","=","T2.prof_num"],"query_toks_no_value":["select","emp_fname","from","employee","where","emp_jobcode","=","value","except","select","t1",".","emp_fname","from","employee","as","t1","join","class","as","t2","on","t1",".","emp_num","=","t2",".","prof_num"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"PROF\"",null]]},"question_toks":["Welches","sind","die","Namen","aller","Professoren",",","die","keine","Klassen","unterrichten","?"],"question":"Welches sind die Namen aller Professoren, die keine Klassen unterrichten?"},{"db_id":"formula_1","query":"SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1","query_toks":["SELECT","T1.forename",",","T1.surname","FROM","drivers","AS","T1","JOIN","laptimes","AS","T2","ON","T1.driverid","=","T2.driverid","ORDER","BY","T2.milliseconds","LIMIT","1"],"query_toks_no_value":["select","t1",".","forename",",","t1",".","surname","from","drivers","as","t1","join","laptimes","as","t2","on","t1",".","driverid","=","t2",".","driverid","order","by","t2",".","milliseconds","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,90,false],null]],"table_units":[["table_unit",2],["table_unit",12]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,94,false],null]]],"select":[false,[[0,[0,[0,22,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","der","Vorname","und","Nachname","des","Fahrers",",","der","die","geringste","Rundenzeit","hat","?"],"question":"Was sind der Vorname und Nachname des Fahrers, der die geringste Rundenzeit hat?"},{"db_id":"college_1","query":"SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' AND T1.prof_high_degree != 'Ph.D.'","query_toks":["SELECT","T2.emp_fname",",","T1.prof_office","FROM","professor","AS","T1","JOIN","employee","AS","T2","ON","T1.emp_num","=","T2.emp_num","JOIN","department","AS","T3","ON","T1.dept_code","=","T3.dept_code","WHERE","T3.dept_name","=","'History","'","AND","T1.prof_high_degree","!","=","'Ph.D",".","'"],"query_toks_no_value":["select","t2",".","emp_fname",",","t1",".","prof_office","from","professor","as","t1","join","employee","as","t2","on","t1",".","emp_num","=","t2",".","emp_num","join","department","as","t3","on","t1",".","dept_code","=","t3",".","dept_code","where","t3",".","dept_name","=","value","and","t1",".","prof_high_degree","!","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,27,false],null],[0,17,false],null]],"table_units":[["table_unit",5],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,29,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"History\"",null],"and",[false,7,[0,[0,31,false],null],"\"Ph.D.\"",null]]},"question_toks":["Wie","lauten","die","Vornamen","und","B\u00fcros","von","Geschichtsprofessoren",",","die","keinen","Doktortitel","haben","?"],"question":"Wie lauten die Vornamen und B\u00fcros von Geschichtsprofessoren, die keinen Doktortitel haben?"},{"db_id":"tracking_orders","query":"SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed","query_toks":["SELECT","DISTINCT","order_id","FROM","orders","ORDER","BY","date_order_placed"],"query_toks_no_value":["select","distinct","order_id","from","orders","order","by","date_order_placed"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,10,false],null]]],"select":[true,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Kennungen","der","einzelnen","Bestellungen",",","sortiert","nach","Platzierungsdatum","?"],"question":"Was sind die Kennungen der einzelnen Bestellungen, sortiert nach Platzierungsdatum?"},{"db_id":"voter_2","query":"SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\"","query_toks":["SELECT","DISTINCT","Secretary_Vote","FROM","VOTING_RECORD","WHERE","ELECTION_CYCLE","=","``","Fall","''"],"query_toks_no_value":["select","distinct","secretary_vote","from","voting_record","where","election_cycle","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Fall\"",null]]},"question_toks":["Was","sind","die","verschiedenen","Sekret\u00e4rsstimmen","im","Herbstwahlzyklus","?"],"question":"Was sind die verschiedenen Sekret\u00e4rsstimmen im Herbstwahlzyklus?"},{"db_id":"tracking_orders","query":"SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"","query_toks":["SELECT","T2.date_order_placed","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T1.customer_name","=","``","Jeramie","''"],"query_toks_no_value":["select","t2",".","date_order_placed","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t1",".","customer_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Jeramie\"",null]]},"question_toks":["Finde","die","Daten","der","Bestellungen",",","die","dem","Kunden","mit","dem","Namen","``","Jeramie","''","geh\u00f6ren","."],"question":"Finde die Daten der Bestellungen, die dem Kunden mit dem Namen \"Jeramie\" geh\u00f6ren."},{"db_id":"csu_1","query":"SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200","query_toks":["SELECT","T1.campus","FROM","campuses","AS","t1","JOIN","enrollments","AS","t2","ON","t1.id","=","t2.campus","WHERE","t2.year","=","1956","AND","totalenrollment_ay",">","400","AND","FTE_AY",">","200"],"query_toks_no_value":["select","t1",".","campus","from","campuses","as","t1","join","enrollments","as","t2","on","t1",".","id","=","t2",".","campus","where","t2",".","year","=","value","and","totalenrollment_ay",">","value","and","fte_ay",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],1956.0,null],"and",[false,3,[0,[0,19,false],null],400.0,null],"and",[false,3,[0,[0,20,false],null],200.0,null]]},"question_toks":["Auf","welchem","Campus","gab","es","mehr","als","400","Immatrikulationen","insgesamt",",","aber","mehr","als","200","Vollzeit-Immatrikulationen","im","Jahr","1956","?"],"question":"Auf welchem Campus gab es mehr als 400 Immatrikulationen insgesamt, aber mehr als 200 Vollzeit-Immatrikulationen im Jahr 1956?"},{"db_id":"music_1","query":"SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1","query_toks":["SELECT","T1.artist_name",",","count","(","*",")","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T2.languages","=","``","english","''","GROUP","BY","T2.artist_name","HAVING","count","(","*",")",">","=","1"],"query_toks_no_value":["select","t1",".","artist_name",",","count","(","*",")","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t2",".","languages","=","value","group","by","t2",".","artist_name","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[[0,14,false]],"having":[[false,5,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},"question_toks":["Finde","die","Namen","und","die","Anzahl","der","Werke","aller","K\u00fcnstler",",","die","mindestens","ein","englisches","Lied","haben","."],"question":"Finde die Namen und die Anzahl der Werke aller K\u00fcnstler, die mindestens ein englisches Lied haben."},{"db_id":"csu_1","query":"SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  \"Long Beach State University\"","query_toks":["SELECT","faculty","FROM","faculty","AS","T1","JOIN","campuses","AS","T2","ON","T1.campus","=","T2.id","WHERE","T1.year","=","2002","AND","T2.campus","=","``","Long","Beach","State","University","''"],"query_toks_no_value":["select","faculty","from","faculty","as","t1","join","campuses","as","t2","on","t1",".","campus","=","t2",".","id","where","t1",".","year","=","value","and","t2",".","campus","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,21,false],null],[0,1,false],null]],"table_units":[["table_unit",5],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],2002.0,null],"and",[false,2,[0,[0,2,false],null],"\"Long Beach State University\"",null]]},"question_toks":["Wie","hoch","war","die","Anzahl","der","Fakult\u00e4tslinien","auf","dem","Campus","der","Long","Beach","State","University","im","Jahr","2002","?"],"question":"Wie hoch war die Anzahl der Fakult\u00e4tslinien auf dem Campus der Long Beach State University im Jahr 2002?"},{"db_id":"college_1","query":"SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code","query_toks":["SELECT","count","(","*",")",",","crs_code","FROM","CLASS","GROUP","BY","crs_code"],"query_toks_no_value":["select","count","(","*",")",",","crs_code","from","class","group","by","crs_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Unterteilungen","hat","jeder","Kurs","?"],"question":"Wie viele Unterteilungen hat jeder Kurs?"},{"db_id":"csu_1","query":"SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1","query_toks":["SELECT","T2.faculty","FROM","campuses","AS","T1","JOIN","faculty","AS","T2","ON","T1.id","=","t2.campus","JOIN","degrees","AS","T3","ON","T1.id","=","t3.campus","AND","t2.year","=","t3.year","WHERE","t2.year","=","2001","ORDER","BY","t3.degrees","LIMIT","1"],"query_toks_no_value":["select","t2",".","faculty","from","campuses","as","t1","join","faculty","as","t2","on","t1",".","id","=","t2",".","campus","join","degrees","as","t3","on","t1",".","id","=","t3",".","campus","and","t2",".","year","=","t3",".","year","where","t2",".","year","=","value","order","by","t3",".","degrees","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,21,false],null],"and",[false,2,[0,[0,22,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],2001.0,null]]},"question_toks":["Wie","viele","Fakult\u00e4tsmitglieder","gibt","es","an","der","Universit\u00e4t",",","die","wenigsten","Abschl\u00fcsse","im","Jahr","2001","vergeben","hat","?"],"question":"Wie viele Fakult\u00e4tsmitglieder gibt es an der Universit\u00e4t, die wenigsten Abschl\u00fcsse im Jahr 2001 vergeben hat?"},{"db_id":"sakila_1","query":"SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.title",",","T2.inventory_id","FROM","film","AS","T1","JOIN","inventory","AS","T2","ON","T1.film_id","=","T2.film_id","JOIN","rental","AS","T3","ON","T2.inventory_id","=","T3.inventory_id","GROUP","BY","T2.inventory_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","title",",","t2",".","inventory_id","from","film","as","t1","join","inventory","as","t2","on","t1",".","film_id","=","t2",".","film_id","join","rental","as","t3","on","t2",".","inventory_id","=","t3",".","inventory_id","group","by","t2",".","inventory_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,55,false],null]],"table_units":[["table_unit",6],["table_unit",10]]},"groupBy":[[0,54,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,54,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","den","Titel","und","die","Inventar-ID","des","Films","zur\u00fcck",",","der","am","h\u00e4ufigsten","ausgeliehen","wird","."],"question":"Gib den Titel und die Inventar-ID des Films zur\u00fcck, der am h\u00e4ufigsten ausgeliehen wird."},{"db_id":"formula_1","query":"SELECT DISTINCT name FROM races ORDER BY name DESC","query_toks":["SELECT","DISTINCT","name","FROM","races","ORDER","BY","name","DESC"],"query_toks_no_value":["select","distinct","name","from","races","order","by","name","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,14,false],null]]],"select":[true,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","Die","Namen","aller","verschiedenen","Rassen","in","umgekehrter","lexikographischer","Reihenfolge","auf","?"],"question":"Liste Die Namen aller verschiedenen Rassen in umgekehrter lexikographischer Reihenfolge auf?"},{"db_id":"music_1","query":"SELECT count(*) FROM artist WHERE country  =  \"Bangladesh\"","query_toks":["SELECT","count","(","*",")","FROM","artist","WHERE","country","=","``","Bangladesh","''"],"query_toks_no_value":["select","count","(","*",")","from","artist","where","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Bangladesh\"",null]]},"question_toks":["Wie","viele","K\u00fcnstler","kommen","aus","Bangladesch","?"],"question":"Wie viele K\u00fcnstler kommen aus Bangladesch?"},{"db_id":"swimming","query":"SELECT country FROM stadium WHERE capacity  >  60000 INTERSECT SELECT country FROM stadium WHERE capacity  <  50000","query_toks":["SELECT","country","FROM","stadium","WHERE","capacity",">","60000","INTERSECT","SELECT","country","FROM","stadium","WHERE","capacity","<","50000"],"query_toks_no_value":["select","country","from","stadium","where","capacity",">","value","intersect","select","country","from","stadium","where","capacity","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,4,[0,[0,14,false],null],50000.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,3,[0,[0,14,false],null],60000.0,null]]},"question_toks":["In","welchem","Land","gibt","es","sowohl","Stadien","mit","einer","Kapazit\u00e4t","von","mehr","als","60000","als","auch","Stadien","mit","einer","Kapazit\u00e4t","von","weniger","als","50000","?"],"question":"In welchem Land gibt es sowohl Stadien mit einer Kapazit\u00e4t von mehr als 60000 als auch Stadien mit einer Kapazit\u00e4t von weniger als 50000?"},{"db_id":"voter_2","query":"SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600","query_toks":["SELECT","max","(","Age",")",",","min","(","Age",")","FROM","STUDENT","WHERE","Major","=","600"],"query_toks_no_value":["select","max","(","age",")",",","min","(","age",")","from","student","where","major","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,4,false],null]],[2,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],600.0,null]]},"question_toks":["Nenne","mir","das","Alter","der","\u00e4ltesten","und","j\u00fcngsten","Studierenden","im","Hauptfach","600","."],"question":"Nenne mir das Alter der \u00e4ltesten und j\u00fcngsten Studierenden im Hauptfach 600."},{"db_id":"college_1","query":"SELECT max(stu_gpa) ,  avg(stu_gpa) ,  min(stu_gpa) ,  dept_code FROM student GROUP BY dept_code","query_toks":["SELECT","max","(","stu_gpa",")",",","avg","(","stu_gpa",")",",","min","(","stu_gpa",")",",","dept_code","FROM","student","GROUP","BY","dept_code"],"query_toks_no_value":["select","max","(","stu_gpa",")",",","avg","(","stu_gpa",")",",","min","(","stu_gpa",")",",","dept_code","from","student","group","by","dept_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[[0,41,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,39,false],null]],[5,[0,[0,39,false],null]],[2,[0,[0,39,false],null]],[0,[0,[0,41,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","maximalen",",","durchschnittlichen","und","minimalen","GPA","aller","Studierenden","in","jeder","Abteilung","."],"question":"Finde den maximalen, durchschnittlichen und minimalen GPA aller Studierenden in jeder Abteilung."},{"db_id":"csu_1","query":"SELECT campus FROM campuses WHERE LOCATION  =  \"Northridge\" AND county  =  \"Los Angeles\" UNION SELECT campus FROM campuses WHERE LOCATION  =  \"San Francisco\" AND county  =  \"San Francisco\"","query_toks":["SELECT","campus","FROM","campuses","WHERE","LOCATION","=","``","Northridge","''","AND","county","=","``","Los","Angeles","''","UNION","SELECT","campus","FROM","campuses","WHERE","LOCATION","=","``","San","Francisco","''","AND","county","=","``","San","Francisco","''"],"query_toks_no_value":["select","campus","from","campuses","where","location","=","value","and","county","=","value","union","select","campus","from","campuses","where","location","=","value","and","county","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],"\"San Francisco\"",null],"and",[false,2,[0,[0,4,false],null],"\"San Francisco\"",null]]},"where":[[false,2,[0,[0,3,false],null],"\"Northridge\"",null],"and",[false,2,[0,[0,4,false],null],"\"Los Angeles\"",null]]},"question_toks":["Welche","Campusse","befinden","sich","in","Northridge",",","Los","Angeles",",","oder","in","San","Francisco",",","San","Francisco","?"],"question":"Welche Campusse befinden sich in Northridge, Los Angeles, oder in San Francisco, San Francisco?"},{"db_id":"activity_1","query":"SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","building","FROM","Faculty","GROUP","BY","building","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","building","from","faculty","group","by","building","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,22,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,22,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","das","Geb\u00e4ude","mit","der","gr\u00f6\u00dften","Anzahl","an","Fakult\u00e4tsmitgliedern","."],"question":"Finde das Geb\u00e4ude mit der gr\u00f6\u00dften Anzahl an Fakult\u00e4tsmitgliedern."},{"db_id":"activity_1","query":"SELECT building FROM Faculty WHERE rank  =  \"Professor\" GROUP BY building HAVING count(*)  >=  10","query_toks":["SELECT","building","FROM","Faculty","WHERE","rank","=","``","Professor","''","GROUP","BY","building","HAVING","count","(","*",")",">","=","10"],"query_toks_no_value":["select","building","from","faculty","where","rank","=","value","group","by","building","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,22,false]],"having":[[false,5,[0,[3,0,false],null],10.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"Professor\"",null]]},"question_toks":["In","welchen","Geb\u00e4uden","gibt","es","mindestens","zehn","Professoren","?"],"question":"In welchen Geb\u00e4uden gibt es mindestens zehn Professoren?"},{"db_id":"voter_2","query":"SELECT LName FROM STUDENT WHERE Major  =  50","query_toks":["SELECT","LName","FROM","STUDENT","WHERE","Major","=","50"],"query_toks_no_value":["select","lname","from","student","where","major","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],50.0,null]]},"question_toks":["Finde","die","Nachnamen","von","Studierenden","mit","Hauptfach","50","."],"question":"Finde die Nachnamen von Studierenden mit Hauptfach 50."},{"db_id":"voter_2","query":"SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\"","query_toks":["SELECT","count","(","*",")","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","Class_Senator_Vote","WHERE","T1.city_code","=","``","NYC","''","AND","T2.Election_Cycle","=","``","Spring","''"],"query_toks_no_value":["select","count","(","*",")","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","class_senator_vote","where","t1",".","city_code","=","value","and","t2",".","election_cycle","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"NYC\"",null],"and",[false,2,[0,[0,11,false],null],"\"Spring\"",null]]},"question_toks":["Welche","Studierenden","leben","in","der","Stadt","mit","dem","Code","``","NYC","''","und","haben","im","Fr\u00fchlingswahlzyklus","Klassensenatorenstimmen","?","Z\u00e4hle","die","Zahlen","."],"question":"Welche Studierenden leben in der Stadt mit dem Code \"NYC\" und haben im Fr\u00fchlingswahlzyklus Klassensenatorenstimmen? Z\u00e4hle die Zahlen."},{"db_id":"csu_1","query":"SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950","query_toks":["SELECT","campus","FROM","campuses","WHERE","county","=","``","Los","Angeles","''","AND","YEAR",">","1950"],"query_toks_no_value":["select","campus","from","campuses","where","county","=","value","and","year",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Los Angeles\"",null],"and",[false,3,[0,[0,5,false],null],1950.0,null]]},"question_toks":["Welche","Universit\u00e4t","liegt","im","Bezirk","Los","Angeles","und","wurde","nach","1950","er\u00f6ffnet","?"],"question":"Welche Universit\u00e4t liegt im Bezirk Los Angeles und wurde nach 1950 er\u00f6ffnet?"},{"db_id":"csu_1","query":"SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004","query_toks":["SELECT","T1.campus","FROM","campuses","AS","t1","JOIN","faculty","AS","t2","ON","t1.id","=","t2.campus","WHERE","t2.faculty",">","=","600","AND","t2.faculty","<","=","1000","AND","T1.year","=","2004"],"query_toks_no_value":["select","t1",".","campus","from","campuses","as","t1","join","faculty","as","t2","on","t1",".","id","=","t2",".","campus","where","t2",".","faculty",">","=","value","and","t2",".","faculty","<","=","value","and","t1",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,21,false],null]],"table_units":[["table_unit",0],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,5,[0,[0,23,false],null],600.0,null],"and",[false,6,[0,[0,23,false],null],1000.0,null],"and",[false,2,[0,[0,5,false],null],2004.0,null]]},"question_toks":["Welches","sind","die","Universit\u00e4ten",",","die","2004","zwischen","600","und","1000","Fakult\u00e4tsmitglieder","hatten","?"],"question":"Welches sind die Universit\u00e4ten, die 2004 zwischen 600 und 1000 Fakult\u00e4tsmitglieder hatten?"},{"db_id":"college_1","query":"SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5","query_toks":["SELECT","stu_gpa",",","stu_phone",",","stu_fname","FROM","student","ORDER","BY","stu_gpa","DESC","LIMIT","5"],"query_toks_no_value":["select","stu_gpa",",","stu_phone",",","stu_fname","from","student","order","by","stu_gpa","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":5,"orderBy":["desc",[[0,[0,39,false],null]]],"select":[false,[[0,[0,[0,39,false],null]],[0,[0,[0,42,false],null]],[0,[0,[0,34,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Vorname",",","der","GPA","und","die","Telefonnummer","der","5","Studierenden","mit","dem","h\u00f6chsten","GPA","?"],"question":"Wie lautet der Vorname, der GPA und die Telefonnummer der 5 Studierenden mit dem h\u00f6chsten GPA?"},{"db_id":"college_1","query":"SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num","query_toks":["SELECT","emp_fname","FROM","employee","WHERE","emp_jobcode","=","'PROF","'","EXCEPT","SELECT","T1.emp_fname","FROM","employee","AS","T1","JOIN","CLASS","AS","T2","ON","T1.emp_num","=","T2.prof_num"],"query_toks_no_value":["select","emp_fname","from","employee","where","emp_jobcode","=","value","except","select","t1",".","emp_fname","from","employee","as","t1","join","class","as","t2","on","t1",".","emp_num","=","t2",".","prof_num"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"PROF\"",null]]},"question_toks":["Wie","lauten","die","Vornamen","der","Professoren",",","die","keine","Klasse","unterrichten","?"],"question":"Wie lauten die Vornamen der Professoren, die keine Klasse unterrichten?"},{"db_id":"college_1","query":"SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA'","query_toks":["SELECT","count","(","*",")","FROM","professor","WHERE","prof_high_degree","=","'Ph.D",".","'","OR","prof_high_degree","=","'MA","'"],"query_toks_no_value":["select","count","(","*",")","from","professor","where","prof_high_degree","=","value","or","prof_high_degree","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,31,false],null],"\"Ph.D.\"",null],"or",[false,2,[0,[0,31,false],null],"\"MA\"",null]]},"question_toks":["Wie","viele","Professoren","haben","entweder","einen","Doktor-","oder","einen","Master-Abschluss","erworben","?"],"question":"Wie viele Professoren haben entweder einen Doktor- oder einen Master-Abschluss erworben?"},{"db_id":"voter_2","query":"SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*)  >  2","query_toks":["SELECT","Advisor","FROM","STUDENT","GROUP","BY","Advisor","HAVING","COUNT","(","*",")",">","2"],"query_toks_no_value":["select","advisor","from","student","group","by","advisor","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,7,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","alle","Beraterinnen","und","Berater",",","die","mehr","als","2","Studierende","beraten","wieder","."],"question":"Gib alle Beraterinnen und Berater, die mehr als 2 Studierende beraten wieder."},{"db_id":"tracking_orders","query":"SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments)","query_toks":["SELECT","order_id","FROM","shipments","WHERE","shipment_date","=","(","SELECT","max","(","shipment_date",")","FROM","shipments",")"],"query_toks_no_value":["select","order_id","from","shipments","where","shipment_date","=","(","select","max","(","shipment_date",")","from","shipments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,21,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,24,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Welche","Bestellung","hat","den","neuesten","Versand","?","Gib","mir","die","Bestellnummer","."],"question":"Welche Bestellung hat den neuesten Versand? Gib mir die Bestellnummer."},{"db_id":"mountain_photos","query":"SELECT count(DISTINCT brand) FROM camera_lens","query_toks":["SELECT","count","(","DISTINCT","brand",")","FROM","camera_lens"],"query_toks_no_value":["select","count","(","distinct","brand",")","from","camera_lens"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,8,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","unterschiedliche","Linsenmarken","gibt","es","?"],"question":"Wie viele unterschiedliche Linsenmarken gibt es?"},{"db_id":"music_1","query":"SELECT song_name FROM song WHERE languages  =  \"english\"","query_toks":["SELECT","song_name","FROM","song","WHERE","languages","=","``","english","''"],"query_toks_no_value":["select","song_name","from","song","where","languages","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},"question_toks":["Finde","alle","Titel","von","englischen","Liedern","."],"question":"Finde alle Titel von englischen Liedern."},{"db_id":"formula_1","query":"SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\"","query_toks":["SELECT","circuitid",",","LOCATION","FROM","circuits","WHERE","country","=","``","France","''","OR","country","=","``","Belgium","''"],"query_toks_no_value":["select","circuitid",",","location","from","circuits","where","country","=","value","or","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"France\"",null],"or",[false,2,[0,[0,5,false],null],"\"Belgium\"",null]]},"question_toks":["Welches","sind","die","Nummern","und","Standorte","aller","Rennbahnen","in","Frankreich","oder","Belgien","?"],"question":"Welches sind die Nummern und Standorte aller Rennbahnen in Frankreich oder Belgien?"},{"db_id":"csu_1","query":"SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND t2.year  =  2000","query_toks":["SELECT","degrees","FROM","campuses","AS","T1","JOIN","degrees","AS","T2","ON","t1.id","=","t2.campus","WHERE","t1.campus","=","``","San","Jose","State","University","''","AND","t2.year","=","2000"],"query_toks_no_value":["select","degrees","from","campuses","as","t1","join","degrees","as","t2","on","t1",".","id","=","t2",".","campus","where","t1",".","campus","=","value","and","t2",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"San Jose State University\"",null],"and",[false,2,[0,[0,9,false],null],2000.0,null]]},"question_toks":["Wie","viele","Abschl\u00fcsse","wurden","in","2000","an","der","San","Jose","State","University","vergeben","?"],"question":"Wie viele Abschl\u00fcsse wurden in 2000 an der San Jose State University vergeben?"},{"db_id":"formula_1","query":"SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000","query_toks":["SELECT","DISTINCT","T1.forename",",","T1.surname","FROM","drivers","AS","T1","JOIN","laptimes","AS","T2","ON","T1.driverid","=","T2.driverid","WHERE","T2.milliseconds","<","93000"],"query_toks_no_value":["select","distinct","t1",".","forename",",","t1",".","surname","from","drivers","as","t1","join","laptimes","as","t2","on","t1",".","driverid","=","t2",".","driverid","where","t2",".","milliseconds","<","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,90,false],null]],"table_units":[["table_unit",2],["table_unit",12]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,22,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,4,[0,[0,94,false],null],93000.0,null]]},"question_toks":["Wie","lauten","die","Vor-","und","Nachnamen","aller","einzelnen","Fahrer",",","die","eine","Rundenzeit","von","weniger","als","93000","Millisekunden","hatten","?"],"question":"Wie lauten die Vor- und Nachnamen aller einzelnen Fahrer, die eine Rundenzeit von weniger als 93000 Millisekunden hatten?"},{"db_id":"formula_1","query":"SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.driverid",",","T1.surname","FROM","drivers","AS","T1","JOIN","results","AS","T2","ON","T1.driverid","=","T2.driverid","JOIN","races","AS","T3","ON","T2.raceid","=","T3.raceid","WHERE","T3.year",">","2010","GROUP","BY","T1.driverid","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","driverid",",","t1",".","surname","from","drivers","as","t1","join","results","as","t2","on","t1",".","driverid","=","t2",".","driverid","join","races","as","t3","on","t2",".","raceid","=","t3",".","raceid","where","t3",".","year",">","value","group","by","t1",".","driverid","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",2],["table_unit",7]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],2010.0,null]]},"question_toks":["Was","ist","die","Kennung","und","Nachname","des","Fahrers",",","der","an","den","meisten","Rennen","nach","2010","teilgenommen","hat","?"],"question":"Was ist die Kennung und Nachname des Fahrers, der an den meisten Rennen nach 2010 teilgenommen hat?"},{"db_id":"music_1","query":"SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages","query_toks":["SELECT","max","(","T1.duration",")",",","max","(","T2.resolution",")",",","T2.languages","FROM","files","AS","T1","JOIN","song","AS","T2","ON","T1.f_id","=","T2.f_id","GROUP","BY","T2.languages","ORDER","BY","T2.languages"],"query_toks_no_value":["select","max","(","t1",".","duration",")",",","max","(","t2",".","resolution",")",",","t2",".","languages","from","files","as","t1","join","song","as","t2","on","t1",".","f_id","=","t2",".","f_id","group","by","t2",".","languages","order","by","t2",".","languages"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,16,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,19,false],null]]],"select":[false,[[1,[0,[0,11,false],null]],[1,[0,[0,21,false],null]],[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","gr\u00f6\u00dfte","L\u00e4nge","und","Aufl\u00f6sung","aller","Lieder",",","f\u00fcr","jede","Sprache",",","alphabetisch","sortiert","nach","Sprache","?"],"question":"Was sind die gr\u00f6\u00dfte L\u00e4nge und Aufl\u00f6sung aller Lieder, f\u00fcr jede Sprache, alphabetisch sortiert nach Sprache?"},{"db_id":"store_product","query":"SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)","query_toks":["SELECT","product","FROM","product","WHERE","product","!","=","(","SELECT","max_page_size","FROM","product","GROUP","BY","max_page_size","ORDER","BY","count","(","*",")","DESC","LIMIT","1",")"],"query_toks_no_value":["select","product","from","product","where","product","!","=","(","select","max_page_size","from","product","group","by","max_page_size","order","by","count","(","*",")","desc","limit","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,7,[0,[0,2,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","hei\u00dfen","alle","Produkte",",","die","nicht","die","am","h\u00e4ufigsten","verwendete","maximale","Seitengr\u00f6\u00dfe","haben","?"],"question":"Wie hei\u00dfen alle Produkte, die nicht die am h\u00e4ufigsten verwendete maximale Seitengr\u00f6\u00dfe haben?"},{"db_id":"college_1","query":"SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE DEPT_NAME  =  \"Accounting\"","query_toks":["SELECT","count","(","*",")","FROM","professor","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","WHERE","DEPT_NAME","=","``","Accounting","''"],"query_toks_no_value":["select","count","(","*",")","from","professor","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","where","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,28,false],null],[0,11,false],null]],"table_units":[["table_unit",5],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Accounting\"",null]]},"question_toks":["Find","die","Anzahl","der","Professoren","in","der","Buchhaltung","."],"question":"Find die Anzahl der Professoren in der Buchhaltung."},{"db_id":"college_1","query":"SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1","query_toks":["SELECT","stu_fname",",","stu_lname",",","stu_gpa","FROM","student","WHERE","stu_gpa",">","3","ORDER","BY","stu_dob","DESC","LIMIT","1"],"query_toks_no_value":["select","stu_fname",",","stu_lname",",","stu_gpa","from","student","where","stu_gpa",">","value","order","by","stu_dob","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,36,false],null]]],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,33,false],null]],[0,[0,[0,39,false],null]]]],"union":null,"where":[[false,3,[0,[0,39,false],null],3.0,null]]},"question_toks":["Wie","lautet","der","Vor-","und","Nachname","des","j\u00fcngsten","Studierenden","mit","einem","GPA","\u00fcber","3","und","wie","hoch","ist","sein","GPA","?"],"question":"Wie lautet der Vor- und Nachname des j\u00fcngsten Studierenden mit einem GPA \u00fcber 3 und wie hoch ist sein GPA?"},{"db_id":"formula_1","query":"SELECT DISTINCT forename FROM drivers ORDER BY forename ASC","query_toks":["SELECT","DISTINCT","forename","FROM","drivers","ORDER","BY","forename","ASC"],"query_toks_no_value":["select","distinct","forename","from","drivers","order","by","forename","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,22,false],null]]],"select":[true,[[0,[0,[0,22,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Vornamen","der","verschiedenen","Fahrer","in","alphabetischer","Reihenfolge","?"],"question":"Wie lauten die Vornamen der verschiedenen Fahrer in alphabetischer Reihenfolge?"},{"db_id":"game_injury","query":"SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  'Walter Samuel' INTERSECT SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  'Thiago Motta'","query_toks":["SELECT","T2.name","FROM","game","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.id","JOIN","injury_accident","AS","T3","ON","T1.id","=","T3.game_id","WHERE","T3.player","=","'Walter","Samuel","'","INTERSECT","SELECT","T2.name","FROM","game","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.id","JOIN","injury_accident","AS","T3","ON","T1.id","=","T3.game_id","WHERE","T3.player","=","'Thiago","Motta","'"],"query_toks_no_value":["select","t2",".","name","from","game","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","id","join","injury_accident","as","t3","on","t1",".","id","=","t3",".","game_id","where","t3",".","player","=","value","intersect","select","t2",".","name","from","game","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","id","join","injury_accident","as","t3","on","t1",".","id","=","t3",".","game_id","where","t3",".","player","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"Thiago Motta\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"Walter Samuel\"",null]]},"question_toks":["Liste","den","Namen","des","Stadiums","auf",",","wo","beide","Spieler","``","Walter","Samuel","''","und","``","Thiago","Motta","''","verletzt","wurden","."],"question":"Liste den Namen des Stadiums auf, wo beide Spieler \"Walter Samuel\" und \"Thiago Motta\" verletzt wurden."},{"db_id":"music_1","query":"SELECT avg(rating) ,  languages FROM song GROUP BY languages","query_toks":["SELECT","avg","(","rating",")",",","languages","FROM","song","GROUP","BY","languages"],"query_toks_no_value":["select","avg","(","rating",")",",","languages","from","song","group","by","languages"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,18,false],null]],[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","ist","die","durchschnittliche","Bewertung","der","Lieder","f\u00fcr","jede","Sprache","?"],"question":"Wie ist die durchschnittliche Bewertung der Lieder f\u00fcr jede Sprache?"},{"db_id":"college_1","query":"SELECT count(DISTINCT dept_address) ,  school_code FROM department GROUP BY school_code","query_toks":["SELECT","count","(","DISTINCT","dept_address",")",",","school_code","FROM","department","GROUP","BY","school_code"],"query_toks_no_value":["select","count","(","distinct","dept_address",")",",","school_code","from","department","group","by","school_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,13,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,15,true],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","unterschiedliche","Standorte","hat","jede","Schule","?"],"question":"Wie viele unterschiedliche Standorte hat jede Schule?"},{"db_id":"activity_1","query":"SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student","query_toks":["SELECT","FacID","FROM","Faculty_participates_in","INTERSECT","SELECT","advisor","FROM","Student"],"query_toks_no_value":["select","facid","from","faculty_participates_in","intersect","select","advisor","from","student"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Kennungen","der","Fakult\u00e4tsmitglieder",",","die","nicht","nur","an","einer","Aktivit\u00e4t","teilnehmen",",","sondern","auch","einen","Studierenden","beraten","."],"question":"Was sind die Kennungen der Fakult\u00e4tsmitglieder, die nicht nur an einer Aktivit\u00e4t teilnehmen, sondern auch einen Studierenden beraten."},{"db_id":"college_1","query":"SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code","query_toks":["SELECT","T2.emp_fname",",","T3.crs_description","FROM","CLASS","AS","T1","JOIN","employee","AS","T2","ON","T1.prof_num","=","T2.emp_num","JOIN","course","AS","T3","ON","T1.crs_code","=","T3.crs_code"],"query_toks_no_value":["select","t2",".","emp_fname",",","t3",".","crs_description","from","class","as","t1","join","employee","as","t2","on","t1",".","prof_num","=","t2",".","emp_num","join","course","as","t3","on","t1",".","crs_code","=","t3",".","crs_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Vornamen","aller","Lehrer",",","die","einen","Kurs","unterrichtet","haben","und","die","entsprechenden","Beschreibungen","?"],"question":"Wie lauten die Vornamen aller Lehrer, die einen Kurs unterrichtet haben und die entsprechenden Beschreibungen?"},{"db_id":"college_1","query":"SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T4.dept_name","FROM","CLASS","AS","T1","JOIN","enroll","AS","T2","ON","T1.class_code","=","T2.class_code","JOIN","course","AS","T3","ON","T1.crs_code","=","T3.crs_code","JOIN","department","AS","T4","ON","T3.dept_code","=","T4.dept_code","GROUP","BY","T3.dept_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t4",".","dept_name","from","class","as","t1","join","enroll","as","t2","on","t1",".","class_code","=","t2",".","class_code","join","course","as","t3","on","t1",".","crs_code","=","t3",".","crs_code","join","department","as","t4","on","t3",".","dept_code","=","t4",".","dept_code","group","by","t3",".","dept_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",4]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dft","die","Abteilung","mit","den","meisten","eingeschriebenen","Studenten","?"],"question":"Wie hei\u00dft die Abteilung mit den meisten eingeschriebenen Studenten?"},{"db_id":"phone_market","query":"SELECT T2.Name ,  sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name","query_toks":["SELECT","T2.Name",",","sum","(","T1.Num_of_stock",")","FROM","phone_market","AS","T1","JOIN","phone","AS","T2","ON","T1.Phone_ID","=","T2.Phone_ID","GROUP","BY","T2.Name"],"query_toks_no_value":["select","t2",".","name",",","sum","(","t1",".","num_of_stock",")","from","phone_market","as","t1","join","phone","as","t2","on","t1",".","phone_id","=","t2",".","phone_id","group","by","t2",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,2,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[4,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","f\u00fcr","jedes","Telefon","seinen","Namen","und","gesamten","Lagerbestand","."],"question":"Zeige f\u00fcr jedes Telefon seinen Namen und gesamten Lagerbestand."},{"db_id":"activity_1","query":"SELECT FacID FROM Faculty WHERE Sex  =  'M'","query_toks":["SELECT","FacID","FROM","Faculty","WHERE","Sex","=","'M","'"],"query_toks_no_value":["select","facid","from","faculty","where","sex","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"M\"",null]]},"question_toks":["Wie","lauten","die","Fakult\u00e4tskennungen","aller","m\u00e4nnlichen","Fakult\u00e4tsmitglieder","?"],"question":"Wie lauten die Fakult\u00e4tskennungen aller m\u00e4nnlichen Fakult\u00e4tsmitglieder?"},{"db_id":"activity_1","query":"SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID","query_toks":["SELECT","T1.activity_name",",","count","(","*",")","FROM","Activity","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.actID","=","T2.actID","GROUP","BY","T1.actID"],"query_toks_no_value":["select","t1",".","activity_name",",","count","(","*",")","from","activity","as","t1","join","faculty_participates_in","as","t2","on","t1",".","actid","=","t2",".","actid","group","by","t1",".","actid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Fakult\u00e4tsmitglieder","nehmen","an","jeder","Aktivit\u00e4t","teil","?","Gib","die","Bezeichnungen","der","Aktivit\u00e4ten","wieder","und","die","Anzahl","der","Fakult\u00e4tsmitglieder","."],"question":"Wie viele Fakult\u00e4tsmitglieder nehmen an jeder Aktivit\u00e4t teil? Gib die Bezeichnungen der Aktivit\u00e4ten wieder und die Anzahl der Fakult\u00e4tsmitglieder."},{"db_id":"tracking_orders","query":"SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1","query_toks":["SELECT","order_id","FROM","orders","ORDER","BY","date_order_placed","DESC","LIMIT","1"],"query_toks_no_value":["select","order_id","from","orders","order","by","date_order_placed","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,10,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","Kennung","der","k\u00fcrzlichen","Bestellung","?"],"question":"Was ist die Kennung der k\u00fcrzlichen Bestellung?"},{"db_id":"sakila_1","query":"SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.title",",","T2.film_id",",","T2.description","FROM","film_actor","AS","T1","JOIN","film","AS","T2","ON","T1.film_id","=","T2.film_id","GROUP","BY","T2.film_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","title",",","t2",".","film_id",",","t2",".","description","from","film_actor","as","t1","join","film","as","t2","on","t1",".","film_id","=","t2",".","film_id","group","by","t2",".","film_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,46,false],null],[0,32,false],null]],"table_units":[["table_unit",7],["table_unit",6]]},"groupBy":[[0,32,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,32,false],null]],[0,[0,[0,34,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","Titel",",","ID","und","Beschreibung","des","Films","mit","der","gr\u00f6\u00dften","Anzahl","an","Schauspielern","?"],"question":"Wie lauten Titel, ID und Beschreibung des Films mit der gr\u00f6\u00dften Anzahl an Schauspielern?"},{"db_id":"college_1","query":"SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code","query_toks":["SELECT","count","(","DISTINCT","dept_name",")",",","school_code","FROM","department","GROUP","BY","school_code"],"query_toks_no_value":["select","count","(","distinct","dept_name",")",",","school_code","from","department","group","by","school_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,13,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,12,true],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Abteilungen","gibt","es","in","jeder","Schule","?"],"question":"Wie viele Abteilungen gibt es in jeder Schule?"},{"db_id":"csu_1","query":"SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1","query_toks":["SELECT","T2.faculty","FROM","campuses","AS","T1","JOIN","faculty","AS","T2","ON","T1.id","=","t2.campus","JOIN","degrees","AS","T3","ON","T1.id","=","t3.campus","AND","t2.year","=","t3.year","WHERE","t2.year","=","2002","ORDER","BY","t3.degrees","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","faculty","from","campuses","as","t1","join","faculty","as","t2","on","t1",".","id","=","t2",".","campus","join","degrees","as","t3","on","t1",".","id","=","t3",".","campus","and","t2",".","year","=","t3",".","year","where","t2",".","year","=","value","order","by","t3",".","degrees","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,21,false],null],"and",[false,2,[0,[0,22,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],2002.0,null]]},"question_toks":["Wie","viele","Fakult\u00e4tsmitglieder","hatte","die","Universit\u00e4t",",","die","im","Jahr","2002","die","meisten","Abschl\u00fcsse","verliehen","hat","?"],"question":"Wie viele Fakult\u00e4tsmitglieder hatte die Universit\u00e4t, die im Jahr 2002 die meisten Abschl\u00fcsse verliehen hat?"},{"db_id":"voter_2","query":"SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","city_code","FROM","STUDENT","GROUP","BY","city_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","city_code","from","student","group","by","city_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","die","Ortskennzahl","der","Stadt",",","in","der","die","meisten","Studierenden","wohnen","?"],"question":"Wie lautet die Ortskennzahl der Stadt, in der die meisten Studierenden wohnen?"},{"db_id":"music_1","query":"SELECT f_id FROM files ORDER BY duration DESC LIMIT 1","query_toks":["SELECT","f_id","FROM","files","ORDER","BY","duration","DESC","LIMIT","1"],"query_toks_no_value":["select","f_id","from","files","order","by","duration","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","ID","des","Songs",",","der","am","l\u00e4ngsten","dauert","."],"question":"Finde die ID des Songs, der am l\u00e4ngsten dauert."},{"db_id":"store_product","query":"SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"City Mall\" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"Village Store\"","query_toks":["SELECT","t3.District_name","FROM","store","AS","t1","JOIN","store_district","AS","t2","ON","t1.store_id","=","t2.store_id","JOIN","district","AS","t3","ON","t2.district_id","=","t3.district_id","WHERE","t1.Type","=","``","City","Mall","''","INTERSECT","SELECT","t3.District_name","FROM","store","AS","t1","JOIN","store_district","AS","t2","ON","t1.store_id","=","t2.store_id","JOIN","district","AS","t3","ON","t2.district_id","=","t3.district_id","WHERE","t1.Type","=","``","Village","Store","''"],"query_toks_no_value":["select","t3",".","district_name","from","store","as","t1","join","store_district","as","t2","on","t1",".","store_id","=","t2",".","store_id","join","district","as","t3","on","t2",".","district_id","=","t3",".","district_id","where","t1",".","type","=","value","intersect","select","t3",".","district_name","from","store","as","t1","join","store_district","as","t2","on","t1",".","store_id","=","t2",".","store_id","join","district","as","t3","on","t2",".","district_id","=","t3",".","district_id","where","t1",".","type","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,21,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,21,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Village Store\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"City Mall\"",null]]},"question_toks":["Wie","lauten","die","Namen","der","Bezirke",",","in","denen","es","sowohl","Gesch\u00e4fte","im","Stil","eines","Einkaufszentrums","als","im","Stil","eines","Dorfladens","gibt","?"],"question":"Wie lauten die Namen der Bezirke, in denen es sowohl Gesch\u00e4fte im Stil eines Einkaufszentrums als im Stil eines Dorfladens gibt?"},{"db_id":"store_product","query":"SELECT TYPE ,  count(*) FROM store GROUP BY TYPE","query_toks":["SELECT","TYPE",",","count","(","*",")","FROM","store","GROUP","BY","TYPE"],"query_toks_no_value":["select","type",",","count","(","*",")","from","store","group","by","type"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","alle","Typen","von","Gesch\u00e4ften","und","liste","sie","auf","."],"question":"Finde alle Typen von Gesch\u00e4ften und liste sie auf."},{"db_id":"tracking_orders","query":"SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id","query_toks":["SELECT","count","(","*",")",",","T3.product_id","FROM","orders","AS","T1","JOIN","order_items","AS","T2","JOIN","products","AS","T3","ON","T1.order_id","=","T2.order_id","AND","T2.product_id","=","T3.product_id","GROUP","BY","T3.product_id"],"query_toks_no_value":["select","count","(","*",")",",","t3",".","product_id","from","orders","as","t1","join","order_items","as","t2","join","products","as","t3","on","t1",".","order_id","=","t2",".","order_id","and","t2",".","product_id","=","t3",".","product_id","group","by","t3",".","product_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,17,false],null],"and",[false,2,[0,[0,16,false],null],[0,12,false],null]],"table_units":[["table_unit",2],["table_unit",4],["table_unit",3]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","die","Anzahl","und","die","Kennung","jedes","Produkts","in","allen","Bestellungen","auf","."],"question":"Liste die Anzahl und die Kennung jedes Produkts in allen Bestellungen auf."},{"db_id":"coffee_shop","query":"SELECT avg(num_of_staff) ,  avg(score) FROM shop","query_toks":["SELECT","avg","(","num_of_staff",")",",","avg","(","score",")","FROM","shop"],"query_toks_no_value":["select","avg","(","num_of_staff",")",",","avg","(","score",")","from","shop"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,3,false],null]],[5,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","sind","die","durchschnittliche","Punktzahl","und","die","durchschnittliche","Mitarbeiterzahl","aller","Gesch\u00e4fte","?"],"question":"Wie sind die durchschnittliche Punktzahl und die durchschnittliche Mitarbeiterzahl aller Gesch\u00e4fte?"},{"db_id":"voter_2","query":"SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote","query_toks":["SELECT","DISTINCT","T1.Major","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","T2.Treasurer_Vote"],"query_toks_no_value":["select","distinct","t1",".","major","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","t2",".","treasurer_vote"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,15,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","einzelnen","Hauptf\u00e4cher",",","die","von","Studenten","mit","Kassenw\u00e4rterstimme","studiert","werden","?"],"question":"Welches sind die einzelnen Hauptf\u00e4cher, die von Studenten mit Kassenw\u00e4rterstimme studiert werden?"},{"db_id":"formula_1","query":"SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.driverid",",","T1.surname","FROM","drivers","AS","T1","JOIN","results","AS","T2","ON","T1.driverid","=","T2.driverid","JOIN","races","AS","T3","ON","T2.raceid","=","T3.raceid","GROUP","BY","T1.driverid","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","driverid",",","t1",".","surname","from","drivers","as","t1","join","results","as","t2","on","t1",".","driverid","=","t2",".","driverid","join","races","as","t3","on","t2",".","raceid","=","t3",".","raceid","group","by","t1",".","driverid","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",2],["table_unit",7]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Vor-","und","Nachnamen","aller","Fahrer",",","die","an","den","meisten","Rennen","teilgenommen","haben","?"],"question":"Wie lauten die Vor- und Nachnamen aller Fahrer, die an den meisten Rennen teilgenommen haben?"},{"db_id":"sakila_1","query":"SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'","query_toks":["SELECT","T2.address",",","T1.email","FROM","customer","AS","T1","JOIN","address","AS","T2","ON","T2.address_id","=","T1.address_id","WHERE","T1.first_name","=","'LINDA","'"],"query_toks_no_value":["select","t2",".","address",",","t1",".","email","from","customer","as","t1","join","address","as","t2","on","t2",".","address_id","=","t1",".","address_id","where","t1",".","first_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,28,false],null]],"table_units":[["table_unit",5],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,27,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"LINDA\"",null]]},"question_toks":["Gib","die","Adresse","und","die","E-Mail","wieder","f\u00fcr","die","Kundin","mit","dem","Vornamen","Linda","."],"question":"Gib die Adresse und die E-Mail wieder f\u00fcr die Kundin mit dem Vornamen Linda."},{"db_id":"activity_1","query":"SELECT count(*) FROM Activity","query_toks":["SELECT","count","(","*",")","FROM","Activity"],"query_toks_no_value":["select","count","(","*",")","from","activity"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Aktivit\u00e4ten","haben","wir","?"],"question":"Wie viele Aktivit\u00e4ten haben wir?"},{"db_id":"csu_1","query":"SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Francisco State University\" AND t1.year  =  2000","query_toks":["SELECT","t1.campusfee","FROM","csu_fees","AS","t1","JOIN","campuses","AS","t2","ON","t1.campus","=","t2.id","WHERE","t2.campus","=","``","San","Francisco","State","University","''","AND","t1.year","=","2000"],"query_toks_no_value":["select","t1",".","campusfee","from","csu_fees","as","t1","join","campuses","as","t2","on","t1",".","campus","=","t2",".","id","where","t2",".","campus","=","value","and","t1",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"San Francisco State University\"",null],"and",[false,2,[0,[0,7,false],null],2000.0,null]]},"question_toks":["Wie","hoch","ist","die","Campusgeb\u00fchr","der","``","San","Francisco","State","University","''","im","Jahr","2000","?"],"question":"Wie hoch ist die Campusgeb\u00fchr der \"San Francisco State University\" im Jahr 2000?"},{"db_id":"tracking_orders","query":"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.customer_name","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","GROUP","BY","T1.customer_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","customer_name","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","group","by","t1",".","customer_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Kunde","t\u00e4tigte","die","meisten","Bestellungen","?","Suche","den","Kundennamen","."],"question":"Welcher Kunde t\u00e4tigte die meisten Bestellungen? Suche den Kundennamen."},{"db_id":"loan_1","query":"SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'","query_toks":["SELECT","T1.bname",",","T1.city","FROM","bank","AS","T1","JOIN","loan","AS","T2","ON","T1.branch_id","=","T2.branch_id","WHERE","T2.loan_type","=","'Business","'"],"query_toks_no_value":["select","t1",".","bname",",","t1",".","city","from","bank","as","t1","join","loan","as","t2","on","t1",".","branch_id","=","t2",".","branch_id","where","t2",".","loan_type","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"Business\"",null]]},"question_toks":["Wie","lauten","die","Namen","und","St\u00e4dte","der","Bankfilialen",",","die","Kredite","f\u00fcr","Unternehmen","anbieten","?"],"question":"Wie lauten die Namen und St\u00e4dte der Bankfilialen, die Kredite f\u00fcr Unternehmen anbieten?"},{"db_id":"college_1","query":"SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","emp_jobcode",",","count","(","*",")","FROM","employee","GROUP","BY","emp_jobcode","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","emp_jobcode",",","count","(","*",")","from","employee","group","by","emp_jobcode","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,21,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,21,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","Zahl","und","Code","des","Jobs","mit","den","meisten","Angestellten","?"],"question":"Welches sind Zahl und Code des Jobs mit den meisten Angestellten?  "},{"db_id":"loan_1","query":"SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Auto'","query_toks":["SELECT","T1.cust_name","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id","WHERE","loan_type","=","'Mortgages","'","INTERSECT","SELECT","T1.cust_name","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id","WHERE","loan_type","=","'Auto","'"],"query_toks_no_value":["select","t1",".","cust_name","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id","where","loan_type","=","value","intersect","select","t1",".","cust_name","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id","where","loan_type","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"Auto\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"Mortgages\"",null]]},"question_toks":["Was","lauten","die","Namen","von","Kunden",",","die","zugleich","eine","Hypothek","und","einen","Autokredit","genommen","haben","?"],"question":"Was lauten die Namen von Kunden, die zugleich eine Hypothek und einen Autokredit genommen haben?"},{"db_id":"manufacturer","query":"SELECT sum(market_rate) FROM furniture ORDER BY market_rate DESC LIMIT 2","query_toks":["SELECT","sum","(","market_rate",")","FROM","furniture","ORDER","BY","market_rate","DESC","LIMIT","2"],"query_toks_no_value":["select","sum","(","market_rate",")","from","furniture","order","by","market_rate","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":2,"orderBy":["desc",[[0,[0,9,false],null]]],"select":[false,[[4,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Gesamtmarktanteil","der","M\u00f6bel",",","die","die","Top","2","Marktanteile","haben","."],"question":"Finde den Gesamtmarktanteil der M\u00f6bel, die die Top 2 Marktanteile haben."},{"db_id":"voter_2","query":"SELECT Major FROM STUDENT WHERE Sex  =  \"F\" GROUP BY major ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","Major","FROM","STUDENT","WHERE","Sex","=","``","F","''","GROUP","BY","major","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","major","from","student","where","sex","=","value","group","by","major","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"F\"",null]]},"question_toks":["Welches","ist","das","h\u00e4ufigste","Hauptfach","unter","weiblichen","Studierenden","(","Geschlecht","ist","w",")","?"],"question":"Welches ist das h\u00e4ufigste Hauptfach unter weiblichen Studierenden (Geschlecht ist w)?"},{"db_id":"voter_2","query":"SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle","query_toks":["SELECT","Election_Cycle",",","count","(","*",")","FROM","VOTING_RECORD","GROUP","BY","Election_Cycle"],"query_toks_no_value":["select","election_cycle",",","count","(","*",")","from","voting_record","group","by","election_cycle"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,11,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","f\u00fcr","jeden","Wahlzyklus","die","Anzahl","der","Stimmzettel","."],"question":"Zeige f\u00fcr jeden Wahlzyklus die Anzahl der Stimmzettel. "},{"db_id":"swimming","query":"SELECT country ,  count(*) FROM stadium GROUP BY country","query_toks":["SELECT","country",",","count","(","*",")","FROM","stadium","GROUP","BY","country"],"query_toks_no_value":["select","country",",","count","(","*",")","from","stadium","group","by","country"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,16,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Stadien","hat","jedes","Land","?"],"question":"Wie viele Stadien hat jedes Land?"},{"db_id":"game_injury","query":"SELECT T1.season FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id WHERE T2.player  =  'Walter Samuel'","query_toks":["SELECT","T1.season","FROM","game","AS","T1","JOIN","injury_accident","AS","T2","ON","T1.id","=","T2.game_id","WHERE","T2.player","=","'Walter","Samuel","'"],"query_toks_no_value":["select","t1",".","season","from","game","as","t1","join","injury_accident","as","t2","on","t1",".","id","=","t2",".","game_id","where","t2",".","player","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,15,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"Walter Samuel\"",null]]},"question_toks":["In","welcher","Spielzeit","verletzte","sich","der","Spieler","``","Walter","Samuel","''","?"],"question":"In welcher Spielzeit verletzte sich der Spieler \"Walter Samuel\"?"},{"db_id":"sakila_1","query":"SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200","query_toks":["SELECT","title","FROM","film","WHERE","LENGTH",">","100","OR","rating","=","'PG","'","EXCEPT","SELECT","title","FROM","film","WHERE","replacement_cost",">","200"],"query_toks_no_value":["select","title","from","film","where","length",">","value","or","rating","=","value","except","select","title","from","film","where","replacement_cost",">","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]]]],"union":null,"where":[[false,3,[0,[0,41,false],null],200.0,null]]},"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]]]],"union":null,"where":[[false,3,[0,[0,40,false],null],100.0,null],"or",[false,2,[0,[0,42,false],null],"\"PG\"",null]]},"question_toks":["Finde","alle","Filme",",","die","l\u00e4nger","als","100","Minuten","sind","oder","mit","FSK","bewertet","wurden",",","mit","Ausnahme","der","Filme",",","die","mehr","als","200","als","Ersatz","kosten",".","Liste","die","Titel","auf","."],"question":"Finde alle Filme, die l\u00e4nger als 100 Minuten sind oder mit FSK bewertet wurden, mit Ausnahme der Filme, die mehr als 200 als Ersatz kosten. Liste die Titel auf."},{"db_id":"music_1","query":"SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id  =  T2.f_id ORDER BY T2.duration LIMIT 1","query_toks":["SELECT","T1.artist_name","FROM","song","AS","T1","JOIN","files","AS","T2","ON","T1.f_id","=","T2.f_id","ORDER","BY","T2.duration","LIMIT","1"],"query_toks_no_value":["select","t1",".","artist_name","from","song","as","t1","join","files","as","t2","on","t1",".","f_id","=","t2",".","f_id","order","by","t2",".","duration","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,8,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dft","der","K\u00fcnstlers",",","der","das","k\u00fcrzeste","Lied","produziert","hat","?"],"question":"Wie hei\u00dft der K\u00fcnstlers, der das k\u00fcrzeste Lied produziert hat?"},{"db_id":"music_1","query":"SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating","query_toks":["SELECT","f_id",",","genre_is",",","artist_name","FROM","song","WHERE","languages","=","``","english","''","ORDER","BY","rating"],"query_toks_no_value":["select","f_id",",","genre_is",",","artist_name","from","song","where","languages","=","value","order","by","rating"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,18,false],null]]],"select":[false,[[0,[0,[0,16,false],null]],[0,[0,[0,17,false],null]],[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},"question_toks":["Wie","lauten","die","Kennung",",","das","Genre","und","der","Name","des","K\u00fcnstlers",",","geordnet","nach","aufsteigender","Bewertung",",","f\u00fcr","jedes","englische","Lied","?"],"question":"Wie lauten die Kennung, das Genre und der Name des K\u00fcnstlers, geordnet nach aufsteigender Bewertung, f\u00fcr jedes englische Lied?"},{"db_id":"college_1","query":"SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'","query_toks":["SELECT","T4.crs_description",",","T4.crs_credit","FROM","CLASS","AS","T1","JOIN","enroll","AS","T2","ON","T1.class_code","=","T2.class_code","JOIN","student","AS","T3","ON","T3.stu_num","=","T2.stu_num","JOIN","course","AS","T4","ON","T4.crs_code","=","T1.crs_code","WHERE","T3.stu_lname","=","'Smithson","'"],"query_toks_no_value":["select","t4",".","crs_description",",","t4",".","crs_credit","from","class","as","t1","join","enroll","as","t2","on","t1",".","class_code","=","t2",".","class_code","join","student","as","t3","on","t3",".","stu_num","=","t2",".","stu_num","join","course","as","t4","on","t4",".","crs_code","=","t1",".","crs_code","where","t3",".","stu_lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,33,false],null],"\"Smithson\"",null]]},"question_toks":["Wie","viele","Credits","umfasst","der","Kurs",",","den","der","Studierenden","mit","dem","Nachnamen","Smithson","belegt","hat",",","und","wie","lautet","seine","Beschreibung","?"],"question":"Wie viele Credits umfasst der Kurs, den der Studierenden mit dem Nachnamen Smithson belegt hat, und wie lautet seine Beschreibung?"},{"db_id":"tracking_orders","query":"SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1","query_toks":["SELECT","order_id","FROM","orders","ORDER","BY","date_order_placed","DESC","LIMIT","1"],"query_toks_no_value":["select","order_id","from","orders","order","by","date_order_placed","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,10,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Kennung","der","zuletzt","aufgegebenen","Bestellung","."],"question":"Finde die Kennung der zuletzt aufgegebenen Bestellung."},{"db_id":"college_1","query":"SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'","query_toks":["SELECT","T1.stu_fname",",","T1.stu_lname","FROM","student","AS","T1","JOIN","enroll","AS","T2","ON","T1.stu_num","=","T2.stu_num","WHERE","T2.enroll_grade","=","'C","'","OR","T2.enroll_grade","=","'A","'"],"query_toks_no_value":["select","t1",".","stu_fname",",","t1",".","stu_lname","from","student","as","t1","join","enroll","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","where","t2",".","enroll_grade","=","value","or","t2",".","enroll_grade","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,25,false],null]],"table_units":[["table_unit",6],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,33,false],null]]]],"union":null,"where":[[false,2,[0,[0,26,false],null],"\"C\"",null],"or",[false,2,[0,[0,26,false],null],"\"A\"",null]]},"question_toks":["Finde","die","Namen","aller","Studierenden",",","die","an","einem","Kurs","teilgenommen","und","eine","1","oder","3","erhalten","haben","."],"question":"Finde die Namen aller Studierenden, die an einem Kurs teilgenommen und eine 1 oder 3 erhalten haben."},{"db_id":"music_1","query":"SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is","query_toks":["SELECT","min","(","T1.duration",")",",","min","(","T2.rating",")",",","T2.genre_is","FROM","files","AS","T1","JOIN","song","AS","T2","ON","T1.f_id","=","T2.f_id","GROUP","BY","T2.genre_is","ORDER","BY","T2.genre_is"],"query_toks_no_value":["select","min","(","t1",".","duration",")",",","min","(","t2",".","rating",")",",","t2",".","genre_is","from","files","as","t1","join","song","as","t2","on","t1",".","f_id","=","t2",".","f_id","group","by","t2",".","genre_is","order","by","t2",".","genre_is"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,16,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,17,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,17,false],null]]],"select":[false,[[2,[0,[0,11,false],null]],[2,[0,[0,18,false],null]],[0,[0,[0,17,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","das","k\u00fcrzeste","und","am","schlechtesten","bewertete","Lied",",","alphabetisch","nach","Genre","geordnet",",","f\u00fcr","jedes","Genre","?"],"question":"Welches ist das k\u00fcrzeste und am schlechtesten bewertete Lied, alphabetisch nach Genre geordnet, f\u00fcr jedes Genre?"},{"db_id":"college_1","query":"SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'","query_toks":["SELECT","T1.emp_lname",",","T1.emp_hiredate","FROM","employee","AS","T1","JOIN","professor","AS","T2","ON","T1.emp_num","=","T2.emp_num","WHERE","T2.prof_office","=","'DRE","102","'"],"query_toks_no_value":["select","t1",".","emp_lname",",","t1",".","emp_hiredate","from","employee","as","t1","join","professor","as","t2","on","t1",".","emp_num","=","t2",".","emp_num","where","t2",".","prof_office","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,27,false],null]],"table_units":[["table_unit",3],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,29,false],null],"\"DRE 102\"",null]]},"question_toks":["Wie","lautet","der","Nachname","des","Professors",",","dessen","B\u00fcro","sich","in","DRE","102","befindet",",","und","wann","wurde","er","eingestellt","?"],"question":"Wie lautet der Nachname des Professors, dessen B\u00fcro sich in DRE 102 befindet, und wann wurde er eingestellt?"},{"db_id":"swimming","query":"SELECT name FROM swimmer ORDER BY meter_100","query_toks":["SELECT","name","FROM","swimmer","ORDER","BY","meter_100"],"query_toks_no_value":["select","name","from","swimmer","order","by","meter_100"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,4,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Namen","aller","Schwimmer",",","sortiert","nach","ihren","100-Meter-Ergebnissen",",","in","aufsteigender","Reihenfolge","."],"question":"Finde die Namen aller Schwimmer, sortiert nach ihren 100-Meter-Ergebnissen, in aufsteigender Reihenfolge."},{"db_id":"activity_1","query":"SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.fname",",","T1.lname","FROM","Student","AS","T1","JOIN","Participates_in","AS","T2","ON","T1.StuID","=","T2.StuID","GROUP","BY","T1.StuID","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","lname","from","student","as","t1","join","participates_in","as","t2","on","t1",".","stuid","=","t2",".","stuid","group","by","t1",".","stuid","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,3,false],null]],"table_units":[["table_unit",3],["table_unit",1]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","der","Vor-","und","Nachname","des","Studierenden",",","der","an","den","meisten","Aktivit\u00e4ten","teilnimmt","?"],"question":"Wie lauten der Vor- und Nachname des Studierenden, der an den meisten Aktivit\u00e4ten teilnimmt? "},{"db_id":"game_injury","query":"SELECT T1.id ,  count(*) FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id GROUP BY T1.id","query_toks":["SELECT","T1.id",",","count","(","*",")","FROM","stadium","AS","T1","JOIN","game","AS","T2","ON","T1.id","=","T2.stadium_id","GROUP","BY","T1.id"],"query_toks_no_value":["select","t1",".","id",",","count","(","*",")","from","stadium","as","t1","join","game","as","t2","on","t1",".","id","=","t2",".","stadium_id","group","by","t1",".","id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Spiele","haben","in","jedem","Stadion","schon","stattgefunden","?"],"question":"Wie viele Spiele haben in jedem Stadion schon stattgefunden?"},{"db_id":"activity_1","query":"SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID","query_toks":["SELECT","T1.activity_name",",","count","(","*",")","FROM","Activity","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.actID","=","T2.actID","GROUP","BY","T1.actID"],"query_toks_no_value":["select","t1",".","activity_name",",","count","(","*",")","from","activity","as","t1","join","faculty_participates_in","as","t2","on","t1",".","actid","=","t2",".","actid","group","by","t1",".","actid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","alle","Namen","der","Aktivit\u00e4ten","und","die","Anzahl","der","an","jeder","Aktivit\u00e4t","beteiligten","Fachbereiche","an","."],"question":"Zeige alle Namen der Aktivit\u00e4ten und die Anzahl der an jeder Aktivit\u00e4t beteiligten Fachbereiche an."},{"db_id":"game_injury","query":"SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.id",",","T1.name","FROM","stadium","AS","T1","JOIN","game","AS","T2","ON","T1.id","=","T2.stadium_id","JOIN","injury_accident","AS","T3","ON","T2.id","=","T3.game_id","GROUP","BY","T1.id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","id",",","t1",".","name","from","stadium","as","t1","join","game","as","t2","on","t1",".","id","=","t2",".","stadium_id","join","injury_accident","as","t3","on","t2",".","id","=","t3",".","game_id","group","by","t1",".","id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Ausweis","und","den","Namen","des","Stadions",",","in","dem","sich","die","meisten","Unf\u00e4lle","mit","Verletzten","ereignet","haben","."],"question":"Finde den Ausweis und den Namen des Stadions, in dem sich die meisten Unf\u00e4lle mit Verletzten ereignet haben. "},{"db_id":"music_1","query":"SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")","query_toks":["SELECT","DISTINCT","song_name","FROM","song","WHERE","resolution",">","(","SELECT","min","(","resolution",")","FROM","song","WHERE","languages","=","``","english","''",")"],"query_toks_no_value":["select","distinct","song_name","from","song","where","resolution",">","(","select","min","(","resolution",")","from","song","where","languages","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,3,[0,[0,21,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,21,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},null]]},"question_toks":["Finde","die","genauen","Namen","aller","Lieder",",","die","eine","h\u00f6here","Aufl\u00f6sung","als","einige","Lieder","auf","Englisch","haben","."],"question":"Finde die genauen Namen aller Lieder, die eine h\u00f6here Aufl\u00f6sung als einige Lieder auf Englisch haben."},{"db_id":"voter_2","query":"SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"Spring\"","query_toks":["SELECT","DISTINCT","T1.Advisor","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","T2.Treasurer_Vote","WHERE","T2.Election_Cycle","=","``","Spring","''"],"query_toks_no_value":["select","distinct","t1",".","advisor","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","t2",".","treasurer_vote","where","t2",".","election_cycle","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,15,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Spring\"",null]]},"question_toks":["Wer","diente","als","Berater","f\u00fcr","Studierende",",","die","im","Fr\u00fchlingswahlzyklus","Schatzmeister-Stimmen","haben","?"],"question":"Wer diente als Berater f\u00fcr Studierende, die im Fr\u00fchlingswahlzyklus Schatzmeister-Stimmen haben?"},{"db_id":"loan_1","query":"SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City'","query_toks":["SELECT","sum","(","no_of_customers",")","FROM","bank","WHERE","city","=","'New","York","City","'"],"query_toks_no_value":["select","sum","(","no_of_customers",")","from","bank","where","city","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"New York City\"",null]]},"question_toks":["Finde","die","Anzahl","der","Kunden","in","den","Banken","in","New","York","City","."],"question":"Finde die Anzahl der Kunden in den Banken in New York City."},{"db_id":"sakila_1","query":"SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )","query_toks":["SELECT","first_name","FROM","customer","WHERE","customer_id","NOT","IN","(","SELECT","customer_id","FROM","rental","WHERE","rental_date",">","'2005-08-23","02:06:01","'",")"],"query_toks_no_value":["select","first_name","from","customer","where","customer_id","not","in","(","select","customer_id","from","rental","where","rental_date",">","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[[true,8,[0,[0,23,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",13]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,71,false],null]]]],"union":null,"where":[[false,3,[0,[0,69,false],null],"\"2005-08-23 02:06:01\"",null]]},null]]},"question_toks":["Wie","lauten","die","Vornamen","von","Kunden",",","die","nach","dem","'23.08.2005","02:06:01","'","keine","Filme","mehr","ausgeliehen","haben","?"],"question":"Wie lauten die Vornamen von Kunden, die nach dem '23.08.2005 02:06:01' keine Filme mehr ausgeliehen haben?"},{"db_id":"formula_1","query":"SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1","query_toks":["SELECT","T1.driverid",",","T1.surname","FROM","drivers","AS","T1","JOIN","laptimes","AS","T2","ON","T1.driverid","=","T2.driverid","ORDER","BY","T2.milliseconds","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","driverid",",","t1",".","surname","from","drivers","as","t1","join","laptimes","as","t2","on","t1",".","driverid","=","t2",".","driverid","order","by","t2",".","milliseconds","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,90,false],null]],"table_units":[["table_unit",2],["table_unit",12]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,94,false],null]]],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","die","Kennung","und","der","Nachname","des","Fahrers","mit","der","l\u00e4ngsten","Rundenzeit","?"],"question":"Wie lautet die Kennung und der Nachname des Fahrers mit der l\u00e4ngsten Rundenzeit?"},{"db_id":"formula_1","query":"SELECT count(*) ,  nationality FROM constructors GROUP BY nationality","query_toks":["SELECT","count","(","*",")",",","nationality","FROM","constructors","GROUP","BY","nationality"],"query_toks_no_value":["select","count","(","*",")",",","nationality","from","constructors","group","by","nationality"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,34,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,34,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Konstrukteure","gibt","es","f\u00fcr","jede","Nationalit\u00e4t","?"],"question":"Wie viele verschiedene Konstrukteure gibt es f\u00fcr jede Nationalit\u00e4t?"},{"db_id":"college_1","query":"SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'","query_toks":["SELECT","T1.stu_fname",",","T1.stu_lname","FROM","student","AS","T1","JOIN","enroll","AS","T2","ON","T1.stu_num","=","T2.stu_num","WHERE","T2.enroll_grade","=","'C","'","OR","T2.enroll_grade","=","'A","'"],"query_toks_no_value":["select","t1",".","stu_fname",",","t1",".","stu_lname","from","student","as","t1","join","enroll","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","where","t2",".","enroll_grade","=","value","or","t2",".","enroll_grade","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,25,false],null]],"table_units":[["table_unit",6],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,33,false],null]]]],"union":null,"where":[[false,2,[0,[0,26,false],null],"\"C\"",null],"or",[false,2,[0,[0,26,false],null],"\"A\"",null]]},"question_toks":["Wie","lauten","die","Namen","aller","Studierenden",",","die","einen","Kurs","belegen","und","eine","1","oder","3","erhalten","haben","?"],"question":"Wie lauten die Namen aller Studierenden, die einen Kurs belegen und eine 1 oder 3 erhalten haben?"},{"db_id":"college_1","query":"SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C'","query_toks":["SELECT","DISTINCT","stu_fname","FROM","student","AS","T1","JOIN","enroll","AS","T2","ON","T1.stu_num","=","T2.stu_num","WHERE","enroll_grade","=","'C","'"],"query_toks_no_value":["select","distinct","stu_fname","from","student","as","t1","join","enroll","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","where","enroll_grade","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,25,false],null]],"table_units":[["table_unit",6],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,26,false],null],"\"C\"",null]]},"question_toks":["Wie","lauten","die","Vornamen","aller","Studierenden",",","die","in","einer","Klasse","eine","3","erhalten","haben","?"],"question":"Wie lauten die Vornamen aller Studierenden, die in einer Klasse eine 3 erhalten haben?"},{"db_id":"store_product","query":"SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5","query_toks":["SELECT","product","FROM","product","WHERE","max_page_size","=","``","A4","''","AND","pages_per_minute_color","<","5"],"query_toks_no_value":["select","product","from","product","where","max_page_size","=","value","and","pages_per_minute_color","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"A4\"",null],"and",[false,4,[0,[0,5,false],null],5.0,null]]},"question_toks":["Welches","sind","die","Produkte","mit","dem","maximalen","Seitenformat","A4",",","die","auch","eine","Seitenzahl","von","weniger","als","5","Seiten","pro","Minute","in","Farbe","haben","?"],"question":"Welches sind die Produkte mit dem maximalen Seitenformat A4, die auch eine Seitenzahl von weniger als 5 Seiten pro Minute in Farbe haben?"},{"db_id":"voter_2","query":"SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"Spring\"","query_toks":["SELECT","avg","(","T1.Age",")","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","SECRETARY_Vote","WHERE","T1.Sex","=","``","F","''","AND","T2.Election_Cycle","=","``","Spring","''"],"query_toks_no_value":["select","avg","(","t1",".","age",")","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","secretary_vote","where","t1",".","sex","=","value","and","t2",".","election_cycle","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,14,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"F\"",null],"and",[false,2,[0,[0,11,false],null],"\"Spring\"",null]]},"question_toks":["Wie","hoch","ist","das","Durchschnittsalter","der","Studentinnen","mit","Sekret\u00e4rinnenstimmen","im","Fr\u00fchlingswahlzyklus","?"],"question":"Wie hoch ist das Durchschnittsalter der Studentinnen mit Sekret\u00e4rinnenstimmen im Fr\u00fchlingswahlzyklus?"},{"db_id":"music_1","query":"SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"pop\" ORDER BY T2.song_name","query_toks":["SELECT","T1.duration",",","T1.file_size",",","T1.formats","FROM","files","AS","T1","JOIN","song","AS","T2","ON","T1.f_id","=","T2.f_id","WHERE","T2.genre_is","=","``","pop","''","ORDER","BY","T2.song_name"],"query_toks_no_value":["select","t1",".","duration",",","t1",".","file_size",",","t1",".","formats","from","files","as","t1","join","song","as","t2","on","t1",".","f_id","=","t2",".","f_id","where","t2",".","genre_is","=","value","order","by","t2",".","song_name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,16,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,10,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"pop\"",null]]},"question_toks":["Was","sind","die","Dauer",",","Dateigr\u00f6\u00dfe","und","das","Songformat","f\u00fcr","jeden","Popsong",",","alphabetisch","nach","Titel","geordnet","?"],"question":"Was sind die Dauer, Dateigr\u00f6\u00dfe und das Songformat f\u00fcr jeden Popsong, alphabetisch nach Titel geordnet?"},{"db_id":"formula_1","query":"SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5","query_toks":["SELECT","T1.name","FROM","constructors","AS","T1","JOIN","constructorstandings","AS","T2","ON","T1.constructorid","=","T2.constructorid","WHERE","T1.nationality","=","``","Japanese","''","AND","T2.points",">","5"],"query_toks_no_value":["select","t1",".","name","from","constructors","as","t1","join","constructorstandings","as","t2","on","t1",".","constructorid","=","t2",".","constructorid","where","t1",".","nationality","=","value","and","t2",".","points",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,31,false],null],[0,38,false],null]],"table_units":[["table_unit",5],["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]]]],"union":null,"where":[[false,2,[0,[0,34,false],null],"\"Japanese\"",null],"and",[false,3,[0,[0,39,false],null],5.0,null]]},"question_toks":["Wie","hei\u00dfen","alle","japanischen","Konstrukteure",",","die","mehr","als","5","Punkte","erzielt","haben","?"],"question":"Wie hei\u00dfen alle japanischen Konstrukteure, die mehr als 5 Punkte erzielt haben?"},{"db_id":"formula_1","query":"SELECT name FROM circuits WHERE country = \"UK\" OR country = \"Malaysia\"","query_toks":["SELECT","name","FROM","circuits","WHERE","country","=","``","UK","''","OR","country","=","``","Malaysia","''"],"query_toks_no_value":["select","name","from","circuits","where","country","=","value","or","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"UK\"",null],"or",[false,2,[0,[0,5,false],null],"\"Malaysia\"",null]]},"question_toks":["Wie","hei\u00dft","die","Rennstrecke",",","die","zu","Gro\u00dfbritannien","oder","Malaysia","geh\u00f6ren","?"],"question":"Wie hei\u00dft die Rennstrecke, die zu Gro\u00dfbritannien oder Malaysia geh\u00f6ren?"},{"db_id":"music_1","query":"SELECT DISTINCT artist_name FROM song WHERE languages  =  \"english\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8","query_toks":["SELECT","DISTINCT","artist_name","FROM","song","WHERE","languages","=","``","english","''","EXCEPT","SELECT","DISTINCT","artist_name","FROM","song","WHERE","rating",">","8"],"query_toks_no_value":["select","distinct","artist_name","from","song","where","languages","=","value","except","select","distinct","artist_name","from","song","where","rating",">","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],8.0,null]]},"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},"question_toks":["Finde","die","Namen","der","K\u00fcnstler",",","die","englische","Lieder","produziert",",","aber","nie","eine","h\u00f6here","Bewertung","als","8","erhalten","haben","."],"question":"Finde die Namen der K\u00fcnstler, die englische Lieder produziert, aber nie eine h\u00f6here Bewertung als 8 erhalten haben."},{"db_id":"loan_1","query":"SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type","query_toks":["SELECT","avg","(","acc_bal",")",",","acc_type","FROM","customer","WHERE","credit_score","<","50","GROUP","BY","acc_type"],"query_toks_no_value":["select","avg","(","acc_bal",")",",","acc_type","from","customer","where","credit_score","<","value","group","by","acc_type"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,9,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,4,[0,[0,11,false],null],50.0,null]]},"question_toks":["Wie","hoch","ist","der","durchschnittliche","Kontostand","von","Kunden","mit","einer","Kreditw\u00fcrdigkeit","unter","50","f\u00fcr","die","verschiedenen","Kontoarten","?"],"question":"Wie hoch ist der durchschnittliche Kontostand von Kunden mit einer Kreditw\u00fcrdigkeit unter 50 f\u00fcr die verschiedenen Kontoarten?"},{"db_id":"sakila_1","query":"SELECT count(*) FROM customer WHERE active = '1'","query_toks":["SELECT","count","(","*",")","FROM","customer","WHERE","active","=","'1","'"],"query_toks_no_value":["select","count","(","*",")","from","customer","where","active","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,29,false],null],"\"1\"",null]]},"question_toks":["Z\u00e4hle","die","Anzahl","der","Kunden",",","die","aktiv","sind","."],"question":"Z\u00e4hle die Anzahl der Kunden, die aktiv sind."},{"db_id":"activity_1","query":"SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID","query_toks":["SELECT","T1.FacID",",","count","(","*",")","FROM","Faculty","AS","T1","JOIN","Student","AS","T2","ON","T1.FacID","=","T2.advisor","GROUP","BY","T1.FacID"],"query_toks_no_value":["select","t1",".","facid",",","count","(","*",")","from","faculty","as","t1","join","student","as","t2","on","t1",".","facid","=","t2",".","advisor","group","by","t1",".","facid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,13,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","den","Fakult\u00e4tskennung","jedes","Fakult\u00e4tsmitglieds","zusammen","mit","der","Anzahl","der","Studenten",",","die","er","oder","sie","ber\u00e4t","."],"question":"Zeige den Fakult\u00e4tskennung jedes Fakult\u00e4tsmitglieds zusammen mit der Anzahl der Studenten, die er oder sie ber\u00e4t."},{"db_id":"college_1","query":"SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code","query_toks":["SELECT","sum","(","crs_credit",")",",","dept_code","FROM","course","GROUP","BY","dept_code"],"query_toks_no_value":["select","sum","(","crs_credit",")",",","dept_code","from","course","group","by","dept_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,10,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","der","Gesamtkredit",",","den","jede","Abteilung","anbietet","?"],"question":"Wie hoch ist der Gesamtkredit, den jede Abteilung anbietet?"},{"db_id":"sakila_1","query":"SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'","query_toks":["SELECT","phone",",","postal_code","FROM","address","WHERE","address","=","'1031","Daugavpils","Parkway","'"],"query_toks_no_value":["select","phone",",","postal_code","from","address","where","address","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"1031 Daugavpils Parkway\"",null]]},"question_toks":["Gib","die","Telefonnummer","und","die","Postleitzahl","an",",","die","der","Adresse","'1031","Daugavpils","Parkway","'","entsprechen","."],"question":"Gib die Telefonnummer und die Postleitzahl an, die der Adresse '1031 Daugavpils Parkway' entsprechen."},{"db_id":"music_1","query":"SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\"","query_toks":["SELECT","avg","(","rating",")",",","avg","(","resolution",")","FROM","song","WHERE","languages","=","``","bangla","''"],"query_toks_no_value":["select","avg","(","rating",")",",","avg","(","resolution",")","from","song","where","languages","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,18,false],null]],[5,[0,[0,21,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"bangla\"",null]]},"question_toks":["Wie","sind","die","durchschnittliche","Bewertung","und","Aufl\u00f6sung","von","Liedern",",","die","in","Bangla","sind","?"],"question":"Wie sind die durchschnittliche Bewertung und Aufl\u00f6sung von Liedern, die in Bangla sind?"},{"db_id":"csu_1","query":"SELECT campus FROM campuses WHERE LOCATION  =  \"Northridge\" AND county  =  \"Los Angeles\" UNION SELECT campus FROM campuses WHERE LOCATION  =  \"San Francisco\" AND county  =  \"San Francisco\"","query_toks":["SELECT","campus","FROM","campuses","WHERE","LOCATION","=","``","Northridge","''","AND","county","=","``","Los","Angeles","''","UNION","SELECT","campus","FROM","campuses","WHERE","LOCATION","=","``","San","Francisco","''","AND","county","=","``","San","Francisco","''"],"query_toks_no_value":["select","campus","from","campuses","where","location","=","value","and","county","=","value","union","select","campus","from","campuses","where","location","=","value","and","county","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],"\"San Francisco\"",null],"and",[false,2,[0,[0,4,false],null],"\"San Francisco\"",null]]},"where":[[false,2,[0,[0,3,false],null],"\"Northridge\"",null],"and",[false,2,[0,[0,4,false],null],"\"Los Angeles\"",null]]},"question_toks":["Finde","den","Namen","des","Campus",",","der","sich","in","Northridge",",","Los","Angeles",",","oder","in","San","Francisco",",","San","Francisco",",","befindet","."],"question":"Finde den Namen des Campus, der sich in Northridge, Los Angeles, oder in San Francisco, San Francisco, befindet."},{"db_id":"csu_1","query":"SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"Orange\")","query_toks":["SELECT","T1.campus","FROM","campuses","AS","T1","JOIN","faculty","AS","T2","ON","T1.id","=","T2.campus","WHERE","T2.year","=","2002","AND","faculty",">","(","SELECT","max","(","faculty",")","FROM","campuses","AS","T1","JOIN","faculty","AS","T2","ON","T1.id","=","T2.campus","WHERE","T2.year","=","2002","AND","T1.county","=","``","Orange","''",")"],"query_toks_no_value":["select","t1",".","campus","from","campuses","as","t1","join","faculty","as","t2","on","t1",".","id","=","t2",".","campus","where","t2",".","year","=","value","and","faculty",">","(","select","max","(","faculty",")","from","campuses","as","t1","join","faculty","as","t2","on","t1",".","id","=","t2",".","campus","where","t2",".","year","=","value","and","t1",".","county","=","value",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,21,false],null]],"table_units":[["table_unit",0],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],2002.0,null],"and",[false,3,[0,[0,23,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,21,false],null]],"table_units":[["table_unit",0],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],2002.0,null],"and",[false,2,[0,[0,4,false],null],"\"Orange\"",null]]},null]]},"question_toks":["Finde","die","Namen","des","Campus",",","der","im","Jahr","2002","mehr","Fakult\u00e4ten","hat","als","jeder","andere","Campus","im","Orange","County","."],"question":"Finde die Namen des Campus, der im Jahr 2002 mehr Fakult\u00e4ten hat als jeder andere Campus im Orange County."},{"db_id":"music_1","query":"SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"bangla\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3","query_toks":["SELECT","T1.artist_name","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T2.languages","=","``","bangla","''","GROUP","BY","T2.artist_name","ORDER","BY","count","(","*",")","DESC","LIMIT","3"],"query_toks_no_value":["select","t1",".","artist_name","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t2",".","languages","=","value","group","by","t2",".","artist_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[[0,14,false]],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"bangla\"",null]]},"question_toks":["Finde","die","Top","3","K\u00fcnstler",",","die","die","h\u00f6chste","Anzahl","an","Liedern","haben",",","deren","Sprache","Bangla","ist","."],"question":"Finde die Top 3 K\u00fcnstler, die die h\u00f6chste Anzahl an Liedern haben, deren Sprache Bangla ist."},{"db_id":"formula_1","query":"SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\"","query_toks":["SELECT","max","(","T2.fastestlapspeed",")","FROM","races","AS","T1","JOIN","results","AS","T2","ON","T1.raceid","=","T2.raceid","WHERE","T1.year","=","2008","AND","T1.name","=","``","Monaco","Grand","Prix","''"],"query_toks_no_value":["select","max","(","t2",".","fastestlapspeed",")","from","races","as","t1","join","results","as","t2","on","t1",".","raceid","=","t2",".","raceid","where","t1",".","year","=","value","and","t1",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,44,false],null]],"table_units":[["table_unit",1],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,59,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],2008.0,null],"and",[false,2,[0,[0,14,false],null],"\"Monaco Grand Prix\"",null]]},"question_toks":["Was","ist","die","h\u00f6chste","Rundengeschwindigkeit","im","Rennen","mit","dem","Namen","'Gro\u00dfer","Preis","von","Monaco","'","im","Jahr","2008","?"],"question":"Was ist die h\u00f6chste Rundengeschwindigkeit im Rennen mit dem Namen 'Gro\u00dfer Preis von Monaco' im Jahr 2008 ?"},{"db_id":"tracking_orders","query":"SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2","query_toks":["SELECT","T2.customer_name","FROM","orders","AS","T1","JOIN","customers","AS","T2","ON","T1.customer_id","=","T2.customer_id","GROUP","BY","T2.customer_id","HAVING","count","(","*",")","<","=","2"],"query_toks_no_value":["select","t2",".","customer_name","from","orders","as","t1","join","customers","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","group","by","t2",".","customer_id","having","count","(","*",")","<","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,1,false]],"having":[[false,6,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Namen","der","Kunden",",","die","h\u00f6chstens","zwei","Auftr\u00e4ge","haben","."],"question":"Finde die Namen der Kunden, die h\u00f6chstens zwei Auftr\u00e4ge haben."},{"db_id":"activity_1","query":"SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex","query_toks":["SELECT","rank",",","sex",",","count","(","*",")","FROM","Faculty","GROUP","BY","rank",",","sex"],"query_toks_no_value":["select","rank",",","sex",",","count","(","*",")","from","faculty","group","by","rank",",","sex"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,18,false],[0,19,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,19,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Fakult\u00e4tsmitglieder","haben","wir","f\u00fcr","jeden","Rang","und","jedes","Geschlecht","?"],"question":"Wie viele Fakult\u00e4tsmitglieder haben wir f\u00fcr jeden Rang und jedes Geschlecht?"},{"db_id":"voter_2","query":"SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD","query_toks":["SELECT","DISTINCT","Registration_Date",",","Election_Cycle","FROM","VOTING_RECORD"],"query_toks_no_value":["select","distinct","registration_date",",","election_cycle","from","voting_record"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,10,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","das","genaue","Registrierungsdatum","und","den","Wahlzyklus","an","."],"question":"Zeige das genaue Registrierungsdatum und den Wahlzyklus an."},{"db_id":"tracking_orders","query":"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\"","query_toks":["SELECT","T1.customer_name","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T2.order_status","=","``","On","Road","''","INTERSECT","SELECT","T1.customer_name","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T2.order_status","=","``","Shipped","''"],"query_toks_no_value":["select","t1",".","customer_name","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t2",".","order_status","=","value","intersect","select","t1",".","customer_name","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t2",".","order_status","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Shipped\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"On Road\"",null]]},"question_toks":["Welche","Kunden","haben","zugleich","``","unterwegs","''","und","``","versendet","''","als","Bestellstatus","?","Liste","die","Kundennamen","auf","."],"question":"Welche Kunden haben zugleich \"unterwegs\" und \"versendet\" als Bestellstatus? Liste die Kundennamen auf."},{"db_id":"activity_1","query":"SELECT DISTINCT building FROM Faculty","query_toks":["SELECT","DISTINCT","building","FROM","Faculty"],"query_toks_no_value":["select","distinct","building","from","faculty"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,22,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","alle","verschiedenen","Geb\u00e4ude",",","die","Fakult\u00e4tsr\u00e4ume","haben","."],"question":"Zeige alle verschiedenen Geb\u00e4ude, die Fakult\u00e4tsr\u00e4ume haben."},{"db_id":"college_1","query":"SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211'","query_toks":["SELECT","T3.stu_fname","FROM","CLASS","AS","T1","JOIN","enroll","AS","T2","ON","T1.class_code","=","T2.class_code","JOIN","student","AS","T3","ON","T2.stu_num","=","T3.stu_num","WHERE","T1.crs_code","=","'ACCT-211","'"],"query_toks_no_value":["select","t3",".","stu_fname","from","class","as","t1","join","enroll","as","t2","on","t1",".","class_code","=","t2",".","class_code","join","student","as","t3","on","t2",".","stu_num","=","t3",".","stu_num","where","t1",".","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"ACCT-211\"",null]]},"question_toks":["Wie","lautet","der","Vorname","jedes","Studierenden",",","der","in","dem","Kurs","ACCT-211","eingeschrieben","ist","?"],"question":"Wie lautet der Vorname jedes Studierenden, der in dem Kurs ACCT-211 eingeschrieben ist?"},{"db_id":"music_1","query":"SELECT count(*) ,  formats FROM files GROUP BY formats","query_toks":["SELECT","count","(","*",")",",","formats","FROM","files","GROUP","BY","formats"],"query_toks_no_value":["select","count","(","*",")",",","formats","from","files","group","by","formats"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","f\u00fcr","jedes","Dateiformat","die","Anzahl","der","K\u00fcnstler","an",",","die","Lieder","in","diesem","Format","ver\u00f6ffentlicht","haben","."],"question":"Gib f\u00fcr jedes Dateiformat die Anzahl der K\u00fcnstler an, die Lieder in diesem Format ver\u00f6ffentlicht haben."},{"db_id":"formula_1","query":"SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011","query_toks":["SELECT","name","FROM","races","WHERE","YEAR","BETWEEN","2009","AND","2011"],"query_toks_no_value":["select","name","from","races","where","year","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,1,[0,[0,11,false],null],2009.0,2011.0]]},"question_toks":["Wie","hei\u00dfen","die","Rennen",",","de","zwischen","2009","und","2011","veranstaltet","wurden","?"],"question":"Wie hei\u00dfen die Rennen, de zwischen 2009 und 2011 veranstaltet wurden?"},{"db_id":"activity_1","query":"SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.activity_name","FROM","Activity","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.actID","=","T2.actID","GROUP","BY","T1.actID","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","activity_name","from","activity","as","t1","join","faculty_participates_in","as","t2","on","t1",".","actid","=","t2",".","actid","group","by","t1",".","actid","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["An","welcher","Aktivit\u00e4t","haben","die","meisten","Fakult\u00e4tsmitglieder","teilgenommen","?","Finde","den","Namen","der","Aktivit\u00e4t","."],"question":"An welcher Aktivit\u00e4t haben die meisten Fakult\u00e4tsmitglieder teilgenommen? Finde den Namen der Aktivit\u00e4t."},{"db_id":"music_1","query":"SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1","query_toks":["SELECT","T1.country","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","GROUP","BY","T2.artist_name","ORDER","BY","count","(","*",")","LIMIT","1"],"query_toks_no_value":["select","t1",".","country","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","group","by","t2",".","artist_name","order","by","count","(","*",")","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[[0,14,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Aus","welchem","Land","ist","der","K\u00fcnstler",",","der","die","wenigsten","Lieder","gemacht","hat","?"],"question":"Aus welchem Land ist der K\u00fcnstler, der die wenigsten Lieder gemacht hat?"},{"db_id":"twitter_1","query":"SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%'","query_toks":["SELECT","name","FROM","user_profiles","WHERE","email","LIKE","'","%","superstar","%","'","OR","email","LIKE","'","%","edu","%","'"],"query_toks_no_value":["select","name","from","user_profiles","where","email","like","value","or","email","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,9,[0,[0,9,false],null],"\"%superstar%\"",null],"or",[false,9,[0,[0,9,false],null],"\"%edu%\"",null]]},"question_toks":["Finde","die","Namen","von","Benutzern",",","deren","E-Mails","'Superstar","'","oder","'edu","'","enthalten","."],"question":"Finde die Namen von Benutzern, deren E-Mails 'Superstar' oder 'edu' enthalten."},{"db_id":"csu_1","query":"SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Jose State University\"","query_toks":["SELECT","sum","(","t1.undergraduate",")","FROM","discipline_enrollments","AS","t1","JOIN","campuses","AS","t2","ON","t1.campus","=","t2.id","WHERE","t1.year","=","2004","AND","t2.campus","=","``","San","Jose","State","University","''"],"query_toks_no_value":["select","sum","(","t1",".","undergraduate",")","from","discipline_enrollments","as","t1","join","campuses","as","t2","on","t1",".","campus","=","t2",".","id","where","t1",".","year","=","value","and","t2",".","campus","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,1,false],null]],"table_units":[["table_unit",3],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],2004.0,null],"and",[false,2,[0,[0,2,false],null],"\"San Jose State University\"",null]]},"question_toks":["Wie","viele","Studenten","gibt","es","im","Jahr","2004","an","der","``","San","Jose","State","University","''","?"],"question":"Wie viele Studenten gibt es im Jahr 2004 an der \"San Jose State University\"?"},{"db_id":"college_1","query":"SELECT count(DISTINCT school_code) FROM department","query_toks":["SELECT","count","(","DISTINCT","school_code",")","FROM","department"],"query_toks_no_value":["select","count","(","distinct","school_code",")","from","department"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,13,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Schulen","gibt","es","insgesamt","?"],"question":"Wie viele Schulen gibt es insgesamt?"},{"db_id":"sakila_1","query":"SELECT count(*) FROM inventory WHERE store_id  =  1","query_toks":["SELECT","count","(","*",")","FROM","inventory","WHERE","store_id","=","1"],"query_toks_no_value":["select","count","(","*",")","from","inventory","where","store_id","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",10]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,56,false],null],1.0,null]]},"question_toks":["Wie","viele","Artikel","hat","Gesch\u00e4ft","1","im","Inventar","?"],"question":"Wie viele Artikel hat Gesch\u00e4ft 1 im Inventar?"},{"db_id":"music_1","query":"SELECT song_name FROM song WHERE languages  =  \"english\"","query_toks":["SELECT","song_name","FROM","song","WHERE","languages","=","``","english","''"],"query_toks_no_value":["select","song_name","from","song","where","languages","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},"question_toks":["Wie","hei\u00dfen","alle","Lieder","auf","Englisch","?"],"question":"Wie hei\u00dfen alle Lieder auf Englisch?"},{"db_id":"voter_2","query":"SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*)  >  2","query_toks":["SELECT","Advisor","FROM","STUDENT","GROUP","BY","Advisor","HAVING","COUNT","(","*",")",">","2"],"query_toks_no_value":["select","advisor","from","student","group","by","advisor","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,7,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Betreuer","haben","mehr","als","zwei","Studenten","?"],"question":"Welche Betreuer haben mehr als zwei Studenten?"},{"db_id":"loan_1","query":"SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1","query_toks":["SELECT","T2.bname","FROM","loan","AS","T1","JOIN","bank","AS","T2","ON","T1.branch_id","=","T2.branch_id","JOIN","customer","AS","T3","ON","T1.cust_id","=","T3.cust_id","WHERE","T3.credit_score","<","100","GROUP","BY","T2.bname","ORDER","BY","sum","(","T1.amount",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","bname","from","loan","as","t1","join","bank","as","t2","on","t1",".","branch_id","=","t2",".","branch_id","join","customer","as","t3","on","t1",".","cust_id","=","t3",".","cust_id","where","t3",".","credit_score","<","value","group","by","t2",".","bname","order","by","sum","(","t1",".","amount",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,18,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,4,[0,[0,11,false],null],100.0,null]]},"question_toks":["Finde","den","Namen","der","Bankfiliale",",","die","den","gr\u00f6\u00dften","Gesamtbetrag","an","Krediten","an","Kunden","mit","einer","Kreditw\u00fcrdigkeit","von","weniger","als","100","vergeben","hat","."],"question":"Finde den Namen der Bankfiliale, die den gr\u00f6\u00dften Gesamtbetrag an Krediten an Kunden mit einer Kreditw\u00fcrdigkeit von weniger als 100 vergeben hat."},{"db_id":"formula_1","query":"SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2017","query_toks":["SELECT","T1.name","FROM","races","AS","T1","JOIN","circuits","AS","T2","ON","T1.circuitid","=","T2.circuitid","WHERE","T2.country","=","``","Spain","''","AND","T1.year",">","2017"],"query_toks_no_value":["select","t1",".","name","from","races","as","t1","join","circuits","as","t2","on","t1",".","circuitid","=","t2",".","circuitid","where","t2",".","country","=","value","and","t1",".","year",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Spain\"",null],"and",[false,3,[0,[0,11,false],null],2017.0,null]]},"question_toks":["Welches","sind","die","Namen","der","Rennen",",","die","nach","2017","stattfanden","und","deren","Rennbahnen","im","Land","Spanien","waren","?"],"question":"Welches sind die Namen der Rennen, die nach 2017 stattfanden und deren Rennbahnen im Land Spanien waren?"},{"db_id":"music_1","query":"SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9","query_toks":["SELECT","DISTINCT","T1.artist_name",",","T1.country","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T2.rating",">","9"],"query_toks_no_value":["select","distinct","t1",".","artist_name",",","t1",".","country","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t2",".","rating",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],9.0,null]]},"question_toks":["Liste","Namen","und","Herkunftsland","auf","f\u00fcr","alle","S\u00e4nger",",","die","Lieder","mit","einer","Bewertung","\u00fcber","9","produziert","haben","?"],"question":"Liste Namen und Herkunftsland auf f\u00fcr alle S\u00e4nger, die Lieder mit einer Bewertung \u00fcber 9 produziert haben?"},{"db_id":"cinema","query":"SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id","query_toks":["SELECT","T2.title",",","max","(","T1.price",")","FROM","schedule","AS","T1","JOIN","film","AS","T2","ON","T1.film_id","=","T2.film_id","GROUP","BY","T1.film_id"],"query_toks_no_value":["select","t2",".","title",",","max","(","t1",".","price",")","from","schedule","as","t1","join","film","as","t2","on","t1",".","film_id","=","t2",".","film_id","group","by","t1",".","film_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,14,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,14,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[1,[0,[0,17,false],null]]]],"union":null,"where":[]},"question_toks":["Nenne","mir","den","Titel","und","den","h\u00f6chsten","Preis","f\u00fcr","jeden","Film","."],"question":"Nenne mir den Titel und den h\u00f6chsten Preis f\u00fcr jeden Film."},{"db_id":"college_1","query":"SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5","query_toks":["SELECT","count","(","DISTINCT","dept_name",")",",","school_code","FROM","department","GROUP","BY","school_code","HAVING","count","(","DISTINCT","dept_name",")","<","5"],"query_toks_no_value":["select","count","(","distinct","dept_name",")",",","school_code","from","department","group","by","school_code","having","count","(","distinct","dept_name",")","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,13,false]],"having":[[false,4,[0,[3,12,true],null],5.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,12,true],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Suche","die","Zahl","unterschiedlicher","Abteilungen","in","jeder","Schule",",","deren","Zahl","unterschiedlicher","Abteilungen","geringer","als","5","ist","."],"question":"Suche die Zahl unterschiedlicher Abteilungen in jeder Schule, deren Zahl unterschiedlicher Abteilungen geringer als 5 ist."},{"db_id":"sakila_1","query":"SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'","query_toks":["SELECT","T2.address",",","T1.email","FROM","customer","AS","T1","JOIN","address","AS","T2","ON","T2.address_id","=","T1.address_id","WHERE","T1.first_name","=","'LINDA","'"],"query_toks_no_value":["select","t2",".","address",",","t1",".","email","from","customer","as","t1","join","address","as","t2","on","t2",".","address_id","=","t1",".","address_id","where","t1",".","first_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,28,false],null]],"table_units":[["table_unit",5],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,27,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"LINDA\"",null]]},"question_toks":["Wo","wohnt","die","Kundin","mit","dem","Vornamen","Linda","?","Und","was","ist","ihre","E-Mail","?"],"question":"Wo wohnt die Kundin mit dem Vornamen Linda? Und was ist ihre E-Mail?"},{"db_id":"csu_1","query":"SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1","query_toks":["SELECT","T1.campus","FROM","campuses","AS","T1","JOIN","faculty","AS","T2","ON","T1.id","=","T2.campus","WHERE","T2.year","=","2003","ORDER","BY","T2.faculty","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","campus","from","campuses","as","t1","join","faculty","as","t2","on","t1",".","id","=","t2",".","campus","where","t2",".","year","=","value","order","by","t2",".","faculty","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,21,false],null]],"table_units":[["table_unit",0],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,23,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],2003.0,null]]},"question_toks":["Welcher","Campus","hat","die","meisten","Fakult\u00e4ten","in","2003","?"],"question":"Welcher Campus hat die meisten Fakult\u00e4ten in 2003?"},{"db_id":"sakila_1","query":"SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1","query_toks":["SELECT","T1.first_name",",","T1.last_name","FROM","customer","AS","T1","JOIN","rental","AS","T2","ON","T1.customer_id","=","T2.customer_id","ORDER","BY","T2.rental_date","ASC","LIMIT","1"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","last_name","from","customer","as","t1","join","rental","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","order","by","t2",".","rental_date","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,23,false],null],[0,71,false],null]],"table_units":[["table_unit",5],["table_unit",13]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,69,false],null]]],"select":[false,[[0,[0,[0,25,false],null]],[0,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Vorname","und","der","Nachname","des","Kunden",",","der","den","fr\u00fchesten","Verleih","vorgenommen","hat","?"],"question":"Wie lautet der Vorname und der Nachname des Kunden, der den fr\u00fchesten Verleih vorgenommen hat?"},{"db_id":"entrepreneur","query":"SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur)","query_toks":["SELECT","Name","FROM","people","WHERE","People_ID","NOT","IN","(","SELECT","People_ID","FROM","entrepreneur",")"],"query_toks_no_value":["select","name","from","people","where","people_id","not","in","(","select","people_id","from","entrepreneur",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[true,8,[0,[0,6,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","hei\u00dfen","die","Personen",",","die","keine","Unternehmer","sind","?"],"question":"Wie hei\u00dfen die Personen, die keine Unternehmer sind?"},{"db_id":"tracking_orders","query":"SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id","query_toks":["SELECT","count","(","*",")",",","T3.product_id","FROM","orders","AS","T1","JOIN","order_items","AS","T2","JOIN","products","AS","T3","ON","T1.order_id","=","T2.order_id","AND","T2.product_id","=","T3.product_id","GROUP","BY","T3.product_id"],"query_toks_no_value":["select","count","(","*",")",",","t3",".","product_id","from","orders","as","t1","join","order_items","as","t2","join","products","as","t3","on","t1",".","order_id","=","t2",".","order_id","and","t2",".","product_id","=","t3",".","product_id","group","by","t3",".","product_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,17,false],null],"and",[false,2,[0,[0,16,false],null],[0,12,false],null]],"table_units":[["table_unit",2],["table_unit",4],["table_unit",3]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","f\u00fcr","jedes","Produkt","seine","ID","und","die","Zahl","seiner","Bestellungen","wieder","."],"question":"Gib f\u00fcr jedes Produkt seine ID und die Zahl seiner Bestellungen wieder."},{"db_id":"store_product","query":"SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3","query_toks":["SELECT","max_page_size","FROM","product","GROUP","BY","max_page_size","HAVING","count","(","*",")",">","3"],"query_toks_no_value":["select","max_page_size","from","product","group","by","max_page_size","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[[false,3,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Liste","mit","der","Seitengr\u00f6\u00dfe","mit","mehr","als","drei","gelisteten","Produkten","."],"question":"Finde die Liste mit der Seitengr\u00f6\u00dfe mit mehr als drei gelisteten Produkten. "},{"db_id":"sakila_1","query":"SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3","query_toks":["SELECT","title",",","film_id","FROM","film","WHERE","rental_rate","=","0.99","INTERSECT","SELECT","T1.title",",","T1.film_id","FROM","film","AS","T1","JOIN","inventory","AS","T2","ON","T1.film_id","=","T2.film_id","GROUP","BY","T1.film_id","HAVING","count","(","*",")","<","3"],"query_toks_no_value":["select","title",",","film_id","from","film","where","rental_rate","=","value","intersect","select","t1",".","title",",","t1",".","film_id","from","film","as","t1","join","inventory","as","t2","on","t1",".","film_id","=","t2",".","film_id","group","by","t1",".","film_id","having","count","(","*",")","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,55,false],null]],"table_units":[["table_unit",6],["table_unit",10]]},"groupBy":[[0,32,false]],"having":[[false,4,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[[false,2,[0,[0,39,false],null],0.99,null]]},"question_toks":["Wie","lauten","Titel","und","ID","des","Films",",","der","eine","Leihgeb\u00fchr","von","0,99","und","einen","Bestand","von","weniger","als","3","hat","?"],"question":"Wie lauten Titel und ID des Films, der eine Leihgeb\u00fchr von 0,99 und einen Bestand von weniger als 3 hat?"},{"db_id":"college_1","query":"SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num","query_toks":["SELECT","T2.emp_fname",",","T4.prof_office",",","T3.crs_description","FROM","CLASS","AS","T1","JOIN","employee","AS","T2","ON","T1.prof_num","=","T2.emp_num","JOIN","course","AS","T3","ON","T1.crs_code","=","T3.crs_code","JOIN","professor","AS","T4","ON","T2.emp_num","=","T4.emp_num"],"query_toks_no_value":["select","t2",".","emp_fname",",","t4",".","prof_office",",","t3",".","crs_description","from","class","as","t1","join","employee","as","t2","on","t1",".","prof_num","=","t2",".","emp_num","join","course","as","t3","on","t1",".","crs_code","=","t3",".","crs_code","join","professor","as","t4","on","t2",".","emp_num","=","t4",".","emp_num"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,29,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Vornamen","und","B\u00fcros","aller","Lehrer",",","die","einen","Kurs","unterrichtet","haben",",","und","finde","auch","die","Kursbeschreibung","."],"question":"Finde die Vornamen und B\u00fcros aller Lehrer, die einen Kurs unterrichtet haben, und finde auch die Kursbeschreibung."},{"db_id":"entrepreneur","query":"SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\"","query_toks":["SELECT","T2.Date_of_Birth","FROM","entrepreneur","AS","T1","JOIN","people","AS","T2","ON","T1.People_ID","=","T2.People_ID","WHERE","T1.Investor","=","``","Simon","Woodroffe","''","OR","T1.Investor","=","``","Peter","Jones","''"],"query_toks_no_value":["select","t2",".","date_of_birth","from","entrepreneur","as","t1","join","people","as","t2","on","t1",".","people_id","=","t2",".","people_id","where","t1",".","investor","=","value","or","t1",".","investor","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Simon Woodroffe\"",null],"or",[false,2,[0,[0,5,false],null],"\"Peter Jones\"",null]]},"question_toks":["Nenne","die","Geburtsdaten","von","Unternehmern",",","die","entweder","den","Investor","Simon","Woodroffe","oder","Peter","Jones","sind","."],"question":"Nenne die Geburtsdaten von Unternehmern, die entweder den Investor Simon Woodroffe oder Peter Jones sind. "},{"db_id":"swimming","query":"SELECT count(*) FROM event","query_toks":["SELECT","count","(","*",")","FROM","event"],"query_toks_no_value":["select","count","(","*",")","from","event"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Veranstaltungen","gibt","es","?"],"question":"Wie viele Veranstaltungen gibt es?"},{"db_id":"sakila_1","query":"SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.first_name",",","T2.last_name",",","T2.actor_id","FROM","film_actor","AS","T1","JOIN","actor","AS","T2","ON","T1.actor_id","=","T2.actor_id","GROUP","BY","T2.actor_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","first_name",",","t2",".","last_name",",","t2",".","actor_id","from","film_actor","as","t1","join","actor","as","t2","on","t1",".","actor_id","=","t2",".","actor_id","group","by","t2",".","actor_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,45,false],null],[0,1,false],null]],"table_units":[["table_unit",7],["table_unit",0]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]],[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","den","vollen","Namen","und","die","ID","jedes","Schauspielers","oder","jeder","Schauspielerin","wieder",",","die","in","der","h\u00f6chsten","Anzahl","von","Filmen","mitspielten","."],"question":"Gib den vollen Namen und die ID jedes Schauspielers oder jeder Schauspielerin wieder, die in der h\u00f6chsten Anzahl von Filmen mitspielten."},{"db_id":"formula_1","query":"SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Australian Grand Prix\" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Chinese Grand Prix\"","query_toks":["SELECT","T2.driverid",",","T3.forename","FROM","races","AS","T1","JOIN","results","AS","T2","ON","T1.raceid","=","T2.raceid","JOIN","drivers","AS","T3","ON","T2.driverid","=","T3.driverid","WHERE","T1.name","=","``","Australian","Grand","Prix","''","INTERSECT","SELECT","T2.driverid",",","T3.forename","FROM","races","AS","T1","JOIN","results","AS","T2","ON","T1.raceid","=","T2.raceid","JOIN","drivers","AS","T3","ON","T2.driverid","=","T3.driverid","WHERE","T1.name","=","``","Chinese","Grand","Prix","''"],"query_toks_no_value":["select","t2",".","driverid",",","t3",".","forename","from","races","as","t1","join","results","as","t2","on","t1",".","raceid","=","t2",".","raceid","join","drivers","as","t3","on","t2",".","driverid","=","t3",".","driverid","where","t1",".","name","=","value","intersect","select","t2",".","driverid",",","t3",".","forename","from","races","as","t1","join","results","as","t2","on","t1",".","raceid","=","t2",".","raceid","join","drivers","as","t3","on","t2",".","driverid","=","t3",".","driverid","where","t1",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,44,false],null]],"table_units":[["table_unit",1],["table_unit",7]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,44,false],null]],"table_units":[["table_unit",1],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,45,false],null]],[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"Chinese Grand Prix\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,45,false],null]],[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"Australian Grand Prix\"",null]]},"question_toks":["Finde","die","ID","und","die","Vornamen","von","Fahrern",",","die","zugleich","an","den","Rennen","mit","dem","Namen","Gro\u00dfer","Preis","von","Australien","und","mit","dem","Namen","Gro\u00dfer","Preis","von","China","teilnahmen","."],"question":"Finde die ID und die Vornamen von Fahrern, die zugleich an den Rennen mit dem Namen Gro\u00dfer Preis von Australien und mit dem Namen Gro\u00dfer Preis von China teilnahmen."},{"db_id":"loan_1","query":"SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1","query_toks":["SELECT","T1.bname","FROM","bank","AS","T1","JOIN","loan","AS","T2","ON","T1.branch_id","=","T2.branch_id","GROUP","BY","T1.bname","ORDER","BY","sum","(","T2.amount",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","bname","from","bank","as","t1","join","loan","as","t2","on","t1",".","branch_id","=","t2",".","branch_id","group","by","t1",".","bname","order","by","sum","(","t2",".","amount",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,18,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dft","die","Bankfiliale",",","die","den","gr\u00f6\u00dften","Betrag","verliehen","hat","?"],"question":"Wie hei\u00dft die Bankfiliale, die den gr\u00f6\u00dften Betrag verliehen hat?"},{"db_id":"formula_1","query":"SELECT DISTINCT name FROM races ORDER BY name DESC","query_toks":["SELECT","DISTINCT","name","FROM","races","ORDER","BY","name","DESC"],"query_toks_no_value":["select","distinct","name","from","races","order","by","name","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,14,false],null]]],"select":[true,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","unterschiedlichen","Namen","aller","Rennen","in","umgekehrter","alphabetischer","Folge","?"],"question":"Welches sind die unterschiedlichen Namen aller Rennen in umgekehrter alphabetischer Folge?"},{"db_id":"coffee_shop","query":"SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count(*)  >  2","query_toks":["SELECT","MONTH","FROM","happy_hour","GROUP","BY","MONTH","HAVING","count","(","*",")",">","2"],"query_toks_no_value":["select","month","from","happy_hour","group","by","month","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,15,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Monate","haben","mehr","als","2","Happy","Hours","?"],"question":"Welche Monate haben mehr als 2 Happy Hours?"},{"db_id":"activity_1","query":"SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.fname",",","T1.lname","FROM","Faculty","AS","T1","JOIN","Student","AS","T2","ON","T1.FacID","=","T2.advisor","GROUP","BY","T1.FacID","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","lname","from","faculty","as","t1","join","student","as","t2","on","t1",".","facid","=","t2",".","advisor","group","by","t1",".","facid","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,13,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,17,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Nenne","mir","den","Vor-","und","Nachnamen","der","Fakult\u00e4t",",","die","die","meisten","Studierenden","ber\u00e4t","."],"question":"Nenne mir den Vor- und Nachnamen der Fakult\u00e4t, die die meisten Studierenden ber\u00e4t."},{"db_id":"store_product","query":"SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1","query_toks":["SELECT","district_name","FROM","district","ORDER","BY","city_population","DESC","LIMIT","1"],"query_toks_no_value":["select","district_name","from","district","order","by","city_population","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,17,false],null]]],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dft","der","Bezirk","mit","den","meisten","Einwohnern","?"],"question":"Wie hei\u00dft der Bezirk mit den meisten Einwohnern?"},{"db_id":"debate","query":"SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Negative  =  T3.People_ID ORDER BY T3.Name ASC","query_toks":["SELECT","T3.Name",",","T2.Date",",","T2.Venue","FROM","debate_people","AS","T1","JOIN","debate","AS","T2","ON","T1.Debate_ID","=","T2.Debate_ID","JOIN","people","AS","T3","ON","T1.Negative","=","T3.People_ID","ORDER","BY","T3.Name","ASC"],"query_toks_no_value":["select","t3",".","name",",","t2",".","date",",","t2",".","venue","from","debate_people","as","t1","join","debate","as","t2","on","t1",".","debate_id","=","t2",".","debate_id","join","people","as","t3","on","t1",".","negative","=","t3",".","people_id","order","by","t3",".","name","asc"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,3,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,7,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Namen","von","Menschen",",","und","Daten","und","Veranstaltungsorten","von","Debatten",",","die","auf","der","negativen","Seite","sind",",","sortiert","in","aufsteigender","alphabetischer","Ordnung","des","Namens","."],"question":"Zeige die Namen von Menschen, und Daten und Veranstaltungsorten von Debatten, die auf der negativen Seite sind, sortiert in aufsteigender alphabetischer Ordnung des Namens."},{"db_id":"formula_1","query":"SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5","query_toks":["SELECT","T1.name","FROM","constructors","AS","T1","JOIN","constructorstandings","AS","T2","ON","T1.constructorid","=","T2.constructorid","WHERE","T1.nationality","=","``","Japanese","''","AND","T2.points",">","5"],"query_toks_no_value":["select","t1",".","name","from","constructors","as","t1","join","constructorstandings","as","t2","on","t1",".","constructorid","=","t2",".","constructorid","where","t1",".","nationality","=","value","and","t2",".","points",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,31,false],null],[0,38,false],null]],"table_units":[["table_unit",5],["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]]]],"union":null,"where":[[false,2,[0,[0,34,false],null],"\"Japanese\"",null],"and",[false,3,[0,[0,39,false],null],5.0,null]]},"question_toks":["Finde","die","Namen","der","japanischen","Konstrukteure",",","die","einmal","mehr","als","5","Punkte","erhalten","haben","?"],"question":"Finde die Namen der japanischen Konstrukteure, die einmal mehr als 5 Punkte erhalten haben?"},{"db_id":"music_1","query":"SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800","query_toks":["SELECT","avg","(","T1.duration",")","FROM","files","AS","T1","JOIN","song","AS","T2","ON","T1.f_id","=","T2.f_id","WHERE","T1.formats","=","``","mp3","''","AND","T2.resolution","<","800"],"query_toks_no_value":["select","avg","(","t1",".","duration",")","from","files","as","t1","join","song","as","t2","on","t1",".","f_id","=","t2",".","f_id","where","t1",".","formats","=","value","and","t2",".","resolution","<","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,16,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"mp3\"",null],"and",[false,4,[0,[0,21,false],null],800.0,null]]},"question_toks":["Welches","ist","die","durchschnittliche","L\u00e4nge","der","Lieder",",","die","im","MP3-Format","sind","und","deren","Aufl\u00f6sung","unter","800","ist","?"],"question":"Welches ist die durchschnittliche L\u00e4nge der Lieder, die im MP3-Format sind und deren Aufl\u00f6sung unter 800 ist?"},{"db_id":"csu_1","query":"SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1","query_toks":["SELECT","campus","FROM","degrees","GROUP","BY","campus","ORDER","BY","sum","(","degrees",")","DESC","LIMIT","1"],"query_toks_no_value":["select","campus","from","degrees","group","by","campus","order","by","sum","(","degrees",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,11,false],null]]],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Campus","hat","w\u00e4hrend","seiner","gesamten","Existenz","die","meisten","Abschl\u00fcsse","verliehen","?"],"question":"Welcher Campus hat w\u00e4hrend seiner gesamten Existenz die meisten Abschl\u00fcsse verliehen?"},{"db_id":"music_1","query":"SELECT song_name FROM song ORDER BY resolution","query_toks":["SELECT","song_name","FROM","song","ORDER","BY","resolution"],"query_toks_no_value":["select","song_name","from","song","order","by","resolution"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,21,false],null]]],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dfen","alle","Lieder",",","die","nach","ihrer","Nummer","der","Aufl\u00f6sung","geordnet","sind","?"],"question":"Wie hei\u00dfen alle Lieder, die nach ihrer Nummer der Aufl\u00f6sung geordnet sind?"},{"db_id":"loan_1","query":"SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname","query_toks":["SELECT","sum","(","amount",")",",","T1.bname","FROM","bank","AS","T1","JOIN","loan","AS","T2","ON","T1.branch_id","=","T2.branch_id","GROUP","BY","T1.bname"],"query_toks_no_value":["select","sum","(","amount",")",",","t1",".","bname","from","bank","as","t1","join","loan","as","t2","on","t1",".","branch_id","=","t2",".","branch_id","group","by","t1",".","bname"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,18,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Gesamtzahl","der","Kredite",",","die","von","jeder","Bankenzweigstelle","angeboten","werden","."],"question":"Finde die Gesamtzahl der Kredite, die von jeder Bankenzweigstelle angeboten werden."},{"db_id":"store_product","query":"SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)","query_toks":["SELECT","product","FROM","product","WHERE","product","!","=","(","SELECT","max_page_size","FROM","product","GROUP","BY","max_page_size","ORDER","BY","count","(","*",")","DESC","LIMIT","1",")"],"query_toks_no_value":["select","product","from","product","where","product","!","=","(","select","max_page_size","from","product","group","by","max_page_size","order","by","count","(","*",")","desc","limit","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,7,[0,[0,2,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finde","die","Namen","der","Produkte",",","die","nicht","die","am","h\u00e4ufigsten","verwendete","maximale","Seitengr\u00f6\u00dfe","verwenden","."],"question":"Finde die Namen der Produkte, die nicht die am h\u00e4ufigsten verwendete maximale Seitengr\u00f6\u00dfe verwenden."},{"db_id":"activity_1","query":"SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F'","query_toks":["SELECT","Fname",",","Lname",",","phone","FROM","Faculty","WHERE","Sex","=","'F","'"],"query_toks_no_value":["select","fname",",","lname",",","phone","from","faculty","where","sex","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]],[0,[0,[0,16,false],null]],[0,[0,[0,20,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"F\"",null]]},"question_toks":["Zeige","den","Vornamen",",","Nachnamen","und","die","Telefonnummer","f\u00fcr","alle","weiblichen","Fakult\u00e4tsmitglieder","."],"question":"Zeige den Vornamen, Nachnamen und die Telefonnummer f\u00fcr alle weiblichen Fakult\u00e4tsmitglieder."},{"db_id":"phone_market","query":"SELECT Carrier FROM phone WHERE Memory_in_G  <  32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G  >  64","query_toks":["SELECT","Carrier","FROM","phone","WHERE","Memory_in_G","<","32","INTERSECT","SELECT","Carrier","FROM","phone","WHERE","Memory_in_G",">","64"],"query_toks_no_value":["select","carrier","from","phone","where","memory_in_g","<","value","intersect","select","carrier","from","phone","where","memory_in_g",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,3,[0,[0,3,false],null],64.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,4,[0,[0,3,false],null],32.0,null]]},"question_toks":["Zeige","die","Anbieter",",","die","sowohl","Telefone","mit","einem","Speicher","kleiner","als","32","als","auch","Telefone","mit","einem","Speicher","gr\u00f6\u00dfer","als","64","haben","."],"question":"Zeige die Anbieter, die sowohl Telefone mit einem Speicher kleiner als 32 als auch Telefone mit einem Speicher gr\u00f6\u00dfer als 64 haben."},{"db_id":"mountain_photos","query":"SELECT brand ,  name FROM camera_lens ORDER BY max_aperture DESC","query_toks":["SELECT","brand",",","name","FROM","camera_lens","ORDER","BY","max_aperture","DESC"],"query_toks_no_value":["select","brand",",","name","from","camera_lens","order","by","max_aperture","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Marke","und","den","Namen","f\u00fcr","jedes","Kameraobjektiv","und","sortiere","in","absteigender","Ordnung","nach","der","maximalen","Blende","."],"question":"Finde die Marke und den Namen f\u00fcr jedes Kameraobjektiv und sortiere in absteigender Ordnung nach der maximalen Blende."},{"db_id":"music_1","query":"SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"3:%\"","query_toks":["SELECT","max","(","T2.resolution",")",",","min","(","T2.resolution",")","FROM","files","AS","T1","JOIN","song","AS","T2","ON","T1.f_id","=","T2.f_id","WHERE","T1.duration","LIKE","``","3",":","%","''"],"query_toks_no_value":["select","max","(","t2",".","resolution",")",",","min","(","t2",".","resolution",")","from","files","as","t1","join","song","as","t2","on","t1",".","f_id","=","t2",".","f_id","where","t1",".","duration","like","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,16,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,21,false],null]],[2,[0,[0,21,false],null]]]],"union":null,"where":[[false,9,[0,[0,11,false],null],"\"3:%\"",null]]},"question_toks":["Was","ist","die","maximale","und","minimale","Aufl\u00f6sung","aller","Lieder",",","die","in","etwa","3","Minuten","lang","sind","?"],"question":"Was ist die maximale und minimale Aufl\u00f6sung aller Lieder, die in etwa 3 Minuten lang sind?"},{"db_id":"loan_1","query":"SELECT sum(no_of_customers) FROM bank","query_toks":["SELECT","sum","(","no_of_customers",")","FROM","bank"],"query_toks_no_value":["select","sum","(","no_of_customers",")","from","bank"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Kunden","gibt","es","?"],"question":"Wie viele Kunden gibt es?"},{"db_id":"activity_1","query":"SELECT DISTINCT building FROM Faculty","query_toks":["SELECT","DISTINCT","building","FROM","Faculty"],"query_toks_no_value":["select","distinct","building","from","faculty"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,22,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Geb\u00e4ude","haben","Fakult\u00e4tsb\u00fcros","?"],"question":"Welche Geb\u00e4ude haben Fakult\u00e4tsb\u00fcros?"},{"db_id":"entrepreneur","query":"SELECT count(*) FROM entrepreneur","query_toks":["SELECT","count","(","*",")","FROM","entrepreneur"],"query_toks_no_value":["select","count","(","*",")","from","entrepreneur"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Unternehmer","gibt","es","?"],"question":"Wie viele Unternehmer gibt es?"},{"db_id":"sakila_1","query":"SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id","query_toks":["SELECT","T2.name",",","T1.category_id",",","count","(","*",")","FROM","film_category","AS","T1","JOIN","category","AS","T2","ON","T1.category_id","=","T2.category_id","GROUP","BY","T1.category_id"],"query_toks_no_value":["select","t2",".","name",",","t1",".","category_id",",","count","(","*",")","from","film_category","as","t1","join","category","as","t2","on","t1",".","category_id","=","t2",".","category_id","group","by","t1",".","category_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,49,false],null],[0,13,false],null]],"table_units":[["table_unit",8],["table_unit",2]]},"groupBy":[[0,49,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,49,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Filme","gibt","es","in","jeder","Kategorie","?","Liste","den","Genre-Namen",",","die","Genre-Kennung","und","die","Anzahl","auf","."],"question":"Wie viele Filme gibt es in jeder Kategorie? Liste den Genre-Namen, die Genre-Kennung und die Anzahl auf."},{"db_id":"voter_2","query":"SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\"","query_toks":["SELECT","avg","(","T1.Age",")","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","SECRETARY_Vote","WHERE","T1.city_code","=","``","NYC","''","AND","T2.Election_Cycle","=","``","Spring","''"],"query_toks_no_value":["select","avg","(","t1",".","age",")","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","secretary_vote","where","t1",".","city_code","=","value","and","t2",".","election_cycle","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,14,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"NYC\"",null],"and",[false,2,[0,[0,11,false],null],"\"Spring\"",null]]},"question_toks":["Finde","das","Durchschnittsalter","der","Studenten",",","die","in","der","Stadt","mit","dem","Code","``","NYC","''","wohnen","und","Wahlstimmen","f\u00fcr","das","Sekretariat","haben","im","Wahlzyklus","im","Fr\u00fchjahr","."],"question":"Finde das Durchschnittsalter der Studenten, die in der Stadt mit dem Code \"NYC\" wohnen und Wahlstimmen f\u00fcr das Sekretariat haben im Wahlzyklus im Fr\u00fchjahr."},{"db_id":"activity_1","query":"SELECT building ,  count(*) FROM Faculty GROUP BY building","query_toks":["SELECT","building",",","count","(","*",")","FROM","Faculty","GROUP","BY","building"],"query_toks_no_value":["select","building",",","count","(","*",")","from","faculty","group","by","building"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,22,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Fakult\u00e4tsmitglieder","hat","jedes","Geb\u00e4ude","?","Liste","die","Ergebnisse","mit","dem","Namen","des","Geb\u00e4udes","auf","."],"question":"Wie viele Fakult\u00e4tsmitglieder hat jedes Geb\u00e4ude? Liste die Ergebnisse mit dem Namen des Geb\u00e4udes auf."},{"db_id":"activity_1","query":"SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"Instructor\"","query_toks":["SELECT","fname",",","lname","FROM","Faculty","WHERE","Rank","=","``","Instructor","''"],"query_toks_no_value":["select","fname",",","lname","from","faculty","where","rank","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"Instructor\"",null]]},"question_toks":["Wie","lauten","die","Vor-","und","Nachnamen","aller","Ausbilder","?"],"question":"Wie lauten die Vor- und Nachnamen aller Ausbilder?"},{"db_id":"voter_2","query":"SELECT LName FROM STUDENT WHERE Major  =  50","query_toks":["SELECT","LName","FROM","STUDENT","WHERE","Major","=","50"],"query_toks_no_value":["select","lname","from","student","where","major","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],50.0,null]]},"question_toks":["Was","sind","die","Nachnamen","der","Studierenden","im","Hauptfach","50","?"],"question":"Was sind die Nachnamen der Studierenden im Hauptfach 50?"},{"db_id":"college_1","query":"SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'","query_toks":["SELECT","class_code","FROM","CLASS","WHERE","class_room","=","'KLR209","'"],"query_toks_no_value":["select","class_code","from","class","where","class_room","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"KLR209\"",null]]},"question_toks":["Welches","sind","die","Codes","aller","Kurse",",","die","in","Raum","KLR209","sind","?"],"question":"Welches sind die Codes aller Kurse, die in Raum KLR209 sind?"},{"db_id":"formula_1","query":"SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = \"Australian Grand Prix\" AND YEAR = 2009","query_toks":["SELECT","count","(","*",")","FROM","results","AS","T1","JOIN","races","AS","T2","ON","T1.raceid","=","T2.raceid","WHERE","T2.name","=","``","Australian","Grand","Prix","''","AND","YEAR","=","2009"],"query_toks_no_value":["select","count","(","*",")","from","results","as","t1","join","races","as","t2","on","t1",".","raceid","=","t2",".","raceid","where","t2",".","name","=","value","and","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,44,false],null],[0,10,false],null]],"table_units":[["table_unit",7],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"Australian Grand Prix\"",null],"and",[false,2,[0,[0,11,false],null],2009.0,null]]},"question_toks":["Wie","viele","Fahrer","nahmen","2009","am","Gro\u00dfen","Preis","von","Australien","teil","?"],"question":"Wie viele Fahrer nahmen 2009 am Gro\u00dfen Preis von Australien teil?"},{"db_id":"music_1","query":"SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9","query_toks":["SELECT","DISTINCT","T1.artist_name",",","T1.country","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T2.rating",">","9"],"query_toks_no_value":["select","distinct","t1",".","artist_name",",","t1",".","country","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t2",".","rating",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],9.0,null]]},"question_toks":["Welches","sind","die","unterschiedlichen","Namen","und","Herkunftsl\u00e4nder","aller","K\u00fcnstler",",","deren","Liederbewertungen","\u00fcber","9","sind","?"],"question":"Welches sind die unterschiedlichen Namen und Herkunftsl\u00e4nder aller K\u00fcnstler, deren Liederbewertungen \u00fcber 9 sind?"},{"db_id":"music_1","query":"SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1","query_toks":["SELECT","formats","FROM","files","GROUP","BY","formats","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","formats","from","files","group","by","formats","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","das","Dateiformat",",","das","von","den","meisten","Dateien","verwendet","wird","."],"question":"Finde das Dateiformat, das von den meisten Dateien verwendet wird."},{"db_id":"game_injury","query":"SELECT T1.date ,  T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC","query_toks":["SELECT","T1.date",",","T2.player","FROM","game","AS","T1","JOIN","injury_accident","AS","T2","ON","T1.id","=","T2.game_id","ORDER","BY","T1.season","DESC"],"query_toks_no_value":["select","t1",".","date",",","t2",".","player","from","game","as","t1","join","injury_accident","as","t2","on","t1",".","id","=","t2",".","game_id","order","by","t1",".","season","desc"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,15,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,17,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","f\u00fcr","jeden","Verletzungsunfall","das","Datum","des","Spiels","und","den","Namen","des","verletzten","Spielers","in","dem","Spiel",",","und","sortiere","die","Ergebnisse","in","absteigender","Ordnung","der","Spielsaison","."],"question":"Finde f\u00fcr jeden Verletzungsunfall das Datum des Spiels und den Namen des verletzten Spielers in dem Spiel, und sortiere die Ergebnisse in absteigender Ordnung der Spielsaison."},{"db_id":"formula_1","query":"SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"","query_toks":["SELECT","T2.name",",","T2.year","FROM","results","AS","T1","JOIN","races","AS","T2","ON","T1.raceid","=","T2.raceid","JOIN","drivers","AS","T3","ON","T1.driverid","=","T3.driverid","WHERE","T3.forename","=","``","Lewis","''"],"query_toks_no_value":["select","t2",".","name",",","t2",".","year","from","results","as","t1","join","races","as","t2","on","t1",".","raceid","=","t2",".","raceid","join","drivers","as","t3","on","t1",".","driverid","=","t3",".","driverid","where","t3",".","forename","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,44,false],null],[0,10,false],null]],"table_units":[["table_unit",7],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],"\"Lewis\"",null]]},"question_toks":["Gib","mir","eine","Liste","mit","Namen","und","Jahren","von","Rennen",",","bei","denen","ein","Fahrer","mit","dem","Vornamen","Lewis","an","den","Start","ging","."],"question":"Gib mir eine Liste mit Namen und Jahren von Rennen, bei denen ein Fahrer mit dem Vornamen Lewis an den Start ging."},{"db_id":"college_1","query":"SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Computer Info. Systems'","query_toks":["SELECT","T1.stu_fname","FROM","student","AS","T1","JOIN","enroll","AS","T2","ON","T1.stu_num","=","T2.stu_num","JOIN","CLASS","AS","T3","ON","T2.class_code","=","T3.class_code","JOIN","course","AS","T4","ON","T3.crs_code","=","T4.crs_code","JOIN","department","AS","T5","ON","T5.dept_code","=","T4.dept_code","WHERE","T5.dept_name","=","'Accounting","'","INTERSECT","SELECT","T1.stu_fname","FROM","student","AS","T1","JOIN","enroll","AS","T2","ON","T1.stu_num","=","T2.stu_num","JOIN","CLASS","AS","T3","ON","T2.class_code","=","T3.class_code","JOIN","course","AS","T4","ON","T3.crs_code","=","T4.crs_code","JOIN","department","AS","T5","ON","T5.dept_code","=","T4.dept_code","WHERE","T5.dept_name","=","'Computer","Info",".","Systems","'"],"query_toks_no_value":["select","t1",".","stu_fname","from","student","as","t1","join","enroll","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","join","class","as","t3","on","t2",".","class_code","=","t3",".","class_code","join","course","as","t4","on","t3",".","crs_code","=","t4",".","crs_code","join","department","as","t5","on","t5",".","dept_code","=","t4",".","dept_code","where","t5",".","dept_name","=","value","intersect","select","t1",".","stu_fname","from","student","as","t1","join","enroll","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","join","class","as","t3","on","t2",".","class_code","=","t3",".","class_code","join","course","as","t4","on","t3",".","crs_code","=","t4",".","crs_code","join","department","as","t5","on","t5",".","dept_code","=","t4",".","dept_code","where","t5",".","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,25,false],null]],"table_units":[["table_unit",6],["table_unit",4]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,25,false],null]],"table_units":[["table_unit",6],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Computer Info. Systems\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Accounting\"",null]]},"question_toks":["Finde","den","Vornamen","des","Studenten",",","der","Kurse","macht","bei","Buchhaltung","und","Computer-Informationssysteme","."],"question":"Finde den Vornamen des Studenten, der Kurse macht bei Buchhaltung und Computer-Informationssysteme."},{"db_id":"college_1","query":"SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.dept_name",",","T2.dept_address","FROM","student","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","GROUP","BY","T1.dept_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","dept_name",",","t2",".","dept_address","from","student","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","group","by","t1",".","dept_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,41,false],null],[0,11,false],null]],"table_units":[["table_unit",6],["table_unit",2]]},"groupBy":[[0,41,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,12,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","der","Name","und","die","Adresse","der","Abteilung","mit","den","meisten","Studierenden","?"],"question":"Was sind der Name und die Adresse der Abteilung mit den meisten Studierenden?"},{"db_id":"csu_1","query":"SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1","query_toks":["SELECT","T2.faculty","FROM","campuses","AS","T1","JOIN","faculty","AS","T2","ON","T1.id","=","t2.campus","JOIN","degrees","AS","T3","ON","T1.id","=","t3.campus","AND","t2.year","=","t3.year","WHERE","t2.year","=","2002","ORDER","BY","t3.degrees","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","faculty","from","campuses","as","t1","join","faculty","as","t2","on","t1",".","id","=","t2",".","campus","join","degrees","as","t3","on","t1",".","id","=","t3",".","campus","and","t2",".","year","=","t3",".","year","where","t2",".","year","=","value","order","by","t3",".","degrees","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,21,false],null],"and",[false,2,[0,[0,22,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],2002.0,null]]},"question_toks":["Wie","viele","Fakult\u00e4tszweige","gibt","es","in","der","Universit\u00e4t",",","welche","die","h\u00f6chste","Anzahl","an","Abschl\u00fcssen","vergab","im","Jahre","2002","?"],"question":"Wie viele Fakult\u00e4tszweige gibt es in der Universit\u00e4t, welche die h\u00f6chste Anzahl an Abschl\u00fcssen vergab im Jahre 2002?"},{"db_id":"mountain_photos","query":"SELECT name ,  height ,  prominence FROM mountain WHERE range != 'Aberdare Range'","query_toks":["SELECT","name",",","height",",","prominence","FROM","mountain","WHERE","range","!","=","'Aberdare","Range","'"],"query_toks_no_value":["select","name",",","height",",","prominence","from","mountain","where","range","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,7,[0,[0,5,false],null],"\"Aberdare Range\"",null]]},"question_toks":["Wie","lauten","der","Name",",","die","H\u00f6he","und","die","Erhebung","von","Bergen",",","die","nicht","zum","Aberdare","Range","geh\u00f6ren","?"],"question":"Wie lauten der Name, die H\u00f6he und die Erhebung von Bergen, die nicht zum Aberdare Range geh\u00f6ren?"},{"db_id":"mountain_photos","query":"SELECT T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id  =  T1.id WHERE T1.brand  =  'Sigma' OR T1.brand  =  'Olympus'","query_toks":["SELECT","T1.name","FROM","camera_lens","AS","T1","JOIN","photos","AS","T2","ON","T2.camera_lens_id","=","T1.id","WHERE","T1.brand","=","'Sigma","'","OR","T1.brand","=","'Olympus","'"],"query_toks_no_value":["select","t1",".","name","from","camera_lens","as","t1","join","photos","as","t2","on","t2",".","camera_lens_id","=","t1",".","id","where","t1",".","brand","=","value","or","t1",".","brand","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,7,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"Sigma\"",null],"or",[false,2,[0,[0,8,false],null],"\"Olympus\"",null]]},"question_toks":["Wie","hei\u00dfen","die","Fotos",",","die","mit","der","Objektivmarke","'Sigma","'","oder","'Olympus","'","aufgenommen","wurden","?"],"question":"Wie hei\u00dfen die Fotos, die mit der Objektivmarke 'Sigma' oder 'Olympus' aufgenommen wurden?"},{"db_id":"tracking_orders","query":"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.customer_name","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","GROUP","BY","T1.customer_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","customer_name","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","group","by","t1",".","customer_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","der","Name","des","Kunden","mit","den","meisten","Bestellungen","?"],"question":"Was ist der Name des Kunden mit den meisten Bestellungen?"},{"db_id":"music_1","query":"SELECT T1.gender ,  T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.resolution LIMIT 1","query_toks":["SELECT","T1.gender",",","T1.artist_name","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","ORDER","BY","T2.resolution","LIMIT","1"],"query_toks_no_value":["select","t1",".","gender",",","t1",".","artist_name","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","order","by","t2",".","resolution","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,21,false],null]]],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","das","Geschlecht","und","der","Name","des","K\u00fcnstlers",",","der","das","Lied","mit","der","kleinsten","Aufl\u00f6sung","gesungen","hat","?"],"question":"Was sind das Geschlecht und der Name des K\u00fcnstlers, der das Lied mit der kleinsten Aufl\u00f6sung gesungen hat?"},{"db_id":"entrepreneur","query":"SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID","query_toks":["SELECT","T2.Name","FROM","entrepreneur","AS","T1","JOIN","people","AS","T2","ON","T1.People_ID","=","T2.People_ID"],"query_toks_no_value":["select","t2",".","name","from","entrepreneur","as","t1","join","people","as","t2","on","t1",".","people_id","=","t2",".","people_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Namen","von","Unternehmern","?"],"question":"Welches sind die Namen von Unternehmern?"},{"db_id":"college_1","query":"SELECT count(*) ,  dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY dept_code","query_toks":["SELECT","count","(","*",")",",","dept_code","FROM","CLASS","AS","T1","JOIN","course","AS","T2","ON","T1.crs_code","=","T2.crs_code","GROUP","BY","dept_code"],"query_toks_no_value":["select","count","(","*",")",",","dept_code","from","class","as","t1","join","course","as","t2","on","t1",".","crs_code","=","t2",".","crs_code","group","by","dept_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Anzahl","der","Klassen","in","jeder","Abteilung","."],"question":"Finde die Anzahl der Klassen in jeder Abteilung."},{"db_id":"coffee_shop","query":"SELECT name ,  member_id FROM member WHERE Membership_card  =  'Black' OR age  <  30","query_toks":["SELECT","name",",","member_id","FROM","member","WHERE","Membership_card","=","'Black","'","OR","age","<","30"],"query_toks_no_value":["select","name",",","member_id","from","member","where","membership_card","=","value","or","age","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"Black\"",null],"or",[false,4,[0,[0,9,false],null],30.0,null]]},"question_toks":["Finde","die","Identifikationsnummern","und","Namen","von","Mitgliedern",",","die","unter","30","sind","oder","eine","schwarze","Mitgliedskarte","haben","."],"question":"Finde die Identifikationsnummern und Namen von Mitgliedern, die unter 30 sind oder eine schwarze Mitgliedskarte haben."},{"db_id":"loan_1","query":"SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1","query_toks":["SELECT","cust_name","FROM","customer","ORDER","BY","credit_score","LIMIT","1"],"query_toks_no_value":["select","cust_name","from","customer","order","by","credit_score","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Suche","den","Namen","des","Kunden","heraus",",","der","die","niedrigste","Kreditw\u00fcrdigkeit","hat","."],"question":"Suche den Namen des Kunden heraus, der die niedrigste Kreditw\u00fcrdigkeit hat."},{"db_id":"college_1","query":"SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code","query_toks":["SELECT","T2.emp_fname",",","T4.prof_office",",","T3.crs_description",",","T5.dept_name","FROM","CLASS","AS","T1","JOIN","employee","AS","T2","ON","T1.prof_num","=","T2.emp_num","JOIN","course","AS","T3","ON","T1.crs_code","=","T3.crs_code","JOIN","professor","AS","T4","ON","T2.emp_num","=","T4.emp_num","JOIN","department","AS","T5","ON","T4.dept_code","=","T5.dept_code"],"query_toks_no_value":["select","t2",".","emp_fname",",","t4",".","prof_office",",","t3",".","crs_description",",","t5",".","dept_name","from","class","as","t1","join","employee","as","t2","on","t1",".","prof_num","=","t2",".","emp_num","join","course","as","t3","on","t1",".","crs_code","=","t3",".","crs_code","join","professor","as","t4","on","t2",".","emp_num","=","t4",".","emp_num","join","department","as","t5","on","t4",".","dept_code","=","t5",".","dept_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,29,false],null]],[0,[0,[0,9,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Vornamen",",","B\u00fcrostandorte","und","Abteilungen","aller","Lehrer",",","und","au\u00dferdem",",","was","sind","die","Beschreibungen","der","Kurse",",","die","sie","unterrichten","?"],"question":"Welches sind die Vornamen, B\u00fcrostandorte und Abteilungen aller Lehrer, und au\u00dferdem, was sind die Beschreibungen der Kurse, die sie unterrichten?"},{"db_id":"store_product","query":"SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1","query_toks":["SELECT","district_name","FROM","district","ORDER","BY","city_population","DESC","LIMIT","1"],"query_toks_no_value":["select","district_name","from","district","order","by","city_population","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,17,false],null]]],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Bezirk","hat","die","gr\u00f6\u00dfte","Bev\u00f6lkerung","?"],"question":"Welcher Bezirk hat die gr\u00f6\u00dfte Bev\u00f6lkerung?"},{"db_id":"college_1","query":"SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code","query_toks":["SELECT","sum","(","crs_credit",")",",","dept_code","FROM","course","GROUP","BY","dept_code"],"query_toks_no_value":["select","sum","(","crs_credit",")",",","dept_code","from","course","group","by","dept_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,10,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Kredite","bietet","die","Abteilung","an","?"],"question":"Wie viele Kredite bietet die Abteilung an?"},{"db_id":"csu_1","query":"SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996","query_toks":["SELECT","avg","(","campusfee",")","FROM","csu_fees","WHERE","YEAR","=","1996"],"query_toks_no_value":["select","avg","(","campusfee",")","from","csu_fees","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],1996.0,null]]},"question_toks":["Welches","ist","die","durchschnittliche","Geb\u00fchr","f\u00fcr","einen","CSU-Campus","im","Jahr","1996","?"],"question":"Welches ist die durchschnittliche Geb\u00fchr f\u00fcr einen CSU-Campus im Jahr 1996?"},{"db_id":"game_injury","query":"SELECT T1.id ,  T1.score ,  T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2","query_toks":["SELECT","T1.id",",","T1.score",",","T1.date","FROM","game","AS","T1","JOIN","injury_accident","AS","T2","ON","T2.game_id","=","T1.id","GROUP","BY","T1.id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","id",",","t1",".","score",",","t1",".","date","from","game","as","t1","join","injury_accident","as","t2","on","t2",".","game_id","=","t1",".","id","group","by","t1",".","id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,8,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,8,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,13,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","IDs",",","Spielst\u00e4nde","und","Daten","der","Spiele",",","die","mindestens","zwei","Verletzungsunf\u00e4lle","verursachten","?"],"question":"Was sind die IDs, Spielst\u00e4nde und Daten der Spiele, die mindestens zwei Verletzungsunf\u00e4lle verursachten?"},{"db_id":"loan_1","query":"SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state","query_toks":["SELECT","sum","(","acc_bal",")",",","state","FROM","customer","WHERE","credit_score",">","100","GROUP","BY","state"],"query_toks_no_value":["select","sum","(","acc_bal",")",",","state","from","customer","where","credit_score",">","value","group","by","state"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,13,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,9,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],100.0,null]]},"question_toks":["Wie","ist","der","gesamte","Kontostand","bei","Kunden","mit","einer","Kreditw\u00fcrdigkeit","von","\u00fcber","100","f\u00fcr","die","unterschiedlichen","Staaten","?"],"question":"Wie ist der gesamte Kontostand bei Kunden mit einer Kreditw\u00fcrdigkeit von \u00fcber 100 f\u00fcr die unterschiedlichen Staaten?"},{"db_id":"loan_1","query":"SELECT avg(no_of_customers) FROM bank","query_toks":["SELECT","avg","(","no_of_customers",")","FROM","bank"],"query_toks_no_value":["select","avg","(","no_of_customers",")","from","bank"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","durchschnittliche","Anzahl","der","Bankkunden","?"],"question":"Was ist die durchschnittliche Anzahl der Bankkunden?"},{"db_id":"college_1","query":"SELECT school_code FROM department WHERE dept_name  =  \"Accounting\"","query_toks":["SELECT","school_code","FROM","department","WHERE","dept_name","=","``","Accounting","''"],"query_toks_no_value":["select","school_code","from","department","where","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Accounting\"",null]]},"question_toks":["Wie","lautet","der","Code","der","Schule",",","zu","der","die","Rechnungswesenabteilung","geh\u00f6rt","?"],"question":"Wie lautet der Code der Schule, zu der die Rechnungswesenabteilung geh\u00f6rt?"},{"db_id":"music_1","query":"SELECT song_name FROM song WHERE genre_is  =  \"modern\" OR languages  =  \"english\"","query_toks":["SELECT","song_name","FROM","song","WHERE","genre_is","=","``","modern","''","OR","languages","=","``","english","''"],"query_toks_no_value":["select","song_name","from","song","where","genre_is","=","value","or","languages","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"modern\"",null],"or",[false,2,[0,[0,19,false],null],"\"english\"",null]]},"question_toks":["Wie","hei\u00dfen","die","Namen","der","Lieder",",","die","modern","sind","oder","auf","Englisch","gesungen","werden","?"],"question":"Wie hei\u00dfen die Namen der Lieder, die modern sind oder auf Englisch gesungen werden?"},{"db_id":"sakila_1","query":"SELECT count(DISTINCT last_name) FROM actor","query_toks":["SELECT","count","(","DISTINCT","last_name",")","FROM","actor"],"query_toks_no_value":["select","count","(","distinct","last_name",")","from","actor"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,3,true],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hle","die","Anzahl","der","verschiedenen","Nachnamen",",","die","Schauspieler","haben","."],"question":"Z\u00e4hle die Anzahl der verschiedenen Nachnamen, die Schauspieler haben."},{"db_id":"voter_2","query":"SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE","query_toks":["SELECT","DISTINCT","T1.LName","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","T2.CLASS_President_VOTE"],"query_toks_no_value":["select","distinct","t1",".","lname","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","t2",".","class_president_vote"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,16,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","einzelnen","Nachnamen","der","Studenten",",","die","Stimmen","f\u00fcr","die","Klassenpr\u00e4sidentschaft","haben","."],"question":"Finde die einzelnen Nachnamen der Studenten, die Stimmen f\u00fcr die Klassenpr\u00e4sidentschaft haben."},{"db_id":"college_1","query":"SELECT count(*) ,  dept_code FROM professor WHERE prof_high_degree  =  'Ph.D.' GROUP BY dept_code","query_toks":["SELECT","count","(","*",")",",","dept_code","FROM","professor","WHERE","prof_high_degree","=","'Ph.D",".","'","GROUP","BY","dept_code"],"query_toks_no_value":["select","count","(","*",")",",","dept_code","from","professor","where","prof_high_degree","=","value","group","by","dept_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,28,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,28,false],null]]]],"union":null,"where":[[false,2,[0,[0,31,false],null],"\"Ph.D.\"",null]]},"question_toks":["Finde","die","Anzahl","der","Professoren","mit","einem","Doktortitel","in","jeder","Abteilung","."],"question":"Finde die Anzahl der Professoren mit einem Doktortitel in jeder Abteilung."},{"db_id":"formula_1","query":"SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000","query_toks":["SELECT","DISTINCT","T1.driverid",",","T1.nationality","FROM","drivers","AS","T1","JOIN","laptimes","AS","T2","ON","T1.driverid","=","T2.driverid","WHERE","T2.milliseconds",">","100000"],"query_toks_no_value":["select","distinct","t1",".","driverid",",","t1",".","nationality","from","drivers","as","t1","join","laptimes","as","t2","on","t1",".","driverid","=","t2",".","driverid","where","t2",".","milliseconds",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,90,false],null]],"table_units":[["table_unit",2],["table_unit",12]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,18,false],null]],[0,[0,[0,25,false],null]]]],"union":null,"where":[[false,3,[0,[0,94,false],null],100000.0,null]]},"question_toks":["Finde","alle","einzelnen","IDs","und","Nationalit\u00e4ten","von","Fahrern",",","die","eine","Stoppzeit","von","\u00fcber","100000","Millisekunden","haben","."],"question":"Finde alle einzelnen IDs und Nationalit\u00e4ten von Fahrern, die eine Stoppzeit von \u00fcber 100000 Millisekunden haben."},{"db_id":"swimming","query":"SELECT t1.name ,  t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' GROUP BY t2.swimmer_id HAVING count(*)  >  1","query_toks":["SELECT","t1.name",",","t1.nationality","FROM","swimmer","AS","t1","JOIN","record","AS","t2","ON","t1.id","=","t2.swimmer_id","WHERE","RESULT","=","'Win","'","GROUP","BY","t2.swimmer_id","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","name",",","t1",".","nationality","from","swimmer","as","t1","join","record","as","t2","on","t1",".","id","=","t2",".","swimmer_id","where","result","=","value","group","by","t2",".","swimmer_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[[0,24,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],"\"Win\"",null]]},"question_toks":["Finde","den","Namen","und","die","Nationalit\u00e4t","des","Schwimmers",",","der","mehr","als","einmal","gewonnen","hat","(","d.h.","ein","Ergebnis","von","``","Sieg","''","hat",")","."],"question":"Finde den Namen und die Nationalit\u00e4t des Schwimmers, der mehr als einmal gewonnen hat (d.h. ein Ergebnis von \"Sieg\" hat)."},{"db_id":"loan_1","query":"SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)","query_toks":["SELECT","cust_name","FROM","customer","WHERE","credit_score","<","(","SELECT","avg","(","credit_score",")","FROM","customer",")"],"query_toks_no_value":["select","cust_name","from","customer","where","credit_score","<","(","select","avg","(","credit_score",")","from","customer",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,4,[0,[0,11,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,11,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finde","den","Namen","von","Kunden",",","deren","Kreditw\u00fcrdigkeit","unter","der","durchschnittlichen","Kreditw\u00fcrdigkeit","aller","Kunden","liegt","."],"question":"Finde den Namen von Kunden, deren Kreditw\u00fcrdigkeit unter der durchschnittlichen Kreditw\u00fcrdigkeit aller Kunden liegt."},{"db_id":"coffee_shop","query":"SELECT count(*) ,  address FROM member GROUP BY address","query_toks":["SELECT","count","(","*",")",",","address","FROM","member","GROUP","BY","address"],"query_toks_no_value":["select","count","(","*",")",",","address","from","member","group","by","address"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Anzahl","der","Mitglieder",",","die","in","jeder","Adresse","leben","."],"question":"Finde die Anzahl der Mitglieder, die in jeder Adresse leben."},{"db_id":"store_product","query":"SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3","query_toks":["SELECT","sum","(","city_population",")","FROM","district","ORDER","BY","city_area","DESC","LIMIT","3"],"query_toks_no_value":["select","sum","(","city_population",")","from","district","order","by","city_area","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[0,18,false],null]]],"select":[false,[[4,[0,[0,17,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","Gesamtzahl","der","Einwohner","f\u00fcr","die","Bezirke","mit","den","drei","gr\u00f6\u00dften","Gebieten","?"],"question":"Was ist Gesamtzahl der Einwohner f\u00fcr die Bezirke mit den drei gr\u00f6\u00dften Gebieten?"},{"db_id":"activity_1","query":"SELECT count(*) FROM Faculty WHERE Sex  =  'F' AND Rank  =  \"Professor\"","query_toks":["SELECT","count","(","*",")","FROM","Faculty","WHERE","Sex","=","'F","'","AND","Rank","=","``","Professor","''"],"query_toks_no_value":["select","count","(","*",")","from","faculty","where","sex","=","value","and","rank","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"F\"",null],"and",[false,2,[0,[0,18,false],null],"\"Professor\"",null]]},"question_toks":["Z\u00e4hle","die","Anzahl","der","Professorinnen",",","die","wir","haben","."],"question":"Z\u00e4hle die Anzahl der Professorinnen, die wir haben."},{"db_id":"csu_1","query":"SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"","query_toks":["SELECT","campus","FROM","campuses","WHERE","county","=","``","Los","Angeles","''"],"query_toks_no_value":["select","campus","from","campuses","where","county","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Los Angeles\"",null]]},"question_toks":["Welche","Campusse","gibt","es","im","Bezirk","Los","Angeles","?"],"question":"Welche Campusse gibt es im Bezirk Los Angeles?"},{"db_id":"formula_1","query":"SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.driverid",",","T1.surname","FROM","drivers","AS","T1","JOIN","results","AS","T2","ON","T1.driverid","=","T2.driverid","JOIN","races","AS","T3","ON","T2.raceid","=","T3.raceid","WHERE","T3.year",">","2010","GROUP","BY","T1.driverid","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","driverid",",","t1",".","surname","from","drivers","as","t1","join","results","as","t2","on","t1",".","driverid","=","t2",".","driverid","join","races","as","t3","on","t2",".","raceid","=","t3",".","raceid","where","t3",".","year",">","value","group","by","t1",".","driverid","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",2],["table_unit",7]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],2010.0,null]]},"question_toks":["Welches","sind","die","ID","und","der","Nachname","des","Fahrers",",","der","an","den","meisten","Rennen","nach","2010","teilnahm","?"],"question":"Welches sind die ID und der Nachname des Fahrers, der an den meisten Rennen nach 2010 teilnahm?"},{"db_id":"manufacturer","query":"SELECT open_year ,  name FROM manufacturer ORDER BY num_of_shops DESC LIMIT 1","query_toks":["SELECT","open_year",",","name","FROM","manufacturer","ORDER","BY","num_of_shops","DESC","LIMIT","1"],"query_toks_no_value":["select","open_year",",","name","from","manufacturer","order","by","num_of_shops","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Hersteller","hat","die","meisten","Gesch\u00e4fte","?","Gib","den","Namen","und","das","Jahr","der","Er\u00f6ffnung","an","."],"question":"Welcher Hersteller hat die meisten Gesch\u00e4fte? Gib den Namen und das Jahr der Er\u00f6ffnung an."},{"db_id":"tracking_orders","query":"SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\"","query_toks":["SELECT","DISTINCT","T2.product_id","FROM","orders","AS","T1","JOIN","order_items","AS","T2","ON","T1.order_id","=","T2.order_id","WHERE","T1.date_order_placed",">","=","``","1975-01-01","''","AND","T1.date_order_placed","<","=","``","1976-01-01","''"],"query_toks_no_value":["select","distinct","t2",".","product_id","from","orders","as","t1","join","order_items","as","t2","on","t1",".","order_id","=","t2",".","order_id","where","t1",".","date_order_placed",">","=","value","and","t1",".","date_order_placed","<","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,17,false],null]],"table_units":[["table_unit",2],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,5,[0,[0,10,false],null],"\"1975-01-01\"",null],"and",[false,6,[0,[0,10,false],null],"\"1976-01-01\"",null]]},"question_toks":["Welches","sind","die","unterschiedlichen","Kennungen","der","Produkte",",","die","zwischen","dem","01.01.1975","und","dem","01.01.1976","bestellt","wurden","?"],"question":"Welches sind die unterschiedlichen Kennungen der Produkte, die zwischen dem 01.01.1975 und dem 01.01.1976 bestellt wurden?"},{"db_id":"csu_1","query":"SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND T2.year  =  1996","query_toks":["SELECT","campusfee","FROM","campuses","AS","T1","JOIN","csu_fees","AS","T2","ON","T1.id","=","t2.campus","WHERE","t1.campus","=","``","San","Francisco","State","University","''","AND","T2.year","=","1996"],"query_toks_no_value":["select","campusfee","from","campuses","as","t1","join","csu_fees","as","t2","on","t1",".","id","=","t2",".","campus","where","t1",".","campus","=","value","and","t2",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"San Francisco State University\"",null],"and",[false,2,[0,[0,7,false],null],1996.0,null]]},"question_toks":["Was","ist","die","Campusgeb\u00fchr","an","der","San","Francisco","State","University","im","Jahre","1996","?"],"question":"Was ist die Campusgeb\u00fchr an der San Francisco State University im Jahre 1996?"},{"db_id":"sakila_1","query":"SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1","query_toks":["SELECT","T1.first_name",",","T1.last_name",",","T1.customer_id","FROM","customer","AS","T1","JOIN","payment","AS","T2","ON","T1.customer_id","=","T2.customer_id","GROUP","BY","T1.customer_id","ORDER","BY","sum","(","amount",")","ASC","LIMIT","1"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","last_name",",","t1",".","customer_id","from","customer","as","t1","join","payment","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","group","by","t1",".","customer_id","order","by","sum","(","amount",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,23,false],null],[0,62,false],null]],"table_units":[["table_unit",5],["table_unit",12]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[4,65,false],null]]],"select":[false,[[0,[0,[0,25,false],null]],[0,[0,[0,26,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Kunde",",","der","mindestens","eine","Zahlung","geleistet","hat",",","hat","das","wenigste","Geld","ausgegeben","?","Liste","seinen","oder","ihren","Vornamen",",","Nachnamen","und","die","ID","auf","."],"question":"Welcher Kunde, der mindestens eine Zahlung geleistet hat, hat das wenigste Geld ausgegeben? Liste seinen oder ihren Vornamen, Nachnamen und die ID auf."},{"db_id":"loan_1","query":"SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id","query_toks":["SELECT","DISTINCT","T1.cust_name",",","T1.credit_score","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id"],"query_toks_no_value":["select","distinct","t1",".","cust_name",",","t1",".","credit_score","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,7,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Suche","den","Namen","und","die","Kreditw\u00fcrdigkeit","der","Kunden",",","die","Kredite","haben","."],"question":"Suche den Namen und die Kreditw\u00fcrdigkeit der Kunden, die Kredite haben."},{"db_id":"cinema","query":"SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1","query_toks":["SELECT","LOCATION","FROM","cinema","WHERE","capacity",">","300","GROUP","BY","LOCATION","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","location","from","cinema","where","capacity",">","value","group","by","location","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,12,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],300.0,null]]},"question_toks":["An","welchen","Orten","gibt","es","mehr","als","ein","Filmkino","mit","einer","Kapazit\u00e4t","von","\u00fcber","300","?"],"question":"An welchen Orten gibt es mehr als ein Filmkino mit einer Kapazit\u00e4t von \u00fcber 300?"},{"db_id":"formula_1","query":"SELECT name FROM circuits WHERE country = \"UK\" OR country = \"Malaysia\"","query_toks":["SELECT","name","FROM","circuits","WHERE","country","=","``","UK","''","OR","country","=","``","Malaysia","''"],"query_toks_no_value":["select","name","from","circuits","where","country","=","value","or","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"UK\"",null],"or",[false,2,[0,[0,5,false],null],"\"Malaysia\"",null]]},"question_toks":["Wie","hei\u00dfen","alle","Rennstrecken","in","Gro\u00dfbritannien","oder","in","Malaysia","?"],"question":"Wie hei\u00dfen alle Rennstrecken in Gro\u00dfbritannien oder in Malaysia?"},{"db_id":"cinema","query":"SELECT LOCATION FROM cinema WHERE openning_year  >=  2010 GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","LOCATION","FROM","cinema","WHERE","openning_year",">","=","2010","GROUP","BY","LOCATION","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","location","from","cinema","where","openning_year",">","=","value","group","by","location","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,5,[0,[0,10,false],null],2010.0,null]]},"question_toks":["An","welchem","Ort","wurden","in","2010","oder","danach","die","meisten","Kinos","er\u00f6ffnet","?"],"question":"An welchem Ort wurden in 2010 oder danach die meisten Kinos er\u00f6ffnet?"},{"db_id":"csu_1","query":"SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  \"Long Beach State University\"","query_toks":["SELECT","faculty","FROM","faculty","AS","T1","JOIN","campuses","AS","T2","ON","T1.campus","=","T2.id","WHERE","T1.year","=","2002","AND","T2.campus","=","``","Long","Beach","State","University","''"],"query_toks_no_value":["select","faculty","from","faculty","as","t1","join","campuses","as","t2","on","t1",".","campus","=","t2",".","id","where","t1",".","year","=","value","and","t2",".","campus","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,21,false],null],[0,1,false],null]],"table_units":[["table_unit",5],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],2002.0,null],"and",[false,2,[0,[0,2,false],null],"\"Long Beach State University\"",null]]},"question_toks":["Was","ist","die","Anzahl","der","Fakult\u00e4ten","an","der","Long","Beach","State","University","in","2002","?"],"question":"Was ist die Anzahl der Fakult\u00e4ten an der Long Beach State University in 2002?"},{"db_id":"tracking_orders","query":"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.customer_name","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","GROUP","BY","T1.customer_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","customer_name","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","group","by","t1",".","customer_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","des","Kunden",",","der","die","meisten","Bestellungen","get\u00e4tigt","hat","."],"question":"Finde den Namen des Kunden, der die meisten Bestellungen get\u00e4tigt hat."},{"db_id":"voter_2","query":"SELECT count(*) FROM VOTING_RECORD","query_toks":["SELECT","count","(","*",")","FROM","VOTING_RECORD"],"query_toks_no_value":["select","count","(","*",")","from","voting_record"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Gesamtzahl","der","registrierten","Wahlen","."],"question":"Finde die Gesamtzahl der registrierten Wahlen. "},{"db_id":"formula_1","query":"SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year","query_toks":["SELECT","max","(","T2.fastestlapspeed",")",",","T1.name",",","T1.year","FROM","races","AS","T1","JOIN","results","AS","T2","ON","T1.raceid","=","T2.raceid","WHERE","T1.year",">","2014","GROUP","BY","T1.name","ORDER","BY","T1.year"],"query_toks_no_value":["select","max","(","t2",".","fastestlapspeed",")",",","t1",".","name",",","t1",".","year","from","races","as","t1","join","results","as","t2","on","t1",".","raceid","=","t2",".","raceid","where","t1",".","year",">","value","group","by","t1",".","name","order","by","t1",".","year"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,44,false],null]],"table_units":[["table_unit",1],["table_unit",7]]},"groupBy":[[0,14,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,11,false],null]]],"select":[false,[[1,[0,[0,59,false],null]],[0,[0,[0,14,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],2014.0,null]]},"question_toks":["Was","sind","die","k\u00fcrzesten","Stoppzeiten","in","Rennen",",","die","nach","2004","stattfanden",",","gruppiert","nach","Name","des","Rennens","und","sortiert","nach","Jahr","?"],"question":"Was sind die k\u00fcrzesten Stoppzeiten in Rennen, die nach 2004 stattfanden, gruppiert nach Name des Rennens und sortiert nach Jahr?"},{"db_id":"loan_1","query":"SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id","query_toks":["SELECT","DISTINCT","T1.bname","FROM","bank","AS","T1","JOIN","loan","AS","T2","ON","T1.branch_id","=","T2.branch_id"],"query_toks_no_value":["select","distinct","t1",".","bname","from","bank","as","t1","join","loan","as","t2","on","t1",".","branch_id","=","t2",".","branch_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","von","Bankzweigstellen",",","die","Kredite","vergaben","."],"question":"Finde den Namen von Bankzweigstellen, die Kredite vergaben."},{"db_id":"college_1","query":"SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1","query_toks":["SELECT","emp_fname",",","emp_lname","FROM","employee","ORDER","BY","emp_dob","LIMIT","1"],"query_toks_no_value":["select","emp_fname",",","emp_lname","from","employee","order","by","emp_dob","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,23,false],null]]],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,18,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","der","Vorname","und","Nachname","des","Angestellten","mit","dem","fr\u00fchesten","Geburtsdatum","?"],"question":"Was sind der Vorname und Nachname des Angestellten mit dem fr\u00fchesten Geburtsdatum?"},{"db_id":"csu_1","query":"SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"","query_toks":["SELECT","campus","FROM","campuses","WHERE","county","=","``","Los","Angeles","''"],"query_toks_no_value":["select","campus","from","campuses","where","county","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Los Angeles\"",null]]},"question_toks":["Liste","die","Campusse","im","County","Los","Angeles","auf","."],"question":"Liste die Campusse im County Los Angeles auf."},{"db_id":"sakila_1","query":"SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","store_id","FROM","customer","GROUP","BY","store_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","store_id","from","customer","group","by","store_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,24,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[]},"question_toks":["Gibt","die","ID","des","Gesch\u00e4ftes","mit","den","meisten","Kunden","wieder","."],"question":"Gibt die ID des Gesch\u00e4ftes mit den meisten Kunden wieder."},{"db_id":"music_1","query":"SELECT f_id FROM files WHERE formats  =  \"mp4\" UNION SELECT f_id FROM song WHERE resolution  >  720","query_toks":["SELECT","f_id","FROM","files","WHERE","formats","=","``","mp4","''","UNION","SELECT","f_id","FROM","song","WHERE","resolution",">","720"],"query_toks_no_value":["select","f_id","from","files","where","formats","=","value","union","select","f_id","from","song","where","resolution",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,3,[0,[0,21,false],null],720.0,null]]},"where":[[false,2,[0,[0,12,false],null],"\"mp4\"",null]]},"question_toks":["Welches","sind","die","ID-Nummern","der","Lieder",",","die","entweder","im","MP4-Format","verf\u00fcgbar","sind","oder","eine","Aufl\u00f6sung","von","\u00fcber","720","haben","?"],"question":"Welches sind die ID-Nummern der Lieder, die entweder im MP4-Format verf\u00fcgbar sind oder eine Aufl\u00f6sung von \u00fcber 720 haben?"},{"db_id":"mountain_photos","query":"SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)","query_toks":["SELECT","T1.name",",","count","(","*",")","FROM","camera_lens","AS","T1","JOIN","photos","AS","T2","ON","T1.id","=","T2.camera_lens_id","GROUP","BY","T1.id","ORDER","BY","count","(","*",")"],"query_toks_no_value":["select","t1",".","name",",","count","(","*",")","from","camera_lens","as","t1","join","photos","as","t2","on","t1",".","id","=","t2",".","camera_lens_id","group","by","t1",".","id","order","by","count","(","*",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,13,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","der","Name","jedes","Kameraobjektivs","und","die","Anzahl","der","Fotos",",","die","damit","gemacht","wurden","?","Sortiere","das","Ergebnis","nach","der","Anzahl","der","Fotos","."],"question":"Was ist der Name jedes Kameraobjektivs und die Anzahl der Fotos, die damit gemacht wurden? Sortiere das Ergebnis nach der Anzahl der Fotos."},{"db_id":"college_1","query":"SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211'","query_toks":["SELECT","count","(","*",")","FROM","CLASS","AS","T1","JOIN","enroll","AS","T2","ON","T1.class_code","=","T2.class_code","WHERE","T1.crs_code","=","'ACCT-211","'"],"query_toks_no_value":["select","count","(","*",")","from","class","as","t1","join","enroll","as","t2","on","t1",".","class_code","=","t2",".","class_code","where","t1",".","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"ACCT-211\"",null]]},"question_toks":["Wie","viele","Studenten","schrieben","sich","in","den","Kurs","ACCT-211","ein","?"],"question":"Wie viele Studenten schrieben sich in den Kurs ACCT-211 ein?"},{"db_id":"sakila_1","query":"SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1","query_toks":["SELECT","payment_date","FROM","payment","ORDER","BY","payment_date","ASC","LIMIT","1"],"query_toks_no_value":["select","payment_date","from","payment","order","by","payment_date","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",12]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,66,false],null]]],"select":[false,[[0,[0,[0,66,false],null]]]],"union":null,"where":[]},"question_toks":["Wann","fand","die","erste","Zahlung","statt","?"],"question":"Wann fand die erste Zahlung statt?"},{"db_id":"voter_2","query":"SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\"","query_toks":["SELECT","Advisor","FROM","STUDENT","WHERE","city_code","=","``","BAL","''"],"query_toks_no_value":["select","advisor","from","student","where","city_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"BAL\"",null]]},"question_toks":["Wer","sind","die","Betreuer","der","Studenten",",","die","in","einer","Stadt","mit","dem","Stadt-Code","``","BAL","''","wohnen","?"],"question":"Wer sind die Betreuer der Studenten, die in einer Stadt mit dem Stadt-Code \"BAL\" wohnen?"},{"db_id":"sakila_1","query":"SELECT title FROM film WHERE rating  =  'R'","query_toks":["SELECT","title","FROM","film","WHERE","rating","=","'R","'"],"query_toks_no_value":["select","title","from","film","where","rating","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]]]],"union":null,"where":[[false,2,[0,[0,42,false],null],"\"R\"",null]]},"question_toks":["Welche","Filme","sind","alles","mit","R","eingestuft","?","Liste","alle","Titel","auf","."],"question":"Welche Filme sind alles mit R eingestuft? Liste alle Titel auf."},{"db_id":"csu_1","query":"SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1","query_toks":["SELECT","YEAR","FROM","degrees","GROUP","BY","YEAR","ORDER","BY","sum","(","degrees",")","DESC","LIMIT","1"],"query_toks_no_value":["select","year","from","degrees","group","by","year","order","by","sum","(","degrees",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,11,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","Jahr","hat","die","meisten","vergebenen","Abschl\u00fcsse","?"],"question":"Welches Jahr hat die meisten vergebenen Abschl\u00fcsse? "},{"db_id":"coffee_shop","query":"SELECT shop_id ,  count(*) FROM happy_hour GROUP BY shop_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","shop_id",",","count","(","*",")","FROM","happy_hour","GROUP","BY","shop_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","shop_id",",","count","(","*",")","from","happy_hour","group","by","shop_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,14,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,14,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Laden","hat","am","h\u00e4ufigsten","eine","Happy","Hour","?","Liste","die","ID","und","Anzahl","der","Happy","Hours","auf","."],"question":"Welcher Laden hat am h\u00e4ufigsten eine Happy Hour? Liste die ID und Anzahl der Happy Hours auf."},{"db_id":"tracking_orders","query":"SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2","query_toks":["SELECT","T2.customer_name",",","count","(","*",")","FROM","orders","AS","T1","JOIN","customers","AS","T2","ON","T1.customer_id","=","T2.customer_id","GROUP","BY","T2.customer_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","customer_name",",","count","(","*",")","from","orders","as","t1","join","customers","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","group","by","t2",".","customer_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,1,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Find","f\u00fcr","jeden","Kunden",",","der","mindestens","zwei","Bestellungen","hat",",","den","Kundennamen","und","die","Anzahl","der","get\u00e4tigten","Bestellungen","."],"question":"Find f\u00fcr jeden Kunden, der mindestens zwei Bestellungen hat, den Kundennamen und die Anzahl der get\u00e4tigten Bestellungen."},{"db_id":"college_1","query":"SELECT school_code FROM department WHERE dept_name  =  \"Accounting\"","query_toks":["SELECT","school_code","FROM","department","WHERE","dept_name","=","``","Accounting","''"],"query_toks_no_value":["select","school_code","from","department","where","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Accounting\"",null]]},"question_toks":["Welches","ist","der","Schulcode","der","Rechnungsstelle","?"],"question":"Welches ist der Schulcode der Rechnungsstelle?"},{"db_id":"music_1","query":"SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\"","query_toks":["SELECT","artist_name","FROM","artist","WHERE","country","=","``","UK","''","INTERSECT","SELECT","T1.artist_name","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T2.languages","=","``","english","''"],"query_toks_no_value":["select","artist_name","from","artist","where","country","=","value","intersect","select","t1",".","artist_name","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t2",".","languages","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"UK\"",null]]},"question_toks":["Welches","sind","die","Namen","aller","S\u00e4nger",",","die","aus","dem","Vereinten","K\u00f6nigreich","sind","und","ein","Lied","auf","Englisch","ver\u00f6ffentlicht","haben","?"],"question":"Welches sind die Namen aller S\u00e4nger, die aus dem Vereinten K\u00f6nigreich sind und ein Lied auf Englisch ver\u00f6ffentlicht haben?"},{"db_id":"formula_1","query":"SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1","query_toks":["SELECT","DISTINCT","T1.forename","FROM","drivers","AS","T1","JOIN","driverstandings","AS","T2","ON","T1.driverid","=","T2.driverid","WHERE","T2.position","=","1","AND","T2.wins","=","1"],"query_toks_no_value":["select","distinct","t1",".","forename","from","drivers","as","t1","join","driverstandings","as","t2","on","t1",".","driverid","=","t2",".","driverid","where","t2",".","position","=","value","and","t2",".","wins","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,63,false],null]],"table_units":[["table_unit",2],["table_unit",8]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,65,false],null],1.0,null],"and",[false,2,[0,[0,67,false],null],1.0,null]]},"question_toks":["Finde","alle","Vornamen","einzelner","Fahrer",",","der","auf","Position","1","stand","und","gewann","."],"question":"Finde alle Vornamen einzelner Fahrer, der auf Position 1 stand und gewann."},{"db_id":"swimming","query":"SELECT name FROM stadium WHERE id NOT IN (SELECT stadium_id FROM event)","query_toks":["SELECT","name","FROM","stadium","WHERE","id","NOT","IN","(","SELECT","stadium_id","FROM","event",")"],"query_toks_no_value":["select","name","from","stadium","where","id","not","in","(","select","stadium_id","from","event",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[true,8,[0,[0,12,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finde","alle","Namen","von","Stadien",",","die","nie","ein","Ereignis","hatten","."],"question":"Finde alle Namen von Stadien, die nie ein Ereignis hatten."},{"db_id":"music_1","query":"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1","query_toks":["SELECT","T1.artist_name",",","T1.country","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T2.resolution",">","900","GROUP","BY","T2.artist_name","HAVING","count","(","*",")",">","=","1"],"query_toks_no_value":["select","t1",".","artist_name",",","t1",".","country","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t2",".","resolution",">","value","group","by","t2",".","artist_name","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[[0,14,false]],"having":[[false,5,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,3,[0,[0,21,false],null],900.0,null]]},"question_toks":["Welches","sind","der","Name","und","das","Herkunftsland","von","jedem","K\u00fcnstler",",","der","ein","Lied","mit","einer","Aufl\u00f6sung","h\u00f6her","als","900","ver\u00f6ffentlicht","hat","?"],"question":"Welches sind der Name und das Herkunftsland von jedem K\u00fcnstler, der ein Lied mit einer Aufl\u00f6sung h\u00f6her als 900 ver\u00f6ffentlicht hat?"},{"db_id":"loan_1","query":"SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1","query_toks":["SELECT","cust_name","FROM","customer","ORDER","BY","credit_score","LIMIT","1"],"query_toks_no_value":["select","cust_name","from","customer","order","by","credit_score","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","der","Name","des","Kunden","mit","der","schlechtesten","Kreditw\u00fcrdigkeit","?"],"question":"Was ist der Name des Kunden mit der schlechtesten Kreditw\u00fcrdigkeit?"},{"db_id":"manufacturer","query":"SELECT Market_Rate ,  name FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte)","query_toks":["SELECT","Market_Rate",",","name","FROM","furniture","WHERE","Furniture_ID","NOT","IN","(","SELECT","Furniture_ID","FROM","furniture_manufacte",")"],"query_toks_no_value":["select","market_rate",",","name","from","furniture","where","furniture_id","not","in","(","select","furniture_id","from","furniture_manufacte",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[[true,8,[0,[0,6,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finde","die","Marktanteile","und","Namen","der","M\u00f6belst\u00fccke",",","die","kein","Unternehmen","in","unseren","Akten","produziert","."],"question":"Finde die Marktanteile und Namen der M\u00f6belst\u00fccke, die kein Unternehmen in unseren Akten produziert."},{"db_id":"loan_1","query":"SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id","query_toks":["SELECT","DISTINCT","T1.cust_name",",","T1.credit_score","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id"],"query_toks_no_value":["select","distinct","t1",".","cust_name",",","t1",".","credit_score","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,7,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","einzelnen","Namen","und","Credit","Scores","der","Kunden",",","die","einen","Kredit","aufgenommen","haben","?"],"question":"Welches sind die einzelnen Namen und Credit Scores der Kunden, die einen Kredit aufgenommen haben?"},{"db_id":"tracking_orders","query":"SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\"","query_toks":["SELECT","order_id","FROM","shipments","WHERE","shipment_tracking_number","=","``","3452","''"],"query_toks_no_value":["select","order_id","from","shipments","where","shipment_tracking_number","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,21,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],"\"3452\"",null]]},"question_toks":["Finde","die","Nummer","der","Bestellung",",","deren","Sendeverfolgungsnummer","``","3452","''","ist","."],"question":"Finde die Nummer der Bestellung, deren Sendeverfolgungsnummer \"3452\" ist."},{"db_id":"college_1","query":"SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS'","query_toks":["SELECT","count","(","DISTINCT","dept_address",")","FROM","department","WHERE","school_code","=","'BUS","'"],"query_toks_no_value":["select","count","(","distinct","dept_address",")","from","department","where","school_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,15,true],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"BUS\"",null]]},"question_toks":["Welches","sind","die","verschiedenen","Standorte","der","Schule","mit","dem","Code","BUS","?"],"question":"Welches sind die verschiedenen Standorte der Schule mit dem Code BUS?"},{"db_id":"debate","query":"SELECT T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.Negative  =  T2.People_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2","query_toks":["SELECT","T2.Name","FROM","debate_people","AS","T1","JOIN","people","AS","T2","ON","T1.Negative","=","T2.People_ID","GROUP","BY","T2.Name","HAVING","COUNT","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","name","from","debate_people","as","t1","join","people","as","t2","on","t1",".","negative","=","t2",".","people_id","group","by","t2",".","name","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,3,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Namen","von","Personen","an",",","die","mindestens","zweimal","auf","der","ablehnenden","Seite","von","Debatten","gestanden","haben","."],"question":"Zeige die Namen von Personen an, die mindestens zweimal auf der ablehnenden Seite von Debatten gestanden haben."},{"db_id":"voter_2","query":"SELECT count(*) FROM STUDENT","query_toks":["SELECT","count","(","*",")","FROM","STUDENT"],"query_toks_no_value":["select","count","(","*",")","from","student"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Gesamtanzahl","an","Studierenden","."],"question":"Finde die Gesamtanzahl an Studierenden."},{"db_id":"coffee_shop","query":"SELECT MONTH FROM happy_hour GROUP BY MONTH ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","MONTH","FROM","happy_hour","GROUP","BY","MONTH","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","month","from","happy_hour","group","by","month","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Monat","hat","die","meisten","Happy","Hours","?"],"question":"Welcher Monat hat die meisten Happy Hours?"},{"db_id":"music_1","query":"SELECT count(*) ,  formats FROM files GROUP BY formats","query_toks":["SELECT","count","(","*",")",",","formats","FROM","files","GROUP","BY","formats"],"query_toks_no_value":["select","count","(","*",")",",","formats","from","files","group","by","formats"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Lieder","wurden","f\u00fcr","jedes","Format","ver\u00f6ffentlicht","?"],"question":"Wie viele Lieder wurden f\u00fcr jedes Format ver\u00f6ffentlicht?"},{"db_id":"activity_1","query":"SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student","query_toks":["SELECT","FacID","FROM","Faculty","EXCEPT","SELECT","advisor","FROM","Student"],"query_toks_no_value":["select","facid","from","faculty","except","select","advisor","from","student"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Kennungen","f\u00fcr","die","Fakult\u00e4tsmitglieder",",","die","keinen","Studenten","beraten","."],"question":"Zeige die Kennungen f\u00fcr die Fakult\u00e4tsmitglieder, die keinen Studenten beraten."},{"db_id":"sakila_1","query":"SELECT count(DISTINCT rating) FROM film","query_toks":["SELECT","count","(","DISTINCT","rating",")","FROM","film"],"query_toks_no_value":["select","count","(","distinct","rating",")","from","film"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,42,true],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hle","die","unterschiedlichen","Filmbewertungen","."],"question":"Z\u00e4hle die unterschiedlichen Filmbewertungen."},{"db_id":"activity_1","query":"SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Kayaking'","query_toks":["SELECT","T1.stuid","FROM","participates_in","AS","T1","JOIN","activity","AS","T2","ON","T2.actid","=","T2.actid","WHERE","T2.activity_name","=","'Canoeing","'","INTERSECT","SELECT","T1.stuid","FROM","participates_in","AS","T1","JOIN","activity","AS","T2","ON","T2.actid","=","T2.actid","WHERE","T2.activity_name","=","'Kayaking","'"],"query_toks_no_value":["select","t1",".","stuid","from","participates_in","as","t1","join","activity","as","t2","on","t2",".","actid","=","t2",".","actid","where","t2",".","activity_name","=","value","intersect","select","t1",".","stuid","from","participates_in","as","t1","join","activity","as","t2","on","t2",".","actid","=","t2",".","actid","where","t2",".","activity_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kayaking\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Canoeing\"",null]]},"question_toks":["Finde","die","Kennungen","der","Studierenden",",","die","am","Kanu-","und","Kajakfahren","teilnehmen","."],"question":"Finde die Kennungen der Studierenden, die am Kanu- und Kajakfahren teilnehmen."},{"db_id":"formula_1","query":"SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1","query_toks":["SELECT","name",",","date","FROM","races","ORDER","BY","date","DESC","LIMIT","1"],"query_toks_no_value":["select","name",",","date","from","races","order","by","date","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,15,false],null]]],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","der","Name","und","das","Datum","des","Rennens",",","das","als","Letztes","stattfand","?"],"question":"Was ist der Name und das Datum des Rennens, das als Letztes stattfand?"},{"db_id":"activity_1","query":"SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\"","query_toks":["SELECT","phone",",","room",",","building","FROM","Faculty","WHERE","Fname","=","``","Jerry","''","AND","Lname","=","``","Prince","''"],"query_toks_no_value":["select","phone",",","room",",","building","from","faculty","where","fname","=","value","and","lname","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,20,false],null]],[0,[0,[0,21,false],null]],[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"Jerry\"",null],"and",[false,2,[0,[0,16,false],null],"\"Prince\"",null]]},"question_toks":["Was","sind","die","Telefonnummer",",","das","Zimmer","und","das","Geb\u00e4ude","des","Fakult\u00e4tsmitglieds","namens","Jerry","Prince","?"],"question":"Was sind die Telefonnummer, das Zimmer und das Geb\u00e4ude des Fakult\u00e4tsmitglieds namens Jerry Prince?"},{"db_id":"loan_1","query":"SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking'","query_toks":["SELECT","cust_name","FROM","customer","WHERE","acc_type","=","'saving","'","INTERSECT","SELECT","cust_name","FROM","customer","WHERE","acc_type","=","'checking","'"],"query_toks_no_value":["select","cust_name","from","customer","where","acc_type","=","value","intersect","select","cust_name","from","customer","where","acc_type","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"checking\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"saving\"",null]]},"question_toks":["Finden","den","Namen","von","Kunden",",","die","zugleich","Spar-","und","Girokonten","haben","."],"question":"Finden den Namen von Kunden, die zugleich Spar- und Girokonten haben."},{"db_id":"formula_1","query":"SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\"","query_toks":["SELECT","avg","(","T2.fastestlapspeed",")","FROM","races","AS","T1","JOIN","results","AS","T2","ON","T1.raceid","=","T2.raceid","WHERE","T1.year","=","2008","AND","T1.name","=","``","Monaco","Grand","Prix","''"],"query_toks_no_value":["select","avg","(","t2",".","fastestlapspeed",")","from","races","as","t1","join","results","as","t2","on","t1",".","raceid","=","t2",".","raceid","where","t1",".","year","=","value","and","t1",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,44,false],null]],"table_units":[["table_unit",1],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,59,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],2008.0,null],"and",[false,2,[0,[0,14,false],null],"\"Monaco Grand Prix\"",null]]},"question_toks":["Was","ist","die","durchschnittlich","schnellste","Rundengeschwindigkeit","im","Rennen","mit","dem","Namen","'Gro\u00dfer","Preis","von","Monaco","'","im","Jahr","2008","?"],"question":"Was ist die durchschnittlich schnellste Rundengeschwindigkeit im Rennen mit dem Namen 'Gro\u00dfer Preis von Monaco' im Jahr 2008 ?"},{"db_id":"loan_1","query":"SELECT avg(credit_score) FROM customer WHERE cust_id NOT IN (SELECT cust_id FROM loan)","query_toks":["SELECT","avg","(","credit_score",")","FROM","customer","WHERE","cust_id","NOT","IN","(","SELECT","cust_id","FROM","loan",")"],"query_toks_no_value":["select","avg","(","credit_score",")","from","customer","where","cust_id","not","in","(","select","cust_id","from","loan",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,11,false],null]]]],"union":null,"where":[[true,8,[0,[0,6,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finde","die","durchschnittliche","Kreditw\u00fcrdigkeit","der","Kunden",",","die","keine","Kredite","haben","."],"question":"Finde die durchschnittliche Kreditw\u00fcrdigkeit der Kunden, die keine Kredite haben."},{"db_id":"music_1","query":"SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages","query_toks":["SELECT","max","(","T1.duration",")",",","max","(","T2.resolution",")",",","T2.languages","FROM","files","AS","T1","JOIN","song","AS","T2","ON","T1.f_id","=","T2.f_id","GROUP","BY","T2.languages","ORDER","BY","T2.languages"],"query_toks_no_value":["select","max","(","t1",".","duration",")",",","max","(","t2",".","resolution",")",",","t2",".","languages","from","files","as","t1","join","song","as","t2","on","t1",".","f_id","=","t2",".","f_id","group","by","t2",".","languages","order","by","t2",".","languages"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,16,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,19,false],null]]],"select":[false,[[1,[0,[0,11,false],null]],[1,[0,[0,21,false],null]],[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","maximale","Dauer","und","Aufl\u00f6sung","der","nach","Sprachen","gruppierten","und","geordneten","Lieder","?"],"question":"Was sind die maximale Dauer und Aufl\u00f6sung der nach Sprachen gruppierten und geordneten Lieder?"},{"db_id":"college_1","query":"SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA'","query_toks":["SELECT","count","(","*",")","FROM","professor","WHERE","prof_high_degree","=","'Ph.D",".","'","OR","prof_high_degree","=","'MA","'"],"query_toks_no_value":["select","count","(","*",")","from","professor","where","prof_high_degree","=","value","or","prof_high_degree","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,31,false],null],"\"Ph.D.\"",null],"or",[false,2,[0,[0,31,false],null],"\"MA\"",null]]},"question_toks":["Wie","viele","Professoren","haben","entweder","einen","Doktortitel","oder","einen","MA-Abschluss","?"],"question":"Wie viele Professoren haben entweder einen Doktortitel oder einen MA-Abschluss?"},{"db_id":"coffee_shop","query":"SELECT address ,  num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)","query_toks":["SELECT","address",",","num_of_staff","FROM","shop","WHERE","shop_id","NOT","IN","(","SELECT","shop_id","FROM","happy_hour",")"],"query_toks_no_value":["select","address",",","num_of_staff","from","shop","where","shop_id","not","in","(","select","shop_id","from","happy_hour",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finde","die","Adresse","und","Zahl","der","Besch\u00e4ftigten","von","L\u00e4den",",","die","keine","Happy","Hour","haben","."],"question":"Finde die Adresse und Zahl der Besch\u00e4ftigten von L\u00e4den, die keine Happy Hour haben."},{"db_id":"tracking_orders","query":"SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.customer_id","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","GROUP","BY","T1.customer_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","customer_id","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","group","by","t1",".","customer_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","Kundennummer","des","Kunden",",","der","die","meisten","Auftr\u00e4ge","hat","?"],"question":"Was ist die Kundennummer des Kunden, der die meisten Auftr\u00e4ge hat?"},{"db_id":"music_1","query":"SELECT count(*) ,  gender FROM artist GROUP BY gender","query_toks":["SELECT","count","(","*",")",",","gender","FROM","artist","GROUP","BY","gender"],"query_toks_no_value":["select","count","(","*",")",",","gender","from","artist","group","by","gender"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","K\u00fcnstler","sind","m\u00e4nnlich","und","wie","viele","sind","weiblich","?"],"question":"Wie viele K\u00fcnstler sind m\u00e4nnlich und wie viele sind weiblich?"},{"db_id":"formula_1","query":"SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year","query_toks":["SELECT","avg","(","T2.fastestlapspeed",")",",","T1.name",",","T1.year","FROM","races","AS","T1","JOIN","results","AS","T2","ON","T1.raceid","=","T2.raceid","WHERE","T1.year",">","2014","GROUP","BY","T1.name","ORDER","BY","T1.year"],"query_toks_no_value":["select","avg","(","t2",".","fastestlapspeed",")",",","t1",".","name",",","t1",".","year","from","races","as","t1","join","results","as","t2","on","t1",".","raceid","=","t2",".","raceid","where","t1",".","year",">","value","group","by","t1",".","name","order","by","t1",".","year"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,44,false],null]],"table_units":[["table_unit",1],["table_unit",7]]},"groupBy":[[0,14,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,11,false],null]]],"select":[false,[[5,[0,[0,59,false],null]],[0,[0,[0,14,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],2014.0,null]]},"question_toks":["Wie","hoch","ist","die","durchschnittliche","schnellste","Rundengeschwindigkeit","bei","Rennen",",","die","nach","2004","stattgefunden","haben",",","f\u00fcr","jedes","Rennen",",","geordnet","nach","Jahren","?"],"question":"Wie hoch ist die durchschnittliche schnellste Rundengeschwindigkeit bei Rennen, die nach 2004 stattgefunden haben, f\u00fcr jedes Rennen, geordnet nach Jahren?"},{"db_id":"activity_1","query":"SELECT lname FROM faculty WHERE rank  =  'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'","query_toks":["SELECT","lname","FROM","faculty","WHERE","rank","=","'Professor","'","EXCEPT","SELECT","DISTINCT","T1.lname","FROM","Faculty","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.facID","=","T2.facID","JOIN","activity","AS","T3","ON","T2.actid","=","T2.actid","WHERE","T3.activity_name","=","'Canoeing","'","OR","T3.activity_name","=","'Kayaking","'"],"query_toks_no_value":["select","lname","from","faculty","where","rank","=","value","except","select","distinct","t1",".","lname","from","faculty","as","t1","join","faculty_participates_in","as","t2","on","t1",".","facid","=","t2",".","facid","join","activity","as","t3","on","t2",".","actid","=","t2",".","actid","where","t3",".","activity_name","=","value","or","t3",".","activity_name","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,5,false],null]],"table_units":[["table_unit",4],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Canoeing\"",null],"or",[false,2,[0,[0,2,false],null],"\"Kayaking\"",null]]},"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"Professor\"",null]]},"question_toks":["Finde","die","Namen","von","Professoren",",","die","kein","Kanufahren","oder","Kajakfahren","machen","."],"question":"Finde die Namen von Professoren, die kein Kanufahren oder Kajakfahren machen."},{"db_id":"loan_1","query":"SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Auto'","query_toks":["SELECT","T1.cust_name","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id","WHERE","loan_type","=","'Mortgages","'","INTERSECT","SELECT","T1.cust_name","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id","WHERE","loan_type","=","'Auto","'"],"query_toks_no_value":["select","t1",".","cust_name","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id","where","loan_type","=","value","intersect","select","t1",".","cust_name","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id","where","loan_type","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"Auto\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"Mortgages\"",null]]},"question_toks":["Finde","die","Namen","von","Kunden",",","die","sowohl","Hypotheken-","als","auch","Autokredite","haben","."],"question":"Finde die Namen von Kunden, die sowohl Hypotheken- als auch Autokredite haben. "},{"db_id":"game_injury","query":"SELECT T1.season ,  T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.injury  =  'Foot injury' OR T3.injury  =  'Knee problem'","query_toks":["SELECT","T1.season",",","T2.name","FROM","game","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.id","JOIN","injury_accident","AS","T3","ON","T1.id","=","T3.game_id","WHERE","T3.injury","=","'Foot","injury","'","OR","T3.injury","=","'Knee","problem","'"],"query_toks_no_value":["select","t1",".","season",",","t2",".","name","from","game","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","id","join","injury_accident","as","t3","on","t1",".","id","=","t3",".","game_id","where","t3",".","injury","=","value","or","t3",".","injury","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"Foot injury\"",null],"or",[false,2,[0,[0,18,false],null],"\"Knee problem\"",null]]},"question_toks":["In","welcher","Saison","und","in","welchem","Stadion","hatte","ein","Spieler","eine","Verletzung","mit","``","Fu\u00dfverletzung","''","oder","``","Knieproblem","''","?"],"question":"In welcher Saison und in welchem Stadion hatte ein Spieler eine Verletzung mit \"Fu\u00dfverletzung\" oder \"Knieproblem\"?"},{"db_id":"tracking_orders","query":"SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\"","query_toks":["SELECT","DISTINCT","T1.customer_details","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T2.order_status","=","``","On","Road","''"],"query_toks_no_value":["select","distinct","t1",".","customer_details","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t2",".","order_status","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"On Road\"",null]]},"question_toks":["Welches","sind","die","einzelnen","Kunden",",","die","Bestellungen","mit","dem","Status","``","unterwegs","''","haben","?","Gib","mir","die","Kundendetails","."],"question":"Welches sind die einzelnen Kunden, die Bestellungen mit dem Status \"unterwegs\" haben? Gib mir die Kundendetails."},{"db_id":"csu_1","query":"SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND t2.year  =  2000","query_toks":["SELECT","degrees","FROM","campuses","AS","T1","JOIN","degrees","AS","T2","ON","t1.id","=","t2.campus","WHERE","t1.campus","=","``","San","Jose","State","University","''","AND","t2.year","=","2000"],"query_toks_no_value":["select","degrees","from","campuses","as","t1","join","degrees","as","t2","on","t1",".","id","=","t2",".","campus","where","t1",".","campus","=","value","and","t2",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"San Jose State University\"",null],"and",[false,2,[0,[0,9,false],null],2000.0,null]]},"question_toks":["Wie","viele","Abschl\u00fcsse","wurden","im","Jahr","2000","an","der","``","San","Jose","State","University","''","verliehen","?"],"question":"Wie viele Abschl\u00fcsse wurden im Jahr 2000 an der \"San Jose State University\" verliehen? "},{"db_id":"twitter_1","query":"SELECT text FROM tweets ORDER BY createdate","query_toks":["SELECT","text","FROM","tweets","ORDER","BY","createdate"],"query_toks_no_value":["select","text","from","tweets","order","by","createdate"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","den","Text","aller","Tweets","auf","in","der","Reihenfolge","des","Datums","."],"question":"Liste den Text aller Tweets auf in der Reihenfolge des Datums."},{"db_id":"formula_1","query":"SELECT name FROM races ORDER BY date DESC LIMIT 1","query_toks":["SELECT","name","FROM","races","ORDER","BY","date","DESC","LIMIT","1"],"query_toks_no_value":["select","name","from","races","order","by","date","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,15,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dft","das","Rennen",",","das","zuletzt","stattgefunden","hat","?"],"question":"Wie hei\u00dft das Rennen, das zuletzt stattgefunden hat?"},{"db_id":"swimming","query":"SELECT t1.name ,  t1.capacity FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id WHERE t2.name  =  'World Junior'","query_toks":["SELECT","t1.name",",","t1.capacity","FROM","stadium","AS","t1","JOIN","event","AS","t2","ON","t1.id","=","t2.stadium_id","WHERE","t2.name","=","'World","Junior","'"],"query_toks_no_value":["select","t1",".","name",",","t1",".","capacity","from","stadium","as","t1","join","event","as","t2","on","t1",".","id","=","t2",".","stadium_id","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,20,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]],[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"World Junior\"",null]]},"question_toks":["Finde","den","Namen","und","die","Kapazit\u00e4t","des","Stadions",",","in","dem","das","Ereignis","mit","dem","Namen","``","Welt-Junioren","''","stattfand","."],"question":"Finde den Namen und die Kapazit\u00e4t des Stadions, in dem das Ereignis mit dem Namen \"Welt-Junioren\" stattfand."},{"db_id":"entrepreneur","query":"SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested","query_toks":["SELECT","T2.Name",",","T1.Company","FROM","entrepreneur","AS","T1","JOIN","people","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T1.Money_Requested"],"query_toks_no_value":["select","t2",".","name",",","t1",".","company","from","entrepreneur","as","t1","join","people","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t1",".","money_requested"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,4,false],null]]],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","die","Namen","auf","von","Unternehmern","und","ihren","Unternehmen","in","absteigender","Folge","des","angefragten","Geldes","."],"question":"Liste die Namen auf von Unternehmern und ihren Unternehmen in absteigender Folge des angefragten Geldes."},{"db_id":"entrepreneur","query":"SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2","query_toks":["SELECT","Investor","FROM","entrepreneur","GROUP","BY","Investor","HAVING","COUNT","(","*",")",">","=","2"],"query_toks_no_value":["select","investor","from","entrepreneur","group","by","investor","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Gibe","die","Investoren","an",",","die","in","zwei","oder","mehr","Unternehmer","investiert","haben","."],"question":"Gibe die Investoren an, die in zwei oder mehr Unternehmer investiert haben."},{"db_id":"college_1","query":"SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code","query_toks":["SELECT","sum","(","stu_hrs",")",",","dept_code","FROM","student","GROUP","BY","dept_code"],"query_toks_no_value":["select","sum","(","stu_hrs",")",",","dept_code","from","student","group","by","dept_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[[0,41,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,37,false],null]],[0,[0,[0,41,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Gesamtzahl","an","gemachten","Stunden","f\u00fcr","alle","Studenten","in","jeder","Abteilung","."],"question":"Finde die Gesamtzahl an gemachten Stunden f\u00fcr alle Studenten in jeder Abteilung."},{"db_id":"voter_2","query":"SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD","query_toks":["SELECT","count","(","DISTINCT","President_Vote",")","FROM","VOTING_RECORD"],"query_toks_no_value":["select","count","(","distinct","president_vote",")","from","voting_record"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,12,true],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","eindeutige","Anzahl","der","Pr\u00e4sidenten-Stimmen","."],"question":"Finde die eindeutige Anzahl der Pr\u00e4sidenten-Stimmen."},{"db_id":"college_1","query":"SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num  =  T5.prof_num","query_toks":["SELECT","T1.emp_fname","FROM","employee","AS","T1","JOIN","professor","AS","T2","ON","T1.emp_num","=","T2.emp_num","JOIN","department","AS","T3","ON","T2.dept_code","=","T3.dept_code","WHERE","T3.dept_name","=","'History","'","EXCEPT","SELECT","T4.emp_fname","FROM","employee","AS","T4","JOIN","CLASS","AS","T5","ON","T4.emp_num","=","T5.prof_num"],"query_toks_no_value":["select","t1",".","emp_fname","from","employee","as","t1","join","professor","as","t2","on","t1",".","emp_num","=","t2",".","emp_num","join","department","as","t3","on","t2",".","dept_code","=","t3",".","dept_code","where","t3",".","dept_name","=","value","except","select","t4",".","emp_fname","from","employee","as","t4","join","class","as","t5","on","t4",".","emp_num","=","t5",".","prof_num"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"from":{"conds":[[false,2,[0,[0,17,false],null],[0,27,false],null]],"table_units":[["table_unit",3],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"History\"",null]]},"question_toks":["Was","ist","der","Name","der","Professoren","der","Geschichtsabteilung",",","die","keinen","Kurs","unterrichten","?"],"question":"Was ist der Name der Professoren der Geschichtsabteilung, die keinen Kurs unterrichten?"},{"db_id":"game_injury","query":"SELECT name ,  average_attendance ,  total_attendance FROM stadium EXCEPT SELECT T2.name ,  T2.average_attendance ,  T2.total_attendance FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id","query_toks":["SELECT","name",",","average_attendance",",","total_attendance","FROM","stadium","EXCEPT","SELECT","T2.name",",","T2.average_attendance",",","T2.total_attendance","FROM","game","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.id","JOIN","injury_accident","AS","T3","ON","T1.id","=","T3.game_id"],"query_toks_no_value":["select","name",",","average_attendance",",","total_attendance","from","stadium","except","select","t2",".","name",",","t2",".","average_attendance",",","t2",".","total_attendance","from","game","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","id","join","injury_accident","as","t3","on","t1",".","id","=","t3",".","game_id"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","f\u00fcr","Stadien",",","in","denen","sich","keine","Unf\u00e4lle","ereignet","haben",",","den","Namen",",","die","durchschnittliche","Besucherzahl","und","die","Gesamtbesucherzahl","an","."],"question":"Zeige f\u00fcr Stadien, in denen sich keine Unf\u00e4lle ereignet haben, den Namen, die durchschnittliche Besucherzahl und die Gesamtbesucherzahl an."},{"db_id":"voter_2","query":"SELECT Fname FROM STUDENT WHERE Age  >  22","query_toks":["SELECT","Fname","FROM","STUDENT","WHERE","Age",">","22"],"query_toks_no_value":["select","fname","from","student","where","age",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],22.0,null]]},"question_toks":["Welches","sind","die","Vornamen","aller","Studierenden","\u00e4lter","als","22","?"],"question":"Welches sind die Vornamen aller Studierenden \u00e4lter als 22?"},{"db_id":"tracking_orders","query":"SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\"","query_toks":["SELECT","T1.customer_id","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T2.order_status","=","``","On","Road","''","INTERSECT","SELECT","T1.customer_id","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T2.order_status","=","``","Shipped","''"],"query_toks_no_value":["select","t1",".","customer_id","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t2",".","order_status","=","value","intersect","select","t1",".","customer_id","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t2",".","order_status","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Shipped\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"On Road\"",null]]},"question_toks":["Finde","die","Nummern","aller","Kunden",",","die","zugleich","den","Bestellstatus","``","unterwegs","''","und","``","versendet","''","haben","."],"question":"Finde die Nummern aller Kunden, die zugleich den Bestellstatus \"unterwegs\" und \"versendet\" haben."},{"db_id":"loan_1","query":"SELECT city ,  state FROM bank WHERE bname  =  'morningside'","query_toks":["SELECT","city",",","state","FROM","bank","WHERE","bname","=","'morningside","'"],"query_toks_no_value":["select","city",",","state","from","bank","where","bname","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"morningside\"",null]]},"question_toks":["Suche","die","Stadt","und","den","Staat","der","Bankzweigstelle","namens","Morningside","."],"question":"Suche die Stadt und den Staat der Bankzweigstelle namens Morningside."},{"db_id":"college_1","query":"SELECT max(stu_gpa) ,  avg(stu_gpa) ,  min(stu_gpa) ,  dept_code FROM student GROUP BY dept_code","query_toks":["SELECT","max","(","stu_gpa",")",",","avg","(","stu_gpa",")",",","min","(","stu_gpa",")",",","dept_code","FROM","student","GROUP","BY","dept_code"],"query_toks_no_value":["select","max","(","stu_gpa",")",",","avg","(","stu_gpa",")",",","min","(","stu_gpa",")",",","dept_code","from","student","group","by","dept_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[[0,41,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,39,false],null]],[5,[0,[0,39,false],null]],[2,[0,[0,39,false],null]],[0,[0,[0,41,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","der","h\u00f6chste",",","niedrigste","und","durchschnittliche","studentische","Notendurchschnitt","f\u00fcr","jede","Abteilung","?"],"question":"Welches ist der h\u00f6chste, niedrigste und durchschnittliche studentische Notendurchschnitt f\u00fcr jede Abteilung?"},{"db_id":"sakila_1","query":"SELECT count(DISTINCT language_id) FROM film","query_toks":["SELECT","count","(","DISTINCT","language_id",")","FROM","film"],"query_toks_no_value":["select","count","(","distinct","language_id",")","from","film"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,36,true],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hle","die","unterschiedlichen","Sprachen","in","diesen","Filmen","."],"question":"Z\u00e4hle die unterschiedlichen Sprachen in diesen Filmen."},{"db_id":"activity_1","query":"SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  \"Michael\" AND T1.lname  =  \"Goodrich\"","query_toks":["SELECT","T2.fname",",","T2.lname","FROM","Faculty","AS","T1","JOIN","Student","AS","T2","ON","T1.FacID","=","T2.advisor","WHERE","T1.fname","=","``","Michael","''","AND","T1.lname","=","``","Goodrich","''"],"query_toks_no_value":["select","t2",".","fname",",","t2",".","lname","from","faculty","as","t1","join","student","as","t2","on","t1",".","facid","=","t2",".","advisor","where","t1",".","fname","=","value","and","t1",".","lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,13,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"Michael\"",null],"and",[false,2,[0,[0,16,false],null],"\"Goodrich\"",null]]},"question_toks":["Zeige","den","Vornamen","und","Nachnamen","f\u00fcr","alle","Studenten",",","die","von","Michael","Goodrich","betreut","werden","."],"question":"Zeige den Vornamen und Nachnamen f\u00fcr alle Studenten, die von Michael Goodrich betreut werden."},{"db_id":"mountain_photos","query":"SELECT name ,  prominence FROM mountain EXCEPT SELECT T1.name ,  T1.prominence FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T3.brand  =  'Sigma'","query_toks":["SELECT","name",",","prominence","FROM","mountain","EXCEPT","SELECT","T1.name",",","T1.prominence","FROM","mountain","AS","T1","JOIN","photos","AS","T2","ON","T1.id","=","T2.mountain_id","JOIN","camera_lens","AS","T3","ON","T2.camera_lens_id","=","T3.id","WHERE","T3.brand","=","'Sigma","'"],"query_toks_no_value":["select","name",",","prominence","from","mountain","except","select","t1",".","name",",","t1",".","prominence","from","mountain","as","t1","join","photos","as","t2","on","t1",".","id","=","t2",".","mountain_id","join","camera_lens","as","t3","on","t2",".","camera_lens_id","=","t3",".","id","where","t3",".","brand","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,14,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"Sigma\"",null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","den","Namen","und","die","H\u00e4ufigkeit","der","Berge",",","deren","Bild","nicht","mit","einem","Objektiv","der","Marke","``","Sigma","''","aufgenommen","wurde","."],"question":"Zeige den Namen und die H\u00e4ufigkeit der Berge, deren Bild nicht mit einem Objektiv der Marke \"Sigma\" aufgenommen wurde."},{"db_id":"voter_2","query":"SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3","query_toks":["SELECT","Major","FROM","STUDENT","GROUP","BY","Major","HAVING","COUNT","(","*",")","<","3"],"query_toks_no_value":["select","major","from","student","group","by","major","having","count","(","*",")","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[[false,4,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","F\u00e4cher","studieren","nur","weniger","als","drei","Studenten","?"],"question":"Welche F\u00e4cher studieren nur weniger als drei Studenten?"},{"db_id":"twitter_1","query":"SELECT T1.name FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  (SELECT count(*) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 WHERE T1.name  =  'Tyler Swift')","query_toks":["SELECT","T1.name","FROM","user_profiles","AS","T1","JOIN","follows","AS","T2","ON","T1.uid","=","T2.f1","GROUP","BY","T2.f1","HAVING","count","(","*",")",">","(","SELECT","count","(","*",")","FROM","user_profiles","AS","T1","JOIN","follows","AS","T2","ON","T1.uid","=","T2.f1","WHERE","T1.name","=","'Tyler","Swift","'",")"],"query_toks_no_value":["select","t1",".","name","from","user_profiles","as","t1","join","follows","as","t2","on","t1",".","uid","=","t2",".","f1","group","by","t2",".","f1","having","count","(","*",")",">","(","select","count","(","*",")","from","user_profiles","as","t1","join","follows","as","t2","on","t1",".","uid","=","t2",".","f1","where","t1",".","name","=","value",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,1,false]],"having":[[false,3,[0,[3,0,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"Tyler Swift\"",null]]},null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Namen","der","Nutzer",",","deren","Anzahl","von","Followern","gr\u00f6\u00dfer","ist","die","des","Nutzers","namens","``","Tyler","Swift","''","."],"question":"Finde die Namen der Nutzer, deren Anzahl von Followern gr\u00f6\u00dfer ist die des Nutzers namens \"Tyler Swift\"."},{"db_id":"game_injury","query":"SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.id",",","T1.name","FROM","stadium","AS","T1","JOIN","game","AS","T2","ON","T1.id","=","T2.stadium_id","JOIN","injury_accident","AS","T3","ON","T2.id","=","T3.game_id","GROUP","BY","T1.id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","id",",","t1",".","name","from","stadium","as","t1","join","game","as","t2","on","t1",".","id","=","t2",".","stadium_id","join","injury_accident","as","t3","on","t2",".","id","=","t3",".","game_id","group","by","t1",".","id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","die","Kennung","und","der","Name","des","Stadions",",","in","dem","sich","die","meisten","Unf\u00e4lle","mit","Verletzten","ereignet","haben","?"],"question":"Wie lautet die Kennung und der Name des Stadions, in dem sich die meisten Unf\u00e4lle mit Verletzten ereignet haben?"},{"db_id":"loan_1","query":"SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)","query_toks":["SELECT","T1.cust_name","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id","GROUP","BY","T1.cust_name","ORDER","BY","sum","(","T2.amount",")"],"query_toks_no_value":["select","t1",".","cust_name","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id","group","by","t1",".","cust_name","order","by","sum","(","t2",".","amount",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[4,18,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Namen","der","Kunden",",","die","einen","Kredit","genommen","haben",",","sortiert","nach","dem","Gesamtbetrag",",","den","sie","genommen","haben","?"],"question":"Welches sind die Namen der Kunden, die einen Kredit genommen haben, sortiert nach dem Gesamtbetrag, den sie genommen haben?"},{"db_id":"college_1","query":"SELECT count(*) ,  T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code","query_toks":["SELECT","count","(","*",")",",","T1.school_code","FROM","department","AS","T1","JOIN","professor","AS","T2","ON","T1.dept_code","=","T2.dept_code","GROUP","BY","T1.school_code"],"query_toks_no_value":["select","count","(","*",")",",","t1",".","school_code","from","department","as","t1","join","professor","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","group","by","t1",".","school_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,28,false],null]],"table_units":[["table_unit",2],["table_unit",5]]},"groupBy":[[0,13,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Professoren","gibt","es","f\u00fcr","die","verschiedenen","Schulen","?"],"question":"Wie viele verschiedene Professoren gibt es f\u00fcr die verschiedenen Schulen?"},{"db_id":"csu_1","query":"SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"Orange\")","query_toks":["SELECT","T1.campus","FROM","campuses","AS","T1","JOIN","faculty","AS","T2","ON","T1.id","=","T2.campus","WHERE","T2.year","=","2002","AND","faculty",">","(","SELECT","max","(","faculty",")","FROM","campuses","AS","T1","JOIN","faculty","AS","T2","ON","T1.id","=","T2.campus","WHERE","T2.year","=","2002","AND","T1.county","=","``","Orange","''",")"],"query_toks_no_value":["select","t1",".","campus","from","campuses","as","t1","join","faculty","as","t2","on","t1",".","id","=","t2",".","campus","where","t2",".","year","=","value","and","faculty",">","(","select","max","(","faculty",")","from","campuses","as","t1","join","faculty","as","t2","on","t1",".","id","=","t2",".","campus","where","t2",".","year","=","value","and","t1",".","county","=","value",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,21,false],null]],"table_units":[["table_unit",0],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],2002.0,null],"and",[false,3,[0,[0,23,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,21,false],null]],"table_units":[["table_unit",0],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],2002.0,null],"and",[false,2,[0,[0,4,false],null],"\"Orange\"",null]]},null]]},"question_toks":["Was","sind","die","Namen","der","Campusse",",","die","mehr","Fakult\u00e4ten","in","2002","haben","als","die","H\u00f6chstzahl","in","Orange","County","?"],"question":"Was sind die Namen der Campusse, die mehr Fakult\u00e4ten in 2002 haben als die H\u00f6chstzahl in Orange County?"},{"db_id":"game_injury","query":"SELECT season ,  home_team ,  away_team FROM game","query_toks":["SELECT","season",",","home_team",",","away_team","FROM","game"],"query_toks_no_value":["select","season",",","home_team",",","away_team","from","game"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","die","Saison",",","die","Heim-","und","Ausw\u00e4rtsmannschaft","aller","Spiele","auf","."],"question":"Liste die Saison, die Heim- und Ausw\u00e4rtsmannschaft aller Spiele auf. "},{"db_id":"college_1","query":"SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1","query_toks":["SELECT","emp_fname",",","emp_lname","FROM","employee","ORDER","BY","emp_dob","LIMIT","1"],"query_toks_no_value":["select","emp_fname",",","emp_lname","from","employee","order","by","emp_dob","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,23,false],null]]],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,18,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Vor-","und","Nachname","des","\u00e4ltesten","Mitarbeiters","?"],"question":"Wie lautet der Vor- und Nachname des \u00e4ltesten Mitarbeiters?"},{"db_id":"store_product","query":"SELECT DISTINCT District_name FROM district ORDER BY city_area DESC","query_toks":["SELECT","DISTINCT","District_name","FROM","district","ORDER","BY","city_area","DESC"],"query_toks_no_value":["select","distinct","district_name","from","district","order","by","city_area","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,18,false],null]]],"select":[true,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","alle","einzelnen","Bezirksnamen",",","sortiert","nach","Stadtgebiet","in","absteigender","Folge","."],"question":"Finde alle einzelnen Bezirksnamen, sortiert nach Stadtgebiet in absteigender Folge."},{"db_id":"voter_2","query":"SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\"","query_toks":["SELECT","DISTINCT","T1.Fname",",","T1.LName","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","T2.President_VOTE","WHERE","T1.sex","=","``","F","''"],"query_toks_no_value":["select","distinct","t1",".","fname",",","t1",".","lname","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","t2",".","president_vote","where","t1",".","sex","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,12,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"F\"",null]]},"question_toks":["Finde","die","Vor-","und","Nachnamen","aller","weiblichen","Studierenden","(","Geschlecht","ist","w",")",",","die","Pr\u00e4sidentschaftsstimmen","haben","."],"question":"Finde die Vor- und Nachnamen aller weiblichen Studierenden (Geschlecht ist w), die Pr\u00e4sidentschaftsstimmen haben."},{"db_id":"tracking_orders","query":"SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\"","query_toks":["SELECT","DISTINCT","T1.customer_details","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T2.order_status","=","``","On","Road","''"],"query_toks_no_value":["select","distinct","t1",".","customer_details","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t2",".","order_status","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"On Road\"",null]]},"question_toks":["Finde","die","Details","aller","einzelnen","Kunden",",","die","Bestellungen","mit","dem","Status","``","unterwegs","''","haben","."],"question":"Finde die Details aller einzelnen Kunden, die Bestellungen mit dem Status \"unterwegs\" haben."},{"db_id":"csu_1","query":"SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND T2.year  =  1996","query_toks":["SELECT","campusfee","FROM","campuses","AS","T1","JOIN","csu_fees","AS","T2","ON","T1.id","=","t2.campus","WHERE","t1.campus","=","``","San","Jose","State","University","''","AND","T2.year","=","1996"],"query_toks_no_value":["select","campusfee","from","campuses","as","t1","join","csu_fees","as","t2","on","t1",".","id","=","t2",".","campus","where","t1",".","campus","=","value","and","t2",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"San Jose State University\"",null],"and",[false,2,[0,[0,7,false],null],1996.0,null]]},"question_toks":["Was","ist","die","Campus-Geb\u00fchr","der","San","Jose","State","University","im","Jahr","1996","?"],"question":"Was ist die Campus-Geb\u00fchr der San Jose State University im Jahr 1996?"},{"db_id":"mountain_photos","query":"SELECT count(*) FROM camera_lens WHERE focal_length_mm  >  15","query_toks":["SELECT","count","(","*",")","FROM","camera_lens","WHERE","focal_length_mm",">","15"],"query_toks_no_value":["select","count","(","*",")","from","camera_lens","where","focal_length_mm",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,10,false],null],15.0,null]]},"question_toks":["Wie","viele","Kameraobjektive","haben","eine","Brennweite","von","mehr","als","15","mm","?"],"question":"Wie viele Kameraobjektive haben eine Brennweite von mehr als 15 mm?"},{"db_id":"loan_1","query":"SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan)","query_toks":["SELECT","avg","(","credit_score",")","FROM","customer","WHERE","cust_id","IN","(","SELECT","cust_id","FROM","loan",")"],"query_toks_no_value":["select","avg","(","credit_score",")","from","customer","where","cust_id","in","(","select","cust_id","from","loan",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,11,false],null]]]],"union":null,"where":[[false,8,[0,[0,6,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finde","die","durchschnittliche","Kreditw\u00fcrdigkeit","der","Kunden",",","die","einen","Kredit","haben","."],"question":"Finde die durchschnittliche Kreditw\u00fcrdigkeit der Kunden, die einen Kredit haben."},{"db_id":"twitter_1","query":"SELECT count(*) FROM follows","query_toks":["SELECT","count","(","*",")","FROM","follows"],"query_toks_no_value":["select","count","(","*",")","from","follows"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Follower","hat","jeder","Nutzer","?"],"question":"Wie viele Follower hat jeder Nutzer?"},{"db_id":"formula_1","query":"SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5","query_toks":["SELECT","T1.surname",",","T1.driverid","FROM","drivers","AS","T1","JOIN","pitstops","AS","T2","ON","T1.driverid","=","T2.driverid","GROUP","BY","T1.driverid","HAVING","count","(","*",")","=","11","INTERSECT","SELECT","T1.surname",",","T1.driverid","FROM","drivers","AS","T1","JOIN","results","AS","T2","ON","T1.driverid","=","T2.driverid","GROUP","BY","T1.driverid","HAVING","count","(","*",")",">","5"],"query_toks_no_value":["select","t1",".","surname",",","t1",".","driverid","from","drivers","as","t1","join","pitstops","as","t2","on","t1",".","driverid","=","t2",".","driverid","group","by","t1",".","driverid","having","count","(","*",")","=","value","intersect","select","t1",".","surname",",","t1",".","driverid","from","drivers","as","t1","join","results","as","t2","on","t1",".","driverid","=","t2",".","driverid","group","by","t1",".","driverid","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",2],["table_unit",11]]},"groupBy":[[0,18,false]],"having":[[false,2,[0,[3,0,false],null],11.0,null]],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",2],["table_unit",7]]},"groupBy":[[0,18,false]],"having":[[false,3,[0,[3,0,false],null],5.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]],[0,[0,[0,18,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]],[0,[0,[0,18,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Nachnamen","und","Kennungen","aller","Fahrer",",","die","11","Boxenstopps","hatten","und","an","mehr","als","5","Rennen","teilgenommen","haben","?"],"question":"Wie lauten die Nachnamen und Kennungen aller Fahrer, die 11 Boxenstopps hatten und an mehr als 5 Rennen teilgenommen haben?"},{"db_id":"csu_1","query":"SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\"","query_toks":["SELECT","count","(","*",")","FROM","campuses","WHERE","county","=","``","Los","Angeles","''"],"query_toks_no_value":["select","count","(","*",")","from","campuses","where","county","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Los Angeles\"",null]]},"question_toks":["Wie","viele","Campusse","existieren","im","County","LA","?"],"question":"Wie viele Campusse existieren im County LA?"},{"db_id":"activity_1","query":"SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F'","query_toks":["SELECT","Fname",",","Lname",",","phone","FROM","Faculty","WHERE","Sex","=","'F","'"],"query_toks_no_value":["select","fname",",","lname",",","phone","from","faculty","where","sex","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]],[0,[0,[0,16,false],null]],[0,[0,[0,20,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"F\"",null]]},"question_toks":["Wie","lauten","Vorname",",","Nachname","und","Telefonnummer","aller","weiblichen","Fakult\u00e4tsmitglieder","?"],"question":"Wie lauten Vorname, Nachname und Telefonnummer aller weiblichen Fakult\u00e4tsmitglieder?"},{"db_id":"college_1","query":"SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num","query_toks":["SELECT","T2.emp_fname",",","T1.crs_code","FROM","CLASS","AS","T1","JOIN","employee","AS","T2","ON","T1.prof_num","=","T2.emp_num"],"query_toks_no_value":["select","t2",".","emp_fname",",","t1",".","crs_code","from","class","as","t1","join","employee","as","t2","on","t1",".","prof_num","=","t2",".","emp_num"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Vornamen","aller","Lehrer",",","die","einen","Kurs","unterrichtet","haben",",","sowie","den","Kurs-Code","."],"question":"Finde die Vornamen aller Lehrer, die einen Kurs unterrichtet haben, sowie den Kurs-Code."},{"db_id":"store_product","query":"SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)","query_toks":["SELECT","t1.store_name","FROM","store","AS","t1","JOIN","store_district","AS","t2","ON","t1.store_id","=","t2.store_id","WHERE","district_id","=","(","SELECT","district_id","FROM","district","ORDER","BY","city_population","DESC","LIMIT","1",")"],"query_toks_no_value":["select","t1",".","store_name","from","store","as","t1","join","store_district","as","t2","on","t1",".","store_id","=","t2",".","store_id","where","district_id","=","(","select","district_id","from","district","order","by","city_population","desc","limit","value",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,21,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,17,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","lauten","die","Namen","aller","Gesch\u00e4fte",",","in","dem","nach","Einwohnerzahl","sortierten",",","gr\u00f6\u00dften","Bezirk","?"],"question":"Wie lauten die Namen aller Gesch\u00e4fte, in dem nach Einwohnerzahl sortierten, gr\u00f6\u00dften Bezirk?"},{"db_id":"activity_1","query":"SELECT sex ,  count(*) FROM Faculty WHERE rank  =  \"AsstProf\" GROUP BY sex","query_toks":["SELECT","sex",",","count","(","*",")","FROM","Faculty","WHERE","rank","=","``","AsstProf","''","GROUP","BY","sex"],"query_toks_no_value":["select","sex",",","count","(","*",")","from","faculty","where","rank","=","value","group","by","sex"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"AsstProf\"",null]]},"question_toks":["Zeige","die","Anzahl","der","m\u00e4nnlichen","und","weiblichen","Assistenzprofessoren","an","."],"question":"Zeige die Anzahl der m\u00e4nnlichen und weiblichen Assistenzprofessoren an."},{"db_id":"college_1","query":"SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE DEPT_NAME  =  \"Accounting\"","query_toks":["SELECT","count","(","*",")","FROM","professor","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","WHERE","DEPT_NAME","=","``","Accounting","''"],"query_toks_no_value":["select","count","(","*",")","from","professor","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","where","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,28,false],null],[0,11,false],null]],"table_units":[["table_unit",5],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Accounting\"",null]]},"question_toks":["Wie","viele","Professoren","sind","in","der","Rechnungswesenabteilung"],"question":"Wie viele Professoren sind in der Rechnungswesenabteilung"},{"db_id":"activity_1","query":"SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'","query_toks":["SELECT","DISTINCT","T1.lname","FROM","Faculty","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.facID","=","T2.facID","JOIN","activity","AS","T3","ON","T2.actid","=","T2.actid","WHERE","T3.activity_name","=","'Canoeing","'","OR","T3.activity_name","=","'Kayaking","'"],"query_toks_no_value":["select","distinct","t1",".","lname","from","faculty","as","t1","join","faculty_participates_in","as","t2","on","t1",".","facid","=","t2",".","facid","join","activity","as","t3","on","t2",".","actid","=","t2",".","actid","where","t3",".","activity_name","=","value","or","t3",".","activity_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,5,false],null]],"table_units":[["table_unit",4],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Canoeing\"",null],"or",[false,2,[0,[0,2,false],null],"\"Kayaking\"",null]]},"question_toks":["Welche","Fakult\u00e4tsmitglieder","machen","entweder","Kanufahren","oder","Kajakfahren","?","Nenne","mir","ihre","Vornamen","."],"question":"Welche Fakult\u00e4tsmitglieder machen entweder Kanufahren oder Kajakfahren? Nenne mir ihre Vornamen."},{"db_id":"store_product","query":"SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city","query_toks":["SELECT","t3.headquartered_city",",","count","(","*",")","FROM","store","AS","t1","JOIN","store_district","AS","t2","ON","t1.store_id","=","t2.store_id","JOIN","district","AS","t3","ON","t2.district_id","=","t3.district_id","GROUP","BY","t3.headquartered_city"],"query_toks_no_value":["select","t3",".","headquartered_city",",","count","(","*",")","from","store","as","t1","join","store_district","as","t2","on","t1",".","store_id","=","t2",".","store_id","join","district","as","t3","on","t2",".","district_id","=","t3",".","district_id","group","by","t3",".","headquartered_city"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,21,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[[0,16,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Anzahl","der","Gesch\u00e4fte","in","jeder","Stadt","."],"question":"Finde die Anzahl der Gesch\u00e4fte in jeder Stadt."},{"db_id":"twitter_1","query":"SELECT name ,  followers FROM user_profiles ORDER BY followers DESC","query_toks":["SELECT","name",",","followers","FROM","user_profiles","ORDER","BY","followers","DESC"],"query_toks_no_value":["select","name",",","followers","from","user_profiles","order","by","followers","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","den","Namen","und","die","Anzahl","der","Follower","f\u00fcr","jeden","Benutzer","auf","und","sortiere","die","Ergebnisse","nach","der","Anzahl","der","Follower","in","absteigender","Reihenfolge","."],"question":"Liste den Namen und die Anzahl der Follower f\u00fcr jeden Benutzer auf und sortiere die Ergebnisse nach der Anzahl der Follower in absteigender Reihenfolge."},{"db_id":"csu_1","query":"SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996","query_toks":["SELECT","avg","(","campusfee",")","FROM","csu_fees","WHERE","YEAR","=","1996"],"query_toks_no_value":["select","avg","(","campusfee",")","from","csu_fees","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],1996.0,null]]},"question_toks":["Finde","die","Durchschnittsgeb\u00fchr","f\u00fcr","einen","CSU-Campus","in","1996","."],"question":"Finde die Durchschnittsgeb\u00fchr f\u00fcr einen CSU-Campus in 1996."},{"db_id":"loan_1","query":"SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'","query_toks":["SELECT","T1.bname",",","T1.city","FROM","bank","AS","T1","JOIN","loan","AS","T2","ON","T1.branch_id","=","T2.branch_id","WHERE","T2.loan_type","=","'Business","'"],"query_toks_no_value":["select","t1",".","bname",",","t1",".","city","from","bank","as","t1","join","loan","as","t2","on","t1",".","branch_id","=","t2",".","branch_id","where","t2",".","loan_type","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"Business\"",null]]},"question_toks":["Finde","die","Stadt","und","den","Namen","der","Bankfilialen",",","die","Gesch\u00e4ftskredite","vergeben","."],"question":"Finde die Stadt und den Namen der Bankfilialen, die Gesch\u00e4ftskredite vergeben."},{"db_id":"csu_1","query":"SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Francisco State University\"","query_toks":["SELECT","sum","(","t1.graduate",")","FROM","discipline_enrollments","AS","t1","JOIN","campuses","AS","t2","ON","t1.campus","=","t2.id","WHERE","t1.year","=","2004","AND","t2.campus","=","``","San","Francisco","State","University","''"],"query_toks_no_value":["select","sum","(","t1",".","graduate",")","from","discipline_enrollments","as","t1","join","campuses","as","t2","on","t1",".","campus","=","t2",".","id","where","t1",".","year","=","value","and","t2",".","campus","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,1,false],null]],"table_units":[["table_unit",3],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],2004.0,null],"and",[false,2,[0,[0,2,false],null],"\"San Francisco State University\"",null]]},"question_toks":["Wie","viele","Leute","machten","2004","an","der","San","Francisco","State","University","einen","Abschluss","?"],"question":"Wie viele Leute machten 2004 an der San Francisco State University einen Abschluss?"},{"db_id":"csu_1","query":"SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)","query_toks":["SELECT","count","(","*",")","FROM","csu_fees","WHERE","campusfee",">","(","SELECT","avg","(","campusfee",")","FROM","csu_fees",")"],"query_toks_no_value":["select","count","(","*",")","from","csu_fees","where","campusfee",">","(","select","avg","(","campusfee",")","from","csu_fees",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,8,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,8,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","viele","Universit\u00e4ten","haben","eine","\u00fcberdurchschnittlich","hohe","Campusgeb\u00fchr","?"],"question":"Wie viele Universit\u00e4ten haben eine \u00fcberdurchschnittlich hohe Campusgeb\u00fchr?"},{"db_id":"tracking_orders","query":"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1","query_toks":["SELECT","T1.customer_name","FROM","customers","AS","T1","JOIN","orders","AS","T2","JOIN","order_items","AS","T3","JOIN","products","AS","T4","ON","T1.customer_id","=","T2.customer_id","AND","T2.order_id","=","T3.order_id","AND","T3.product_id","=","T4.product_id","WHERE","T4.product_name","=","``","food","''","GROUP","BY","T1.customer_id","HAVING","count","(","*",")",">","=","1"],"query_toks_no_value":["select","t1",".","customer_name","from","customers","as","t1","join","orders","as","t2","join","order_items","as","t3","join","products","as","t4","on","t1",".","customer_id","=","t2",".","customer_id","and","t2",".","order_id","=","t3",".","order_id","and","t3",".","product_id","=","t4",".","product_id","where","t4",".","product_name","=","value","group","by","t1",".","customer_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null],"and",[false,2,[0,[0,7,false],null],[0,17,false],null],"and",[false,2,[0,[0,16,false],null],[0,12,false],null]],"table_units":[["table_unit",0],["table_unit",2],["table_unit",4],["table_unit",3]]},"groupBy":[[0,1,false]],"having":[[false,5,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"food\"",null]]},"question_toks":["``","Listen","Sie","die","Namen","der","Kunden","auf",",","die","einmal","das","Produkt","``","''","Lebensmittel","''","''","gekauft","haben","."],"question":"\"Listen Sie die Namen der Kunden auf, die einmal das Produkt \"\"Lebensmittel\"\" gekauft haben. "},{"db_id":"csu_1","query":"SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005","query_toks":["SELECT","avg","(","campusfee",")","FROM","csu_fees","WHERE","YEAR","=","2005"],"query_toks_no_value":["select","avg","(","campusfee",")","from","csu_fees","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],2005.0,null]]},"question_toks":["Wie","hoch","ist","die","durchschnittliche","Geb\u00fchr","f\u00fcr","einen","CSU-Campus","im","Jahr","2005","?"],"question":"Wie hoch ist die durchschnittliche Geb\u00fchr f\u00fcr einen CSU-Campus im Jahr 2005?"},{"db_id":"store_product","query":"SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5","query_toks":["SELECT","product","FROM","product","WHERE","max_page_size","=","``","A4","''","AND","pages_per_minute_color","<","5"],"query_toks_no_value":["select","product","from","product","where","max_page_size","=","value","and","pages_per_minute_color","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"A4\"",null],"and",[false,4,[0,[0,5,false],null],5.0,null]]},"question_toks":["Finde","Produkte","mit","maximaler","Seitengr\u00f6\u00dfe","von","``","A4","''","und","Seiten","pro","Minute","in","Farbe","kleiner","als","5","."],"question":"Finde Produkte mit maximaler Seitengr\u00f6\u00dfe von \"A4\" und Seiten pro Minute in Farbe kleiner als 5."},{"db_id":"csu_1","query":"SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Jose State University\" AND t1.year  =  2000","query_toks":["SELECT","t1.campusfee","FROM","csu_fees","AS","t1","JOIN","campuses","AS","t2","ON","t1.campus","=","t2.id","WHERE","t2.campus","=","``","San","Jose","State","University","''","AND","t1.year","=","2000"],"query_toks_no_value":["select","t1",".","campusfee","from","csu_fees","as","t1","join","campuses","as","t2","on","t1",".","campus","=","t2",".","id","where","t2",".","campus","=","value","and","t1",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"San Jose State University\"",null],"and",[false,2,[0,[0,7,false],null],2000.0,null]]},"question_toks":["Was","war","die","Campusgeb\u00fchr","im","Jahr","2000","f\u00fcr","die","San","Jose","State","University","?"],"question":"Was war die Campusgeb\u00fchr im Jahr 2000 f\u00fcr die San Jose State University?"},{"db_id":"sakila_1","query":"SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa'","query_toks":["SELECT","payment_date","FROM","payment","WHERE","amount",">","10","UNION","SELECT","T1.payment_date","FROM","payment","AS","T1","JOIN","staff","AS","T2","ON","T1.staff_id","=","T2.staff_id","WHERE","T2.first_name","=","'Elsa","'"],"query_toks_no_value":["select","payment_date","from","payment","where","amount",">","value","union","select","t1",".","payment_date","from","payment","as","t1","join","staff","as","t2","on","t1",".","staff_id","=","t2",".","staff_id","where","t2",".","first_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",12]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,66,false],null]]]],"union":{"except":null,"from":{"conds":[[false,2,[0,[0,63,false],null],[0,75,false],null]],"table_units":[["table_unit",12],["table_unit",14]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,66,false],null]]]],"union":null,"where":[[false,2,[0,[0,76,false],null],"\"Elsa\"",null]]},"where":[[false,3,[0,[0,65,false],null],10.0,null]]},"question_toks":["Welches","sind","die","Zahlungsfristen","f\u00fcr","alle","Zahlungen",",","die","einen","Betrag","von","mehr","als","10","haben","oder","von","einem","Mitarbeiter","mit","dem","Vornamen","Elsa","bearbeitet","wurden","?"],"question":"Welches sind die Zahlungsfristen f\u00fcr alle Zahlungen, die einen Betrag von mehr als 10 haben oder von einem Mitarbeiter mit dem Vornamen Elsa bearbeitet wurden? "},{"db_id":"sakila_1","query":"SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id","query_toks":["SELECT","T2.name",",","T1.category_id",",","count","(","*",")","FROM","film_category","AS","T1","JOIN","category","AS","T2","ON","T1.category_id","=","T2.category_id","GROUP","BY","T1.category_id"],"query_toks_no_value":["select","t2",".","name",",","t1",".","category_id",",","count","(","*",")","from","film_category","as","t1","join","category","as","t2","on","t1",".","category_id","=","t2",".","category_id","group","by","t1",".","category_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,49,false],null],[0,13,false],null]],"table_units":[["table_unit",8],["table_unit",2]]},"groupBy":[[0,49,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,49,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","und","Kennungen","der","verschiedenen","Kategorien",",","und","wie","viele","Filme","sind","in","jeder","Kategorie","enthalten","?"],"question":"Wie lauten die Namen und Kennungen der verschiedenen Kategorien, und wie viele Filme sind in jeder Kategorie enthalten? "},{"db_id":"college_1","query":"SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","emp_jobcode",",","count","(","*",")","FROM","employee","GROUP","BY","emp_jobcode","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","emp_jobcode",",","count","(","*",")","from","employee","group","by","emp_jobcode","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,21,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,21,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Anzahl","und","den","Code","der","Stelle",",","an","der","die","meisten","Mitarbeiter","besch\u00e4ftigt","sind","."],"question":"Finde die Anzahl und den Code der Stelle, an der die meisten Mitarbeiter besch\u00e4ftigt sind."},{"db_id":"college_1","query":"SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1","query_toks":["SELECT","T2.dept_name","FROM","student","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","ORDER","BY","stu_gpa","LIMIT","1"],"query_toks_no_value":["select","t2",".","dept_name","from","student","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","order","by","stu_gpa","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,41,false],null],[0,11,false],null]],"table_units":[["table_unit",6],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,39,false],null]]],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Abteilung","geh\u00f6ren","die","Studierenden","mit","dem","niedrigsten","Notendurchschnitt","an","?"],"question":"Welcher Abteilung geh\u00f6ren die Studierenden mit dem niedrigsten Notendurchschnitt an? "},{"db_id":"college_1","query":"SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'QM-261'","query_toks":["SELECT","T1.emp_fname","FROM","employee","AS","T1","JOIN","CLASS","AS","T2","ON","T1.emp_num","=","T2.prof_num","WHERE","crs_code","=","'CIS-220","'","INTERSECT","SELECT","T1.emp_fname","FROM","employee","AS","T1","JOIN","CLASS","AS","T2","ON","T1.emp_num","=","T2.prof_num","WHERE","crs_code","=","'QM-261","'"],"query_toks_no_value":["select","t1",".","emp_fname","from","employee","as","t1","join","class","as","t2","on","t1",".","emp_num","=","t2",".","prof_num","where","crs_code","=","value","intersect","select","t1",".","emp_fname","from","employee","as","t1","join","class","as","t2","on","t1",".","emp_num","=","t2",".","prof_num","where","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"QM-261\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"CIS-220\"",null]]},"question_toks":["Wie","lautet","der","Vorname","des","Professors",",","der","CIS-220","und","QM-261","lehrt","?"],"question":"Wie lautet der Vorname des Professors, der CIS-220 und QM-261 lehrt?"},{"db_id":"store_product","query":"SELECT avg(pages_per_minute_color) FROM product","query_toks":["SELECT","avg","(","pages_per_minute_color",")","FROM","product"],"query_toks_no_value":["select","avg","(","pages_per_minute_color",")","from","product"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","durchschnittliche","Anzahl","von","Seiten","pro","Minute","in","Farbe","?"],"question":"Was ist die durchschnittliche Anzahl von Seiten pro Minute in Farbe?"},{"db_id":"twitter_1","query":"SELECT partitionid FROM user_profiles WHERE name  =  'Iron Man'","query_toks":["SELECT","partitionid","FROM","user_profiles","WHERE","name","=","'Iron","Man","'"],"query_toks_no_value":["select","partitionid","from","user_profiles","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"Iron Man\"",null]]},"question_toks":["``","WIe","lautet","die","Partitions-ID","des","Benutzers","mit","dem","Namen","``","''","Iron","Man","''","''",".","''"],"question":"\"WIe lautet die Partitions-ID des Benutzers mit dem Namen \"\"Iron Man\"\".\""},{"db_id":"phone_market","query":"SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1","query_toks":["SELECT","Carrier","FROM","phone","ORDER","BY","Price","DESC","LIMIT","1"],"query_toks_no_value":["select","carrier","from","phone","order","by","price","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wer","ist","der","Betreiber","des","teuersten","Telefons","?"],"question":"Wer ist der Betreiber des teuersten Telefons?"},{"db_id":"loan_1","query":"SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100","query_toks":["SELECT","T2.bname","FROM","loan","AS","T1","JOIN","bank","AS","T2","ON","T1.branch_id","=","T2.branch_id","JOIN","customer","AS","T3","ON","T1.cust_id","=","T3.cust_id","WHERE","T3.credit_score","<","100"],"query_toks_no_value":["select","t2",".","bname","from","loan","as","t1","join","bank","as","t2","on","t1",".","branch_id","=","t2",".","branch_id","join","customer","as","t3","on","t1",".","cust_id","=","t3",".","cust_id","where","t3",".","credit_score","<","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,4,[0,[0,11,false],null],100.0,null]]},"question_toks":["Wie","lauten","die","Namen","der","Banken",",","die","Kunden","mit","einer","Kreditw\u00fcrdigkeit","unter","100","Geld","geliehen","haben","?"],"question":"Wie lauten die Namen der Banken, die Kunden mit einer Kreditw\u00fcrdigkeit unter 100 Geld geliehen haben? "},{"db_id":"college_1","query":"SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'","query_toks":["SELECT","crs_credit",",","crs_description","FROM","course","WHERE","crs_code","=","'CIS-220","'"],"query_toks_no_value":["select","crs_credit",",","crs_description","from","course","where","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"CIS-220\"",null]]},"question_toks":["Wie","viele","Credits","hat","der","Kurs","CIS-220",",","und","wie","wird","er","beschrieben","?"],"question":"Wie viele Credits hat der Kurs CIS-220, und wie wird er beschrieben? "},{"db_id":"college_1","query":"SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1","query_toks":["SELECT","T2.dept_name","FROM","professor","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","GROUP","BY","T1.dept_code","ORDER","BY","count","(","*",")","LIMIT","1"],"query_toks_no_value":["select","t2",".","dept_name","from","professor","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","group","by","t1",".","dept_code","order","by","count","(","*",")","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,28,false],null],[0,11,false],null]],"table_units":[["table_unit",5],["table_unit",2]]},"groupBy":[[0,28,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dft","die","Abteilung","mit","den","wenigsten","Professoren","?"],"question":"Wie hei\u00dft die Abteilung mit den wenigsten Professoren?"},{"db_id":"csu_1","query":"SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)","query_toks":["SELECT","count","(","*",")","FROM","csu_fees","WHERE","campusfee",">","(","SELECT","avg","(","campusfee",")","FROM","csu_fees",")"],"query_toks_no_value":["select","count","(","*",")","from","csu_fees","where","campusfee",">","(","select","avg","(","campusfee",")","from","csu_fees",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,8,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,8,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Ermitteln","Sie","die","Anzahl","der","Universit\u00e4ten",",","deren","Campusgeb\u00fchr","h\u00f6her","ist","als","die","durchschnittliche","Campusgeb\u00fchr","."],"question":"Ermitteln Sie die Anzahl der Universit\u00e4ten, deren Campusgeb\u00fchr h\u00f6her ist als die durchschnittliche Campusgeb\u00fchr."},{"db_id":"activity_1","query":"SELECT rank ,  count(*) FROM Faculty GROUP BY rank","query_toks":["SELECT","rank",",","count","(","*",")","FROM","Faculty","GROUP","BY","rank"],"query_toks_no_value":["select","rank",",","count","(","*",")","from","faculty","group","by","rank"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Fakult\u00e4tsmitglieder","haben","wir","f\u00fcr","jeden","Fakult\u00e4tsrang","?"],"question":"Wie viele Fakult\u00e4tsmitglieder haben wir f\u00fcr jeden Fakult\u00e4tsrang?"},{"db_id":"activity_1","query":"SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kayaking'","query_toks":["SELECT","T1.lname","FROM","Faculty","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.facID","=","T2.facID","JOIN","activity","AS","T3","ON","T2.actid","=","T2.actid","WHERE","T3.activity_name","=","'Canoeing","'","INTERSECT","SELECT","T1.lname","FROM","Faculty","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.facID","=","T2.facID","JOIN","activity","AS","T3","ON","T2.actid","=","T2.actid","WHERE","T3.activity_name","=","'Kayaking","'"],"query_toks_no_value":["select","t1",".","lname","from","faculty","as","t1","join","faculty_participates_in","as","t2","on","t1",".","facid","=","t2",".","facid","join","activity","as","t3","on","t2",".","actid","=","t2",".","actid","where","t3",".","activity_name","=","value","intersect","select","t1",".","lname","from","faculty","as","t1","join","faculty_participates_in","as","t2","on","t1",".","facid","=","t2",".","facid","join","activity","as","t3","on","t2",".","actid","=","t2",".","actid","where","t3",".","activity_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,5,false],null]],"table_units":[["table_unit",4],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,5,false],null]],"table_units":[["table_unit",4],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kayaking\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Canoeing\"",null]]},"question_toks":["Finden","Sie","die","Vornamen","der","Fakult\u00e4tsmitglieder",",","die","am","Kanu-","und","Kajakfahren","teilnehmen","."],"question":"Finden Sie die Vornamen der Fakult\u00e4tsmitglieder, die am Kanu- und Kajakfahren teilnehmen. "},{"db_id":"debate","query":"SELECT Date ,  Venue FROM debate","query_toks":["SELECT","Date",",","Venue","FROM","debate"],"query_toks_no_value":["select","date",",","venue","from","debate"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","das","Datum","und","der","Veranstaltungsort","von","jeder","Debatte","?"],"question":"Welches sind das Datum und der Veranstaltungsort von jeder Debatte?"},{"db_id":"voter_2","query":"SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD","query_toks":["SELECT","count","(","DISTINCT","President_Vote",")","FROM","VOTING_RECORD"],"query_toks_no_value":["select","count","(","distinct","president_vote",")","from","voting_record"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,12,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Pr\u00e4sidenten-Stimmen","werden","aufgezeichnet","?"],"question":"Wie viele verschiedene Pr\u00e4sidenten-Stimmen werden aufgezeichnet? "},{"db_id":"college_1","query":"SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1","query_toks":["SELECT","T1.school_code","FROM","department","AS","T1","JOIN","professor","AS","T2","ON","T1.dept_code","=","T2.dept_code","GROUP","BY","T1.school_code","ORDER","BY","count","(","*",")","LIMIT","1"],"query_toks_no_value":["select","t1",".","school_code","from","department","as","t1","join","professor","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","group","by","t1",".","school_code","order","by","count","(","*",")","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,28,false],null]],"table_units":[["table_unit",2],["table_unit",5]]},"groupBy":[[0,13,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Schule","hat","die","wenigsten","Professoren","?"],"question":"Welche Schule hat die wenigsten Professoren?"},{"db_id":"music_1","query":"SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english')","query_toks":["SELECT","song_name","FROM","song","WHERE","rating","<","(","SELECT","min","(","rating",")","FROM","song","WHERE","languages","=","'english","'",")"],"query_toks_no_value":["select","song_name","from","song","where","rating","<","(","select","min","(","rating",")","from","song","where","languages","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,4,[0,[0,18,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,18,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"english\"",null]]},null]]},"question_toks":["Was","sind","die","Liedernamen","jedes","Liedes",",","dessen","Bewertung","geringer","ist","als","die","Mindestbewertung","f\u00fcr","englische","Lieder","?"],"question":"Was sind die Liedernamen jedes Liedes, dessen Bewertung geringer ist als die Mindestbewertung f\u00fcr englische Lieder?"},{"db_id":"twitter_1","query":"SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Mary\" INTERSECT SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Susan\"","query_toks":["SELECT","T2.f1","FROM","user_profiles","AS","T1","JOIN","follows","AS","T2","ON","T1.uid","=","T2.f2","WHERE","T1.name","=","``","Mary","''","INTERSECT","SELECT","T2.f1","FROM","user_profiles","AS","T1","JOIN","follows","AS","T2","ON","T1.uid","=","T2.f2","WHERE","T1.name","=","``","Susan","''"],"query_toks_no_value":["select","t2",".","f1","from","user_profiles","as","t1","join","follows","as","t2","on","t1",".","uid","=","t2",".","f2","where","t1",".","name","=","value","intersect","select","t2",".","f1","from","user_profiles","as","t1","join","follows","as","t2","on","t1",".","uid","=","t2",".","f2","where","t1",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"Susan\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"Mary\"",null]]},"question_toks":["Finde","die","ID","der","Benutzer","die","von","Mary","und","Susan","gefolgt","werden"],"question":"Finde die ID der Benutzer die von Mary und Susan gefolgt werden"},{"db_id":"swimming","query":"SELECT name FROM event ORDER BY YEAR DESC LIMIT 1","query_toks":["SELECT","name","FROM","event","ORDER","BY","YEAR","DESC","LIMIT","1"],"query_toks_no_value":["select","name","from","event","order","by","year","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,21,false],null]]],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Name","des","Ereignisses",",","das","sich","im","letzten","Jahr","ereignet","hat","?"],"question":"Wie lautet der Name des Ereignisses, das sich im letzten Jahr ereignet hat?"},{"db_id":"csu_1","query":"SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\"","query_toks":["SELECT","campus","FROM","campuses","WHERE","LOCATION","=","``","Chico","''"],"query_toks_no_value":["select","campus","from","campuses","where","location","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],"\"Chico\"",null]]},"question_toks":["Welche","Campusse","befinden","sich","in","Chico","?"],"question":"Welche Campusse befinden sich in Chico? "},{"db_id":"music_1","query":"SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","languages","FROM","song","GROUP","BY","languages","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","languages","from","song","group","by","languages","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Sprachen",",","die","am","h\u00e4ufigsten","in","Liedern","verwendet","werden","?"],"question":"Was sind die Sprachen, die am h\u00e4ufigsten in Liedern verwendet werden?"},{"db_id":"sakila_1","query":"SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","first_name",",","last_name","FROM","actor","GROUP","BY","first_name",",","last_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","first_name",",","last_name","from","actor","group","by","first_name",",","last_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,2,false],[0,3,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","den","unter","allen","Schauspielen","am","h\u00e4ufigsten","vorkommenden","vollst\u00e4ndigen","Namen","zur\u00fcck","."],"question":"Geben Sie den unter allen Schauspielen am h\u00e4ufigsten vorkommenden vollst\u00e4ndigen Namen zur\u00fcck. "},{"db_id":"voter_2","query":"SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD","query_toks":["SELECT","DISTINCT","President_Vote",",","VICE_President_Vote","FROM","VOTING_RECORD"],"query_toks_no_value":["select","distinct","president_vote",",","vice_president_vote","from","voting_record"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Berichte","die","unterschiedlichen","Resultate","der","Pr\u00e4sidentenwahl","und","der","Vizepr\u00e4sidentenwahl","."],"question":"Berichte die unterschiedlichen Resultate der Pr\u00e4sidentenwahl und der Vizepr\u00e4sidentenwahl."},{"db_id":"swimming","query":"SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id  =  t2.id JOIN stadium AS t3 ON t3.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","t3.name","FROM","record","AS","t1","JOIN","event","AS","t2","ON","t1.event_id","=","t2.id","JOIN","stadium","AS","t3","ON","t3.id","=","t2.stadium_id","GROUP","BY","t2.stadium_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t3",".","name","from","record","as","t1","join","event","as","t2","on","t1",".","event_id","=","t2",".","id","join","stadium","as","t3","on","t3",".","id","=","t2",".","stadium_id","group","by","t2",".","stadium_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,25,false],null],[0,18,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,20,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","Namen","der","Stadien",",","die","die","meisten","Schwimmer","besucht","haben","."],"question":"Finden Sie die Namen der Stadien, die die meisten Schwimmer besucht haben."},{"db_id":"loan_1","query":"SELECT sum(no_of_customers) FROM bank","query_toks":["SELECT","sum","(","no_of_customers",")","FROM","bank"],"query_toks_no_value":["select","sum","(","no_of_customers",")","from","bank"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","Gesamtzahl","der","Kunden","\u00fcber","alle","Banken","?"],"question":"Was ist die Gesamtzahl der Kunden \u00fcber alle Banken?"},{"db_id":"loan_1","query":"SELECT sum(acc_bal) FROM customer WHERE state  =  'Utah' OR state  =  'Texas'","query_toks":["SELECT","sum","(","acc_bal",")","FROM","customer","WHERE","state","=","'Utah","'","OR","state","=","'Texas","'"],"query_toks_no_value":["select","sum","(","acc_bal",")","from","customer","where","state","=","value","or","state","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"Utah\"",null],"or",[false,2,[0,[0,13,false],null],"\"Texas\"",null]]},"question_toks":["Finden","sie","den","Gesamtkontosaldo","jedes","Kunden","aus","Utah","oder","Texas-"],"question":"Finden sie den Gesamtkontosaldo jedes Kunden aus Utah oder Texas-"},{"db_id":"sakila_1","query":"SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","first_name","FROM","actor","GROUP","BY","first_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","first_name","from","actor","group","by","first_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Gebe","den","h\u00e4ufigsten","Vornamen","aller","Schauspieler","an","."],"question":"Gebe den h\u00e4ufigsten Vornamen aller Schauspieler an. "},{"db_id":"formula_1","query":"SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017","query_toks":["SELECT","DISTINCT","name","FROM","races","WHERE","YEAR","BETWEEN","2014","AND","2017"],"query_toks_no_value":["select","distinct","name","from","races","where","year","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,1,[0,[0,11,false],null],2014.0,2017.0]]},"question_toks":["Finden","Sie","die","eindeutigen","Namen","aller","Rennen",",","die","zwischen","2014","und","2017","stattfinden","?"],"question":"Finden Sie die eindeutigen Namen aller Rennen, die zwischen 2014 und 2017 stattfinden? "},{"db_id":"voter_2","query":"SELECT max(Age) FROM STUDENT","query_toks":["SELECT","max","(","Age",")","FROM","STUDENT"],"query_toks_no_value":["select","max","(","age",")","from","student"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","das","\u00e4lteste","Alter","unter","den","Studierenden","?"],"question":"Was ist das \u00e4lteste Alter unter den Studierenden?"},{"db_id":"cinema","query":"SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1","query_toks":["SELECT","LOCATION","FROM","cinema","WHERE","capacity",">","300","GROUP","BY","LOCATION","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","location","from","cinema","where","capacity",">","value","group","by","location","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,12,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],300.0,null]]},"question_toks":["Finden","Sie","die","Standorte","die","mehr","als","ein","Kino","mit","einer","Kapazit\u00e4t","von","\u00fcber","300","Kinos","haben","."],"question":"Finden Sie die Standorte die mehr als ein Kino mit einer Kapazit\u00e4t von \u00fcber 300 Kinos haben. "},{"db_id":"loan_1","query":"SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0","query_toks":["SELECT","state",",","acc_type",",","credit_score","FROM","customer","WHERE","no_of_loans","=","0"],"query_toks_no_value":["select","state",",","acc_type",",","credit_score","from","customer","where","no_of_loans","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]],[0,[0,[0,8,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],0.0,null]]},"question_toks":["Finde","den","Staat",",","Kontotyp","und","Credit","Score","des","Kunden",",","dessen","Anzahl","an","Krediten","0","ist","."],"question":"Finde den Staat, Kontotyp und Credit Score des Kunden, dessen Anzahl an Krediten 0 ist."},{"db_id":"college_1","query":"SELECT count(*) ,  dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY dept_code","query_toks":["SELECT","count","(","*",")",",","dept_code","FROM","CLASS","AS","T1","JOIN","course","AS","T2","ON","T1.crs_code","=","T2.crs_code","GROUP","BY","dept_code"],"query_toks_no_value":["select","count","(","*",")",",","dept_code","from","class","as","t1","join","course","as","t2","on","t1",".","crs_code","=","t2",".","crs_code","group","by","dept_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Kurse","werden","in","jeder","Abteilung","abgehalten","?"],"question":"Wie viele Kurse werden in jeder Abteilung abgehalten?"},{"db_id":"entrepreneur","query":"SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC","query_toks":["SELECT","T2.Weight","FROM","entrepreneur","AS","T1","JOIN","people","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T1.Money_Requested","DESC"],"query_toks_no_value":["select","t2",".","weight","from","entrepreneur","as","t1","join","people","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t1",".","money_requested","desc"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,4,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ind","die","Gewichte","der","Unternehmer","in","absteigender","Reihenfolge","der","beantragten","Gelder","?"],"question":"Welches ind die Gewichte der Unternehmer in absteigender Reihenfolge der beantragten Gelder?"},{"db_id":"entrepreneur","query":"SELECT Company ,  Investor FROM entrepreneur","query_toks":["SELECT","Company",",","Investor","FROM","entrepreneur"],"query_toks_no_value":["select","company",",","investor","from","entrepreneur"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Unternehmen","und","Investoren","geh\u00f6ren","zu","jedem","Unternehmer","?"],"question":"Welche Unternehmen und Investoren geh\u00f6ren zu jedem Unternehmer?"},{"db_id":"loan_1","query":"SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Mortgages'","query_toks":["SELECT","cust_name","FROM","customer","EXCEPT","SELECT","T1.cust_name","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id","WHERE","T2.loan_type","=","'Mortgages","'"],"query_toks_no_value":["select","cust_name","from","customer","except","select","t1",".","cust_name","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id","where","t2",".","loan_type","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"Mortgages\"",null]]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","von","Kunden",",","die","keinen","Kredit","mit","einer","Art","von","Hypotheken","haben","."],"question":"Finde den Namen von Kunden, die keinen Kredit mit einer Art von Hypotheken haben."},{"db_id":"store_product","query":"SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)","query_toks":["SELECT","sum","(","city_population",")","FROM","district","WHERE","city_area",">","(","SELECT","avg","(","city_area",")","FROM","district",")"],"query_toks_no_value":["select","sum","(","city_population",")","from","district","where","city_area",">","(","select","avg","(","city_area",")","from","district",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,17,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,18,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Ermitteln","Sie","die","Gesamtbev\u00f6lkerung","der","Bezirke",",","in","denen","das","Gebiet","gr\u00f6\u00dfer","als","das","durchschnittliche","Stadtgebiet","ist","."],"question":"Ermitteln Sie die Gesamtbev\u00f6lkerung der Bezirke, in denen das Gebiet gr\u00f6\u00dfer als das durchschnittliche Stadtgebiet ist. "},{"db_id":"college_1","query":"SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018","query_toks":["SELECT","T1.stu_lname","FROM","student","AS","T1","JOIN","enroll","AS","T2","ON","T1.stu_num","=","T2.stu_num","WHERE","T2.enroll_grade","=","'A","'","AND","T2.class_code","=","10018"],"query_toks_no_value":["select","t1",".","stu_lname","from","student","as","t1","join","enroll","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","where","t2",".","enroll_grade","=","value","and","t2",".","class_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,25,false],null]],"table_units":[["table_unit",6],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]]]],"union":null,"where":[[false,2,[0,[0,26,false],null],"\"A\"",null],"and",[false,2,[0,[0,24,false],null],10018.0,null]]},"question_toks":["Wie","lautet","der","Nachname","des","Sch\u00fclers",",","der","in","der","Klasse","mit","dem","Code","10018","eine","Eins","erhalten","hat","?"],"question":"Wie lautet der Nachname des Sch\u00fclers, der in der Klasse mit dem Code 10018 eine Eins erhalten hat? "},{"db_id":"college_1","query":"SELECT count(*) ,  class_room FROM CLASS GROUP BY class_room HAVING count(*)  >=  2","query_toks":["SELECT","count","(","*",")",",","class_room","FROM","CLASS","GROUP","BY","class_room","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","count","(","*",")",",","class_room","from","class","group","by","class_room","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Kurse","werden","bei","jedem","Unterrichtsraum","mit","mindestens","zwei","Kursen","angeboten","?"],"question":"Wie viele Kurse werden bei jedem Unterrichtsraum mit mindestens zwei Kursen angeboten?"},{"db_id":"loan_1","query":"SELECT avg(credit_score) FROM customer WHERE cust_id NOT IN (SELECT cust_id FROM loan)","query_toks":["SELECT","avg","(","credit_score",")","FROM","customer","WHERE","cust_id","NOT","IN","(","SELECT","cust_id","FROM","loan",")"],"query_toks_no_value":["select","avg","(","credit_score",")","from","customer","where","cust_id","not","in","(","select","cust_id","from","loan",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,11,false],null]]]],"union":null,"where":[[true,8,[0,[0,6,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Was","ist","die","durchschnittliche","Kreditw\u00fcrdigkeit","bei","Kunden",",","die","nie","einen","Kredit","genommen","haben","?"],"question":"Was ist die durchschnittliche Kreditw\u00fcrdigkeit bei Kunden, die nie einen Kredit genommen haben?"},{"db_id":"music_1","query":"SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1","query_toks":["SELECT","formats","FROM","files","GROUP","BY","formats","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","formats","from","files","group","by","formats","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","das","beliebteste","Dateiformat","?"],"question":"Was ist das beliebteste Dateiformat? "},{"db_id":"csu_1","query":"SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND T2.year  =  1996","query_toks":["SELECT","campusfee","FROM","campuses","AS","T1","JOIN","csu_fees","AS","T2","ON","T1.id","=","t2.campus","WHERE","t1.campus","=","``","San","Jose","State","University","''","AND","T2.year","=","1996"],"query_toks_no_value":["select","campusfee","from","campuses","as","t1","join","csu_fees","as","t2","on","t1",".","id","=","t2",".","campus","where","t1",".","campus","=","value","and","t2",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"San Jose State University\"",null],"and",[false,2,[0,[0,7,false],null],1996.0,null]]},"question_toks":["Wie","hoch","ist","die","Campusgeb\u00fchr","f\u00fcr","die","San","Jose","State","University","im","Jahr","1996","?"],"question":"Wie hoch ist die Campusgeb\u00fchr f\u00fcr die San Jose State University im Jahr 1996? "},{"db_id":"loan_1","query":"SELECT count(DISTINCT acc_type) FROM customer","query_toks":["SELECT","count","(","DISTINCT","acc_type",")","FROM","customer"],"query_toks_no_value":["select","count","(","distinct","acc_type",")","from","customer"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,8,true],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hle","die","unterschiedlichen","Kontotypen","."],"question":"Z\u00e4hle die unterschiedlichen Kontotypen."},{"db_id":"voter_2","query":"SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\"","query_toks":["SELECT","DISTINCT","Secretary_Vote","FROM","VOTING_RECORD","WHERE","ELECTION_CYCLE","=","``","Fall","''"],"query_toks_no_value":["select","distinct","secretary_vote","from","voting_record","where","election_cycle","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Fall\"",null]]},"question_toks":["Gebe","alle","einzelnen","Sekret\u00e4rstimmen","an",",","die","im","Herbstwahlzyklus","abgegeben","wurden","."],"question":"Gebe alle einzelnen Sekret\u00e4rstimmen an, die im Herbstwahlzyklus abgegeben wurden. "},{"db_id":"music_1","query":"SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800","query_toks":["SELECT","DISTINCT","T1.file_size",",","T1.formats","FROM","files","AS","T1","JOIN","song","AS","T2","ON","T1.f_id","=","T2.f_id","WHERE","T2.resolution","<","800"],"query_toks_no_value":["select","distinct","t1",".","file_size",",","t1",".","formats","from","files","as","t1","join","song","as","t2","on","t1",".","f_id","=","t2",".","f_id","where","t2",".","resolution","<","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,16,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,10,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,4,[0,[0,21,false],null],800.0,null]]},"question_toks":["F\u00fchren","Sie","die","Dateigr\u00f6\u00dfe","und","das","Format","f\u00fcr","alle","Lieder","auf",",","die","eine","Aufl\u00f6sung","von","weniger","als","800","haben","."],"question":"F\u00fchren Sie die Dateigr\u00f6\u00dfe und das Format f\u00fcr alle Lieder auf, die eine Aufl\u00f6sung von weniger als 800 haben. "},{"db_id":"voter_2","query":"SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600","query_toks":["SELECT","max","(","Age",")",",","min","(","Age",")","FROM","STUDENT","WHERE","Major","=","600"],"query_toks_no_value":["select","max","(","age",")",",","min","(","age",")","from","student","where","major","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,4,false],null]],[2,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],600.0,null]]},"question_toks":["Was","sind","das","geringste","und","h\u00f6chste","Alter","bei","Studenten","mit","einem","Hauptfach","600","?"],"question":"Was sind das geringste und h\u00f6chste Alter bei Studenten mit einem Hauptfach 600?"},{"db_id":"twitter_1","query":"SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Mary\" OR T1.name  =  \"Susan\"","query_toks":["SELECT","T2.f1","FROM","user_profiles","AS","T1","JOIN","follows","AS","T2","ON","T1.uid","=","T2.f2","WHERE","T1.name","=","``","Mary","''","OR","T1.name","=","``","Susan","''"],"query_toks_no_value":["select","t2",".","f1","from","user_profiles","as","t1","join","follows","as","t2","on","t1",".","uid","=","t2",".","f2","where","t1",".","name","=","value","or","t1",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"Mary\"",null],"or",[false,2,[0,[0,8,false],null],"\"Susan\"",null]]},"question_toks":["Finde","die","ID","von","Nutzern",",","denen","Mary","oder","Susan","folgen","."],"question":"Finde die ID von Nutzern, denen Mary oder Susan folgen."},{"db_id":"swimming","query":"SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win'","query_toks":["SELECT","t1.name","FROM","swimmer","AS","t1","JOIN","record","AS","t2","ON","t1.id","=","t2.swimmer_id","WHERE","RESULT","=","'Win","'"],"query_toks_no_value":["select","t1",".","name","from","swimmer","as","t1","join","record","as","t2","on","t1",".","id","=","t2",".","swimmer_id","where","result","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],"\"Win\"",null]]},"question_toks":["Finde","die","Namen","von","Schwimmern",",","die","das","Ergebnis","``","gewonnen","''","haben","."],"question":"Finde die Namen von Schwimmern, die das Ergebnis \"gewonnen\" haben."},{"db_id":"college_1","query":"SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE T1.EMP_LNAME  =  'Graztevski'","query_toks":["SELECT","count","(","*",")","FROM","employee","AS","T1","JOIN","CLASS","AS","T2","ON","T1.EMP_NUM","=","T2.PROF_NUM","WHERE","T1.EMP_LNAME","=","'Graztevski","'"],"query_toks_no_value":["select","count","(","*",")","from","employee","as","t1","join","class","as","t2","on","t1",".","emp_num","=","t2",".","prof_num","where","t1",".","emp_lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"Graztevski\"",null]]},"question_toks":["Wie","viele","Kurse","unterrichtet","der","Professor","mit","dem","Nachnamen","Graztevki","?"],"question":"Wie viele Kurse unterrichtet der Professor mit dem Nachnamen Graztevki?"},{"db_id":"activity_1","query":"SELECT count(DISTINCT FacID) FROM Faculty_participates_in","query_toks":["SELECT","count","(","DISTINCT","FacID",")","FROM","Faculty_participates_in"],"query_toks_no_value":["select","count","(","distinct","facid",")","from","faculty_participates_in"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,5,true],null]]]],"union":null,"where":[]},"question_toks":["Gib","mir","die","Zahl","der","Fakult\u00e4tsmitglieder",",","die","an","einer","Aktivit\u00e4t","teilnehmen","."],"question":"Gib mir die Zahl der Fakult\u00e4tsmitglieder, die an einer Aktivit\u00e4t teilnehmen."},{"db_id":"activity_1","query":"SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"","query_toks":["SELECT","count","(","*",")","FROM","Faculty","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.facID","=","T2.facID","WHERE","T1.fname","=","``","Mark","''","AND","T1.lname","=","``","Giuliano","''"],"query_toks_no_value":["select","count","(","*",")","from","faculty","as","t1","join","faculty_participates_in","as","t2","on","t1",".","facid","=","t2",".","facid","where","t1",".","fname","=","value","and","t1",".","lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,5,false],null]],"table_units":[["table_unit",4],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"Mark\"",null],"and",[false,2,[0,[0,16,false],null],"\"Giuliano\"",null]]},"question_toks":["Finde","die","Zahl","der","Aktivit\u00e4ten",",","an","denen","Mark","Giuliano","teilnimmt","."],"question":"Finde die Zahl der Aktivit\u00e4ten, an denen Mark Giuliano teilnimmt."},{"db_id":"loan_1","query":"SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1","query_toks":["SELECT","cust_name",",","acc_type",",","acc_bal","FROM","customer","ORDER","BY","credit_score","DESC","LIMIT","1"],"query_toks_no_value":["select","cust_name",",","acc_type",",","acc_bal","from","customer","order","by","credit_score","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,8,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen",",","Kontotyp","und","Kontostand","des","Kunden",",","der","die","h\u00f6chste","Kreditw\u00fcrdigkeit","hat","."],"question":"Finde den Namen, Kontotyp und Kontostand des Kunden, der die h\u00f6chste Kreditw\u00fcrdigkeit hat."},{"db_id":"college_1","query":"SELECT count(DISTINCT class_code) FROM CLASS","query_toks":["SELECT","count","(","DISTINCT","class_code",")","FROM","CLASS"],"query_toks_no_value":["select","count","(","distinct","class_code",")","from","class"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,1,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","einzigartige","Kurse","werden","angeboten","?"],"question":"Wie viele einzigartige Kurse werden angeboten? "},{"db_id":"voter_2","query":"SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE","query_toks":["SELECT","DISTINCT","T1.Fname","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","T2.CLASS_Senator_VOTE"],"query_toks_no_value":["select","distinct","t1",".","fname","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","t2",".","class_senator_vote"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","eindeutigen","Vornamen","der","Studenten",",","die","Klassensenatorenstimmen","haben","."],"question":"Finden Sie die eindeutigen Vornamen der Studenten, die Klassensenatorenstimmen haben. "},{"db_id":"csu_1","query":"SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Francisco State University\"","query_toks":["SELECT","sum","(","t1.graduate",")","FROM","discipline_enrollments","AS","t1","JOIN","campuses","AS","t2","ON","t1.campus","=","t2.id","WHERE","t1.year","=","2004","AND","t2.campus","=","``","San","Francisco","State","University","''"],"query_toks_no_value":["select","sum","(","t1",".","graduate",")","from","discipline_enrollments","as","t1","join","campuses","as","t2","on","t1",".","campus","=","t2",".","id","where","t1",".","year","=","value","and","t2",".","campus","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,1,false],null]],"table_units":[["table_unit",3],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],2004.0,null],"and",[false,2,[0,[0,2,false],null],"\"San Francisco State University\"",null]]},"question_toks":["Was","ist","die","Anzahl","der","Absolventen","der","San","Francisco","State","University","im","Jahr","2004","?"],"question":"Was ist die Anzahl der Absolventen der San Francisco State University im Jahr 2004?"},{"db_id":"tracking_orders","query":"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"Cancel\" AND T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1","query_toks":["SELECT","T1.customer_name","FROM","customers","AS","T1","JOIN","orders","AS","T2","JOIN","order_items","AS","T3","JOIN","products","AS","T4","ON","T1.customer_id","=","T2.customer_id","AND","T2.order_id","=","T3.order_id","AND","T3.product_id","=","T4.product_id","WHERE","T3.order_item_status","=","``","Cancel","''","AND","T4.product_name","=","``","food","''","GROUP","BY","T1.customer_id","HAVING","count","(","*",")",">","=","1"],"query_toks_no_value":["select","t1",".","customer_name","from","customers","as","t1","join","orders","as","t2","join","order_items","as","t3","join","products","as","t4","on","t1",".","customer_id","=","t2",".","customer_id","and","t2",".","order_id","=","t3",".","order_id","and","t3",".","product_id","=","t4",".","product_id","where","t3",".","order_item_status","=","value","and","t4",".","product_name","=","value","group","by","t1",".","customer_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null],"and",[false,2,[0,[0,7,false],null],[0,17,false],null],"and",[false,2,[0,[0,16,false],null],[0,12,false],null]],"table_units":[["table_unit",0],["table_unit",2],["table_unit",4],["table_unit",3]]},"groupBy":[[0,1,false]],"having":[[false,5,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"Cancel\"",null],"and",[false,2,[0,[0,13,false],null],"\"food\"",null]]},"question_toks":["``","Welche","Kunden","haben","jemals","den","Kauf","des","Produkts","``","Lebensmittel","''","storniert","?","(","der","Artikelstatus","ist","``","''","Abbrechen","''","''",")","?"],"question":"\"Welche Kunden haben jemals den Kauf des Produkts \"Lebensmittel\" storniert? (der Artikelstatus ist \"\"Abbrechen\"\")? "},{"db_id":"tracking_orders","query":"SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Packing\"","query_toks":["SELECT","DISTINCT","T1.customer_name","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T2.order_status","=","``","Packing","''"],"query_toks_no_value":["select","distinct","t1",".","customer_name","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t2",".","order_status","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Packing\"",null]]},"question_toks":["``","Welche","Kunden","haben","Bestellungen","mit","dem","Status","``","''","Verpackung","''","?","Geben","Sie","mir","die","Namen","der","Kunden","''","."],"question":"\"Welche Kunden haben Bestellungen mit dem Status \"\"Verpackung\"? Geben Sie mir die Namen der Kunden\". "},{"db_id":"voter_2","query":"SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.Sex  =  \"M\" AND T2.Election_Cycle  =  \"Fall\"","query_toks":["SELECT","count","(","*",")","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","Class_Senator_Vote","WHERE","T1.Sex","=","``","M","''","AND","T2.Election_Cycle","=","``","Fall","''"],"query_toks_no_value":["select","count","(","*",")","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","class_senator_vote","where","t1",".","sex","=","value","and","t2",".","election_cycle","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"M\"",null],"and",[false,2,[0,[0,11,false],null],"\"Fall\"",null]]},"question_toks":["Wie","viele","m\u00e4nnliche","Studenten","(","Geschlecht","ist","M",")","haben","im","Herbst-Wahlzyklus","die","Stimmen","der","Klassensenatoren","?"],"question":"Wie viele m\u00e4nnliche Studenten (Geschlecht ist M) haben im Herbst-Wahlzyklus die Stimmen der Klassensenatoren? "},{"db_id":"store_product","query":"SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","t3.headquartered_city","FROM","store","AS","t1","JOIN","store_district","AS","t2","ON","t1.store_id","=","t2.store_id","JOIN","district","AS","t3","ON","t2.district_id","=","t3.district_id","GROUP","BY","t3.headquartered_city","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t3",".","headquartered_city","from","store","as","t1","join","store_district","as","t2","on","t1",".","store_id","=","t2",".","store_id","join","district","as","t3","on","t2",".","district_id","=","t3",".","district_id","group","by","t3",".","headquartered_city","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,21,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[[0,16,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","Stadt","mit","der","gr\u00f6\u00dften","Anzahl","an","Gesch\u00e4ften","."],"question":"Finden Sie die Stadt mit der gr\u00f6\u00dften Anzahl an Gesch\u00e4ften. "},{"db_id":"sakila_1","query":"SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia'","query_toks":["SELECT","count","(","*",")","FROM","city","AS","T1","JOIN","country","AS","T2","ON","T1.country_id","=","T2.country_id","WHERE","T2.country","=","'Australia","'"],"query_toks_no_value":["select","count","(","*",")","from","city","as","t1","join","country","as","t2","on","t1",".","country_id","=","t2",".","country_id","where","t2",".","country","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,20,false],null]],"table_units":[["table_unit",3],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Australia\"",null]]},"question_toks":["Z\u00e4hlen","Sie","die","Anzahl","der","St\u00e4dte","in","Australien","."],"question":"Z\u00e4hlen Sie die Anzahl der St\u00e4dte in Australien. "},{"db_id":"college_1","query":"SELECT count(DISTINCT class_code) FROM CLASS","query_toks":["SELECT","count","(","DISTINCT","class_code",")","FROM","CLASS"],"query_toks_no_value":["select","count","(","distinct","class_code",")","from","class"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,1,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","unterschiedliche","Kurse","gibt","es","?"],"question":"Wie viele unterschiedliche Kurse gibt es?"},{"db_id":"music_1","query":"SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"modern\")","query_toks":["SELECT","f_id","FROM","song","WHERE","resolution",">","(","SELECT","avg","(","resolution",")","FROM","song","WHERE","genre_is","=","``","modern","''",")"],"query_toks_no_value":["select","f_id","from","song","where","resolution",">","(","select","avg","(","resolution",")","from","song","where","genre_is","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,3,[0,[0,21,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,21,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"modern\"",null]]},null]]},"question_toks":["Was","sind","die","IDs","aller","Lieder",",","die","eine","h\u00f6here","Aufl\u00f6sung","als","die","durchschnittliche","Aufl\u00f6sung","im","modernen","Genre","haben","?"],"question":"Was sind die IDs aller Lieder, die eine h\u00f6here Aufl\u00f6sung als die durchschnittliche Aufl\u00f6sung im modernen Genre haben? "},{"db_id":"manufacturer","query":"SELECT avg(Num_of_Factories) FROM manufacturer WHERE num_of_shops  >  20","query_toks":["SELECT","avg","(","Num_of_Factories",")","FROM","manufacturer","WHERE","num_of_shops",">","20"],"query_toks_no_value":["select","avg","(","num_of_factories",")","from","manufacturer","where","num_of_shops",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]]]],"union":null,"where":[[false,3,[0,[0,5,false],null],20.0,null]]},"question_toks":["Ermitteln","Sie","die","durchschnittliche","Anzahl","der","Fabriken","f\u00fcr","die","Hersteller",",","die","mehr","als","20","Gesch\u00e4fte","haben","."],"question":"Ermitteln Sie die durchschnittliche Anzahl der Fabriken f\u00fcr die Hersteller, die mehr als 20 Gesch\u00e4fte haben. "},{"db_id":"college_1","query":"SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'","query_toks":["SELECT","T3.dept_name",",","T2.prof_office","FROM","employee","AS","T1","JOIN","professor","AS","T2","ON","T1.emp_num","=","T2.emp_num","JOIN","department","AS","T3","ON","T2.dept_code","=","T3.dept_code","WHERE","T1.emp_lname","=","'Heffington","'"],"query_toks_no_value":["select","t3",".","dept_name",",","t2",".","prof_office","from","employee","as","t1","join","professor","as","t2","on","t1",".","emp_num","=","t2",".","emp_num","join","department","as","t3","on","t2",".","dept_code","=","t3",".","dept_code","where","t1",".","emp_lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,27,false],null]],"table_units":[["table_unit",3],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]],[0,[0,[0,29,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"Heffington\"",null]]},"question_toks":["Wie","lautet","der","Abteilungsname","und","das","Amt","des","Professors",",","dessen","Nachname","Heffington","lautet","?"],"question":"Wie lautet der Abteilungsname und das Amt des Professors, dessen Nachname Heffington lautet? "},{"db_id":"college_1","query":"SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num","query_toks":["SELECT","T2.emp_fname",",","T1.crs_code","FROM","CLASS","AS","T1","JOIN","employee","AS","T2","ON","T1.prof_num","=","T2.emp_num"],"query_toks_no_value":["select","t2",".","emp_fname",",","t1",".","crs_code","from","class","as","t1","join","employee","as","t2","on","t1",".","prof_num","=","t2",".","emp_num"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Vornamen","aller","Lehrkr\u00e4fte",",","die","einen","Kurs","unterrichtet","haben",",","und","die","entsprechenden","Kurscodes","?"],"question":"Wie lauten die Vornamen aller Lehrkr\u00e4fte, die einen Kurs unterrichtet haben, und die entsprechenden Kurscodes? "},{"db_id":"college_1","query":"SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'","query_toks":["SELECT","T4.crs_description",",","T4.crs_credit","FROM","CLASS","AS","T1","JOIN","enroll","AS","T2","ON","T1.class_code","=","T2.class_code","JOIN","student","AS","T3","ON","T3.stu_num","=","T2.stu_num","JOIN","course","AS","T4","ON","T4.crs_code","=","T1.crs_code","WHERE","T3.stu_lname","=","'Smithson","'"],"query_toks_no_value":["select","t4",".","crs_description",",","t4",".","crs_credit","from","class","as","t1","join","enroll","as","t2","on","t1",".","class_code","=","t2",".","class_code","join","student","as","t3","on","t3",".","stu_num","=","t2",".","stu_num","join","course","as","t4","on","t4",".","crs_code","=","t1",".","crs_code","where","t3",".","stu_lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,33,false],null],"\"Smithson\"",null]]},"question_toks":["Wie","sind","die","Beschreibung","und","die","Leistungspunkte","des","Kurses",",","an","dem","der","Student","teilnahm",",","dessen","Nachname","Smithson","ist","?"],"question":"Wie sind die Beschreibung und die Leistungspunkte des Kurses, an dem der Student teilnahm, dessen Nachname Smithson ist?"},{"db_id":"cinema","query":"SELECT LOCATION ,  count(*) FROM cinema GROUP BY LOCATION","query_toks":["SELECT","LOCATION",",","count","(","*",")","FROM","cinema","GROUP","BY","LOCATION"],"query_toks_no_value":["select","location",",","count","(","*",")","from","cinema","group","by","location"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","jeden","Ort","und","die","Anzahl","der","Kinos","dort","."],"question":"Zeige jeden Ort und die Anzahl der Kinos dort."},{"db_id":"formula_1","query":"SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)","query_toks":["SELECT","DISTINCT","driverid",",","STOP","FROM","pitstops","WHERE","duration","<","(","SELECT","max","(","duration",")","FROM","pitstops","WHERE","raceid","=","841",")"],"query_toks_no_value":["select","distinct","driverid",",","stop","from","pitstops","where","duration","<","(","select","max","(","duration",")","from","pitstops","where","raceid","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",11]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,83,false],null]],[0,[0,[0,84,false],null]]]],"union":null,"where":[[false,4,[0,[0,87,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",11]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,87,false],null]]]],"union":null,"where":[[false,2,[0,[0,82,false],null],841.0,null]]},null]]},"question_toks":["Finde","die","eindeutige","Fahrer-ID","und","die","Stoppzahl","aller","Fahrer",",","die","eine","k\u00fcrzere","Boxenstoppdauer","haben","als","einige","Fahrer","in","dem","Rennen","mit","der","ID","841","."],"question":"Finde die eindeutige Fahrer-ID und die Stoppzahl aller Fahrer, die eine k\u00fcrzere Boxenstoppdauer haben als einige Fahrer in dem Rennen mit der ID 841."},{"db_id":"college_1","query":"SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211'","query_toks":["SELECT","avg","(","T2.stu_gpa",")","FROM","enroll","AS","T1","JOIN","student","AS","T2","ON","T1.stu_num","=","T2.stu_num","JOIN","CLASS","AS","T3","ON","T1.class_code","=","T3.class_code","WHERE","T3.crs_code","=","'ACCT-211","'"],"query_toks_no_value":["select","avg","(","t2",".","stu_gpa",")","from","enroll","as","t1","join","student","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","join","class","as","t3","on","t1",".","class_code","=","t3",".","class_code","where","t3",".","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,25,false],null],[0,32,false],null]],"table_units":[["table_unit",4],["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,39,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"ACCT-211\"",null]]},"question_toks":["Was","ist","Notendurchschnitt","der","Studenten",",","die","in","dem","Kurs","mit","dem","Code","ACCT-211","eingeschrieben","sind","?"],"question":"Was ist Notendurchschnitt der Studenten, die in dem Kurs mit dem Code ACCT-211 eingeschrieben sind?"},{"db_id":"voter_2","query":"SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","Major","FROM","STUDENT","GROUP","BY","major","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","major","from","student","group","by","major","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","Fach","hat","die","meisten","Studenten","?"],"question":"Welches Fach hat die meisten Studenten?"},{"db_id":"loan_1","query":"SELECT bname FROM bank WHERE state  =  'New York'","query_toks":["SELECT","bname","FROM","bank","WHERE","state","=","'New","York","'"],"query_toks_no_value":["select","bname","from","bank","where","state","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"New York\"",null]]},"question_toks":["Finde","die","Zweigstellennamen","von","Banken","im","Staat","New","York","."],"question":"Finde die Zweigstellennamen von Banken im Staat New York."},{"db_id":"sakila_1","query":"SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","store_id","FROM","inventory","GROUP","BY","store_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","store_id","from","inventory","group","by","store_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",10]]},"groupBy":[[0,56,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,56,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","die","ID","des","Gesch\u00e4fts",",","das","die","meisten","Artikel","im","Inventar","hat","?"],"question":"Welches ist die ID des Gesch\u00e4fts, das die meisten Artikel im Inventar hat?"},{"db_id":"entrepreneur","query":"SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"Rachel Elnaugh\"","query_toks":["SELECT","T2.Name","FROM","entrepreneur","AS","T1","JOIN","people","AS","T2","ON","T1.People_ID","=","T2.People_ID","WHERE","T1.Investor","!","=","``","Rachel","Elnaugh","''"],"query_toks_no_value":["select","t2",".","name","from","entrepreneur","as","t1","join","people","as","t2","on","t1",".","people_id","=","t2",".","people_id","where","t1",".","investor","!","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,7,[0,[0,5,false],null],"\"Rachel Elnaugh\"",null]]},"question_toks":["Welches","sind","die","Namen","der","Unternehmer",",","deren","Investor","nicht","``","Rachel","Elnaugh","''","ist","?"],"question":"Welches sind die Namen der Unternehmer, deren Investor nicht \"Rachel Elnaugh\" ist?"},{"db_id":"college_1","query":"SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.'","query_toks":["SELECT","T1.emp_fname",",","T2.prof_office","FROM","employee","AS","T1","JOIN","professor","AS","T2","ON","T1.emp_num","=","T2.emp_num","JOIN","department","AS","T3","ON","T3.dept_code","=","T2.dept_code","WHERE","T3.dept_name","=","'History","'","AND","T2.prof_high_degree","=","'Ph.D",".","'"],"query_toks_no_value":["select","t1",".","emp_fname",",","t2",".","prof_office","from","employee","as","t1","join","professor","as","t2","on","t1",".","emp_num","=","t2",".","emp_num","join","department","as","t3","on","t3",".","dept_code","=","t2",".","dept_code","where","t3",".","dept_name","=","value","and","t2",".","prof_high_degree","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,27,false],null]],"table_units":[["table_unit",3],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,29,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"History\"",null],"and",[false,2,[0,[0,31,false],null],"\"Ph.D.\"",null]]},"question_toks":["Was","sind","die","Vornamen","und","B\u00fcros","der","Professoren",",","die","in","der","Geschichtsabteilung","sind","und","einen","Ph.D.","haben","?"],"question":"Was sind die Vornamen und B\u00fcros der Professoren, die in der Geschichtsabteilung sind und einen Ph.D. haben?"},{"db_id":"music_1","query":"SELECT artist_name FROM artist WHERE country  =  \"UK\" AND gender  =  \"Male\"","query_toks":["SELECT","artist_name","FROM","artist","WHERE","country","=","``","UK","''","AND","gender","=","``","Male","''"],"query_toks_no_value":["select","artist_name","from","artist","where","country","=","value","and","gender","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"UK\"",null],"and",[false,2,[0,[0,6,false],null],"\"Male\"",null]]},"question_toks":["Welches","sind","die","Namen","von","K\u00fcnstlern",",","die","m\u00e4nnlich","und","aus","dem","UK","sind","?"],"question":"Welches sind die Namen von K\u00fcnstlern, die m\u00e4nnlich und aus dem UK sind?"},{"db_id":"csu_1","query":"SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002","query_toks":["SELECT","sum","(","faculty",")","FROM","faculty","WHERE","YEAR","=","2002"],"query_toks_no_value":["select","sum","(","faculty",")","from","faculty","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],2002.0,null]]},"question_toks":["Wie","viele","Fakult\u00e4ten","gibt","es","insgesamt","im","Jahre","2002","?"],"question":"Wie viele Fakult\u00e4ten gibt es insgesamt im Jahre 2002?"},{"db_id":"loan_1","query":"SELECT cust_name FROM customer ORDER BY acc_bal","query_toks":["SELECT","cust_name","FROM","customer","ORDER","BY","acc_bal"],"query_toks_no_value":["select","cust_name","from","customer","order","by","acc_bal"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","die","Namen","aller","Kunden","auf",",","sortiert","nach","ihrem","Kontostand","in","aufsteigender","Folge","."],"question":"Liste die Namen aller Kunden auf, sortiert nach ihrem Kontostand in aufsteigender Folge."},{"db_id":"entrepreneur","query":"SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC","query_toks":["SELECT","T2.Weight","FROM","entrepreneur","AS","T1","JOIN","people","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T1.Money_Requested","DESC"],"query_toks_no_value":["select","t2",".","weight","from","entrepreneur","as","t1","join","people","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t1",".","money_requested","desc"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,4,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","die","Gewichte","von","Unternehmern","aus",",","absteigend","sortiert","nach","dem","angefragten","Geldbetrag","."],"question":"Gib die Gewichte von Unternehmern aus, absteigend sortiert nach dem angefragten Geldbetrag."},{"db_id":"entrepreneur","query":"SELECT Name FROM People ORDER BY Weight ASC","query_toks":["SELECT","Name","FROM","People","ORDER","BY","Weight","ASC"],"query_toks_no_value":["select","name","from","people","order","by","weight","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","sind","die","Namen","von","Menschen","in","ansteigender","Sortierung","des","Gewicht","?"],"question":"Wie sind die Namen von Menschen in ansteigender Sortierung des Gewicht?"},{"db_id":"college_1","query":"SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE T1.EMP_LNAME  =  'Graztevski'","query_toks":["SELECT","count","(","*",")","FROM","employee","AS","T1","JOIN","CLASS","AS","T2","ON","T1.EMP_NUM","=","T2.PROF_NUM","WHERE","T1.EMP_LNAME","=","'Graztevski","'"],"query_toks_no_value":["select","count","(","*",")","from","employee","as","t1","join","class","as","t2","on","t1",".","emp_num","=","t2",".","prof_num","where","t1",".","emp_lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"Graztevski\"",null]]},"question_toks":["Wie","viele","Kurse","sind","es",",","die","der","Professor","mit","dem","Nachnamen","Graztevski","hat","?"],"question":"Wie viele Kurse sind es, die der Professor mit dem Nachnamen Graztevski hat?"},{"db_id":"entrepreneur","query":"SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000","query_toks":["SELECT","Investor","FROM","entrepreneur","WHERE","Money_Requested",">","140000","INTERSECT","SELECT","Investor","FROM","entrepreneur","WHERE","Money_Requested","<","120000"],"query_toks_no_value":["select","investor","from","entrepreneur","where","money_requested",">","value","intersect","select","investor","from","entrepreneur","where","money_requested","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,4,[0,[0,4,false],null],120000.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],140000.0,null]]},"question_toks":["Zeige","die","Investoren",",","die","von","Unternehmern","geteilt","werden",",","die","mehr","als","140000","angefragt","haben",",","und","Unternehmern",",","die","weniger","als","120000","angefragt","haben","."],"question":"Zeige die Investoren, die von Unternehmern geteilt werden, die mehr als 140000 angefragt haben, und Unternehmern, die weniger als 120000 angefragt haben."},{"db_id":"voter_2","query":"SELECT Major FROM STUDENT WHERE Sex  =  \"M\"","query_toks":["SELECT","Major","FROM","STUDENT","WHERE","Sex","=","``","M","''"],"query_toks_no_value":["select","major","from","student","where","sex","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"M\"",null]]},"question_toks":["Welches","sind","die","Hauptf\u00e4cher","m\u00e4nnlicher","(","Geschlecht","ist","M",")","Studenten","?"],"question":"Welches sind die Hauptf\u00e4cher m\u00e4nnlicher (Geschlecht ist M) Studenten?"},{"db_id":"entrepreneur","query":"SELECT Company ,  Investor FROM entrepreneur","query_toks":["SELECT","Company",",","Investor","FROM","entrepreneur"],"query_toks_no_value":["select","company",",","investor","from","entrepreneur"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["List","die","Unternehmen","und","Investoren","von","Unternehmern","auf","."],"question":"List die Unternehmen und Investoren von Unternehmern auf."},{"db_id":"loan_1","query":"SELECT count(*) FROM bank","query_toks":["SELECT","count","(","*",")","FROM","bank"],"query_toks_no_value":["select","count","(","*",")","from","bank"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hle","die","Bankfilialen","."],"question":"Z\u00e4hle die Bankfilialen."},{"db_id":"activity_1","query":"SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2","query_toks":["SELECT","T1.FacID","FROM","Faculty","AS","T1","JOIN","Student","AS","T2","ON","T1.FacID","=","T2.advisor","GROUP","BY","T1.FacID","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","facid","from","faculty","as","t1","join","student","as","t2","on","t1",".","facid","=","t2",".","advisor","group","by","t1",".","facid","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,13,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[[0,15,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","die","Ausweise","f\u00fcr","alle","Fakult\u00e4tsmitglieder",",","die","mindestens","2","Studierende","haben","."],"question":"Zeigen Sie die Ausweise f\u00fcr alle Fakult\u00e4tsmitglieder, die mindestens 2 Studierende haben. "},{"db_id":"sakila_1","query":"SELECT count(*) FROM store","query_toks":["SELECT","count","(","*",")","FROM","store"],"query_toks_no_value":["select","count","(","*",")","from","store"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",15]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Gesch\u00e4fte","gibt","es","?"],"question":"Wie viele Gesch\u00e4fte gibt es? "},{"db_id":"tracking_orders","query":"SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452","query_toks":["SELECT","T1.date_order_placed","FROM","orders","AS","T1","JOIN","shipments","AS","T2","ON","T1.order_id","=","T2.order_id","WHERE","T2.shipment_tracking_number","=","3452"],"query_toks_no_value":["select","t1",".","date_order_placed","from","orders","as","t1","join","shipments","as","t2","on","t1",".","order_id","=","t2",".","order_id","where","t2",".","shipment_tracking_number","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,21,false],null]],"table_units":[["table_unit",2],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],3452.0,null]]},"question_toks":["An","welchem","Tag","wurde","die","Bestellung","aufgegeben",",","deren","Sendungsverfolgungsnummer","3452","lautet","?"],"question":"An welchem Tag wurde die Bestellung aufgegeben, deren Sendungsverfolgungsnummer 3452 lautet?"},{"db_id":"sakila_1","query":"SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3","query_toks":["SELECT","T2.country","FROM","city","AS","T1","JOIN","country","AS","T2","ON","T1.country_id","=","T2.country_id","GROUP","BY","T2.country_id","HAVING","count","(","*",")",">","=","3"],"query_toks_no_value":["select","t2",".","country","from","city","as","t1","join","country","as","t2","on","t1",".","country_id","=","t2",".","country_id","group","by","t2",".","country_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,20,false],null]],"table_units":[["table_unit",3],["table_unit",4]]},"groupBy":[[0,20,false]],"having":[[false,5,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,21,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","L\u00e4nder","haben","mindestens","3","St\u00e4dte","?"],"question":"Welche L\u00e4nder haben mindestens 3 St\u00e4dte?"},{"db_id":"college_1","query":"SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code","query_toks":["SELECT","T1.stu_fname",",","T1.stu_lname",",","T4.crs_description","FROM","student","AS","T1","JOIN","enroll","AS","T2","ON","T1.stu_num","=","T2.stu_num","JOIN","CLASS","AS","T3","ON","T2.class_code","=","T3.class_code","JOIN","course","AS","T4","ON","T3.crs_code","=","T4.crs_code"],"query_toks_no_value":["select","t1",".","stu_fname",",","t1",".","stu_lname",",","t4",".","crs_description","from","student","as","t1","join","enroll","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","join","class","as","t3","on","t2",".","class_code","=","t3",".","class_code","join","course","as","t4","on","t3",".","crs_code","=","t4",".","crs_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,25,false],null]],"table_units":[["table_unit",6],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,33,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","Namen","aller","Studenten",",","die","an","einem","Kurs","teilgenommen","haben",",","und","die","Kursbeschreibung","."],"question":"Finden Sie die Namen aller Studenten, die an einem Kurs teilgenommen haben, und die Kursbeschreibung. "},{"db_id":"college_1","query":"SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'","query_toks":["SELECT","crs_credit",",","crs_description","FROM","course","WHERE","crs_code","=","'CIS-220","'"],"query_toks_no_value":["select","crs_credit",",","crs_description","from","course","where","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"CIS-220\"",null]]},"question_toks":["Was","ist","die","Beschreibung","f\u00fcr","die","CIS-220","und","wie","viele","Credits","hat","sie","?"],"question":"Was ist die Beschreibung f\u00fcr die CIS-220 und wie viele Credits hat sie?"},{"db_id":"coffee_shop","query":"SELECT address FROM shop ORDER BY open_year","query_toks":["SELECT","address","FROM","shop","ORDER","BY","open_year"],"query_toks_no_value":["select","address","from","shop","order","by","open_year"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Ladenadressen","geordnet","nach","\u00d6ffnungsjahr","."],"question":"Zeige die Ladenadressen geordnet nach \u00d6ffnungsjahr."},{"db_id":"loan_1","query":"SELECT count(DISTINCT state) FROM bank","query_toks":["SELECT","count","(","DISTINCT","state",")","FROM","bank"],"query_toks_no_value":["select","count","(","distinct","state",")","from","bank"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,5,true],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","Anzahl","der","verschiedenen","Staaten",",","in","denen","sich","die","Banken","befinden","."],"question":"Finden Sie die Anzahl der verschiedenen Staaten, in denen sich die Banken befinden."},{"db_id":"college_1","query":"SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211' AND T1.stu_lname LIKE 'S%'","query_toks":["SELECT","T1.stu_fname","FROM","student","AS","T1","JOIN","enroll","AS","T2","ON","T1.stu_num","=","T2.stu_num","JOIN","CLASS","AS","T3","ON","T2.class_code","=","T3.class_code","WHERE","T3.crs_code","=","'ACCT-211","'","AND","T1.stu_lname","LIKE","'S","%","'"],"query_toks_no_value":["select","t1",".","stu_fname","from","student","as","t1","join","enroll","as","t2","on","t1",".","stu_num","=","t2",".","stu_num","join","class","as","t3","on","t2",".","class_code","=","t3",".","class_code","where","t3",".","crs_code","=","value","and","t1",".","stu_lname","like","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,25,false],null]],"table_units":[["table_unit",6],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"ACCT-211\"",null],"and",[false,9,[0,[0,33,false],null],"\"S%\"",null]]},"question_toks":["Wie","lautet","der","Vorname","des","Studenten",",","dessen","Nachname","mit","dem","Buchstaben","S","beginnt","und","der","am","ACCT-211","teilnimmt","?"],"question":"Wie lautet der Vorname des Studenten, dessen Nachname mit dem Buchstaben S beginnt und der am ACCT-211 teilnimmt? "},{"db_id":"manufacturer","query":"SELECT name ,  furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1","query_toks":["SELECT","name",",","furniture_id","FROM","furniture","ORDER","BY","market_rate","DESC","LIMIT","1"],"query_toks_no_value":["select","name",",","furniture_id","from","furniture","order","by","market_rate","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","den","Namen","und","die","ID","des","M\u00f6bels","mit","dem","h\u00f6chsten","Marktpreis","zur\u00fcck","."],"question":"Geben Sie den Namen und die ID des M\u00f6bels mit dem h\u00f6chsten Marktpreis zur\u00fcck. "},{"db_id":"entrepreneur","query":"SELECT count(*) FROM entrepreneur","query_toks":["SELECT","count","(","*",")","FROM","entrepreneur"],"query_toks_no_value":["select","count","(","*",")","from","entrepreneur"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hle","die","Zahl","der","Unternehmer","."],"question":"Z\u00e4hle die Zahl der Unternehmer."},{"db_id":"csu_1","query":"SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"","query_toks":["SELECT","campus","FROM","campuses","WHERE","county","=","``","Los","Angeles","''"],"query_toks_no_value":["select","campus","from","campuses","where","county","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Los Angeles\"",null]]},"question_toks":["Geben","Sie","die","Namen","aller","Campusse","im","Bezirk","Los","Angeles","an","."],"question":"Geben Sie die Namen aller Campusse im Bezirk Los Angeles an. "},{"db_id":"college_1","query":"SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1","query_toks":["SELECT","T2.dept_name","FROM","professor","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","GROUP","BY","T1.dept_code","ORDER","BY","count","(","*",")","LIMIT","1"],"query_toks_no_value":["select","t2",".","dept_name","from","professor","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","group","by","t1",".","dept_code","order","by","count","(","*",")","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,28,false],null],[0,11,false],null]],"table_units":[["table_unit",5],["table_unit",2]]},"groupBy":[[0,28,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","der","Name","der","Abteilung",",","welche","die","geringste","Anzahl","Professoren","hat","?"],"question":"Was ist der Name der Abteilung, welche die geringste Anzahl Professoren hat?"},{"db_id":"college_1","query":"SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'","query_toks":["SELECT","class_code","FROM","CLASS","WHERE","class_room","=","'KLR209","'"],"query_toks_no_value":["select","class_code","from","class","where","class_room","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"KLR209\"",null]]},"question_toks":["Liste","die","Codes","auf","von","allen","Kursen",",","die","in","Raum","KLR209","stattfinden","."],"question":"Liste die Codes auf von allen Kursen, die in Raum KLR209 stattfinden."},{"db_id":"activity_1","query":"SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"","query_toks":["SELECT","T3.activity_name","FROM","Faculty","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.facID","=","T2.facID","JOIN","Activity","AS","T3","ON","T3.actid","=","T2.actid","WHERE","T1.fname","=","``","Mark","''","AND","T1.lname","=","``","Giuliano","''"],"query_toks_no_value":["select","t3",".","activity_name","from","faculty","as","t1","join","faculty_participates_in","as","t2","on","t1",".","facid","=","t2",".","facid","join","activity","as","t3","on","t3",".","actid","=","t2",".","actid","where","t1",".","fname","=","value","and","t1",".","lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,5,false],null]],"table_units":[["table_unit",4],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"Mark\"",null],"and",[false,2,[0,[0,16,false],null],"\"Giuliano\"",null]]},"question_toks":["Was","sind","die","Namen","der","Aktivit\u00e4ten",",","an","denen","Mark","Giuliano","beteiligt","ist","?"],"question":"Was sind die Namen der Aktivit\u00e4ten, an denen Mark Giuliano beteiligt ist?"},{"db_id":"formula_1","query":"SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1","query_toks":["SELECT","DISTINCT","T1.forename","FROM","drivers","AS","T1","JOIN","driverstandings","AS","T2","ON","T1.driverid","=","T2.driverid","WHERE","T2.position","=","1","AND","T2.wins","=","1"],"query_toks_no_value":["select","distinct","t1",".","forename","from","drivers","as","t1","join","driverstandings","as","t2","on","t1",".","driverid","=","t2",".","driverid","where","t2",".","position","=","value","and","t2",".","wins","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,63,false],null]],"table_units":[["table_unit",2],["table_unit",8]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,65,false],null],1.0,null],"and",[false,2,[0,[0,67,false],null],1.0,null]]},"question_toks":["Welches","sind","alle","unterschiedlichen","Vornamen","der","Fahrer",",","die","in","der","Position","stehend","sind","und","gewannen","?"],"question":"Welches sind alle unterschiedlichen Vornamen der Fahrer, die in der Position stehend sind und gewannen?"},{"db_id":"csu_1","query":"SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200","query_toks":["SELECT","T1.campus","FROM","campuses","AS","t1","JOIN","enrollments","AS","t2","ON","t1.id","=","t2.campus","WHERE","t2.year","=","1956","AND","totalenrollment_ay",">","400","AND","FTE_AY",">","200"],"query_toks_no_value":["select","t1",".","campus","from","campuses","as","t1","join","enrollments","as","t2","on","t1",".","id","=","t2",".","campus","where","t2",".","year","=","value","and","totalenrollment_ay",">","value","and","fte_ay",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],1956.0,null],"and",[false,3,[0,[0,19,false],null],400.0,null],"and",[false,3,[0,[0,20,false],null],200.0,null]]},"question_toks":["Welcher","Campus","begann","im","Jahr","1956",",","hat","mehr","als","200","Vollzeitstudenten","und","mehr","als","400","eingeschriebene","Studenten","?"],"question":"Welcher Campus begann im Jahr 1956, hat mehr als 200 Vollzeitstudenten und mehr als 400 eingeschriebene Studenten?"},{"db_id":"loan_1","query":"SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1","query_toks":["SELECT","cust_name",",","acc_type",",","acc_bal","FROM","customer","ORDER","BY","credit_score","DESC","LIMIT","1"],"query_toks_no_value":["select","cust_name",",","acc_type",",","acc_bal","from","customer","order","by","credit_score","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,8,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","der","Name",",","Kontotyp","und","Kontostand",",","der","zu","dem","Kunden","mit","der","h\u00f6chsten","Kreditw\u00fcrdigkeit","geh\u00f6rt","?"],"question":"Was ist der Name, Kontotyp und Kontostand, der zu dem Kunden mit der h\u00f6chsten Kreditw\u00fcrdigkeit geh\u00f6rt?"},{"db_id":"loan_1","query":"SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000","query_toks":["SELECT","T1.cust_name","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id","WHERE","amount",">","3000"],"query_toks_no_value":["select","t1",".","cust_name","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id","where","amount",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],3000.0,null]]},"question_toks":["Finde","den","Namen","der","Kunden",",","die","einen","Kredit","\u00fcber","eine","Summe","von","mehr","als","3000","haben","?"],"question":"Finde den Namen der Kunden, die einen Kredit \u00fcber eine Summe von mehr als 3000 haben?"},{"db_id":"college_1","query":"SELECT dept_name FROM department ORDER BY dept_name","query_toks":["SELECT","dept_name","FROM","department","ORDER","BY","dept_name"],"query_toks_no_value":["select","dept_name","from","department","order","by","dept_name"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,12,false],null]]],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","die","Namen","aller","Abteilungen","nach","ihrem","Namen","sortiert","auf","."],"question":"Liste die Namen aller Abteilungen nach ihrem Namen sortiert auf."},{"db_id":"store_product","query":"SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","max_page_size","FROM","product","GROUP","BY","max_page_size","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","max_page_size","from","product","group","by","max_page_size","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","die","h\u00e4ufigste","maximale","Seitengr\u00f6\u00dfe","?"],"question":"Welches ist die h\u00e4ufigste maximale Seitengr\u00f6\u00dfe?"},{"db_id":"loan_1","query":"SELECT count(DISTINCT state) FROM bank","query_toks":["SELECT","count","(","DISTINCT","state",")","FROM","bank"],"query_toks_no_value":["select","count","(","distinct","state",")","from","bank"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,5,true],null]]]],"union":null,"where":[]},"question_toks":["In","wie","vielen","unterschiedlichen","Staaten","sind","Banken","vertreten","?"],"question":"In wie vielen unterschiedlichen Staaten sind Banken vertreten?"},{"db_id":"twitter_1","query":"SELECT text FROM tweets WHERE text LIKE '%intern%'","query_toks":["SELECT","text","FROM","tweets","WHERE","text","LIKE","'","%","intern","%","'"],"query_toks_no_value":["select","text","from","tweets","where","text","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,9,[0,[0,5,false],null],"\"%intern%\"",null]]},"question_toks":["Gib","den","Text","von","Tweets","zum","Thema","``","intern","''","aus","."],"question":"Gib den Text von Tweets zum Thema \"intern\" aus."},{"db_id":"game_injury","query":"SELECT count(*) FROM game WHERE season  >  2007","query_toks":["SELECT","count","(","*",")","FROM","game","WHERE","season",">","2007"],"query_toks_no_value":["select","count","(","*",")","from","game","where","season",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],2007.0,null]]},"question_toks":["Wie","viele","Spiele","finden","nach","der","Saison","2007","statt","?"],"question":"Wie viele Spiele finden nach der Saison 2007 statt?"},{"db_id":"voter_2","query":"SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE","query_toks":["SELECT","DISTINCT","T1.LName","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","T2.CLASS_President_VOTE"],"query_toks_no_value":["select","distinct","t1",".","lname","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","t2",".","class_president_vote"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,16,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Bezirksnamen","der","Studenten",",","die","Stimmen","f\u00fcr","die","Pr\u00e4sidentschaft","haben","?"],"question":"Welches sind die Bezirksnamen der Studenten, die Stimmen f\u00fcr die Pr\u00e4sidentschaft haben?"},{"db_id":"loan_1","query":"SELECT count(DISTINCT city) FROM bank","query_toks":["SELECT","count","(","DISTINCT","city",")","FROM","bank"],"query_toks_no_value":["select","count","(","distinct","city",")","from","bank"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,4,true],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Anzahl","der","unterschiedlichen","St\u00e4dte",",","an","denen","Banken","vertreten","sind","."],"question":"Finde die Anzahl der unterschiedlichen St\u00e4dte, an denen Banken vertreten sind."},{"db_id":"college_1","query":"SELECT count(DISTINCT dept_address) ,  school_code FROM department GROUP BY school_code","query_toks":["SELECT","count","(","DISTINCT","dept_address",")",",","school_code","FROM","department","GROUP","BY","school_code"],"query_toks_no_value":["select","count","(","distinct","dept_address",")",",","school_code","from","department","group","by","school_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,13,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,15,true],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hle","unterschiedliche","Adressen","von","jeder","Schule","."],"question":"Z\u00e4hle unterschiedliche Adressen von jeder Schule."},{"db_id":"voter_2","query":"SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\"","query_toks":["SELECT","avg","(","Age",")","FROM","STUDENT","WHERE","Sex","=","``","F","''"],"query_toks_no_value":["select","avg","(","age",")","from","student","where","sex","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"F\"",null]]},"question_toks":["Finde","das","Durchschnittsalter","weiblicher","Studenten","."],"question":"Finde das Durchschnittsalter weiblicher Studenten."},{"db_id":"coffee_shop","query":"SELECT Time_of_purchase ,  age ,  address FROM member ORDER BY Time_of_purchase","query_toks":["SELECT","Time_of_purchase",",","age",",","address","FROM","member","ORDER","BY","Time_of_purchase"],"query_toks_no_value":["select","time_of_purchase",",","age",",","address","from","member","order","by","time_of_purchase"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,10,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,9,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","Kaufzeitpunkt",",","Alter","und","Adresse","jedes","Mitglieds","und","zeige","die","Ergebnisse","in","der","Reihenfolge","des","Kaufzeitpunktes","."],"question":"Finde Kaufzeitpunkt, Alter und Adresse jedes Mitglieds und zeige die Ergebnisse in der Reihenfolge des Kaufzeitpunktes."},{"db_id":"college_1","query":"SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num  =  T5.prof_num","query_toks":["SELECT","T1.emp_fname","FROM","employee","AS","T1","JOIN","professor","AS","T2","ON","T1.emp_num","=","T2.emp_num","JOIN","department","AS","T3","ON","T2.dept_code","=","T3.dept_code","WHERE","T3.dept_name","=","'History","'","EXCEPT","SELECT","T4.emp_fname","FROM","employee","AS","T4","JOIN","CLASS","AS","T5","ON","T4.emp_num","=","T5.prof_num"],"query_toks_no_value":["select","t1",".","emp_fname","from","employee","as","t1","join","professor","as","t2","on","t1",".","emp_num","=","t2",".","emp_num","join","department","as","t3","on","t2",".","dept_code","=","t3",".","dept_code","where","t3",".","dept_name","=","value","except","select","t4",".","emp_fname","from","employee","as","t4","join","class","as","t5","on","t4",".","emp_num","=","t5",".","prof_num"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"from":{"conds":[[false,2,[0,[0,17,false],null],[0,27,false],null]],"table_units":[["table_unit",3],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"History\"",null]]},"question_toks":["Wie","lauten","die","Vornamen","aller","Geschichtsprofessoren",",","die","nicht","unterrichten","."],"question":"Wie lauten die Vornamen aller Geschichtsprofessoren, die nicht unterrichten."},{"db_id":"game_injury","query":"SELECT count(DISTINCT SOURCE) FROM injury_accident","query_toks":["SELECT","count","(","DISTINCT","SOURCE",")","FROM","injury_accident"],"query_toks_no_value":["select","count","(","distinct","source",")","from","injury_accident"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,20,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","unterschiedliche","Arten","von","Informationsquellen","gibt","es","f\u00fcr","Verletzungsunf\u00e4lle","?"],"question":"Wie viele unterschiedliche Arten von Informationsquellen gibt es f\u00fcr Verletzungsunf\u00e4lle?"},{"db_id":"music_1","query":"SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")","query_toks":["SELECT","song_name","FROM","song","WHERE","rating","<","(","SELECT","max","(","rating",")","FROM","song","WHERE","genre_is","=","``","blues","''",")"],"query_toks_no_value":["select","song_name","from","song","where","rating","<","(","select","max","(","rating",")","from","song","where","genre_is","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,4,[0,[0,18,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,18,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"blues\"",null]]},null]]},"question_toks":["Was","sind","die","Namen","der","Lieder",",","die","eine","niedrigere","Bewertung","haben","als","mindestens","ein","Blues-Lied","?"],"question":"Was sind die Namen der Lieder, die eine niedrigere Bewertung haben als mindestens ein Blues-Lied?"},{"db_id":"tracking_orders","query":"SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1","query_toks":["SELECT","order_id",",","customer_id","FROM","orders","ORDER","BY","date_order_placed","LIMIT","1"],"query_toks_no_value":["select","order_id",",","customer_id","from","orders","order","by","date_order_placed","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,10,false],null]]],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Bestellnummer","und","Kundennummer",",","die","zu","der","\u00e4ltesten","Bestellung","geh\u00f6ren","."],"question":"Finde die Bestellnummer und Kundennummer, die zu der \u00e4ltesten Bestellung geh\u00f6ren."},{"db_id":"csu_1","query":"SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"San Francisco State University\"","query_toks":["SELECT","faculty","FROM","faculty","AS","T1","JOIN","campuses","AS","T2","ON","T1.campus","=","T2.id","WHERE","T1.year","=","2004","AND","T2.campus","=","``","San","Francisco","State","University","''"],"query_toks_no_value":["select","faculty","from","faculty","as","t1","join","campuses","as","t2","on","t1",".","campus","=","t2",".","id","where","t1",".","year","=","value","and","t2",".","campus","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,21,false],null],[0,1,false],null]],"table_units":[["table_unit",5],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],2004.0,null],"and",[false,2,[0,[0,2,false],null],"\"San Francisco State University\"",null]]},"question_toks":["Wie","viele","Fakult\u00e4tszweige","gibt","es","2004","an","der","San","Francisco","State","University","?"],"question":"Wie viele Fakult\u00e4tszweige gibt es 2004 an der San Francisco State University?"},{"db_id":"manufacturer","query":"SELECT name ,  open_year FROM manufacturer WHERE num_of_shops  >  10 OR Num_of_Factories  <  10","query_toks":["SELECT","name",",","open_year","FROM","manufacturer","WHERE","num_of_shops",">","10","OR","Num_of_Factories","<","10"],"query_toks_no_value":["select","name",",","open_year","from","manufacturer","where","num_of_shops",">","value","or","num_of_factories","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,3,[0,[0,5,false],null],10.0,null],"or",[false,4,[0,[0,4,false],null],10.0,null]]},"question_toks":["Gib","mir","den","Namen","und","das","Er\u00f6ffnungsjahr","der","Hersteller",",","die","entweder","weniger","als","10","Fabriken","haben","oder","mehr","als","10","Gesch\u00e4fte","."],"question":"Gib mir den Namen und das Er\u00f6ffnungsjahr der Hersteller, die entweder weniger als 10 Fabriken haben oder mehr als 10 Gesch\u00e4fte."},{"db_id":"college_1","query":"SELECT count(DISTINCT dept_name) FROM department","query_toks":["SELECT","count","(","DISTINCT","dept_name",")","FROM","department"],"query_toks_no_value":["select","count","(","distinct","dept_name",")","from","department"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,12,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Abteilungen","gibt","es","?"],"question":"Wie viele Abteilungen gibt es?"},{"db_id":"college_1","query":"SELECT count(DISTINCT crs_code) FROM CLASS","query_toks":["SELECT","count","(","DISTINCT","crs_code",")","FROM","CLASS"],"query_toks_no_value":["select","count","(","distinct","crs_code",")","from","class"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,2,true],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","Zahl","der","unterschiedlichen","Kurs-Codes","?"],"question":"Was ist die Zahl der unterschiedlichen Kurs-Codes?"},{"db_id":"sakila_1","query":"SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'","query_toks":["SELECT","title","FROM","film","WHERE","special_features","LIKE","'","%","Deleted","Scenes","%","'"],"query_toks_no_value":["select","title","from","film","where","special_features","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]]]],"union":null,"where":[[false,9,[0,[0,43,false],null],"\"%Deleted Scenes%\"",null]]},"question_toks":["Gib","die","Filmtitel","aus",",","deren","Special","Features","``","gel\u00f6schte","Szenen","''","beinhalten","."],"question":"Gib die Filmtitel aus, deren Special Features \"gel\u00f6schte Szenen\" beinhalten."},{"db_id":"voter_2","query":"SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\"","query_toks":["SELECT","Advisor","FROM","STUDENT","WHERE","city_code","=","``","BAL","''"],"query_toks_no_value":["select","advisor","from","student","where","city_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"BAL\"",null]]},"question_toks":["Zeige","die","Betreuer","von","Studenten",",","deren","Wohnort","den","Stadt-Code","``","BAL","''","hat","."],"question":"Zeige die Betreuer von Studenten, deren Wohnort den Stadt-Code \"BAL\" hat."},{"db_id":"activity_1","query":"SELECT DISTINCT rank FROM Faculty","query_toks":["SELECT","DISTINCT","rank","FROM","Faculty"],"query_toks_no_value":["select","distinct","rank","from","faculty"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,18,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Einstufungen","haben","wir","f\u00fcr","Fakult\u00e4t","?"],"question":"Welche Einstufungen haben wir f\u00fcr Fakult\u00e4t?"},{"db_id":"activity_1","query":"SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.fname",",","T1.lname","FROM","Faculty","AS","T1","JOIN","Student","AS","T2","ON","T1.FacID","=","T2.advisor","GROUP","BY","T1.FacID","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","lname","from","faculty","as","t1","join","student","as","t2","on","t1",".","facid","=","t2",".","advisor","group","by","t1",".","facid","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,13,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,17,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","der","Vor-","und","Zuname","der","Fakult\u00e4t",",","welche","die","meisten","Studenten","hat","?"],"question":"Was sind der Vor- und Zuname der Fakult\u00e4t, welche die meisten Studenten hat?"},{"db_id":"debate","query":"SELECT Party FROM people GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Party","FROM","people","GROUP","BY","Party","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","party","from","people","group","by","party","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Partei",",","welche","die","meisten","Leute","hat","."],"question":"Zeige die Partei, welche die meisten Leute hat."},{"db_id":"store_product","query":"SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000","query_toks":["SELECT","district_name","FROM","district","WHERE","city_area",">","10","OR","City_Population",">","100000"],"query_toks_no_value":["select","district_name","from","district","where","city_area",">","value","or","city_population",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],10.0,null],"or",[false,3,[0,[0,17,false],null],100000.0,null]]},"question_toks":["Finde","die","Namen","aller","Bezirke","mit","einem","Stadtgebiet","gr\u00f6\u00dfer","als","10","oder","einer","Bev\u00f6lkerung","gr\u00f6\u00dfer","als","100000","."],"question":"Finde die Namen aller Bezirke mit einem Stadtgebiet gr\u00f6\u00dfer als 10 oder einer Bev\u00f6lkerung gr\u00f6\u00dfer als 100000."},{"db_id":"store_product","query":"SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3","query_toks":["SELECT","sum","(","city_population",")","FROM","district","ORDER","BY","city_area","DESC","LIMIT","3"],"query_toks_no_value":["select","sum","(","city_population",")","from","district","order","by","city_area","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[0,18,false],null]]],"select":[false,[[4,[0,[0,17,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Gesamtbev\u00f6lkerung","der","drei","Bezirke","mit","der","gr\u00f6\u00dfte","Fl\u00e4che","."],"question":"Finde die Gesamtbev\u00f6lkerung der drei Bezirke mit der gr\u00f6\u00dfte Fl\u00e4che."},{"db_id":"college_1","query":"SELECT count(*) ,  class_room FROM CLASS GROUP BY class_room HAVING count(*)  >=  2","query_toks":["SELECT","count","(","*",")",",","class_room","FROM","CLASS","GROUP","BY","class_room","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","count","(","*",")",",","class_room","from","class","group","by","class_room","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Anzahl","der","Kurse",",","die","f\u00fcr","alle","Unterrichtsr\u00e4ume","angeboten","werden",",","in","denen","mindestens","zwei","Kurse","stattfanden","."],"question":"Finde die Anzahl der Kurse, die f\u00fcr alle Unterrichtsr\u00e4ume angeboten werden, in denen mindestens zwei Kurse stattfanden."},{"db_id":"college_1","query":"SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.dept_name",",","T1.dept_code","FROM","professor","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","WHERE","T1.prof_high_degree","=","'Ph.D",".","'","GROUP","BY","T1.dept_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","dept_name",",","t1",".","dept_code","from","professor","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","where","t1",".","prof_high_degree","=","value","group","by","t1",".","dept_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,28,false],null],[0,11,false],null]],"table_units":[["table_unit",5],["table_unit",2]]},"groupBy":[[0,28,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,12,false],null]],[0,[0,[0,28,false],null]]]],"union":null,"where":[[false,2,[0,[0,31,false],null],"\"Ph.D.\"",null]]},"question_toks":["Welche","Abteilung","hat","die","meisten","Professoren","mit","einem","Ph.D.","?"],"question":"Welche Abteilung hat die meisten Professoren mit einem Ph.D.?"},{"db_id":"swimming","query":"SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id JOIN event AS t3 ON t2.event_id  =  t3.id JOIN stadium AS t4 ON t4.id  =  t3.stadium_id WHERE t1.nationality  =  'Australia'","query_toks":["SELECT","t4.name","FROM","swimmer","AS","t1","JOIN","record","AS","t2","ON","t1.id","=","t2.swimmer_id","JOIN","event","AS","t3","ON","t2.event_id","=","t3.id","JOIN","stadium","AS","t4","ON","t4.id","=","t3.stadium_id","WHERE","t1.nationality","=","'Australia","'"],"query_toks_no_value":["select","t4",".","name","from","swimmer","as","t1","join","record","as","t2","on","t1",".","id","=","t2",".","swimmer_id","join","event","as","t3","on","t2",".","event_id","=","t3",".","id","join","stadium","as","t4","on","t4",".","id","=","t3",".","stadium_id","where","t1",".","nationality","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],"\"Australia\"",null]]},"question_toks":["Finde","die","Namen","von","Stadien",",","in","denen","australische","Schwimmer","gewesen","sind","."],"question":"Finde die Namen von Stadien, in denen australische Schwimmer gewesen sind."},{"db_id":"voter_2","query":"SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08\/30\/2015\"","query_toks":["SELECT","DISTINCT","PRESIDENT_Vote","FROM","VOTING_RECORD","WHERE","Registration_Date","=","``","08\/30\/2015","''"],"query_toks_no_value":["select","distinct","president_vote","from","voting_record","where","registration_date","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"08\/30\/2015\"",null]]},"question_toks":["Zeige","alle","verschiedenen","Pr\u00e4sidentenabstimmungen","vom","30.08.2015","."],"question":"Zeige alle verschiedenen Pr\u00e4sidentenabstimmungen vom 30.08.2015."},{"db_id":"college_1","query":"SELECT count(*) ,  T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code","query_toks":["SELECT","count","(","*",")",",","T1.school_code","FROM","department","AS","T1","JOIN","professor","AS","T2","ON","T1.dept_code","=","T2.dept_code","GROUP","BY","T1.school_code"],"query_toks_no_value":["select","count","(","*",")",",","t1",".","school_code","from","department","as","t1","join","professor","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","group","by","t1",".","school_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,28,false],null]],"table_units":[["table_unit",2],["table_unit",5]]},"groupBy":[[0,13,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Professoren","gibt","es","an","den","verschiedenen","Schulen","?"],"question":"Wie viele Professoren gibt es an den verschiedenen Schulen?"},{"db_id":"loan_1","query":"SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)","query_toks":["SELECT","T1.cust_name","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id","GROUP","BY","T1.cust_name","ORDER","BY","sum","(","T2.amount",")"],"query_toks_no_value":["select","t1",".","cust_name","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id","group","by","t1",".","cust_name","order","by","sum","(","t2",".","amount",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[4,18,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","den","Namen","aller","verschiedenen","Kunden","auf",",","die","einen","Kredit","haben",",","sortiert","nach","der","Summe","ihrer","Kredite","."],"question":"Liste den Namen aller verschiedenen Kunden auf, die einen Kredit haben, sortiert nach der Summe ihrer Kredite."},{"db_id":"coffee_shop","query":"SELECT count(*) FROM member WHERE address != 'Hartford'","query_toks":["SELECT","count","(","*",")","FROM","member","WHERE","address","!","=","'Hartford","'"],"query_toks_no_value":["select","count","(","*",")","from","member","where","address","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,7,[0,[0,12,false],null],"\"Hartford\"",null]]},"question_toks":["Wie","viele","Mitglieder","leben","nicht","in","Hartford","?"],"question":"Wie viele Mitglieder leben nicht in Hartford?"},{"db_id":"activity_1","query":"SELECT building FROM Faculty WHERE rank  =  \"Professor\" GROUP BY building HAVING count(*)  >=  10","query_toks":["SELECT","building","FROM","Faculty","WHERE","rank","=","``","Professor","''","GROUP","BY","building","HAVING","count","(","*",")",">","=","10"],"query_toks_no_value":["select","building","from","faculty","where","rank","=","value","group","by","building","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,22,false]],"having":[[false,5,[0,[3,0,false],null],10.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"Professor\"",null]]},"question_toks":["Zeige","alle","Geb\u00e4ude",",","die","mindestens","10","Professoren","haben","."],"question":"Zeige alle Geb\u00e4ude, die mindestens 10 Professoren haben."},{"db_id":"store_product","query":"SELECT product FROM product WHERE product LIKE \"%Scanner%\"","query_toks":["SELECT","product","FROM","product","WHERE","product","LIKE","``","%","Scanner","%","''"],"query_toks_no_value":["select","product","from","product","where","product","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,9,[0,[0,2,false],null],"\"%Scanner%\"",null]]},"question_toks":["Finde","alle","Produkte",",","die","das","Wort","``","Scanner","''","im","Namen","haben","."],"question":"Finde alle Produkte, die das Wort \"Scanner\" im Namen haben."},{"db_id":"music_1","query":"SELECT DISTINCT artist_name FROM artist WHERE country  =  \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7","query_toks":["SELECT","DISTINCT","artist_name","FROM","artist","WHERE","country","=","``","Bangladesh","''","EXCEPT","SELECT","DISTINCT","artist_name","FROM","song","WHERE","rating",">","7"],"query_toks_no_value":["select","distinct","artist_name","from","artist","where","country","=","value","except","select","distinct","artist_name","from","song","where","rating",">","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],7.0,null]]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Bangladesh\"",null]]},"question_toks":["Finde","die","Namen","der","K\u00fcnstler",",","die","aus","Bangladesch","sind","und","nie","eine","Bewertung","\u00fcber","7","erhalten","haben","."],"question":"Finde die Namen der K\u00fcnstler, die aus Bangladesch sind und nie eine Bewertung \u00fcber 7 erhalten haben."},{"db_id":"csu_1","query":"SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939","query_toks":["SELECT","campus","FROM","campuses","WHERE","YEAR",">","=","1935","AND","YEAR","<","=","1939"],"query_toks_no_value":["select","campus","from","campuses","where","year",">","=","value","and","year","<","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,5,[0,[0,5,false],null],1935.0,null],"and",[false,6,[0,[0,5,false],null],1939.0,null]]},"question_toks":["Welche","Campusse","wurden","zwischen","1935","und","1939","er\u00f6ffnet","?"],"question":"Welche Campusse wurden zwischen 1935 und 1939 er\u00f6ffnet?"},{"db_id":"phone_market","query":"SELECT Name FROM phone WHERE Phone_id NOT IN (SELECT Phone_ID FROM phone_market)","query_toks":["SELECT","Name","FROM","phone","WHERE","Phone_id","NOT","IN","(","SELECT","Phone_ID","FROM","phone_market",")"],"query_toks_no_value":["select","name","from","phone","where","phone_id","not","in","(","select","phone_id","from","phone_market",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[true,8,[0,[0,2,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Liste","die","Namen","von","Telefonen","auf",",","die","nicht","auf","dem","Markt","sind","."],"question":"Liste die Namen von Telefonen auf, die nicht auf dem Markt sind."},{"db_id":"csu_1","query":"SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005","query_toks":["SELECT","avg","(","campusfee",")","FROM","csu_fees","WHERE","YEAR","=","2005"],"query_toks_no_value":["select","avg","(","campusfee",")","from","csu_fees","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],2005.0,null]]},"question_toks":["Wie","hoch","war","die","durchschnittliche","Geb\u00fchr","auf","einem","CSU-Campus","im","Jahr","2005","?"],"question":"Wie hoch war die durchschnittliche Geb\u00fchr auf einem CSU-Campus im Jahr 2005?"},{"db_id":"csu_1","query":"SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1","query_toks":["SELECT","campus","FROM","degrees","GROUP","BY","campus","ORDER","BY","sum","(","degrees",")","DESC","LIMIT","1"],"query_toks_no_value":["select","campus","from","degrees","group","by","campus","order","by","sum","(","degrees",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,11,false],null]]],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Campus","hat","insgesamt","die","meisten","Abschl\u00fcsse","verliehenen","?"],"question":"Welcher Campus hat insgesamt die meisten Abschl\u00fcsse verliehenen?"},{"db_id":"sakila_1","query":"SELECT district FROM address GROUP BY district HAVING count(*)  >=  2","query_toks":["SELECT","district","FROM","address","GROUP","BY","district","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","district","from","address","group","by","district","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","die","Bezirke","an",",","die","zwei","oder","mehr","Adressen","haben","."],"question":"Gib die Bezirke an, die zwei oder mehr Adressen haben."},{"db_id":"college_1","query":"SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.dept_name",",","T2.dept_address","FROM","student","AS","T1","JOIN","department","AS","T2","ON","T1.dept_code","=","T2.dept_code","GROUP","BY","T1.dept_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","dept_name",",","t2",".","dept_address","from","student","as","t1","join","department","as","t2","on","t1",".","dept_code","=","t2",".","dept_code","group","by","t1",".","dept_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,41,false],null],[0,11,false],null]],"table_units":[["table_unit",6],["table_unit",2]]},"groupBy":[[0,41,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,12,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","und","die","Adresse","der","Abteilung","mit","der","h\u00f6chsten","Anzahl","an","Studenten","."],"question":"Finde den Namen und die Adresse der Abteilung mit der h\u00f6chsten Anzahl an Studenten."},{"db_id":"voter_2","query":"SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2","query_toks":["SELECT","Advisor","FROM","STUDENT","GROUP","BY","Advisor","HAVING","count","(","*",")",">","2"],"query_toks_no_value":["select","advisor","from","student","group","by","advisor","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,7,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Nenne","die","verschiedenen","Berater",",","die","mehr","als","2","Studierende","haben","."],"question":"Nenne die verschiedenen Berater, die mehr als 2 Studierende haben."},{"db_id":"sakila_1","query":"SELECT title FROM film WHERE rating  =  'R'","query_toks":["SELECT","title","FROM","film","WHERE","rating","=","'R","'"],"query_toks_no_value":["select","title","from","film","where","rating","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]]]],"union":null,"where":[[false,2,[0,[0,42,false],null],"\"R\"",null]]},"question_toks":["Nenne","die","Titel","aller","Filme","mit","einer","eingeschr\u00e4nkten","Alterfreigabe","."],"question":"Nenne die Titel aller Filme mit einer eingeschr\u00e4nkten Alterfreigabe."},{"db_id":"sakila_1","query":"SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1","query_toks":["SELECT","T1.first_name",",","T1.last_name",",","T1.customer_id","FROM","customer","AS","T1","JOIN","payment","AS","T2","ON","T1.customer_id","=","T2.customer_id","GROUP","BY","T1.customer_id","ORDER","BY","sum","(","amount",")","ASC","LIMIT","1"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","last_name",",","t1",".","customer_id","from","customer","as","t1","join","payment","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","group","by","t1",".","customer_id","order","by","sum","(","amount",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,23,false],null],[0,62,false],null]],"table_units":[["table_unit",5],["table_unit",12]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[4,65,false],null]]],"select":[false,[[0,[0,[0,25,false],null]],[0,[0,[0,26,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","der","vollst\u00e4ndige","Name","und","die","ID","des","Kunden",",","der","den","niedrigsten","gesamten","Zahlungsbetrag","hat","?"],"question":"Welches ist der vollst\u00e4ndige Name und die ID des Kunden, der den niedrigsten gesamten Zahlungsbetrag hat?"},{"db_id":"phone_market","query":"SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Carrier","FROM","phone","GROUP","BY","Carrier","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","carrier","from","phone","group","by","carrier","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","den","am","h\u00e4ufigsten","verwendeten","Telefonieanbieter","."],"question":"Zeige den am h\u00e4ufigsten verwendeten Telefonieanbieter."},{"db_id":"voter_2","query":"SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD","query_toks":["SELECT","DISTINCT","Registration_Date",",","Election_Cycle","FROM","VOTING_RECORD"],"query_toks_no_value":["select","distinct","registration_date",",","election_cycle","from","voting_record"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,10,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","verschiedenen","Registrierungsdaten","und","die","Wahlzyklen","?"],"question":"Was sind die verschiedenen Registrierungsdaten und die Wahlzyklen?"},{"db_id":"college_1","query":"SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1","query_toks":["SELECT","T2.emp_fname","FROM","CLASS","AS","T1","JOIN","employee","AS","T2","ON","T1.prof_num","=","T2.emp_num","GROUP","BY","T1.prof_num","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","t2",".","emp_fname","from","class","as","t1","join","employee","as","t2","on","t1",".","prof_num","=","t2",".","emp_num","group","by","t1",".","prof_num","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Vornamen","aller","Professoren",",","die","mehr","als","einen","Kurs","unterrichten","?"],"question":"Was sind die Vornamen aller Professoren, die mehr als einen Kurs unterrichten?"},{"db_id":"sakila_1","query":"SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3","query_toks":["SELECT","title",",","film_id","FROM","film","WHERE","rental_rate","=","0.99","INTERSECT","SELECT","T1.title",",","T1.film_id","FROM","film","AS","T1","JOIN","inventory","AS","T2","ON","T1.film_id","=","T2.film_id","GROUP","BY","T1.film_id","HAVING","count","(","*",")","<","3"],"query_toks_no_value":["select","title",",","film_id","from","film","where","rental_rate","=","value","intersect","select","t1",".","title",",","t1",".","film_id","from","film","as","t1","join","inventory","as","t2","on","t1",".","film_id","=","t2",".","film_id","group","by","t1",".","film_id","having","count","(","*",")","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,55,false],null]],"table_units":[["table_unit",6],["table_unit",10]]},"groupBy":[[0,32,false]],"having":[[false,4,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[[false,2,[0,[0,39,false],null],0.99,null]]},"question_toks":["Welcher","Film","wird","gegen","eine","Geb\u00fchr","von","0,99","ausgeliehen","und","hat","weniger","als","3","im","Bestand","?","Liste","den","Filmtitel","und","die","Filmnummer","auf","."],"question":"Welcher Film wird gegen eine Geb\u00fchr von 0,99 ausgeliehen und hat weniger als 3 im Bestand? Liste den Filmtitel und die Filmnummer auf."},{"db_id":"activity_1","query":"SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"Linda\" AND T2.lname  =  \"Smith\"","query_toks":["SELECT","T1.fname",",","T1.lname","FROM","Faculty","AS","T1","JOIN","Student","AS","T2","ON","T1.FacID","=","T2.advisor","WHERE","T2.fname","=","``","Linda","''","AND","T2.lname","=","``","Smith","''"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","lname","from","faculty","as","t1","join","student","as","t2","on","t1",".","facid","=","t2",".","advisor","where","t2",".","fname","=","value","and","t2",".","lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,13,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Linda\"",null],"and",[false,2,[0,[0,8,false],null],"\"Smith\"",null]]},"question_toks":["Wie","lautet","der","Vor-","und","Nachname","der","Beraterin","von","Linda","Smith","?"],"question":"Wie lautet der Vor- und Nachname der Beraterin von Linda Smith?"},{"db_id":"phone_market","query":"SELECT Memory_in_G ,  Carrier FROM phone","query_toks":["SELECT","Memory_in_G",",","Carrier","FROM","phone"],"query_toks_no_value":["select","memory_in_g",",","carrier","from","phone"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Speicher","und","Spediteure","von","Telefonen","?"],"question":"Was sind die Speicher und Spediteure von Telefonen?"},{"db_id":"activity_1","query":"SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank","query_toks":["SELECT","T1.rank",",","count","(","*",")","FROM","Faculty","AS","T1","JOIN","Student","AS","T2","ON","T1.FacID","=","T2.advisor","GROUP","BY","T1.rank"],"query_toks_no_value":["select","t1",".","rank",",","count","(","*",")","from","faculty","as","t1","join","student","as","t2","on","t1",".","facid","=","t2",".","advisor","group","by","t1",".","rank"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,13,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","alle","Fakult\u00e4tsr\u00e4nge","und","die","Anzahl","der","von","jedem","Rang","empfohlenen","Studenten","an","."],"question":"Zeige alle Fakult\u00e4tsr\u00e4nge und die Anzahl der von jedem Rang empfohlenen Studenten an."},{"db_id":"voter_2","query":"SELECT Major FROM STUDENT WHERE Sex  =  \"M\"","query_toks":["SELECT","Major","FROM","STUDENT","WHERE","Sex","=","``","M","''"],"query_toks_no_value":["select","major","from","student","where","sex","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"M\"",null]]},"question_toks":["Liste","das","Hauptfach","jedes","m\u00e4nnlichen","Studenten","auf","."],"question":"Liste das Hauptfach jedes m\u00e4nnlichen Studenten auf."},{"db_id":"cinema","query":"SELECT count(*) FROM cinema","query_toks":["SELECT","count","(","*",")","FROM","cinema"],"query_toks_no_value":["select","count","(","*",")","from","cinema"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hle","die","Kinos","."],"question":"Z\u00e4hle die Kinos."},{"db_id":"manufacturer","query":"SELECT t1.manufacturer_id ,  t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1","query_toks":["SELECT","t1.manufacturer_id",",","t1.num_of_shops","FROM","manufacturer","AS","t1","JOIN","furniture_manufacte","AS","t2","ON","t1.manufacturer_id","=","t2.manufacturer_id","ORDER","BY","t2.Price_in_Dollar","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","manufacturer_id",",","t1",".","num_of_shops","from","manufacturer","as","t1","join","furniture_manufacte","as","t2","on","t1",".","manufacturer_id","=","t2",".","manufacturer_id","order","by","t2",".","price_in_dollar","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,12,false],null]]],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","ID","und","Anzahl","der","L\u00e4den","des","Unternehmens",",","das","die","teuersten","M\u00f6bel","produziert","."],"question":"Finde die ID und Anzahl der L\u00e4den des Unternehmens, das die teuersten M\u00f6bel produziert."},{"db_id":"college_1","query":"SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'","query_toks":["SELECT","T2.emp_fname",",","T1.class_room","FROM","CLASS","AS","T1","JOIN","employee","AS","T2","ON","T1.prof_num","=","T2.emp_num","JOIN","professor","AS","T3","ON","T2.emp_num","=","T3.emp_num","JOIN","department","AS","T4","ON","T4.dept_code","=","T3.dept_code","WHERE","T4.dept_name","=","'Accounting","'"],"query_toks_no_value":["select","t2",".","emp_fname",",","t1",".","class_room","from","class","as","t1","join","employee","as","t2","on","t1",".","prof_num","=","t2",".","emp_num","join","professor","as","t3","on","t2",".","emp_num","=","t3",".","emp_num","join","department","as","t4","on","t4",".","dept_code","=","t3",".","dept_code","where","t4",".","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,17,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"Accounting\"",null]]},"question_toks":["Finde","die","Vornamen","aller","Professoren","in","der","Rechnungswesenabteilung","und","den","Klassenraum",",","die","irgendeinen","Kurs","unterrichten","."],"question":"Finde die Vornamen aller Professoren in der Rechnungswesenabteilung und den Klassenraum, die irgendeinen Kurs unterrichten."},{"db_id":"activity_1","query":"SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.fname",",","T1.lname","FROM","Faculty","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.facID","=","T2.facID","GROUP","BY","T1.FacID","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","lname","from","faculty","as","t1","join","faculty_participates_in","as","t2","on","t1",".","facid","=","t2",".","facid","group","by","t1",".","facid","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,5,false],null]],"table_units":[["table_unit",4],["table_unit",2]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,17,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Vor-","und","Nachnamen","der","Fakult\u00e4t",",","die","an","der","gr\u00f6\u00dften","Anzahl","von","Aktivit\u00e4ten","beteiligt","ist","."],"question":"Finde den Vor- und Nachnamen der Fakult\u00e4t, die an der gr\u00f6\u00dften Anzahl von Aktivit\u00e4ten beteiligt ist."},{"db_id":"sakila_1","query":"SELECT count(*) FROM address WHERE district  =  'California'","query_toks":["SELECT","count","(","*",")","FROM","address","WHERE","district","=","'California","'"],"query_toks_no_value":["select","count","(","*",")","from","address","where","district","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"California\"",null]]},"question_toks":["Z\u00e4hle","die","Anzahl","der","Adressaten","im","Bezirk","Kalifornien","."],"question":"Z\u00e4hle die Anzahl der Adressaten im Bezirk Kalifornien."},{"db_id":"voter_2","query":"SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"Spring\"","query_toks":["SELECT","avg","(","T1.Age",")","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","SECRETARY_Vote","WHERE","T1.Sex","=","``","F","''","AND","T2.Election_Cycle","=","``","Spring","''"],"query_toks_no_value":["select","avg","(","t1",".","age",")","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","secretary_vote","where","t1",".","sex","=","value","and","t2",".","election_cycle","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,14,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"F\"",null],"and",[false,2,[0,[0,11,false],null],"\"Spring\"",null]]},"question_toks":["Finde","das","Durchschnittsalter","weiblicher","(","Geschlecht","ist","W",")","Studierenden",",","die","Stimmen","f\u00fcr","das","Sekretariat","im","Wahlzyklus","Fr\u00fchjahr","haben","."],"question":"Finde das Durchschnittsalter weiblicher (Geschlecht ist W) Studierenden, die Stimmen f\u00fcr das Sekretariat im Wahlzyklus Fr\u00fchjahr haben."},{"db_id":"mountain_photos","query":"SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )","query_toks":["SELECT","count","(","*",")","FROM","camera_lens","WHERE","id","NOT","IN","(","SELECT","camera_lens_id","FROM","photos",")"],"query_toks_no_value":["select","count","(","*",")","from","camera_lens","where","id","not","in","(","select","camera_lens_id","from","photos",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,7,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","viele","Kameralinsen","werden","bei","der","Aufnahme","von","Fotos","nicht","verwendet","?"],"question":"Wie viele Kameralinsen werden bei der Aufnahme von Fotos nicht verwendet?"},{"db_id":"sakila_1","query":"SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )","query_toks":["SELECT","first_name","FROM","customer","WHERE","customer_id","NOT","IN","(","SELECT","customer_id","FROM","rental","WHERE","rental_date",">","'2005-08-23","02:06:01","'",")"],"query_toks_no_value":["select","first_name","from","customer","where","customer_id","not","in","(","select","customer_id","from","rental","where","rental_date",">","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[[true,8,[0,[0,23,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",13]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,71,false],null]]]],"union":null,"where":[[false,3,[0,[0,69,false],null],"\"2005-08-23 02:06:01\"",null]]},null]]},"question_toks":["Gib","die","Vornamen","der","Kunden","wieder",",","die","keinen","Film","ausliehen","nach","dem","Datum","``","23.08.2005","02:06:01","''","."],"question":"Gib die Vornamen der Kunden wieder, die keinen Film ausliehen nach dem Datum \"23.08.2005 02:06:01\"."},{"db_id":"loan_1","query":"SELECT sum(acc_bal) FROM customer WHERE state  =  'Utah' OR state  =  'Texas'","query_toks":["SELECT","sum","(","acc_bal",")","FROM","customer","WHERE","state","=","'Utah","'","OR","state","=","'Texas","'"],"query_toks_no_value":["select","sum","(","acc_bal",")","from","customer","where","state","=","value","or","state","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"Utah\"",null],"or",[false,2,[0,[0,13,false],null],"\"Texas\"",null]]},"question_toks":["Wie","hoch","ist","der","Gesamtkontostand","f\u00fcr","jeden","Kunden","aus","Utah","oder","Texas","?"],"question":"Wie hoch ist der Gesamtkontostand f\u00fcr jeden Kunden aus Utah oder Texas?"},{"db_id":"loan_1","query":"SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000","query_toks":["SELECT","T1.cust_name",",","T1.acc_type","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id","GROUP","BY","T1.cust_name","HAVING","sum","(","T2.amount",")",">","5000"],"query_toks_no_value":["select","t1",".","cust_name",",","t1",".","acc_type","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id","group","by","t1",".","cust_name","having","sum","(","t2",".","amount",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,7,false]],"having":[[false,3,[0,[4,18,false],null],5000.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","und","Kontost\u00e4nde","von","Kunden",",","die","einen","Gesamtbetrag","von","mehr","als","5000","in","Krediten","aufgenommen","haben","?"],"question":"Wie lauten die Namen und Kontost\u00e4nde von Kunden, die einen Gesamtbetrag von mehr als 5000 in Krediten aufgenommen haben?"},{"db_id":"tracking_orders","query":"SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1","query_toks":["SELECT","order_id",",","customer_id","FROM","orders","ORDER","BY","date_order_placed","LIMIT","1"],"query_toks_no_value":["select","order_id",",","customer_id","from","orders","order","by","date_order_placed","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,10,false],null]]],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Bestellnummer","und","die","Kundennummer","der","\u00e4ltesten","Bestellung","?"],"question":"Was sind die Bestellnummer und die Kundennummer der \u00e4ltesten Bestellung?"},{"db_id":"entrepreneur","query":"SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1","query_toks":["SELECT","T1.Company","FROM","entrepreneur","AS","T1","JOIN","people","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T2.Height","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","company","from","entrepreneur","as","t1","join","people","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t2",".","height","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,6,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,8,false],null]]],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","Unternehmen","wurde","von","dem","Unternehmer","mit","der","gr\u00f6\u00dften","K\u00f6rperl\u00e4nge","gegr\u00fcndet","?"],"question":"Welches Unternehmen wurde von dem Unternehmer mit der gr\u00f6\u00dften K\u00f6rperl\u00e4nge gegr\u00fcndet?"},{"db_id":"game_injury","query":"SELECT max(home_games) ,  min(home_games) ,  avg(home_games) FROM stadium","query_toks":["SELECT","max","(","home_games",")",",","min","(","home_games",")",",","avg","(","home_games",")","FROM","stadium"],"query_toks_no_value":["select","max","(","home_games",")",",","min","(","home_games",")",",","avg","(","home_games",")","from","stadium"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,3,false],null]],[2,[0,[0,3,false],null]],[5,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","waren","die","h\u00f6chsten",",","geringsten","und","durchschnittlichen","Heimspiele",",","die","in","jedem","Stadium","stattfanden","?"],"question":"Welches waren die h\u00f6chsten, geringsten und durchschnittlichen Heimspiele, die in jedem Stadium stattfanden?"},{"db_id":"college_1","query":"SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211' AND T2.enroll_grade  =  'C'","query_toks":["SELECT","T3.stu_fname","FROM","CLASS","AS","T1","JOIN","enroll","AS","T2","ON","T1.class_code","=","T2.class_code","JOIN","student","AS","T3","ON","T2.stu_num","=","T3.stu_num","WHERE","T1.crs_code","=","'ACCT-211","'","AND","T2.enroll_grade","=","'C","'"],"query_toks_no_value":["select","t3",".","stu_fname","from","class","as","t1","join","enroll","as","t2","on","t1",".","class_code","=","t2",".","class_code","join","student","as","t3","on","t2",".","stu_num","=","t3",".","stu_num","where","t1",".","crs_code","=","value","and","t2",".","enroll_grade","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,24,false],null]],"table_units":[["table_unit",0],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"ACCT-211\"",null],"and",[false,2,[0,[0,26,false],null],"\"C\"",null]]},"question_toks":["Wie","lauten","die","Vornamen","aller","Studierenden",",","die","ACCT-211","absolviert","und","eine","3","erhalten","haben","?"],"question":"Wie lauten die Vornamen aller Studierenden, die ACCT-211 absolviert und eine 3 erhalten haben?"},{"db_id":"activity_1","query":"SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"","query_toks":["SELECT","T3.activity_name","FROM","Faculty","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.facID","=","T2.facID","JOIN","Activity","AS","T3","ON","T3.actid","=","T2.actid","WHERE","T1.fname","=","``","Mark","''","AND","T1.lname","=","``","Giuliano","''"],"query_toks_no_value":["select","t3",".","activity_name","from","faculty","as","t1","join","faculty_participates_in","as","t2","on","t1",".","facid","=","t2",".","facid","join","activity","as","t3","on","t3",".","actid","=","t2",".","actid","where","t1",".","fname","=","value","and","t1",".","lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,5,false],null]],"table_units":[["table_unit",4],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"Mark\"",null],"and",[false,2,[0,[0,16,false],null],"\"Giuliano\"",null]]},"question_toks":["Zeige","die","Namen","aller","Aktivit\u00e4ten",",","an","denen","Mark","Giuliano","teilnimmt","."],"question":"Zeige die Namen aller Aktivit\u00e4ten, an denen Mark Giuliano teilnimmt."},{"db_id":"loan_1","query":"SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1","query_toks":["SELECT","T1.cust_name","FROM","customer","AS","T1","JOIN","loan","AS","T2","ON","T1.cust_id","=","T2.cust_id","GROUP","BY","T1.cust_name","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","cust_name","from","customer","as","t1","join","loan","as","t2","on","t1",".","cust_id","=","t2",".","cust_id","group","by","t1",".","cust_name","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,16,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,7,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dfen","die","Kunden",",","die","mehr","als","einen","Kredit","aufgenommen","haben","?"],"question":"Wie hei\u00dfen die Kunden, die mehr als einen Kredit aufgenommen haben?"},{"db_id":"formula_1","query":"SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2000","query_toks":["SELECT","DISTINCT","T1.name","FROM","races","AS","T1","JOIN","circuits","AS","T2","ON","T1.circuitid","=","T2.circuitid","WHERE","T2.country","=","``","Spain","''","AND","T1.year",">","2000"],"query_toks_no_value":["select","distinct","t1",".","name","from","races","as","t1","join","circuits","as","t2","on","t1",".","circuitid","=","t2",".","circuitid","where","t2",".","country","=","value","and","t1",".","year",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Spain\"",null],"and",[false,3,[0,[0,11,false],null],2000.0,null]]},"question_toks":["Wie","lauten","die","Namen","aller","nach","2000","in","Spanien","ausgetragenen","Rennen","?"],"question":"Wie lauten die Namen aller nach 2000 in Spanien ausgetragenen Rennen?"},{"db_id":"sakila_1","query":"SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1","query_toks":["SELECT","title",",","rental_rate","FROM","film","ORDER","BY","rental_rate","DESC","LIMIT","1"],"query_toks_no_value":["select","title",",","rental_rate","from","film","order","by","rental_rate","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,39,false],null]]],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,39,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Film","hat","die","h\u00f6chste","Verleihrate","?","Und","wie","ist","die","Rate","?"],"question":"Welcher Film hat die h\u00f6chste Verleihrate? Und wie ist die Rate?"},{"db_id":"sakila_1","query":"SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa'","query_toks":["SELECT","payment_date","FROM","payment","WHERE","amount",">","10","UNION","SELECT","T1.payment_date","FROM","payment","AS","T1","JOIN","staff","AS","T2","ON","T1.staff_id","=","T2.staff_id","WHERE","T2.first_name","=","'Elsa","'"],"query_toks_no_value":["select","payment_date","from","payment","where","amount",">","value","union","select","t1",".","payment_date","from","payment","as","t1","join","staff","as","t2","on","t1",".","staff_id","=","t2",".","staff_id","where","t2",".","first_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",12]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,66,false],null]]]],"union":{"except":null,"from":{"conds":[[false,2,[0,[0,63,false],null],[0,75,false],null]],"table_units":[["table_unit",12],["table_unit",14]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,66,false],null]]]],"union":null,"where":[[false,2,[0,[0,76,false],null],"\"Elsa\"",null]]},"where":[[false,3,[0,[0,65,false],null],10.0,null]]},"question_toks":["Finde","jedes","Zahlungsdatum","f\u00fcr","die","Zahlungen","mit","einem","Betrag","gr\u00f6\u00dfer","als","10","und","bei","der","die","Zahlungen","von","einer","Besch\u00e4ftigen","mit","dem","Vornamen","Elsa","abgewickelt","wurden","."],"question":"Finde jedes Zahlungsdatum f\u00fcr die Zahlungen mit einem Betrag gr\u00f6\u00dfer als 10 und bei der die Zahlungen von einer Besch\u00e4ftigen mit dem Vornamen Elsa abgewickelt wurden."},{"db_id":"tracking_orders","query":"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1","query_toks":["SELECT","T1.customer_name","FROM","customers","AS","T1","JOIN","orders","AS","T2","JOIN","order_items","AS","T3","JOIN","products","AS","T4","ON","T1.customer_id","=","T2.customer_id","AND","T2.order_id","=","T3.order_id","AND","T3.product_id","=","T4.product_id","WHERE","T4.product_name","=","``","food","''","GROUP","BY","T1.customer_id","HAVING","count","(","*",")",">","=","1"],"query_toks_no_value":["select","t1",".","customer_name","from","customers","as","t1","join","orders","as","t2","join","order_items","as","t3","join","products","as","t4","on","t1",".","customer_id","=","t2",".","customer_id","and","t2",".","order_id","=","t3",".","order_id","and","t3",".","product_id","=","t4",".","product_id","where","t4",".","product_name","=","value","group","by","t1",".","customer_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null],"and",[false,2,[0,[0,7,false],null],[0,17,false],null],"and",[false,2,[0,[0,16,false],null],[0,12,false],null]],"table_units":[["table_unit",0],["table_unit",2],["table_unit",4],["table_unit",3]]},"groupBy":[[0,1,false]],"having":[[false,5,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"food\"",null]]},"question_toks":["Wie","hei\u00dfen","die","Kunden",",","die","mindestens","einmal","ein","Produkt","``","Lebensmittel","''","gekauft","haben","?"],"question":"Wie hei\u00dfen die Kunden, die mindestens einmal ein Produkt \"Lebensmittel\" gekauft haben?"},{"db_id":"tracking_orders","query":"SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"","query_toks":["SELECT","invoice_number","FROM","invoices","WHERE","invoice_date","<","``","1989-09-03","''","OR","invoice_date",">","``","2007-12-25","''"],"query_toks_no_value":["select","invoice_number","from","invoices","where","invoice_date","<","value","or","invoice_date",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,4,[0,[0,5,false],null],"\"1989-09-03\"",null],"or",[false,3,[0,[0,5,false],null],"\"2007-12-25\"",null]]},"question_toks":["Finde","die","Rechnungsnummern",",","die","vor","dem","03.09.1989","oder","nach","dem","25.12.2007","erstellt","wurden","."],"question":"Finde die Rechnungsnummern, die vor dem 03.09.1989 oder nach dem 25.12.2007 erstellt wurden."},{"db_id":"sakila_1","query":"SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'","query_toks":["SELECT","T2.address","FROM","staff","AS","T1","JOIN","address","AS","T2","ON","T1.address_id","=","T2.address_id","WHERE","T1.first_name","=","'Elsa","'"],"query_toks_no_value":["select","t2",".","address","from","staff","as","t1","join","address","as","t2","on","t1",".","address_id","=","t2",".","address_id","where","t1",".","first_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,78,false],null],[0,5,false],null]],"table_units":[["table_unit",14],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,2,[0,[0,76,false],null],"\"Elsa\"",null]]},"question_toks":["Nenne","die","Adresse","des","Mitarbeiters",",","der","den","Vornamen","Elsa","tr\u00e4gt","."],"question":"Nenne die Adresse des Mitarbeiters, der den Vornamen Elsa tr\u00e4gt."},{"db_id":"formula_1","query":"SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)","query_toks":["SELECT","DISTINCT","driverid",",","STOP","FROM","pitstops","WHERE","duration",">","(","SELECT","min","(","duration",")","FROM","pitstops","WHERE","raceid","=","841",")"],"query_toks_no_value":["select","distinct","driverid",",","stop","from","pitstops","where","duration",">","(","select","min","(","duration",")","from","pitstops","where","raceid","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",11]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,83,false],null]],[0,[0,[0,84,false],null]]]],"union":null,"where":[[false,3,[0,[0,87,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",11]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,87,false],null]]]],"union":null,"where":[[false,2,[0,[0,82,false],null],841.0,null]]},null]]},"question_toks":["Finde","die","eindeutige","Fahrer-ID","aller","Fahrer",",","die","eine","l\u00e4ngere","Stoppdauer","haben","als","einige","Fahrer","in","dem","Rennen",",","dessen","ID","841","ist","."],"question":"Finde die eindeutige Fahrer-ID aller Fahrer, die eine l\u00e4ngere Stoppdauer haben als einige Fahrer in dem Rennen, dessen ID 841 ist."},{"db_id":"tracking_orders","query":"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\"","query_toks":["SELECT","T1.customer_name","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T2.order_status","=","``","On","Road","''","INTERSECT","SELECT","T1.customer_name","FROM","customers","AS","T1","JOIN","orders","AS","T2","ON","T1.customer_id","=","T2.customer_id","WHERE","T2.order_status","=","``","Shipped","''"],"query_toks_no_value":["select","t1",".","customer_name","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t2",".","order_status","=","value","intersect","select","t1",".","customer_name","from","customers","as","t1","join","orders","as","t2","on","t1",".","customer_id","=","t2",".","customer_id","where","t2",".","order_status","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Shipped\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"On Road\"",null]]},"question_toks":["Finde","die","Namen","der","Kunden",",","die","sowohl","den","Bestellstatus","``","unterwegs","''","als","auch","``","verschickt","''","haben","."],"question":"Finde die Namen der Kunden, die sowohl den Bestellstatus \"unterwegs\" als auch \"verschickt\" haben."},{"db_id":"entrepreneur","query":"SELECT Weight FROM people ORDER BY Height ASC LIMIT 1","query_toks":["SELECT","Weight","FROM","people","ORDER","BY","Height","ASC","LIMIT","1"],"query_toks_no_value":["select","weight","from","people","order","by","height","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,8,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","das","Gewicht","der","kleinsten","Person","wieder","."],"question":"Gib das Gewicht der kleinsten Person wieder."},{"db_id":"cinema","query":"SELECT title ,  directed_by FROM film","query_toks":["SELECT","title",",","directed_by","FROM","film"],"query_toks_no_value":["select","title",",","directed_by","from","film"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","Titel","und","Regisseur","der","einzelnen","Filme","?"],"question":"Wie lauten Titel und Regisseur der einzelnen Filme?"},{"db_id":"activity_1","query":"SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.fname",",","T1.lname","FROM","Student","AS","T1","JOIN","Participates_in","AS","T2","ON","T1.StuID","=","T2.StuID","GROUP","BY","T1.StuID","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","lname","from","student","as","t1","join","participates_in","as","t2","on","t1",".","stuid","=","t2",".","stuid","group","by","t1",".","stuid","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,3,false],null]],"table_units":[["table_unit",3],["table_unit",1]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Nenne","mir","den","Vor-","und","Nachnamen","des","Studierenden",",","der","die","meisten","Aktivit\u00e4ten","hat","."],"question":"Nenne mir den Vor- und Nachnamen des Studierenden, der die meisten Aktivit\u00e4ten hat."},{"db_id":"voter_2","query":"SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18","query_toks":["SELECT","DISTINCT","T1.Fname",",","T1.LName","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","T2.VICE_President_VOTE","WHERE","T1.age","=","18"],"query_toks_no_value":["select","distinct","t1",".","fname",",","t1",".","lname","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","t2",".","vice_president_vote","where","t1",".","age","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,13,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],18.0,null]]},"question_toks":["Wie","sind","der","Vor-","und","Nachnamen","der","Studierenden",",","die","18","Jahre","alt","sind","und","Vizepr\u00e4sidenten-Stimmen","haben","?"],"question":"Wie sind der Vor- und Nachnamen der Studierenden, die 18 Jahre alt sind und Vizepr\u00e4sidenten-Stimmen haben?"},{"db_id":"store_product","query":"SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1","query_toks":["SELECT","district_name","FROM","district","ORDER","BY","city_area","ASC","LIMIT","1"],"query_toks_no_value":["select","district_name","from","district","order","by","city_area","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,18,false],null]]],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Bezirk","hat","die","geringste","Fl\u00e4che","?"],"question":"Welcher Bezirk hat die geringste Fl\u00e4che?"},{"db_id":"entrepreneur","query":"SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC","query_toks":["SELECT","Company","FROM","entrepreneur","ORDER","BY","Money_Requested","DESC"],"query_toks_no_value":["select","company","from","entrepreneur","order","by","money_requested","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,4,false],null]]],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Unternehmen","der","Unternehmer",",","absteigend","sortiert","nach","dem","Betrag","des","angefragten","Geldes","?"],"question":"Welches sind die Unternehmen der Unternehmer, absteigend sortiert nach dem Betrag des angefragten Geldes?"},{"db_id":"debate","query":"SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID WHERE T2.Num_of_Audience  >  200","query_toks":["SELECT","T3.Name","FROM","debate_people","AS","T1","JOIN","debate","AS","T2","ON","T1.Debate_ID","=","T2.Debate_ID","JOIN","people","AS","T3","ON","T1.Affirmative","=","T3.People_ID","WHERE","T2.Num_of_Audience",">","200"],"query_toks_no_value":["select","t3",".","name","from","debate_people","as","t1","join","debate","as","t2","on","t1",".","debate_id","=","t2",".","debate_id","join","people","as","t3","on","t1",".","affirmative","=","t3",".","people_id","where","t2",".","num_of_audience",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],200.0,null]]},"question_toks":["Zeige","die","Namen","der","Personen","an",",","die","bei","Debatten","auf","der","zustimmenden","Seite","mit","mehr","als","200","Zuh\u00f6rern","stehen","."],"question":"Zeige die Namen der Personen an, die bei Debatten auf der zustimmenden Seite mit mehr als 200 Zuh\u00f6rern stehen."},{"db_id":"college_1","query":"SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  \"ACCT-211\"","query_toks":["SELECT","count","(","DISTINCT","PROF_NUM",")","FROM","CLASS","WHERE","CRS_CODE","=","``","ACCT-211","''"],"query_toks_no_value":["select","count","(","distinct","prof_num",")","from","class","where","crs_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,6,true],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"ACCT-211\"",null]]},"question_toks":["Wie","viele","Professoren","unterrichten","einen","Kurs","mit","dem","Code","ACCT-211","?"],"question":"Wie viele Professoren unterrichten einen Kurs mit dem Code ACCT-211?"},{"db_id":"voter_2","query":"SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  \"PIT\"","query_toks":["SELECT","DISTINCT","T1.Fname","FROM","STUDENT","AS","T1","JOIN","VOTING_RECORD","AS","T2","ON","T1.StuID","=","T2.VICE_PRESIDENT_Vote","EXCEPT","SELECT","DISTINCT","Fname","FROM","STUDENT","WHERE","city_code","=","``","PIT","''"],"query_toks_no_value":["select","distinct","t1",".","fname","from","student","as","t1","join","voting_record","as","t2","on","t1",".","stuid","=","t2",".","vice_president_vote","except","select","distinct","fname","from","student","where","city_code","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"PIT\"",null]]},"from":{"conds":[[false,2,[0,[0,1,false],null],[0,13,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","eindeutigen","Vornamen","aller","Studierenden",",","die","Vizepr\u00e4sidenten-Stimmen","haben","und","deren","Stadtcode","nicht","PIT","ist","."],"question":"Finde die eindeutigen Vornamen aller Studierenden, die Vizepr\u00e4sidenten-Stimmen haben und deren Stadtcode nicht PIT ist."},{"db_id":"activity_1","query":"SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kayaking'","query_toks":["SELECT","T1.lname","FROM","Faculty","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.facID","=","T2.facID","JOIN","activity","AS","T3","ON","T2.actid","=","T2.actid","WHERE","T3.activity_name","=","'Canoeing","'","INTERSECT","SELECT","T1.lname","FROM","Faculty","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.facID","=","T2.facID","JOIN","activity","AS","T3","ON","T2.actid","=","T2.actid","WHERE","T3.activity_name","=","'Kayaking","'"],"query_toks_no_value":["select","t1",".","lname","from","faculty","as","t1","join","faculty_participates_in","as","t2","on","t1",".","facid","=","t2",".","facid","join","activity","as","t3","on","t2",".","actid","=","t2",".","actid","where","t3",".","activity_name","=","value","intersect","select","t1",".","lname","from","faculty","as","t1","join","faculty_participates_in","as","t2","on","t1",".","facid","=","t2",".","facid","join","activity","as","t3","on","t2",".","actid","=","t2",".","actid","where","t3",".","activity_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,5,false],null]],"table_units":[["table_unit",4],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,5,false],null]],"table_units":[["table_unit",4],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kayaking\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Canoeing\"",null]]},"question_toks":["Welches","sind","die","Vornamen","der","Fakult\u00e4tsmitglieder",",","die","zugleich","Kanufahren","und","Kajakfahren","machen","?"],"question":"Welches sind die Vornamen der Fakult\u00e4tsmitglieder, die zugleich Kanufahren und Kajakfahren machen?"},{"db_id":"manufacturer","query":"SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_id WHERE t1.num_of_component  <  6 INTERSECT SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_id WHERE t1.num_of_component  >  10","query_toks":["SELECT","t3.name","FROM","furniture","AS","t1","JOIN","furniture_manufacte","AS","t2","ON","t1.Furniture_ID","=","t2.Furniture_ID","JOIN","manufacturer","AS","t3","ON","t2.manufacturer_id","=","t3.manufacturer_id","WHERE","t1.num_of_component","<","6","INTERSECT","SELECT","t3.name","FROM","furniture","AS","t1","JOIN","furniture_manufacte","AS","t2","ON","t1.Furniture_ID","=","t2.Furniture_ID","JOIN","manufacturer","AS","t3","ON","t2.manufacturer_id","=","t3.manufacturer_id","WHERE","t1.num_of_component",">","10"],"query_toks_no_value":["select","t3",".","name","from","furniture","as","t1","join","furniture_manufacte","as","t2","on","t1",".","furniture_id","=","t2",".","furniture_id","join","manufacturer","as","t3","on","t2",".","manufacturer_id","=","t3",".","manufacturer_id","where","t1",".","num_of_component","<","value","intersect","select","t3",".","name","from","furniture","as","t1","join","furniture_manufacte","as","t2","on","t1",".","furniture_id","=","t2",".","furniture_id","join","manufacturer","as","t3","on","t2",".","manufacturer_id","=","t3",".","manufacturer_id","where","t1",".","num_of_component",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,3,[0,[0,8,false],null],10.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,4,[0,[0,8,false],null],6.0,null]]},"question_toks":["Finde","den","Namen","des","Unternehmens",",","das","sowohl","M\u00f6bel","mit","weniger","als","6","Komponenten","als","auch","M\u00f6bel","mit","mehr","als","10","Komponenten","herstellt","."],"question":"Finde den Namen des Unternehmens, das sowohl M\u00f6bel mit weniger als 6 Komponenten als auch M\u00f6bel mit mehr als 10 Komponenten herstellt."},{"db_id":"formula_1","query":"SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\"","query_toks":["SELECT","name","FROM","races","WHERE","TIME",">","``","12:00:00","''","OR","TIME","<","``","09:00:00","''"],"query_toks_no_value":["select","name","from","races","where","time",">","value","or","time","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,3,[0,[0,16,false],null],"\"12:00:00\"",null],"or",[false,4,[0,[0,16,false],null],"\"09:00:00\"",null]]},"question_toks":["Welches","sind","die","Namen","aller","Rennen",",","die","nach","12:00:00","oder","vor","09:00:00","stattfanden","?"],"question":"Welches sind die Namen aller Rennen, die nach 12:00:00 oder vor 09:00:00 stattfanden?"},{"db_id":"store_product","query":"SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1","query_toks":["SELECT","district_name","FROM","district","ORDER","BY","city_area","ASC","LIMIT","1"],"query_toks_no_value":["select","district_name","from","district","order","by","city_area","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,18,false],null]]],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Name","des","Bezirks","mit","der","kleinsten","Fl\u00e4che","?"],"question":"Wie lautet der Name des Bezirks mit der kleinsten Fl\u00e4che?"},{"db_id":"music_1","query":"SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"modern\")","query_toks":["SELECT","f_id","FROM","song","WHERE","resolution",">","(","SELECT","avg","(","resolution",")","FROM","song","WHERE","genre_is","=","``","modern","''",")"],"query_toks_no_value":["select","f_id","from","song","where","resolution",">","(","select","avg","(","resolution",")","from","song","where","genre_is","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,3,[0,[0,21,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,21,false],null]]]],"union":null,"where":[[false,2,[0,[0,17,false],null],"\"modern\"",null]]},null]]},"question_toks":["Welches","sind","die","IDs","der","Lieder",",","deren","Aufl\u00f6sung","h\u00f6her","ist","als","die","durchschnittliche","Aufl\u00f6sung","von","Liedern","im","Genre","Modern","?"],"question":"Welches sind die IDs der Lieder, deren Aufl\u00f6sung h\u00f6her ist als die durchschnittliche Aufl\u00f6sung von Liedern im Genre Modern?"},{"db_id":"college_1","query":"SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'","query_toks":["SELECT","T3.dept_name",",","T2.prof_office","FROM","employee","AS","T1","JOIN","professor","AS","T2","ON","T1.emp_num","=","T2.emp_num","JOIN","department","AS","T3","ON","T2.dept_code","=","T3.dept_code","WHERE","T1.emp_lname","=","'Heffington","'"],"query_toks_no_value":["select","t3",".","dept_name",",","t2",".","prof_office","from","employee","as","t1","join","professor","as","t2","on","t1",".","emp_num","=","t2",".","emp_num","join","department","as","t3","on","t2",".","dept_code","=","t3",".","dept_code","where","t1",".","emp_lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,17,false],null],[0,27,false],null]],"table_units":[["table_unit",3],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]],[0,[0,[0,29,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],"\"Heffington\"",null]]},"question_toks":["Was","ist","der","Name","der","Abteilung","und","der","B\u00fcrostandort","des","Professors","mit","dem","Nachnamen","Heffington","?"],"question":"Was ist der Name der Abteilung und der B\u00fcrostandort des Professors mit dem Nachnamen Heffington?"},{"db_id":"phone_market","query":"SELECT Name FROM phone WHERE Carrier  =  \"Sprint\" OR Carrier  =  \"TMobile\"","query_toks":["SELECT","Name","FROM","phone","WHERE","Carrier","=","``","Sprint","''","OR","Carrier","=","``","TMobile","''"],"query_toks_no_value":["select","name","from","phone","where","carrier","=","value","or","carrier","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Sprint\"",null],"or",[false,2,[0,[0,4,false],null],"\"TMobile\"",null]]},"question_toks":["Zeige","die","Namen","der","Telefone","mit","dem","Provider","entweder","``","Sprint","''","oder","``","T-Mobile","''","an","."],"question":"Zeige die Namen der Telefone mit dem Provider entweder \"Sprint\" oder \"T-Mobile\" an. "},{"db_id":"college_1","query":"SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' AND T1.prof_high_degree != 'Ph.D.'","query_toks":["SELECT","T2.emp_fname",",","T1.prof_office","FROM","professor","AS","T1","JOIN","employee","AS","T2","ON","T1.emp_num","=","T2.emp_num","JOIN","department","AS","T3","ON","T1.dept_code","=","T3.dept_code","WHERE","T3.dept_name","=","'History","'","AND","T1.prof_high_degree","!","=","'Ph.D",".","'"],"query_toks_no_value":["select","t2",".","emp_fname",",","t1",".","prof_office","from","professor","as","t1","join","employee","as","t2","on","t1",".","emp_num","=","t2",".","emp_num","join","department","as","t3","on","t1",".","dept_code","=","t3",".","dept_code","where","t3",".","dept_name","=","value","and","t1",".","prof_high_degree","!","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,27,false],null],[0,17,false],null]],"table_units":[["table_unit",5],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,19,false],null]],[0,[0,[0,29,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"History\"",null],"and",[false,7,[0,[0,31,false],null],"\"Ph.D.\"",null]]},"question_toks":["Finde","den","Vornamen","und","das","B\u00fcro","des","Geschichtsprofessors",",","der","keinen","Doktortitel","erhalten","hat","."],"question":"Finde den Vornamen und das B\u00fcro des Geschichtsprofessors, der keinen Doktortitel erhalten hat."},{"db_id":"swimming","query":"SELECT count(DISTINCT nationality) FROM swimmer","query_toks":["SELECT","count","(","DISTINCT","nationality",")","FROM","swimmer"],"query_toks_no_value":["select","count","(","distinct","nationality",")","from","swimmer"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,3,true],null]]]],"union":null,"where":[]},"question_toks":["Aus","wie","vielen","verschiedenen","L\u00e4ndern","stammen","die","Schwimmerinnen","und","Schwimmer","?"],"question":"Aus wie vielen verschiedenen L\u00e4ndern stammen die Schwimmerinnen und Schwimmer?"},{"db_id":"activity_1","query":"SELECT activity_name FROM Activity","query_toks":["SELECT","activity_name","FROM","Activity"],"query_toks_no_value":["select","activity_name","from","activity"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Aktivit\u00e4ten","haben","wir","?"],"question":"Welche Aktivit\u00e4ten haben wir?"},{"db_id":"activity_1","query":"SELECT count(*) FROM Faculty WHERE Sex  =  'F' AND Rank  =  \"Professor\"","query_toks":["SELECT","count","(","*",")","FROM","Faculty","WHERE","Sex","=","'F","'","AND","Rank","=","``","Professor","''"],"query_toks_no_value":["select","count","(","*",")","from","faculty","where","sex","=","value","and","rank","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"F\"",null],"and",[false,2,[0,[0,18,false],null],"\"Professor\"",null]]},"question_toks":["Wie","viele","Professorinnen","haben","wir","?"],"question":"Wie viele Professorinnen haben wir?"},{"db_id":"loan_1","query":"SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state","query_toks":["SELECT","sum","(","acc_bal",")",",","state","FROM","customer","WHERE","credit_score",">","100","GROUP","BY","state"],"query_toks_no_value":["select","sum","(","acc_bal",")",",","state","from","customer","where","credit_score",">","value","group","by","state"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,13,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,9,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],100.0,null]]},"question_toks":["Finde","f\u00fcr","jedes","Bundesland","den","Gesamtkontosaldo","von","Kunden",",","deren","Bonit\u00e4t","\u00fcber","100","liegt","."],"question":"Finde f\u00fcr jedes Bundesland den Gesamtkontosaldo von Kunden, deren Bonit\u00e4t \u00fcber 100 liegt."},{"db_id":"music_1","query":"SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"bangla\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3","query_toks":["SELECT","T1.artist_name","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","WHERE","T2.languages","=","``","bangla","''","GROUP","BY","T2.artist_name","ORDER","BY","count","(","*",")","DESC","LIMIT","3"],"query_toks_no_value":["select","t1",".","artist_name","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","where","t2",".","languages","=","value","group","by","t2",".","artist_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[[0,14,false]],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"bangla\"",null]]},"question_toks":["Welches","sind","die","Top","3","K\u00fcnstler","mit","der","gr\u00f6\u00dften","Anzahl","von","Liedern","in","der","Sprache","Bangla","?"],"question":"Welches sind die Top 3 K\u00fcnstler mit der gr\u00f6\u00dften Anzahl von Liedern in der Sprache Bangla?"},{"db_id":"game_injury","query":"SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id  =  T2.id WHERE T2.season  >  2010","query_toks":["SELECT","count","(","DISTINCT","T1.injury",")","FROM","injury_accident","AS","T1","JOIN","game","AS","T2","ON","T1.game_id","=","T2.id","WHERE","T2.season",">","2010"],"query_toks_no_value":["select","count","(","distinct","t1",".","injury",")","from","injury_accident","as","t1","join","game","as","t2","on","t1",".","game_id","=","t2",".","id","where","t2",".","season",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,8,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,18,true],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],2010.0,null]]},"question_toks":["Wie","viele","verschiedene","Arten","von","Verletzungen","sind","nach","der","Saison","2010","aufgetreten","?"],"question":"Wie viele verschiedene Arten von Verletzungen sind nach der Saison 2010 aufgetreten?"},{"db_id":"twitter_1","query":"SELECT name ,  email FROM user_profiles ORDER BY followers LIMIT 1","query_toks":["SELECT","name",",","email","FROM","user_profiles","ORDER","BY","followers","LIMIT","1"],"query_toks_no_value":["select","name",",","email","from","user_profiles","order","by","followers","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","und","die","E-Mail-Adresse","des","Benutzers",",","der","von","der","geringsten","Anzahl","von","Personen","gefolgt","wird","."],"question":"Finde den Namen und die E-Mail-Adresse des Benutzers, der von der geringsten Anzahl von Personen gefolgt wird."},{"db_id":"college_1","query":"SELECT dept_address FROM department WHERE dept_name  =  'History'","query_toks":["SELECT","dept_address","FROM","department","WHERE","dept_name","=","'History","'"],"query_toks_no_value":["select","dept_address","from","department","where","dept_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"History\"",null]]},"question_toks":["Wie","lautet","die","Adresse","des","Fachbereichs","Geschichte","?"],"question":"Wie lautet die Adresse des Fachbereichs Geschichte?"},{"db_id":"loan_1","query":"SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving'","query_toks":["SELECT","cust_name","FROM","customer","EXCEPT","SELECT","cust_name","FROM","customer","WHERE","acc_type","=","'saving","'"],"query_toks_no_value":["select","cust_name","from","customer","except","select","cust_name","from","customer","where","acc_type","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"saving\"",null]]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Namen","von","Kunden",",","die","keine","Sparkonten","haben","?"],"question":"Was sind die Namen von Kunden, die keine Sparkonten haben?"},{"db_id":"entrepreneur","query":"SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2","query_toks":["SELECT","Investor","FROM","entrepreneur","GROUP","BY","Investor","HAVING","COUNT","(","*",")",">","=","2"],"query_toks_no_value":["select","investor","from","entrepreneur","group","by","investor","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Investoren",",","die","in","mindestens","zwei","Unternehmer","investiert","haben","?"],"question":"Welches sind die Investoren, die in mindestens zwei Unternehmer investiert haben?"},{"db_id":"activity_1","query":"SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID","query_toks":["SELECT","T1.fname",",","T1.lname",",","count","(","*",")",",","T1.FacID","FROM","Faculty","AS","T1","JOIN","Faculty_participates_in","AS","T2","ON","T1.facID","=","T2.facID","GROUP","BY","T1.FacID"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","lname",",","count","(","*",")",",","t1",".","facid","from","faculty","as","t1","join","faculty_participates_in","as","t2","on","t1",".","facid","=","t2",".","facid","group","by","t1",".","facid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,5,false],null]],"table_units":[["table_unit",4],["table_unit",2]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]],[0,[0,[0,16,false],null]],[3,[0,[0,0,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","den","Vor-","und","Nachnamen","aller","Fakult\u00e4tsmitglieder",",","die","an","einigen","Aktivit\u00e4t","teilgenommen","haben",",","zusammen","mit","der","Anzahl","der","Aktivit\u00e4ten",",","an","denen","sie","teilgenommen","haben","."],"question":"Zeige den Vor- und Nachnamen aller Fakult\u00e4tsmitglieder, die an einigen Aktivit\u00e4t teilgenommen haben, zusammen mit der Anzahl der Aktivit\u00e4ten, an denen sie teilgenommen haben."},{"db_id":"sakila_1","query":"SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'","query_toks":["SELECT","phone",",","postal_code","FROM","address","WHERE","address","=","'1031","Daugavpils","Parkway","'"],"query_toks_no_value":["select","phone",",","postal_code","from","address","where","address","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"1031 Daugavpils Parkway\"",null]]},"question_toks":["Was","sind","die","Telefonnummer","und","Postleitzahl","der","Adresse","1031","Daugavpils","Parkway","?"],"question":"Was sind die Telefonnummer und Postleitzahl der Adresse 1031 Daugavpils Parkway?"},{"db_id":"debate","query":"SELECT Party FROM people ORDER BY Age ASC LIMIT 1","query_toks":["SELECT","Party","FROM","people","ORDER","BY","Age","ASC","LIMIT","1"],"query_toks_no_value":["select","party","from","people","order","by","age","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","Partei","der","j\u00fcngsten","Leute","?"],"question":"Was ist die Partei der j\u00fcngsten Leute?"},{"db_id":"formula_1","query":"SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\"","query_toks":["SELECT","max","(","T2.fastestlapspeed",")","FROM","races","AS","T1","JOIN","results","AS","T2","ON","T1.raceid","=","T2.raceid","WHERE","T1.year","=","2008","AND","T1.name","=","``","Monaco","Grand","Prix","''"],"query_toks_no_value":["select","max","(","t2",".","fastestlapspeed",")","from","races","as","t1","join","results","as","t2","on","t1",".","raceid","=","t2",".","raceid","where","t1",".","year","=","value","and","t1",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,44,false],null]],"table_units":[["table_unit",1],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,59,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],2008.0,null],"and",[false,2,[0,[0,14,false],null],"\"Monaco Grand Prix\"",null]]},"question_toks":["Welches","ist","die","h\u00f6chste","Rundengeschwindigkeit","beim","Gro\u00dfen","Preis","von","Monaco","2008","?"],"question":"Welches ist die h\u00f6chste Rundengeschwindigkeit beim Gro\u00dfen Preis von Monaco 2008?"},{"db_id":"sakila_1","query":"SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.first_name",",","T2.last_name",",","T2.actor_id","FROM","film_actor","AS","T1","JOIN","actor","AS","T2","ON","T1.actor_id","=","T2.actor_id","GROUP","BY","T2.actor_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","first_name",",","t2",".","last_name",",","t2",".","actor_id","from","film_actor","as","t1","join","actor","as","t2","on","t1",".","actor_id","=","t2",".","actor_id","group","by","t2",".","actor_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,45,false],null],[0,1,false],null]],"table_units":[["table_unit",7],["table_unit",0]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]],[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Filmschauspieler","(","-Schauspielerin",")","hatte","die","meisten","Filmrollen","?","Gib","seinen","oder","ihren","Vornamen",",","Nachnamen","und","die","Schauspieler-ID","an","."],"question":"Welcher Filmschauspieler (-Schauspielerin) hatte die meisten Filmrollen? Gib seinen oder ihren Vornamen, Nachnamen und die Schauspieler-ID an."},{"db_id":"csu_1","query":"SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\"","query_toks":["SELECT","count","(","*",")","FROM","campuses","WHERE","county","=","``","Los","Angeles","''"],"query_toks_no_value":["select","count","(","*",")","from","campuses","where","county","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Los Angeles\"",null]]},"question_toks":["Wie","viele","Campusse","gibt","es","im","Bezirk","Los","Angeles","?"],"question":"Wie viele Campusse gibt es im Bezirk Los Angeles?"},{"db_id":"cinema","query":"SELECT LOCATION FROM cinema EXCEPT SELECT LOCATION FROM cinema WHERE capacity  >  800","query_toks":["SELECT","LOCATION","FROM","cinema","EXCEPT","SELECT","LOCATION","FROM","cinema","WHERE","capacity",">","800"],"query_toks_no_value":["select","location","from","cinema","except","select","location","from","cinema","where","capacity",">","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],800.0,null]]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","alle","Orte",",","an","denen","kein","Kino","mehr","als","800","Pl\u00e4tze","hat","."],"question":"Zeige alle Orte, an denen kein Kino mehr als 800 Pl\u00e4tze hat."},{"db_id":"music_1","query":"SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3","query_toks":["SELECT","T1.artist_name",",","count","(","*",")","FROM","artist","AS","T1","JOIN","song","AS","T2","ON","T1.artist_name","=","T2.artist_name","GROUP","BY","T2.artist_name","ORDER","BY","count","(","*",")","DESC","LIMIT","3"],"query_toks_no_value":["select","t1",".","artist_name",",","count","(","*",")","from","artist","as","t1","join","song","as","t2","on","t1",".","artist_name","=","t2",".","artist_name","group","by","t2",".","artist_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,14,false],null]],"table_units":[["table_unit",1],["table_unit",3]]},"groupBy":[[0,14,false]],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Namen","und","die","Anzahl","der","Werke","der","drei","K\u00fcnstler",",","die","die","meisten","Lieder","produziert","haben","."],"question":"Finde die Namen und die Anzahl der Werke der drei K\u00fcnstler, die die meisten Lieder produziert haben."},{"db_id":"sakila_1","query":"SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'","query_toks":["SELECT","T2.address","FROM","staff","AS","T1","JOIN","address","AS","T2","ON","T1.address_id","=","T2.address_id","WHERE","T1.first_name","=","'Elsa","'"],"query_toks_no_value":["select","t2",".","address","from","staff","as","t1","join","address","as","t2","on","t1",".","address_id","=","t2",".","address_id","where","t1",".","first_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,78,false],null],[0,5,false],null]],"table_units":[["table_unit",14],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,2,[0,[0,76,false],null],"\"Elsa\"",null]]},"question_toks":["Wo","wohnt","die","Mitarbeiterin","mit","dem","Vornamen","Elsa","?"],"question":"Wo wohnt die Mitarbeiterin mit dem Vornamen Elsa?"}]