[{"db_id":"employee_hire_evaluation","query":"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","query_toks":["SELECT","manager_name",",","district","FROM","shop","ORDER","BY","number_products","DESC","LIMIT","1"],"query_toks_no_value":["select","manager_name",",","district","from","shop","order","by","number_products","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","der","Name","des","Gesch\u00e4ftsleiters","und","der","Bezirk","des","Gesch\u00e4fts",",","das","die","gr\u00f6\u00dfte","Anzahl","von","Produkten","verkauft","?"],"question":"Wie lauten der Name des Gesch\u00e4ftsleiters und der Bezirk des Gesch\u00e4fts, das die gr\u00f6\u00dfte Anzahl von Produkten verkauft?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id ,  document_name ,  document_description FROM Documents","query_toks":["SELECT","document_id",",","document_name",",","document_description","FROM","Documents"],"query_toks_no_value":["select","document_id",",","document_name",",","document_description","from","documents"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","IDs",",","Namen","und","Beschreibungen","aller","Dokumente","?"],"question":"Was sind die IDs, Namen und Beschreibungen aller Dokumente?"},{"db_id":"orchestra","query":"SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003","query_toks":["SELECT","Record_Company","FROM","orchestra","WHERE","Year_of_Founded","<","2003","INTERSECT","SELECT","Record_Company","FROM","orchestra","WHERE","Year_of_Founded",">","2003"],"query_toks_no_value":["select","record_company","from","orchestra","where","year_of_founded","<","value","intersect","select","record_company","from","orchestra","where","year_of_founded",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,3,[0,[0,10,false],null],2003.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,4,[0,[0,10,false],null],2003.0,null]]},"question_toks":["Welches","sind","die","Plattenfirmen",",","die","sowohl","von","den","vor","2003","gegr\u00fcndeten","Orchestern","als","auch","von","den","nach","2003","gegr\u00fcndeten","Orchestern","genutzt","werden","?"],"question":"Welches sind die Plattenfirmen, die sowohl von den vor 2003 gegr\u00fcndeten Orchestern als auch von den nach 2003 gegr\u00fcndeten Orchestern genutzt werden?"},{"db_id":"dog_kennels","query":"SELECT max(age) FROM Dogs","query_toks":["SELECT","max","(","age",")","FROM","Dogs"],"query_toks_no_value":["select","max","(","age",")","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Sagen","Sie","mir","das","Alter","des","\u00e4ltesten","Hundes","."],"question":"Sagen Sie mir das Alter des \u00e4ltesten Hundes."},{"db_id":"course_teach","query":"SELECT Name FROM teacher ORDER BY Age ASC","query_toks":["SELECT","Name","FROM","teacher","ORDER","BY","Age","ASC"],"query_toks_no_value":["select","name","from","teacher","order","by","age","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","Lehrer","nach","aufsteigendem","Alter","geordnet","?"],"question":"Wie lauten die Namen der Lehrer nach aufsteigendem Alter geordnet?"},{"db_id":"car_1","query":"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';","query_toks":["SELECT","count","(","*",")","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","WHERE","T1.FullName","=","'American","Motor","Company","'",";"],"query_toks_no_value":["select","count","(","*",")","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","where","t1",".","fullname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"American Motor Company\"",null]]},"question_toks":["Wie","viele","Automodelle","hat","der","Autohersteller","American","Motor","Company","hergestellt","?"],"question":"Wie viele Automodelle hat der Autohersteller American Motor Company hergestellt?"},{"db_id":"student_transcripts_tracking","query":"SELECT other_student_details FROM Students ORDER BY other_student_details DESC","query_toks":["SELECT","other_student_details","FROM","Students","ORDER","BY","other_student_details","DESC"],"query_toks_no_value":["select","other_student_details","from","students","order","by","other_student_details","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,43,false],null]]],"select":[false,[[0,[0,[0,43,false],null]]]],"union":null,"where":[]},"question_toks":["Listen","Sie","alle","Studentendetails","in","umgekehrter","lexikographischer","Reihenfolge","auf","."],"question":"Listen Sie alle Studentendetails in umgekehrter lexikographischer Reihenfolge auf."},{"db_id":"world_1","query":"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"","query_toks":["SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","INTERSECT","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","French","''"],"query_toks_no_value":["select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","intersect","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"French\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},"question_toks":["Wie","lauten","die","Namen","der","Nationen",",","die","sowohl","Englisch","als","auch","Franz\u00f6sisch","sprechen","?"],"question":"Wie lauten die Namen der Nationen, die sowohl Englisch als auch Franz\u00f6sisch sprechen?"},{"db_id":"dog_kennels","query":"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id","query_toks":["SELECT","professional_id",",","role_code",",","email_address","FROM","Professionals","EXCEPT","SELECT","T1.professional_id",",","T1.role_code",",","T1.email_address","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id"],"query_toks_no_value":["select","professional_id",",","role_code",",","email_address","from","professionals","except","select","t1",".","professional_id",",","t1",".","role_code",",","t1",".","email_address","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,34,false],null]],[0,[0,[0,41,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,34,false],null]],[0,[0,[0,41,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","mir","den","ID",",","die","Rolle","und","die","E-Mail","der","Fachpersonen",",","die","keine","Behandlung","an","Hunden","durchgef\u00fchrt","haben","."],"question":"Geben Sie mir den ID, die Rolle und die E-Mail der Fachpersonen, die keine Behandlung an Hunden durchgef\u00fchrt haben."},{"db_id":"dog_kennels","query":"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'","query_toks":["SELECT","T1.first_name",",","T2.name","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id","WHERE","T1.state","=","'Virginia","'"],"query_toks_no_value":["select","t1",".","first_name",",","t2",".","name","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","where","t1",".","state","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,25,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"Virginia\"",null]]},"question_toks":["Finden","Sie","die","Vornamen","der","Besitzer",",","die","in","Virginia","leben",",","und","die","Namen","der","Hunde",",","die","sie","besitzen","."],"question":"Finden Sie die Vornamen der Besitzer, die in Virginia leben, und die Namen der Hunde, die sie besitzen."},{"db_id":"flight_2","query":"SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)","query_toks":["SELECT","AirportName","FROM","Airports","WHERE","AirportCode","NOT","IN","(","SELECT","SourceAirport","FROM","Flights","UNION","SELECT","DestAirport","FROM","Flights",")"],"query_toks_no_value":["select","airportname","from","airports","where","airportcode","not","in","(","select","sourceairport","from","flights","union","select","destairport","from","flights",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[true,8,[0,[0,6,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"where":[]},null]]},"question_toks":["Finden","Sie","die","Namen","von","Flugh\u00e4fen",",","die","keinen","Hin-","und","R\u00fcckflug","haben","."],"question":"Finden Sie die Namen von Flugh\u00e4fen, die keinen Hin- und R\u00fcckflug haben."},{"db_id":"flight_2","query":"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"","query_toks":["SELECT","count","(","*",")","FROM","Flights","AS","T1","JOIN","Airports","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","WHERE","T2.city","=","``","Aberdeen","''","OR","T2.city","=","``","Abilene","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","where","t2",".","city","=","value","or","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null],"or",[false,2,[0,[0,5,false],null],"\"Abilene\"",null]]},"question_toks":["Finden","Sie","die","Anzahl","der","Fl\u00fcge",",","die","in","der","Stadt","Aberdeen","oder","Abilene","landen","."],"question":"Finden Sie die Anzahl der Fl\u00fcge, die in der Stadt Aberdeen oder Abilene landen."},{"db_id":"course_teach","query":"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name","query_toks":["SELECT","T2.Name",",","COUNT","(","*",")","FROM","course_arrange","AS","T1","JOIN","teacher","AS","T2","ON","T1.Teacher_ID","=","T2.Teacher_ID","GROUP","BY","T2.Name"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","course_arrange","as","t1","join","teacher","as","t2","on","t1",".","teacher_id","=","t2",".","teacher_id","group","by","t2",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,4,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","Lehrer","und","wie","viele","Kurse","unterrichten","sie","?"],"question":"Wie lauten die Namen der Lehrer und wie viele Kurse unterrichten sie?"},{"db_id":"museum_visit","query":"SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1","query_toks":["SELECT","t2.visitor_id",",","t1.name",",","t1.Level_of_membership","FROM","visitor","AS","t1","JOIN","visit","AS","t2","ON","t1.id","=","t2.visitor_id","GROUP","BY","t2.visitor_id","ORDER","BY","sum","(","t2.Total_spent",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","visitor_id",",","t1",".","name",",","t1",".","level_of_membership","from","visitor","as","t1","join","visit","as","t2","on","t1",".","id","=","t2",".","visitor_id","group","by","t2",".","visitor_id","order","by","sum","(","t2",".","total_spent",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,12,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Identit\u00e4t",",","der","Name","und","die","Mitgliedsstufe","der","Besucher",",","die","insgesamt","den","gr\u00f6\u00dften","Geldbetrag","f\u00fcr","alle","Museumstickets","ausgegeben","haben","?"],"question":"Welches sind die Identit\u00e4t, der Name und die Mitgliedsstufe der Besucher, die insgesamt den gr\u00f6\u00dften Geldbetrag f\u00fcr alle Museumstickets ausgegeben haben?"},{"db_id":"pets_1","query":"SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'","query_toks":["SELECT","T1.lname","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pet_age","=","3","AND","T3.pettype","=","'cat","'"],"query_toks_no_value":["select","t1",".","lname","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pet_age","=","value","and","t3",".","pettype","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],3.0,null],"and",[false,2,[0,[0,12,false],null],"\"cat\"",null]]},"question_toks":["Wie","lautet","der","Nachname","des","Studenten",",","der","eine","3","j\u00e4hrige","Katze","hat","?"],"question":"Wie lautet der Nachname des Studenten, der eine 3 j\u00e4hrige Katze hat?"},{"db_id":"wta_1","query":"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","query_toks":["SELECT","sum","(","tours",")",",","ranking_date","FROM","rankings","GROUP","BY","ranking_date"],"query_toks_no_value":["select","sum","(","tours",")",",","ranking_date","from","rankings","group","by","ranking_date"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,39,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,43,false],null]],[0,[0,[0,39,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Touren","gab","es","insgesamt","f\u00fcr","jedes","Ranglistendatum","?"],"question":"Wie viele Touren gab es insgesamt f\u00fcr jedes Ranglistendatum?"},{"db_id":"network_1","query":"SELECT count(*) FROM Highschooler","query_toks":["SELECT","count","(","*",")","FROM","Highschooler"],"query_toks_no_value":["select","count","(","*",")","from","highschooler"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Gymnasiasten","gibt","es","?"],"question":"Wie viele Gymnasiasten gibt es?"},{"db_id":"employee_hire_evaluation","query":"SELECT min(Number_products) ,  max(Number_products) FROM shop","query_toks":["SELECT","min","(","Number_products",")",",","max","(","Number_products",")","FROM","shop"],"query_toks_no_value":["select","min","(","number_products",")",",","max","(","number_products",")","from","shop"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,9,false],null]],[1,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Produkte","gibt","es","mindestens","und","h\u00f6chstens","in","allen","Gesch\u00e4ften","?"],"question":"Wie viele Produkte gibt es mindestens und h\u00f6chstens in allen Gesch\u00e4ften?"},{"db_id":"dog_kennels","query":"SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )","query_toks":["SELECT","count","(","*",")","FROM","Dogs","WHERE","dog_id","NOT","IN","(","SELECT","dog_id","FROM","Treatments",")"],"query_toks_no_value":["select","count","(","*",")","from","dogs","where","dog_id","not","in","(","select","dog_id","from","treatments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,20,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,45,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Nennen","Sie","mir","die","Anzahl","der","Hunde",",","die","irgendeine","Behandlung","erhalten","haben","."],"question":"Nennen Sie mir die Anzahl der Hunde, die irgendeine Behandlung erhalten haben."},{"db_id":"tvshow","query":"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";","query_toks":["SELECT","T1.series_name","FROM","TV_Channel","AS","T1","JOIN","TV_series","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.Episode","=","``","A","Love","of","a","Lifetime","''",";"],"query_toks_no_value":["select","t1",".","series_name","from","tv_channel","as","t1","join","tv_series","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","episode","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,18,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"A Love of a Lifetime\"",null]]},"question_toks":["``","Wie","nennt","sich","die","Serie","mit","der","Episode","``","''","A","Love","of","a","Lifetime","''","''","?"],"question":"\"Wie nennt sich die Serie mit der Episode \"\"A Love of a Lifetime\"\"?"},{"db_id":"world_1","query":"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"","query_toks":["SELECT","avg","(","GNP",")",",","sum","(","population",")","FROM","country","WHERE","GovernmentForm","=","``","US","Territory","''"],"query_toks_no_value":["select","avg","(","gnp",")",",","sum","(","population",")","from","country","where","governmentform","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,16,false],null]],[4,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"US Territory\"",null]]},"question_toks":["Geben","Sie","das","mittlere","BSP","und","die","Gesamtbev\u00f6lkerung","der","Nationen","an",",","die","als","US-Territorium","betrachtet","werden","."],"question":"Geben Sie das mittlere BSP und die Gesamtbev\u00f6lkerung der Nationen an, die als US-Territorium betrachtet werden."},{"db_id":"dog_kennels","query":"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","query_toks":["SELECT","T1.professional_id",",","T1.role_code",",","T1.first_name","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id","GROUP","BY","T1.professional_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","professional_id",",","t1",".","role_code",",","t1",".","first_name","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id","group","by","t1",".","professional_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,33,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,34,false],null]],[0,[0,[0,35,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Fachkr\u00e4fte","haben","mindestens","zwei","Behandlungen","durchgef\u00fchrt","?","Geben","Sie","die","Identit\u00e4t",",","die","Rolle","und","den","Vornamen","der","Fachperson","an","."],"question":"Welche Fachkr\u00e4fte haben mindestens zwei Behandlungen durchgef\u00fchrt? Geben Sie die Identit\u00e4t, die Rolle und den Vornamen der Fachperson an."},{"db_id":"employee_hire_evaluation","query":"SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","t1.name","FROM","employee","AS","t1","JOIN","evaluation","AS","t2","ON","t1.Employee_ID","=","t2.Employee_ID","GROUP","BY","t2.Employee_ID","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","employee","as","t1","join","evaluation","as","t2","on","t1",".","employee_id","=","t2",".","employee_id","group","by","t2",".","employee_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,15,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Mitarbeiter","erhielt","die","meisten","Auszeichnungen","bei","Bewertungen","?","Geben","Sie","mir","den","Namen","des","Mitarbeiters","."],"question":"Welcher Mitarbeiter erhielt die meisten Auszeichnungen bei Bewertungen? Geben Sie mir den Namen des Mitarbeiters."},{"db_id":"dog_kennels","query":"SELECT email_address ,  cell_number ,  home_phone FROM professionals","query_toks":["SELECT","email_address",",","cell_number",",","home_phone","FROM","professionals"],"query_toks_no_value":["select","email_address",",","cell_number",",","home_phone","from","professionals"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,41,false],null]],[0,[0,[0,43,false],null]],[0,[0,[0,42,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","E-Mail-",",","Handy-","und","Haustelefone","der","einzelnen","Fachkr\u00e4fte","?"],"question":"Wie lauten die E-Mail-, Handy- und Haustelefone der einzelnen Fachkr\u00e4fte?"},{"db_id":"museum_visit","query":"SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)","query_toks":["SELECT","name","FROM","museum","WHERE","Museum_ID","NOT","IN","(","SELECT","museum_id","FROM","visit",")"],"query_toks_no_value":["select","name","from","museum","where","museum_id","not","in","(","select","museum_id","from","visit",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","lautet","der","Name","des","Museums",",","das","noch","keinen","Besucher","hatte","?"],"question":"Wie lautet der Name des Museums, das noch keinen Besucher hatte?"},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRPORTS","query_toks":["SELECT","count","(","*",")","FROM","AIRPORTS"],"query_toks_no_value":["select","count","(","*",")","from","airports"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","die","Anzahl","der","Flugh\u00e4fen","zur\u00fcck","."],"question":"Geben Sie die Anzahl der Flugh\u00e4fen zur\u00fcck."},{"db_id":"tvshow","query":"SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1","query_toks":["SELECT","production_code",",","channel","FROM","cartoon","ORDER","BY","original_air_date","LIMIT","1"],"query_toks_no_value":["select","production_code",",","channel","from","cartoon","order","by","original_air_date","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,23,false],null]]],"select":[false,[[0,[0,[0,24,false],null]],[0,[0,[0,25,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","den","Produktionscode","und","den","Kanal","des","zuletzt","ausgestrahlten","Zeichentricks","."],"question":"Finden Sie den Produktionscode und den Kanal des zuletzt ausgestrahlten Zeichentricks."},{"db_id":"real_estate_properties","query":"SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"","query_toks":["SELECT","T2.feature_type_name","FROM","Other_Available_Features","AS","T1","JOIN","Ref_Feature_Types","AS","T2","ON","T1.feature_type_code","=","T2.feature_type_code","WHERE","T1.feature_name","=","``","AirCon","''"],"query_toks_no_value":["select","t2",".","feature_type_name","from","other_available_features","as","t1","join","ref_feature_types","as","t2","on","t1",".","feature_type_code","=","t2",".","feature_type_code","where","t1",".","feature_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"AirCon\"",null]]},"question_toks":["Was","ist","der","Name","des","Merkmalstyps","des","Merkmals","AirCon","?"],"question":"Was ist der Name des Merkmalstyps des Merkmals AirCon?"},{"db_id":"car_1","query":"SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;","query_toks":["SELECT","count","(","*",")","FROM","CARS_DATA","WHERE","horsepower",">","150",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","horsepower",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,20,false],null],150.0,null]]},"question_toks":["Wie","viele","Autos","mit","mehr","als","150","Pferdest\u00e4rken","gibt","es","?"],"question":"Wie viele Autos mit mehr als 150 Pferdest\u00e4rken gibt es?"},{"db_id":"flight_2","query":"SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"","query_toks":["SELECT","AirportName","FROM","AIRPORTS","WHERE","City","=","``","Aberdeen","''"],"query_toks_no_value":["select","airportname","from","airports","where","city","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Wie","lauten","die","Namen","der","Flugh\u00e4fen","in","Aberdeen","?"],"question":"Wie lauten die Namen der Flugh\u00e4fen in Aberdeen?"},{"db_id":"orchestra","query":"SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Record_Company","FROM","orchestra","GROUP","BY","Record_Company","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","record_company","from","orchestra","group","by","record_company","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Listen","Sie","die","Plattenfirma","auf",",","die","von","den","meisten","Orchestern","gemeinsam","genutzt","wird","."],"question":"Listen Sie die Plattenfirma auf, die von den meisten Orchestern gemeinsam genutzt wird."},{"db_id":"employee_hire_evaluation","query":"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","query_toks":["SELECT","count","(","*",")",",","LOCATION","FROM","shop","GROUP","BY","LOCATION"],"query_toks_no_value":["select","count","(","*",")",",","location","from","shop","group","by","location"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","Anzahl","der","Gesch\u00e4fte","an","jedem","Standort","."],"question":"Finden Sie die Anzahl der Gesch\u00e4fte an jedem Standort."},{"db_id":"museum_visit","query":"SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC","query_toks":["SELECT","name",",","Level_of_membership","FROM","visitor","WHERE","Level_of_membership",">","4","ORDER","BY","age","DESC"],"query_toks_no_value":["select","name",",","level_of_membership","from","visitor","where","level_of_membership",">","value","order","by","age","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,8,false],null]]],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,3,[0,[0,7,false],null],4.0,null]]},"question_toks":["Finden","Sie","den","Namen","und","die","Mitgliedsstufe","der","Besucher",",","deren","Mitgliedsstufe","h\u00f6her","als","4","ist",",","und","sortieren","Sie","sie","nach","ihrem","Alter","von","alt","bis","jung","."],"question":"Finden Sie den Namen und die Mitgliedsstufe der Besucher, deren Mitgliedsstufe h\u00f6her als 4 ist, und sortieren Sie sie nach ihrem Alter von alt bis jung."},{"db_id":"world_1","query":"SELECT Name FROM country WHERE IndepYear  >  1950","query_toks":["SELECT","Name","FROM","country","WHERE","IndepYear",">","1950"],"query_toks_no_value":["select","name","from","country","where","indepyear",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],1950.0,null]]},"question_toks":["Geben","Sie","die","Namen","der","Nationen","an",",","die","nach","1950","gegr\u00fcndet","wurden","."],"question":"Geben Sie die Namen der Nationen an, die nach 1950 gegr\u00fcndet wurden."},{"db_id":"wta_1","query":"SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","country_code","FROM","players","GROUP","BY","country_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","country_code","from","players","group","by","country_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Code","des","Landes","mit","den","meisten","Spielern","?"],"question":"Wie lautet der Code des Landes mit den meisten Spielern?"},{"db_id":"orchestra","query":"SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID","query_toks":["SELECT","T1.Name",",","T2.Orchestra","FROM","conductor","AS","T1","JOIN","orchestra","AS","T2","ON","T1.Conductor_ID","=","T2.Conductor_ID"],"query_toks_no_value":["select","t1",".","name",",","t2",".","orchestra","from","conductor","as","t1","join","orchestra","as","t2","on","t1",".","conductor_id","=","t2",".","conductor_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","Dirigenten","sowie","der","entsprechenden","Orchester",",","die","sie","dirigiert","haben","?"],"question":"Wie lauten die Namen der Dirigenten sowie der entsprechenden Orchester, die sie dirigiert haben?"},{"db_id":"dog_kennels","query":"SELECT charge_type ,  charge_amount FROM Charges","query_toks":["SELECT","charge_type",",","charge_amount","FROM","Charges"],"query_toks_no_value":["select","charge_type",",","charge_amount","from","charges"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Listen","Sie","jede","Geb\u00fchrenart","und","ihren","Betrag","auf","."],"question":"Listen Sie jede Geb\u00fchrenart und ihren Betrag auf."},{"db_id":"student_transcripts_tracking","query":"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","query_toks":["SELECT","first_name",",","middle_name",",","last_name","FROM","Students","ORDER","BY","date_left","ASC","LIMIT","1"],"query_toks_no_value":["select","first_name",",","middle_name",",","last_name","from","students","order","by","date_left","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,42,false],null]]],"select":[false,[[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Vor-",",","Mittel-","und","Nachname","des","\u00e4ltesten","Schulabg\u00e4ngers","?"],"question":"Wie lautet der Vor-, Mittel- und Nachname des \u00e4ltesten Schulabg\u00e4ngers?"},{"db_id":"world_1","query":"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"","query_toks":["SELECT","Region","FROM","country","AS","T1","JOIN","city","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Name","=","``","Kabul","''"],"query_toks_no_value":["select","region","from","country","as","t1","join","city","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kabul\"",null]]},"question_toks":["In","welcher","Region","liegt","Kabul","?"],"question":"In welcher Region liegt Kabul?"},{"db_id":"world_1","query":"SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"","query_toks":["SELECT","sum","(","Population",")",",","max","(","GNP",")","FROM","country","WHERE","Continent","=","``","Asia","''"],"query_toks_no_value":["select","sum","(","population",")",",","max","(","gnp",")","from","country","where","continent","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]],[1,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Wie","viele","Menschen","leben","in","Asien",",","und","welches","ist","das","gr\u00f6\u00dfte","BSP","unter","ihnen","?"],"question":"Wie viele Menschen leben in Asien, und welches ist das gr\u00f6\u00dfte BSP unter ihnen?"},{"db_id":"world_1","query":"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"","query_toks":["SELECT","count","(","DISTINCT","GovernmentForm",")","FROM","country","WHERE","Continent","=","``","Africa","''"],"query_toks_no_value":["select","count","(","distinct","governmentform",")","from","country","where","continent","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,19,true],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Africa\"",null]]},"question_toks":["Wie","viele","Arten","von","Regierungen","gibt","es","in","Afrika","?"],"question":"Wie viele Arten von Regierungen gibt es in Afrika?"},{"db_id":"course_teach","query":"SELECT Age ,  Hometown FROM teacher","query_toks":["SELECT","Age",",","Hometown","FROM","teacher"],"query_toks_no_value":["select","age",",","hometown","from","teacher"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","das","Alter","und","der","Heimatort","der","Lehrer","?"],"question":"Welches sind das Alter und der Heimatort der Lehrer?"},{"db_id":"world_1","query":"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","query_toks":["SELECT","LANGUAGE",",","CountryCode",",","max","(","Percentage",")","FROM","countrylanguage","GROUP","BY","CountryCode"],"query_toks_no_value":["select","language",",","countrycode",",","max","(","percentage",")","from","countrylanguage","group","by","countrycode"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,24,false],null]],[0,[0,[0,23,false],null]],[1,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","die","Sprache",",","die","von","dem","gr\u00f6\u00dften","Prozentsatz","der","Menschen","in","jedem","Land","gesprochen","wird","?"],"question":"Welches ist die Sprache, die von dem gr\u00f6\u00dften Prozentsatz der Menschen in jedem Land gesprochen wird?"},{"db_id":"network_1","query":"SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend","query_toks":["SELECT","id","FROM","Highschooler","EXCEPT","SELECT","student_id","FROM","Friend"],"query_toks_no_value":["select","id","from","highschooler","except","select","student_id","from","friend"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","Identit\u00e4ten","von","Studenten","ohne","Freunde","?"],"question":"Was sind Identit\u00e4ten von Studenten ohne Freunde?"},{"db_id":"wta_1","query":"SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'","query_toks":["SELECT","count","(","DISTINCT","winner_name",")","FROM","matches","WHERE","tourney_name","=","'WTA","Championships","'","AND","winner_hand","=","'L","'"],"query_toks_no_value":["select","count","(","distinct","winner_name",")","from","matches","where","tourney_name","=","value","and","winner_hand","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,34,true],null]]]],"union":null,"where":[[false,2,[0,[0,27,false],null],"\"WTA Championships\"",null],"and",[false,2,[0,[0,30,false],null],"\"L\"",null]]},"question_toks":["Wie","viele","verschiedene","Sieger","nahmen","an","den","WTA-Meisterschaften","teil","und","waren","beide","Linksh\u00e4nder","?"],"question":"Wie viele verschiedene Sieger nahmen an den WTA-Meisterschaften teil und waren beide Linksh\u00e4nder?"},{"db_id":"world_1","query":"SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  \"North America\" AND SurfaceArea  >  3000","query_toks":["SELECT","sum","(","Population",")",",","avg","(","SurfaceArea",")","FROM","country","WHERE","Continent","=","``","North","America","''","AND","SurfaceArea",">","3000"],"query_toks_no_value":["select","sum","(","population",")",",","avg","(","surfacearea",")","from","country","where","continent","=","value","and","surfacearea",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]],[5,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"North America\"",null],"and",[false,3,[0,[0,12,false],null],3000.0,null]]},"question_toks":["Geben","Sie","die","Gesamtbev\u00f6lkerung","und","die","durchschnittliche","Fl\u00e4che","der","L\u00e4nder","in","Nordamerika","an",",","die","eine","Fl\u00e4che","von","mehr","als","3000","haben","."],"question":"Geben Sie die Gesamtbev\u00f6lkerung und die durchschnittliche Fl\u00e4che der L\u00e4nder in Nordamerika an, die eine Fl\u00e4che von mehr als 3000 haben."},{"db_id":"dog_kennels","query":"SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )","query_toks":["SELECT","count","(","*",")","FROM","Owners","WHERE","owner_id","NOT","IN","(","SELECT","owner_id","FROM","Dogs",")"],"query_toks_no_value":["select","count","(","*",")","from","owners","where","owner_id","not","in","(","select","owner_id","from","dogs",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,10,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,21,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","viele","Besitzer","haben","vor\u00fcbergehend","keine","Hunde","?"],"question":"Wie viele Besitzer haben vor\u00fcbergehend keine Hunde?"},{"db_id":"flight_2","query":"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"","query_toks":["SELECT","Airline",",","Abbreviation","FROM","AIRLINES","WHERE","Country","=","``","USA","''"],"query_toks_no_value":["select","airline",",","abbreviation","from","airlines","where","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"USA\"",null]]},"question_toks":["``","Listen","Sie","alle","Namen","von","Fluggesellschaften","in","``","''","USA","''","''","und","ihre","Abk\u00fcrzungen","auf",".","''"],"question":"\"Listen Sie alle Namen von Fluggesellschaften in \"\"USA\"\" und ihre Abk\u00fcrzungen auf.\""},{"db_id":"flight_2","query":"SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.AirportCode","FROM","AIRPORTS","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.AirportCode","=","T2.DestAirport","OR","T1.AirportCode","=","T2.SourceAirport","GROUP","BY","T1.AirportCode","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","airportcode","from","airports","as","t1","join","flights","as","t2","on","t1",".","airportcode","=","t2",".","destairport","or","t1",".","airportcode","=","t2",".","sourceairport","group","by","t1",".","airportcode","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,13,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Code","des","Flughafens","mit","der","h\u00f6chsten","Anzahl","von","Fl\u00fcgen","?"],"question":"Wie lautet der Code des Flughafens mit der h\u00f6chsten Anzahl von Fl\u00fcgen?"},{"db_id":"car_1","query":"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","query_toks":["SELECT","T1.FullName",",","T1.Id",",","count","(","*",")","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","GROUP","BY","T1.Id",";"],"query_toks_no_value":["select","t1",".","fullname",",","t1",".","id",",","count","(","*",")","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","group","by","t1",".","id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,6,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Modelle","stellt","jeder","Autohersteller","her","?","Geben","Sie","den","vollst\u00e4ndigen","Namen",",","die","ID","und","die","Nummer","des","Herstellers","an","."],"question":"Wie viele Modelle stellt jeder Autohersteller her? Geben Sie den vollst\u00e4ndigen Namen, die ID und die Nummer des Herstellers an."},{"db_id":"car_1","query":"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","query_toks":["SELECT","T2.horsepower",",","T1.Make","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","WHERE","T2.cylinders","=","3","ORDER","BY","T2.horsepower","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t2",".","horsepower",",","t1",".","make","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","where","t2",".","cylinders","=","value","order","by","t2",".","horsepower","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,20,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],3.0,null]]},"question_toks":["Was","ist","die","h\u00f6chste","Pferdest\u00e4rke","f\u00fcr","die","Modelle","mit","3","Zylindern","und","welche","Marke","ist","es","?"],"question":"Was ist die h\u00f6chste Pferdest\u00e4rke f\u00fcr die Modelle mit 3 Zylindern und welche Marke ist es?"},{"db_id":"world_1","query":"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"","query_toks":["SELECT","count","(","DISTINCT","GovernmentForm",")","FROM","country","WHERE","Continent","=","``","Africa","''"],"query_toks_no_value":["select","count","(","distinct","governmentform",")","from","country","where","continent","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,19,true],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Africa\"",null]]},"question_toks":["Wie","viele","unterschiedliche","Regierungsformen","gibt","es","in","Afrika","?"],"question":"Wie viele unterschiedliche Regierungsformen gibt es in Afrika?"},{"db_id":"car_1","query":"SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );","query_toks":["SELECT","COUNT","(","*",")","FROM","(","SELECT","T1.CountryId",",","COUNT","(","*",")","FROM","COUNTRIES","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.CountryId","=","T2.Country","GROUP","BY","T1.CountryId","HAVING","count","(","*",")",">","2",")",";"],"query_toks_no_value":["select","count","(","*",")","from","(","select","t1",".","countryid",",","count","(","*",")","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country","group","by","t1",".","countryid","having","count","(","*",")",">","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["sql",{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,3,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]}]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","die","Zahl","der","L\u00e4nder","mit","mehr","als","zwei","Autoherstellern","?"],"question":"Welches ist die Zahl der L\u00e4nder mit mehr als zwei Autoherstellern?"},{"db_id":"world_1","query":"SELECT Continent FROM country WHERE Name  =  \"Anguilla\"","query_toks":["SELECT","Continent","FROM","country","WHERE","Name","=","``","Anguilla","''"],"query_toks_no_value":["select","continent","from","country","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Anguilla\"",null]]},"question_toks":["Was","ist","der","Name","des","Kontinents",",","zu","dem","Anguilla","geh\u00f6rt","?"],"question":"Was ist der Name des Kontinents, zu dem Anguilla geh\u00f6rt?"},{"db_id":"dog_kennels","query":"SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )","query_toks":["SELECT","T1.last_name","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id","WHERE","T2.age","=","(","SELECT","max","(","age",")","FROM","Dogs",")"],"query_toks_no_value":["select","t1",".","last_name","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","where","t2",".","age","=","(","select","max","(","age",")","from","dogs",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,26,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,26,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wem","geh\u00f6rt","der","j\u00fcngste","Hund","?","Nenne","mir","seinen","oder","ihren","Nachnamen","."],"question":"Wem geh\u00f6rt der j\u00fcngste Hund? Nenne mir seinen oder ihren Nachnamen."},{"db_id":"orchestra","query":"SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)","query_toks":["SELECT","Orchestra","FROM","orchestra","WHERE","Orchestra_ID","NOT","IN","(","SELECT","Orchestra_ID","FROM","performance",")"],"query_toks_no_value":["select","orchestra","from","orchestra","where","orchestra_id","not","in","(","select","orchestra_id","from","performance",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[true,8,[0,[0,6,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Welche","Orchester","haben","keine","Auff\u00fchrungen","?"],"question":"Welche Orchester haben keine Auff\u00fchrungen?"},{"db_id":"pets_1","query":"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","query_toks":["SELECT","pettype",",","weight","FROM","pets","ORDER","BY","pet_age","LIMIT","1"],"query_toks_no_value":["select","pettype",",","weight","from","pets","order","by","pet_age","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,12,false],null]],[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","und","schreibe","das","Gewicht","des","j\u00fcngsten","Haustiers","."],"question":"Finde und schreibe das Gewicht des j\u00fcngsten Haustiers."},{"db_id":"flight_2","query":"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"","query_toks":["SELECT","AirportName","FROM","AIRPORTS","WHERE","AirportCode","=","``","AKO","''"],"query_toks_no_value":["select","airportname","from","airports","where","airportcode","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"AKO\"",null]]},"question_toks":["Was","ist","der","Flughafenname","des","Flughafens","``","AKO","''","?"],"question":"Was ist der Flughafenname des Flughafens \"AKO\"?"},{"db_id":"singer","query":"SELECT count(*) FROM singer","query_toks":["SELECT","count","(","*",")","FROM","singer"],"query_toks_no_value":["select","count","(","*",")","from","singer"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","die","Anzahl","der","S\u00e4nger","?"],"question":"Welches ist die Anzahl der S\u00e4nger?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Paragraphs","query_toks":["SELECT","count","(","*",")","FROM","Paragraphs"],"query_toks_no_value":["select","count","(","*",")","from","paragraphs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hle","die","Abs\u00e4tze","."],"question":"Z\u00e4hle die Abs\u00e4tze."},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","GROUP","BY","T1.Airline","HAVING","count","(","*",")",">","10"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","group","by","t1",".","airline","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[[false,3,[0,[3,0,false],null],10.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Fluglinien","haben","mindestens","10","Fl\u00fcge","?"],"question":"Welche Fluglinien haben mindestens 10 Fl\u00fcge?"},{"db_id":"network_1","query":"SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2","query_toks":["SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","WHERE","T2.grade",">","5","GROUP","BY","T1.student_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","where","t2",".","grade",">","value","group","by","t1",".","student_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,3,[0,[0,3,false],null],5.0,null]]},"question_toks":["Was","sind","die","Namen","von","Gymnasiasten",",","die","eine","Klasse","\u00fcber","5","und","2","oder","mehr","Freunde","haben","?"],"question":"Was sind die Namen von Gymnasiasten, die eine Klasse \u00fcber 5 und 2 oder mehr Freunde haben?"},{"db_id":"tvshow","query":"SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'","query_toks":["SELECT","id","FROM","TV_Channel","EXCEPT","SELECT","channel","FROM","cartoon","WHERE","directed_by","=","'Ben","Jones","'"],"query_toks_no_value":["select","id","from","tv_channel","except","select","channel","from","cartoon","where","directed_by","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Kan\u00e4le","von","Fernsehsendern",",","die","keine","Zeichentrickfilme","unter","der","Regie","von","Ben","Jones","abspielen","."],"question":"Finde die Kan\u00e4le von Fernsehsendern, die keine Zeichentrickfilme unter der Regie von Ben Jones abspielen."},{"db_id":"network_1","query":"SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2","query_toks":["SELECT","T2.name","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","name","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,6,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Namen","von","Studierenden",",","die","mindestens","2","``","Gef\u00e4llt","mir","''","haben","."],"question":"Zeige die Namen von Studierenden, die mindestens 2 \"Gef\u00e4llt mir\" haben."},{"db_id":"world_1","query":"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"","query_toks":["SELECT","DISTINCT","CountryCode","FROM","countrylanguage","WHERE","LANGUAGE","!","=","``","English","''"],"query_toks_no_value":["select","distinct","countrycode","from","countrylanguage","where","language","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,7,[0,[0,24,false],null],"\"English\"",null]]},"question_toks":["Geben","Sie","die","L\u00e4ndercodes","f\u00fcr","L\u00e4nder","an",",","in","denen","die","Menschen","Sprachen","sprechen",",","die","nicht","Englisch","sind","."],"question":"Geben Sie die L\u00e4ndercodes f\u00fcr L\u00e4nder an, in denen die Menschen Sprachen sprechen, die nicht Englisch sind. "},{"db_id":"orchestra","query":"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"","query_toks":["SELECT","max","(","SHARE",")",",","min","(","SHARE",")","FROM","performance","WHERE","TYPE","!","=","``","Live","final","''"],"query_toks_no_value":["select","max","(","share",")",",","min","(","share",")","from","performance","where","type","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,18,false],null]],[2,[0,[0,18,false],null]]]],"union":null,"where":[[false,7,[0,[0,14,false],null],"\"Live final\"",null]]},"question_toks":["Gib","die","maximalen","und","minimalen","Anteile","f\u00fcr","Auff\u00fchrungen","wieder",",","die","nicht","den","Typ","``","Live-Finale","''","haben","."],"question":"Gib die maximalen und minimalen Anteile f\u00fcr Auff\u00fchrungen wieder, die nicht den Typ \"Live-Finale\" haben. "},{"db_id":"voter_1","query":"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1","query_toks":["SELECT","T1.contestant_number",",","T1.contestant_name","FROM","contestants","AS","T1","JOIN","votes","AS","T2","ON","T1.contestant_number","=","T2.contestant_number","GROUP","BY","T1.contestant_number","ORDER","BY","count","(","*",")","ASC","LIMIT","1"],"query_toks_no_value":["select","t1",".","contestant_number",",","t1",".","contestant_name","from","contestants","as","t1","join","votes","as","t2","on","t1",".","contestant_number","=","t2",".","contestant_number","group","by","t1",".","contestant_number","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,8,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,3,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","von","allen","Teilnehmern",",","die","gew\u00e4hlt","wurden",",","die","Nummer","und","der","Name","des","Teilnehmers",",","der","am","wenigsten","Stimmen","erhalten","hat","?"],"question":"Wie lautet von allen Teilnehmern, die gew\u00e4hlt wurden, die Nummer und der Name des Teilnehmers, der am wenigsten Stimmen erhalten hat?"},{"db_id":"concert_singer","query":"SELECT avg(capacity) ,  max(capacity) FROM stadium","query_toks":["SELECT","avg","(","capacity",")",",","max","(","capacity",")","FROM","stadium"],"query_toks_no_value":["select","avg","(","capacity",")",",","max","(","capacity",")","from","stadium"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]],[1,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","die","durchschnittliche","und","maximale","Kapazit\u00e4t","aller","Stationen","?"],"question":"Wie hoch ist die durchschnittliche und maximale Kapazit\u00e4t aller Stationen?"},{"db_id":"dog_kennels","query":"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","query_toks":["SELECT","DISTINCT","T1.date_arrived",",","T1.date_departed","FROM","Dogs","AS","T1","JOIN","Treatments","AS","T2","ON","T1.dog_id","=","T2.dog_id"],"query_toks_no_value":["select","distinct","t1",".","date_arrived",",","t1",".","date_departed","from","dogs","as","t1","join","treatments","as","t2","on","t1",".","dog_id","=","t2",".","dog_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,20,false],null],[0,45,false],null]],"table_units":[["table_unit",5],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,30,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","das","Ankunftsdatum","und","das","Abreisedatum","der","Hunde",",","die","eine","Behandlung","durchlaufen","haben","?"],"question":"Was ist das Ankunftsdatum und das Abreisedatum der Hunde, die eine Behandlung durchlaufen haben?"},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","AHD","''"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"AHD\"",null]]},"question_toks":["Welche","Fluggesellschaften","fliegen","vom","Flughafen","'AHD","'","ab","?"],"question":"Welche Fluggesellschaften fliegen vom Flughafen 'AHD' ab?"},{"db_id":"poker_player","query":"SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200","query_toks":["SELECT","avg","(","T2.Earnings",")","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","WHERE","T1.Height",">","200"],"query_toks_no_value":["select","avg","(","t2",".","earnings",")","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","where","t1",".","height",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,6,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],200.0,null]]},"question_toks":["Was","verdienen","Poker-Spieler","mit","einer","Gr\u00f6\u00dfe","von","\u00fcber","200","im","Durchschnitt","?"],"question":"Was verdienen Poker-Spieler mit einer Gr\u00f6\u00dfe von \u00fcber 200 im Durchschnitt?"},{"db_id":"tvshow","query":"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","query_toks":["SELECT","Episode",",","Rating","FROM","TV_series","ORDER","BY","Rating","DESC","LIMIT","3",";"],"query_toks_no_value":["select","episode",",","rating","from","tv_series","order","by","rating","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","3","am","h\u00f6chsten","bewerteten","Episoden","in","der","TV-Serien-Tabelle","und","wie","waren","die","Bewertungen","?"],"question":"Was sind die 3 am h\u00f6chsten bewerteten Episoden in der TV-Serien-Tabelle und wie waren die Bewertungen?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.semester_name",",","T1.semester_id","FROM","Semesters","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.semester_id","=","T2.semester_id","GROUP","BY","T1.semester_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","semester_name",",","t1",".","semester_id","from","semesters","as","t1","join","student_enrolment","as","t2","on","t1",".","semester_id","=","t2",".","semester_id","group","by","t1",".","semester_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,28,false],null],[0,46,false],null]],"table_units":[["table_unit",5],["table_unit",7]]},"groupBy":[[0,28,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,29,false],null]],[0,[0,[0,28,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","f\u00fcr","jedes","Semester","der","Name","und","die","Bezeichnung","desjenigen","mit","den","meisten","eingeschriebenen","Studierenden","?"],"question":"Wie lautet f\u00fcr jedes Semester der Name und die Bezeichnung desjenigen mit den meisten eingeschriebenen Studierenden?"},{"db_id":"wta_1","query":"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","query_toks":["SELECT","sum","(","ranking_points",")",",","T1.first_name","FROM","players","AS","T1","JOIN","rankings","AS","T2","ON","T1.player_id","=","T2.player_id","GROUP","BY","T1.first_name"],"query_toks_no_value":["select","sum","(","ranking_points",")",",","t1",".","first_name","from","players","as","t1","join","rankings","as","t2","on","t1",".","player_id","=","t2",".","player_id","group","by","t1",".","first_name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,41,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,42,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Vornamen","aller","Spieler","und","ihre","Gesamtranglistenpunkte","?"],"question":"Was sind die Vornamen aller Spieler und ihre Gesamtranglistenpunkte? "},{"db_id":"dog_kennels","query":"SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.breed_name","FROM","Breeds","AS","T1","JOIN","Dogs","AS","T2","ON","T1.breed_code","=","T2.breed_code","GROUP","BY","T1.breed_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","breed_name","from","breeds","as","t1","join","dogs","as","t2","on","t1",".","breed_code","=","t2",".","breed_code","group","by","t1",".","breed_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,23,false],null]],"table_units":[["table_unit",0],["table_unit",5]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Von","welcher","Hunderasse","gibt","es","die","meisten","Hunde","?"],"question":"Von welcher Hunderasse gibt es die meisten Hunde?"},{"db_id":"world_1","query":"SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  \"North America\" AND SurfaceArea  >  3000","query_toks":["SELECT","sum","(","Population",")",",","avg","(","SurfaceArea",")","FROM","country","WHERE","Continent","=","``","North","America","''","AND","SurfaceArea",">","3000"],"query_toks_no_value":["select","sum","(","population",")",",","avg","(","surfacearea",")","from","country","where","continent","=","value","and","surfacearea",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]],[5,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"North America\"",null],"and",[false,3,[0,[0,12,false],null],3000.0,null]]},"question_toks":["Welches","ist","die","Gesamtbev\u00f6lkerung","und","die","durchschnittliche","Fl\u00e4che","der","L\u00e4nder","des","Kontinents","Nordamerika",",","deren","Fl\u00e4che","gr\u00f6\u00dfer","als","3000","ist","?"],"question":"Welches ist die Gesamtbev\u00f6lkerung und die durchschnittliche Fl\u00e4che der L\u00e4nder des Kontinents Nordamerika, deren Fl\u00e4che gr\u00f6\u00dfer als 3000 ist?"},{"db_id":"world_1","query":"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"","query_toks":["SELECT","avg","(","LifeExpectancy",")","FROM","country","WHERE","Region","=","``","Central","Africa","''"],"query_toks_no_value":["select","avg","(","lifeexpectancy",")","from","country","where","region","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Central Africa\"",null]]},"question_toks":["Welches","ist","die","durchschnittliche","Lebenserwartung","in","L\u00e4ndern","der","Region","Zentralafrika","?"],"question":"Welches ist die durchschnittliche Lebenserwartung in L\u00e4ndern der Region Zentralafrika?"},{"db_id":"wta_1","query":"SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1","query_toks":["SELECT","winner_name","FROM","matches","WHERE","tourney_name","=","'Australian","Open","'","ORDER","BY","winner_rank_points","DESC","LIMIT","1"],"query_toks_no_value":["select","winner_name","from","matches","where","tourney_name","=","value","order","by","winner_rank_points","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,36,false],null]]],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,27,false],null],"\"Australian Open\"",null]]},"question_toks":["Finden","Sie","den","Namen","des","Gewinners",",","der","die","h\u00f6chste","Punktebewertung","hat","und","an","den","Australian","Open","teilgenommen","hat","."],"question":"Finden Sie den Namen des Gewinners, der die h\u00f6chste Punktebewertung hat und an den Australian Open teilgenommen hat."},{"db_id":"orchestra","query":"SELECT count(*) FROM conductor","query_toks":["SELECT","count","(","*",")","FROM","conductor"],"query_toks_no_value":["select","count","(","*",")","from","conductor"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hle","die","Zahl","der","Dirigenten","."],"question":"Z\u00e4hle die Zahl der Dirigenten."},{"db_id":"concert_singer","query":"SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","query_toks":["SELECT","LOCATION",",","name","FROM","stadium","WHERE","capacity","BETWEEN","5000","AND","10000"],"query_toks_no_value":["select","location",",","name","from","stadium","where","capacity","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,1,[0,[0,4,false],null],5000.0,10000.0]]},"question_toks":["Was","sind","die","Orte","und","Namen","aller","Stationen","mit","einer","Kapazit\u00e4t","zwischen","5000","und","10000","?"],"question":"Was sind die Orte und Namen aller Stationen mit einer Kapazit\u00e4t zwischen 5000 und 10000?"},{"db_id":"car_1","query":"SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';","query_toks":["SELECT","count","(","*",")","FROM","MODEL_LIST","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.Maker","=","T2.Id","JOIN","COUNTRIES","AS","T3","ON","T2.Country","=","T3.CountryId","WHERE","T3.CountryName","=","'usa","'",";"],"query_toks_no_value":["select","count","(","*",")","from","model_list","as","t1","join","car_makers","as","t2","on","t1",".","maker","=","t2",".","id","join","countries","as","t3","on","t2",".","country","=","t3",".","countryid","where","t3",".","countryname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"usa\"",null]]},"question_toks":["Wie","viele","Automodelle","werden","in","den","USA","produziert","?"],"question":"Wie viele Automodelle werden in den USA produziert?"},{"db_id":"employee_hire_evaluation","query":"SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1","query_toks":["SELECT","city","FROM","employee","WHERE","age","<","30","GROUP","BY","city","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","city","from","employee","where","age","<","value","group","by","city","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,4,[0,[0,3,false],null],30.0,null]]},"question_toks":["Aus","welchen","St\u00e4dten","kommt","mehr","als","ein","Angestellter",",","der","j\u00fcnger","als","30","ist","?"],"question":"Aus welchen St\u00e4dten kommt mehr als ein Angestellter, der j\u00fcnger als 30 ist?"},{"db_id":"world_1","query":"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1","query_toks":["SELECT","Name",",","Population",",","LifeExpectancy","FROM","country","WHERE","Continent","=","``","Asia","''","ORDER","BY","SurfaceArea","DESC","LIMIT","1"],"query_toks_no_value":["select","name",",","population",",","lifeexpectancy","from","country","where","continent","=","value","order","by","surfacearea","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,12,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,14,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Was","sind","Name",",","Population","und","Lebenserwartung","des","gr\u00f6\u00dften","asiatischen","Landes","nach","Land","?"],"question":"Was sind Name, Population und Lebenserwartung des gr\u00f6\u00dften asiatischen Landes nach Land?"},{"db_id":"concert_singer","query":"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","query_toks":["SELECT","avg","(","age",")",",","min","(","age",")",",","max","(","age",")","FROM","singer","WHERE","country","=","'France","'"],"query_toks_no_value":["select","avg","(","age",")",",","min","(","age",")",",","max","(","age",")","from","singer","where","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,13,false],null]],[2,[0,[0,13,false],null]],[1,[0,[0,13,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"France\"",null]]},"question_toks":["Was","sind","Alter",",","geringstes","und","h\u00f6chstes","Alter","aller","S\u00e4nger","aus","Frankreich","?"],"question":"Was sind Alter, geringstes und h\u00f6chstes Alter aller S\u00e4nger aus Frankreich?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"","query_toks":["SELECT","template_type_code","FROM","Ref_template_types","WHERE","template_type_description","=","``","Book","''"],"query_toks_no_value":["select","template_type_code","from","ref_template_types","where","template_type_description","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Book\"",null]]},"question_toks":["``","Was","ist","der","Code","des","Vorlagentyps","f\u00fcr","die","Vorlagentypbeschreibung","``","Buch","''","?","''"],"question":"\"Was ist der Code des Vorlagentyps f\u00fcr die Vorlagentypbeschreibung \"Buch\"?\""},{"db_id":"concert_singer","query":"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","query_toks":["SELECT","name",",","country",",","age","FROM","singer","ORDER","BY","age","DESC"],"query_toks_no_value":["select","name",",","country",",","age","from","singer","order","by","age","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Namen",",","L\u00e4nder","und","Alter","jedes","S\u00e4ngers","in","absteigender","Ordnung","nach","Alter","?"],"question":"Was sind die Namen, L\u00e4nder und Alter jedes S\u00e4ngers in absteigender Ordnung nach Alter?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"","query_toks":["SELECT","T1.template_type_code","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id","WHERE","T2.document_name","=","``","Data","base","''"],"query_toks_no_value":["select","t1",".","template_type_code","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id","where","t2",".","document_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Data base\"",null]]},"question_toks":["Was","ist","der","Vorlagentyp-Code","der","Vorlage",",","die","von","einem","Dokument","mit","dem","Namen","``","Datenbank","''","verwendet","wird","?"],"question":"Was ist der Vorlagentyp-Code der Vorlage, die von einem Dokument mit dem Namen \"Datenbank\" verwendet wird?"},{"db_id":"tvshow","query":"SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1","query_toks":["SELECT","production_code",",","channel","FROM","cartoon","ORDER","BY","original_air_date","LIMIT","1"],"query_toks_no_value":["select","production_code",",","channel","from","cartoon","order","by","original_air_date","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,23,false],null]]],"select":[false,[[0,[0,[0,24,false],null]],[0,[0,[0,25,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","der","Produktionscode","und","der","Kanal","des","neuesten","Cartoons","?"],"question":"Was ist der Produktionscode und der Kanal des neuesten Cartoons?"},{"db_id":"car_1","query":"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';","query_toks":["SELECT","count","(","*",")","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","WHERE","T1.FullName","=","'American","Motor","Company","'",";"],"query_toks_no_value":["select","count","(","*",")","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","where","t1",".","fullname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"American Motor Company\"",null]]},"question_toks":["Wie","viele","Automodelle","wurden","produziert","von","dem","Hersteller","mit","dem","vollen","Namen","American","Motor","Company","?"],"question":"Wie viele Automodelle wurden produziert von dem Hersteller mit dem vollen Namen American Motor Company?"},{"db_id":"concert_singer","query":"SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014","query_toks":["SELECT","T2.name","FROM","singer_in_concert","AS","T1","JOIN","singer","AS","T2","ON","T1.singer_id","=","T2.singer_id","JOIN","concert","AS","T3","ON","T1.concert_id","=","T3.concert_id","WHERE","T3.year","=","2014"],"query_toks_no_value":["select","t2",".","name","from","singer_in_concert","as","t1","join","singer","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","join","concert","as","t3","on","t1",".","concert_id","=","t3",".","concert_id","where","t3",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,21,false],null],[0,8,false],null]],"table_units":[["table_unit",3],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2014.0,null]]},"question_toks":["Wie","hei\u00dfen","die","S\u00e4nger",",","die","2014","bei","einem","Konzert","aufgetreten","sind","?"],"question":"Wie hei\u00dfen die S\u00e4nger, die 2014 bei einem Konzert aufgetreten sind?"},{"db_id":"car_1","query":"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';","query_toks":["SELECT","count","(","*",")","FROM","CAR_MAKERS","AS","T1","JOIN","COUNTRIES","AS","T2","ON","T1.Country","=","T2.CountryId","WHERE","T2.CountryName","=","'france","'",";"],"query_toks_no_value":["select","count","(","*",")","from","car_makers","as","t1","join","countries","as","t2","on","t1",".","country","=","t2",".","countryid","where","t2",".","countryname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"france\"",null]]},"question_toks":["Wie","viele","Autohersteller","gibt","es","in","Frankreich","?"],"question":"Wie viele Autohersteller gibt es in Frankreich?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'","query_toks":["SELECT","document_id","FROM","Paragraphs","WHERE","paragraph_text","=","'Brazil","'","INTERSECT","SELECT","document_id","FROM","Paragraphs","WHERE","paragraph_text","=","'Ireland","'"],"query_toks_no_value":["select","document_id","from","paragraphs","where","paragraph_text","=","value","intersect","select","document_id","from","paragraphs","where","paragraph_text","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,16,false],null],"\"Ireland\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,16,false],null],"\"Brazil\"",null]]},"question_toks":["Welches","sind","die","IDs","der","Dokumente",",","die","den","Absatztext","'Brasilien","'","und","'Irland","'","enthalten","?"],"question":"Welches sind die IDs der Dokumente, die den Absatztext 'Brasilien' und 'Irland' enthalten?"},{"db_id":"tvshow","query":"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'","query_toks":["SELECT","Pixel_aspect_ratio_PAR",",","country","FROM","tv_channel","WHERE","LANGUAGE","!","=","'English","'"],"query_toks_no_value":["select","pixel_aspect_ratio_par",",","country","from","tv_channel","where","language","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,7,[0,[0,4,false],null],"\"English\"",null]]},"question_toks":["Was","ist","das","Pixel-Seitenverh\u00e4ltnis","und","das","Herkunftsland","f\u00fcr","alle","Fernsehsender",",","die","nicht","Englisch","sprechen","?"],"question":"Was ist das Pixel-Seitenverh\u00e4ltnis und das Herkunftsland f\u00fcr alle Fernsehsender, die nicht Englisch sprechen?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","template_type_code","FROM","Templates","GROUP","BY","template_type_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","template_type_code","from","templates","group","by","template_type_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Geb","den","Typcode","des","Vorlagentyps","an",",","dem","die","meisten","Vorlagen","angeh\u00f6ren","."],"question":"Geb den Typcode des Vorlagentyps an, dem die meisten Vorlagen angeh\u00f6ren."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.template_type_code","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id","GROUP","BY","T1.template_type_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","template_type_code","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id","group","by","t1",".","template_type_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","den","Code","des","Vorlagentyps","an",",","der","am","h\u00e4ufigsten","in","Dokumenten","verwendet","wird","."],"question":"Gib den Code des Vorlagentyps an, der am h\u00e4ufigsten in Dokumenten verwendet wird."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"","query_toks":["SELECT","T2.template_id","FROM","Ref_template_types","AS","T1","JOIN","Templates","AS","T2","ON","T1.template_type_code","=","T2.template_type_code","WHERE","T1.template_type_description","=","``","Presentation","''"],"query_toks_no_value":["select","t2",".","template_id","from","ref_template_types","as","t1","join","templates","as","t2","on","t1",".","template_type_code","=","t2",".","template_type_code","where","t1",".","template_type_description","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,5,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Presentation\"",null]]},"question_toks":["Gib","die","IDs","der","Vorlagen","mit","der","Beschreibung","'Pr\u00e4sentation","'","zur\u00fcck","."],"question":"Gib die IDs der Vorlagen mit der Beschreibung 'Pr\u00e4sentation' zur\u00fcck."},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","WHERE","T2.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","where","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Gib","die","Anzahl","der","in","Aberdeen","ankommenden","Fl\u00fcge","an","."],"question":"Gib die Anzahl der in Aberdeen ankommenden Fl\u00fcge an."},{"db_id":"orchestra","query":"SELECT Name FROM conductor WHERE Nationality != 'USA'","query_toks":["SELECT","Name","FROM","conductor","WHERE","Nationality","!","=","'USA","'"],"query_toks_no_value":["select","name","from","conductor","where","nationality","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,7,[0,[0,4,false],null],"\"USA\"",null]]},"question_toks":["``","Wie","hei\u00dfen","die","Dirigenten",",","deren","Nationalit\u00e4t","nicht","``","USA","''","ist","?","''"],"question":"\"Wie hei\u00dfen die Dirigenten, deren Nationalit\u00e4t nicht \"USA\" ist?\""},{"db_id":"singer","query":"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","query_toks":["SELECT","Citizenship",",","max","(","Net_Worth_Millions",")","FROM","singer","GROUP","BY","Citizenship"],"query_toks_no_value":["select","citizenship",",","max","(","net_worth_millions",")","from","singer","group","by","citizenship"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[1,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","unterschiedlichen","Staatsangeh\u00f6rigkeiten","und","das","maximale","Nettoverm\u00f6gen","der","S\u00e4nger","jeder","Staatsangeh\u00f6rigkeit","an","."],"question":"Zeige die unterschiedlichen Staatsangeh\u00f6rigkeiten und das maximale Nettoverm\u00f6gen der S\u00e4nger jeder Staatsangeh\u00f6rigkeit an."},{"db_id":"wta_1","query":"SELECT count(*) ,  country_code FROM players GROUP BY country_code","query_toks":["SELECT","count","(","*",")",",","country_code","FROM","players","GROUP","BY","country_code"],"query_toks_no_value":["select","count","(","*",")",",","country_code","from","players","group","by","country_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Anzahl","der","Spieler","f\u00fcr","jedes","Land","."],"question":"Finde die Anzahl der Spieler f\u00fcr jedes Land."},{"db_id":"car_1","query":"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;","query_toks":["SELECT","avg","(","Weight",")",",","YEAR","FROM","CARS_DATA","GROUP","BY","YEAR",";"],"query_toks_no_value":["select","avg","(","weight",")",",","year","from","cars_data","group","by","year"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,21,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","das","durchschnittliche","Gewicht","und","Jahr","f\u00fcr","jedes","Jahr","?"],"question":"Welches sind das durchschnittliche Gewicht und Jahr f\u00fcr jedes Jahr?"},{"db_id":"world_1","query":"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"","query_toks":["SELECT","T2.Language","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.HeadOfState","=","``","Beatrix","''","AND","T2.IsOfficial","=","``","T","''"],"query_toks_no_value":["select","t2",".","language","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","headofstate","=","value","and","t2",".","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"Beatrix\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Welches","ist","die","offizielle","Landessprache","in","dem","Lande",",","dessen","Staatsoberhaupt","Beatrix","ist","?"],"question":"Welches ist die offizielle Landessprache in dem Lande, dessen Staatsoberhaupt Beatrix ist?"},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"","query_toks":["SELECT","count","(","*",")","FROM","AIRLINES","WHERE","Country","=","``","USA","''"],"query_toks_no_value":["select","count","(","*",")","from","airlines","where","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"USA\"",null]]},"question_toks":["Geben","Sie","die","Anzahl","der","Fluggesellschaften","in","den","USA","an","."],"question":"Geben Sie die Anzahl der Fluggesellschaften in den USA an."},{"db_id":"car_1","query":"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;","query_toks":["SELECT","T1.FullName",",","T1.Id","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","GROUP","BY","T1.Id","HAVING","count","(","*",")",">","3",";"],"query_toks_no_value":["select","t1",".","fullname",",","t1",".","id","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","group","by","t1",".","id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[[false,3,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Hersteller","haben","mehr","als","3","Automodelle","entworfen","?","Geben","Sie","den","vollst\u00e4ndigen","Namen","und","die","ID","an","."],"question":"Welche Hersteller haben mehr als 3 Automodelle entworfen? Geben Sie den vollst\u00e4ndigen Namen und die ID an. "},{"db_id":"world_1","query":"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"","query_toks":["SELECT","DISTINCT","CountryCode","FROM","countrylanguage","WHERE","LANGUAGE","!","=","``","English","''"],"query_toks_no_value":["select","distinct","countrycode","from","countrylanguage","where","language","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,7,[0,[0,24,false],null],"\"English\"",null]]},"question_toks":["Wie","lauten","die","L\u00e4ndercodes","von","L\u00e4ndern",",","in","denen","andere","Sprachen","als","Englisch","gesprochen","werden","?"],"question":"Wie lauten die L\u00e4ndercodes von L\u00e4ndern, in denen andere Sprachen als Englisch gesprochen werden?"},{"db_id":"car_1","query":"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;","query_toks":["SELECT","T1.Model","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","WHERE","T2.Cylinders","=","4","ORDER","BY","T2.horsepower","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","model","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","where","t2",".","cylinders","=","value","order","by","t2",".","horsepower","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],4.0,null]]},"question_toks":["Bei","den","Autos","mit","4","Zylindern",",","welches","hat","die","meisten","PS","?"],"question":"Bei den Autos mit 4 Zylindern, welches hat die meisten PS?"},{"db_id":"pets_1","query":"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","query_toks":["SELECT","T1.fname",",","T1.sex","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","GROUP","BY","T1.stuid","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","sex","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","group","by","t1",".","stuid","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","der","erste","Name","und","das","Geschlecht","von","allen","Studenten","die","mehr","als","ein","Haustier","haben","?"],"question":"Was ist der erste Name und das Geschlecht von allen Studenten die mehr als ein Haustier haben?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","WHERE","DestAirport","=","``","ATO","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","where","destairport","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"ATO\"",null]]},"question_toks":["Wie","viele","Fl\u00fcge","haben","das","Ziel","ATO","?"],"question":"Wie viele Fl\u00fcge haben das Ziel ATO?"},{"db_id":"network_1","query":"SELECT grade ,  count(*) FROM Highschooler GROUP BY grade","query_toks":["SELECT","grade",",","count","(","*",")","FROM","Highschooler","GROUP","BY","grade"],"query_toks_no_value":["select","grade",",","count","(","*",")","from","highschooler","group","by","grade"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Anzahl","and","Sch\u00fclern","f\u00fcr","jede","Note","."],"question":"Zeige die Anzahl and Sch\u00fclern f\u00fcr jede Note. "},{"db_id":"dog_kennels","query":"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","query_toks":["SELECT","T1.professional_id",",","T1.cell_number","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id","GROUP","BY","T1.professional_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","professional_id",",","t1",".","cell_number","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id","group","by","t1",".","professional_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,33,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,43,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","den","Ausweis","und","das","Mobiltelefon","der","Fachkr\u00e4fte",",","die","zwei","oder","mehr","Arten","von","Behandlungen","durchf\u00fchren","."],"question":"Finden Sie den Ausweis und das Mobiltelefon der Fachkr\u00e4fte, die zwei oder mehr Arten von Behandlungen durchf\u00fchren."},{"db_id":"singer","query":"SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1","query_toks":["SELECT","Name","FROM","singer","ORDER","BY","Net_Worth_Millions","DESC","LIMIT","1"],"query_toks_no_value":["select","name","from","singer","order","by","net_worth_millions","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,4,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","der","Name","des","Singers","mit","dem","gr\u00f6\u00dften","Reinverm\u00f6gen","?"],"question":"Was ist der Name des Singers mit dem gr\u00f6\u00dften Reinverm\u00f6gen?"},{"db_id":"world_1","query":"SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")","query_toks":["SELECT","Name","FROM","country","WHERE","Continent","=","``","Africa","''","AND","population","<","(","SELECT","max","(","population",")","FROM","country","WHERE","Continent","=","``","Asia","''",")"],"query_toks_no_value":["select","name","from","country","where","continent","=","value","and","population","<","(","select","max","(","population",")","from","country","where","continent","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Africa\"",null],"and",[false,4,[0,[0,14,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},null]]},"question_toks":["Was","sind","die","afrikanischen","L\u00e4nder","mit","weniger","Einwohnern","als","jedes","andere","Land","in","Asien","?"],"question":"Was sind die afrikanischen L\u00e4nder mit weniger Einwohnern als jedes andere Land in Asien?"},{"db_id":"world_1","query":"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","GROUP","BY","T1.Name","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","group","by","t1",".","name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","der","Name","des","Landes",",","das","die","meisten","Sprachen","spricht","?"],"question":"Welches ist der Name des Landes, das die meisten Sprachen spricht?"},{"db_id":"employee_hire_evaluation","query":"SELECT name FROM employee ORDER BY age","query_toks":["SELECT","name","FROM","employee","ORDER","BY","age"],"query_toks_no_value":["select","name","from","employee","order","by","age"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,3,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Listen","Sie","die","Namen","der","Mitarbeiter","auf","und","sortieren","Sie","sie","in","aufsteigender","Reihenfolge","ihres","Alters","."],"question":"Listen Sie die Namen der Mitarbeiter auf und sortieren Sie sie in aufsteigender Reihenfolge ihres Alters. "},{"db_id":"car_1","query":"SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;","query_toks":["SELECT","mpg","FROM","CARS_DATA","WHERE","Cylinders","=","8","OR","YEAR","<","1980","ORDER","BY","mpg","DESC","LIMIT","1",";"],"query_toks_no_value":["select","mpg","from","cars_data","where","cylinders","=","value","or","year","<","value","order","by","mpg","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,17,false],null]]],"select":[false,[[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],8.0,null],"or",[false,4,[0,[0,23,false],null],1980.0,null]]},"question_toks":["Welches","ist","das","maximale","mpg","der","Autos",",","die","8","Zylinder","hatten","oder","die","vor","1980","hergestellt","wurden","?"],"question":"Welches ist das maximale mpg der Autos, die 8 Zylinder hatten oder die vor 1980 hergestellt wurden? "},{"db_id":"voter_1","query":"SELECT DISTINCT state ,  created FROM votes","query_toks":["SELECT","DISTINCT","state",",","created","FROM","votes"],"query_toks_no_value":["select","distinct","state",",","created","from","votes"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,7,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","einzelnen","Zust\u00e4nde","und","Erstellungszeiten","aller","Abstimmungen","?"],"question":"Was sind die einzelnen Zust\u00e4nde und Erstellungszeiten aller Abstimmungen?"},{"db_id":"network_1","query":"SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","der","Name","des","Sch\u00fclers",",","der","die","gr\u00f6\u00dfte","Anzahl","an","Freunden","hat","?"],"question":"Was ist der Name des Sch\u00fclers, der die gr\u00f6\u00dfte Anzahl an Freunden hat?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1","query_toks":["SELECT","template_id","FROM","Documents","GROUP","BY","template_id","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","template_id","from","documents","group","by","template_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,10,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","IDs","f\u00fcr","alle","Vorlagen",",","die","von","mehr","als","einem","Dokument","verwendet","werden","."],"question":"Zeige IDs f\u00fcr alle Vorlagen, die von mehr als einem Dokument verwendet werden."},{"db_id":"poker_player","query":"SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000","query_toks":["SELECT","max","(","Final_Table_Made",")","FROM","poker_player","WHERE","Earnings","<","200000"],"query_toks_no_value":["select","max","(","final_table_made",")","from","poker_player","where","earnings","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,3,false],null]]]],"union":null,"where":[[false,4,[0,[0,6,false],null],200000.0,null]]},"question_toks":["Geben","Sie","die","maximalen","Finaltische","aller","Pokerspieler","zur\u00fcck",",","die","einen","Verdienst","unter","200000","haben","."],"question":"Geben Sie die maximalen Finaltische aller Pokerspieler zur\u00fcck, die einen Verdienst unter 200000 haben."},{"db_id":"pets_1","query":"SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'","query_toks":["SELECT","T2.petid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","WHERE","T1.Lname","=","'Smith","'"],"query_toks_no_value":["select","t2",".","petid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","where","t1",".","lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Smith\"",null]]},"question_toks":["Finden","Sie","den","Ausweis","des","Haustieres",",","welches","von","dem","Studenten","mit","dem","Nachnamen","``","Smith","''","besessen","wird","."],"question":"Finden Sie den Ausweis des Haustieres, welches von dem Studenten mit dem Nachnamen \"Smith\" besessen wird. "},{"db_id":"car_1","query":"SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );","query_toks":["SELECT","COUNT","(","*",")","FROM","CARS_DATA","WHERE","Accelerate",">","(","SELECT","Accelerate","FROM","CARS_DATA","ORDER","BY","Horsepower","DESC","LIMIT","1",")",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","accelerate",">","(","select","accelerate","from","cars_data","order","by","horsepower","desc","limit","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,22,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,22,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","viele","Autos","haben","eine","h\u00f6here","Beschleunigung","als","das","Auto","mit","den","meisten","Pferdest\u00e4rken","?"],"question":"Wie viele Autos haben eine h\u00f6here Beschleunigung als das Auto mit den meisten Pferdest\u00e4rken? "},{"db_id":"course_teach","query":"SELECT Name FROM teacher WHERE Hometown != \"Little Lever Urban Distric\"","query_toks":["SELECT","Name","FROM","teacher","WHERE","Hometown","!","=","``","Little","Lever","Urban","Distric","''"],"query_toks_no_value":["select","name","from","teacher","where","hometown","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,7,[0,[0,7,false],null],"\"Little Lever Urban Distric\"",null]]},"question_toks":["``","Wie","lauten","die","Namen","der","Lehrer",",","deren","Heimatstadt","nicht","``","Little","Lever","Urban","District","''","ist","?","''"],"question":"\"Wie lauten die Namen der Lehrer, deren Heimatstadt nicht \"Little Lever Urban District\" ist?\" "},{"db_id":"car_1","query":"SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;","query_toks":["SELECT","avg","(","mpg",")","FROM","CARS_DATA","WHERE","Cylinders","=","4",";"],"query_toks_no_value":["select","avg","(","mpg",")","from","cars_data","where","cylinders","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,17,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],4.0,null]]},"question_toks":["Was","ist","die","durchschnittliche","Meilen","pro","Gallone","der","Autos","mit","4","Zylindern","?"],"question":"Was ist die durchschnittliche Meilen pro Gallone der Autos mit 4 Zylindern?"},{"db_id":"wta_1","query":"SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1","query_toks":["SELECT","first_name",",","country_code","FROM","players","ORDER","BY","birth_date","LIMIT","1"],"query_toks_no_value":["select","first_name",",","country_code","from","players","order","by","birth_date","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","sie","den","Vornamen","und","den","L\u00e4ndercode","des","\u00e4ltesten","Spielers","."],"question":"Finden sie den Vornamen und den L\u00e4ndercode des \u00e4ltesten Spielers."},{"db_id":"tvshow","query":"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE","query_toks":["SELECT","LANGUAGE",",","count","(","*",")","FROM","TV_Channel","GROUP","BY","LANGUAGE"],"query_toks_no_value":["select","language",",","count","(","*",")","from","tv_channel","group","by","language"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Listen","Sie","jede","Sprache","und","die","Anzahl","der","TV-Kan\u00e4le","auf",",","die","sie","verwenden","."],"question":"Listen Sie jede Sprache und die Anzahl der TV-Kan\u00e4le auf, die sie verwenden."},{"db_id":"singer","query":"SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)","query_toks":["SELECT","Name","FROM","singer","WHERE","Singer_ID","NOT","IN","(","SELECT","Singer_ID","FROM","song",")"],"query_toks_no_value":["select","name","from","singer","where","singer_id","not","in","(","select","singer_id","from","song",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Listen","Sie","die","Namen","von","S\u00e4ngern","auf",",","die","kein","Lied","haben","."],"question":"Listen Sie die Namen von S\u00e4ngern auf, die kein Lied haben."},{"db_id":"network_1","query":"SELECT name ,  grade FROM Highschooler","query_toks":["SELECT","name",",","grade","FROM","Highschooler"],"query_toks_no_value":["select","name",",","grade","from","highschooler"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","Sie","die","Namen","und","Noten","der","einzelnen","Sch\u00fcler","."],"question":"Zeige Sie die Namen und Noten der einzelnen Sch\u00fcler."},{"db_id":"network_1","query":"SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id","query_toks":["SELECT","name","FROM","Highschooler","EXCEPT","SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id"],"query_toks_no_value":["select","name","from","highschooler","except","select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Namen","von","Studenten",",","die","keine","Freunde","haben","?"],"question":"Was sind die Namen von Studenten, die keine Freunde haben?"},{"db_id":"tvshow","query":"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","query_toks":["SELECT","LANGUAGE",",","count","(","*",")","FROM","TV_Channel","GROUP","BY","LANGUAGE","ORDER","BY","count","(","*",")","ASC","LIMIT","1",";"],"query_toks_no_value":["select","language",",","count","(","*",")","from","tv_channel","group","by","language","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Sprachen",",","die","von","den","wenigsten","Fernsehsendern","verwendet","werden",",","und","wie","viele","Sender","nutzen","sie","?"],"question":"Welches sind die Sprachen, die von den wenigsten Fernsehsendern verwendet werden, und wie viele Sender nutzen sie?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(DISTINCT template_id) FROM Documents","query_toks":["SELECT","count","(","DISTINCT","template_id",")","FROM","Documents"],"query_toks_no_value":["select","count","(","distinct","template_id",")","from","documents"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,10,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Vorlagen","werden","von","allen","Dokumenten","verwendet","?"],"question":"Wie viele verschiedene Vorlagen werden von allen Dokumenten verwendet?"},{"db_id":"flight_2","query":"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"","query_toks":["SELECT","T1.FlightNo","FROM","FLIGHTS","AS","T1","JOIN","AIRLINES","AS","T2","ON","T2.uid","=","T1.Airline","WHERE","T2.Airline","=","``","United","Airlines","''"],"query_toks_no_value":["select","t1",".","flightno","from","flights","as","t1","join","airlines","as","t2","on","t2",".","uid","=","t1",".","airline","where","t2",".","airline","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"United Airlines\"",null]]},"question_toks":["Welche","Flugnummern","entsprechen","den","Fl\u00fcgen","von","United","Airlines","?"],"question":"Welche Flugnummern entsprechen den Fl\u00fcgen von United Airlines?"},{"db_id":"car_1","query":"SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';","query_toks":["SELECT","T1.countryId",",","T1.CountryName","FROM","Countries","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.CountryId","=","T2.Country","GROUP","BY","T1.countryId","HAVING","count","(","*",")",">","3","UNION","SELECT","T1.countryId",",","T1.CountryName","FROM","Countries","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.CountryId","=","T2.Country","JOIN","MODEL_LIST","AS","T3","ON","T2.Id","=","T3.Maker","WHERE","T3.Model","=","'fiat","'",";"],"query_toks_no_value":["select","t1",".","countryid",",","t1",".","countryname","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country","group","by","t1",".","countryid","having","count","(","*",")",">","value","union","select","t1",".","countryid",",","t1",".","countryname","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country","join","model_list","as","t3","on","t2",".","id","=","t3",".","maker","where","t3",".","model","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,3,false]],"having":[[false,3,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"fiat\"",null]]},"where":[]},"question_toks":["Wie","lauten","die","Ausweise","und","Namen","aller","L\u00e4nder",",","die","entweder","mehr","als","3","Autohersteller","haben","oder","Fiats","produzieren","?"],"question":"Wie lauten die Ausweise und Namen aller L\u00e4nder, die entweder mehr als 3 Autohersteller haben oder Fiats produzieren?"},{"db_id":"course_teach","query":"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","query_toks":["SELECT","T3.Name",",","T2.Course","FROM","course_arrange","AS","T1","JOIN","course","AS","T2","ON","T1.Course_ID","=","T2.Course_ID","JOIN","teacher","AS","T3","ON","T1.Teacher_ID","=","T3.Teacher_ID","ORDER","BY","T3.Name"],"query_toks_no_value":["select","t3",".","name",",","t2",".","course","from","course_arrange","as","t1","join","course","as","t2","on","t1",".","course_id","=","t2",".","course_id","join","teacher","as","t3","on","t1",".","teacher_id","=","t3",".","teacher_id","order","by","t3",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,5,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","Lehrer","und","der","Kurse",",","die","sie","unterrichten",",","in","aufsteigender","alphabetischer","Reihenfolge","nach","Namen","des","Lehrers","?"],"question":"Wie lauten die Namen der Lehrer und der Kurse, die sie unterrichten, in aufsteigender alphabetischer Reihenfolge nach Namen des Lehrers?"},{"db_id":"wta_1","query":"SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","YEAR","FROM","matches","GROUP","BY","YEAR","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","year","from","matches","group","by","year","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,38,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,38,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","Jahr","hatte","die","meisten","Spiele","?"],"question":"Welches Jahr hatte die meisten Spiele?"},{"db_id":"wta_1","query":"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date","query_toks":["SELECT","first_name",",","last_name","FROM","players","WHERE","hand","=","'L","'","ORDER","BY","birth_date"],"query_toks_no_value":["select","first_name",",","last_name","from","players","where","hand","=","value","order","by","birth_date"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"L\"",null]]},"question_toks":["Listen","Sie","den","Vor-","und","Nachnamen","aller","Spieler","die","Linksh\u00e4nder","sind","in","der","Reihenfolge","ihres","Geburtsdatums","auf","."],"question":"Listen Sie den Vor- und Nachnamen aller Spieler die Linksh\u00e4nder sind in der Reihenfolge ihres Geburtsdatums auf."},{"db_id":"network_1","query":"SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"","query_toks":["SELECT","ID","FROM","Highschooler","WHERE","name","=","``","Kyle","''"],"query_toks_no_value":["select","id","from","highschooler","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Was","ist","Kyles","ID","?"],"question":"Was ist Kyles ID?"},{"db_id":"orchestra","query":"SELECT Name FROM conductor ORDER BY Age ASC","query_toks":["SELECT","Name","FROM","conductor","ORDER","BY","Age","ASC"],"query_toks_no_value":["select","name","from","conductor","order","by","age","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,3,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","Leiter",",","geordnet","nach","Alter","?"],"question":"Wie lauten die Namen der Leiter, geordnet nach Alter?"},{"db_id":"voter_1","query":"SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'","query_toks":["SELECT","T3.area_code","FROM","contestants","AS","T1","JOIN","votes","AS","T2","ON","T1.contestant_number","=","T2.contestant_number","JOIN","area_code_state","AS","T3","ON","T2.state","=","T3.state","WHERE","T1.contestant_name","=","'Tabatha","Gehling","'","INTERSECT","SELECT","T3.area_code","FROM","contestants","AS","T1","JOIN","votes","AS","T2","ON","T1.contestant_number","=","T2.contestant_number","JOIN","area_code_state","AS","T3","ON","T2.state","=","T3.state","WHERE","T1.contestant_name","=","'Kelly","Clauss","'"],"query_toks_no_value":["select","t3",".","area_code","from","contestants","as","t1","join","votes","as","t2","on","t1",".","contestant_number","=","t2",".","contestant_number","join","area_code_state","as","t3","on","t2",".","state","=","t3",".","state","where","t1",".","contestant_name","=","value","intersect","select","t3",".","area_code","from","contestants","as","t1","join","votes","as","t2","on","t1",".","contestant_number","=","t2",".","contestant_number","join","area_code_state","as","t3","on","t2",".","state","=","t3",".","state","where","t1",".","contestant_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,8,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,8,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Kelly Clauss\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Tabatha Gehling\"",null]]},"question_toks":["F\u00fchren","Sie","die","Vorwahlen","auf",",","in","denen","die","W\u00e4hler","sowohl","f\u00fcr","die","Kandidatin","'Tabatha","Gehling","'","als","auch","f\u00fcr","die","Kandidatin","'Kelly","Clauss","'","gestimmt","haben","."],"question":"F\u00fchren Sie die Vorwahlen auf, in denen die W\u00e4hler sowohl f\u00fcr die Kandidatin 'Tabatha Gehling' als auch f\u00fcr die Kandidatin 'Kelly Clauss' gestimmt haben. "},{"db_id":"car_1","query":"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;","query_toks":["SELECT","DISTINCT","T1.model","FROM","MODEL_LIST","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.model","=","T2.model","JOIN","CARS_DATA","AS","T3","ON","T2.MakeId","=","T3.id","WHERE","T3.year",">","1980",";"],"query_toks_no_value":["select","distinct","t1",".","model","from","model_list","as","t1","join","car_names","as","t2","on","t1",".","model","=","t2",".","model","join","cars_data","as","t3","on","t2",".","makeid","=","t3",".","id","where","t3",".","year",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,14,false],null]],"table_units":[["table_unit",3],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,3,[0,[0,23,false],null],1980.0,null]]},"question_toks":["Welches","sind","die","verschiedenen","Modelle","f\u00fcr","die","nach","1980","hergestellten","Karten","?"],"question":"Welches sind die verschiedenen Modelle f\u00fcr die nach 1980 hergestellten Karten?"},{"db_id":"tvshow","query":"SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'","query_toks":["SELECT","id","FROM","TV_Channel","EXCEPT","SELECT","channel","FROM","cartoon","WHERE","directed_by","=","'Ben","Jones","'"],"query_toks_no_value":["select","id","from","tv_channel","except","select","channel","from","cartoon","where","directed_by","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Ausweise","der","Fernsehsender",",","die","keine","Zeichentrickfilme","unter","der","Regie","von","Ben","Jones","haben","?"],"question":"Wie lauten die Ausweise der Fernsehsender, die keine Zeichentrickfilme unter der Regie von Ben Jones haben?"},{"db_id":"dog_kennels","query":"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","query_toks":["SELECT","DISTINCT","T1.first_name",",","T3.treatment_type_description","FROM","professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id","JOIN","Treatment_types","AS","T3","ON","T2.treatment_type_code","=","T3.treatment_type_code"],"query_toks_no_value":["select","distinct","t1",".","first_name",",","t3",".","treatment_type_description","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id","join","treatment_types","as","t3","on","t2",".","treatment_type_code","=","t3",".","treatment_type_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,35,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","der","Vorname","jedes","Fachmanns","und","die","Beschreibung","der","Behandlung","die","durchgef\u00fchrt","wurden","?"],"question":"Wie lauten der Vorname jedes Fachmanns und die Beschreibung der Behandlung die durchgef\u00fchrt wurden?"},{"db_id":"student_transcripts_tracking","query":"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","query_toks":["SELECT","first_name",",","middle_name",",","last_name","FROM","Students","ORDER","BY","date_left","ASC","LIMIT","1"],"query_toks_no_value":["select","first_name",",","middle_name",",","last_name","from","students","order","by","date_left","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,42,false],null]]],"select":[false,[[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]]]],"union":null,"where":[]},"question_toks":["Wer","ist","der","fr\u00fcheste","Absolvent","der","Schule","?","Geben","Sie","den","Vornamen",",","den","zweiten","Vornamen","und","den","Nachnamen","an","."],"question":"Wer ist der fr\u00fcheste Absolvent der Schule? Geben Sie den Vornamen, den zweiten Vornamen und den Nachnamen an."},{"db_id":"flight_2","query":"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"","query_toks":["SELECT","Airline","FROM","AIRLINES","WHERE","Abbreviation","=","``","UAL","''"],"query_toks_no_value":["select","airline","from","airlines","where","abbreviation","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],"\"UAL\"",null]]},"question_toks":["Welche","Fluggesellschaft","hat","die","Abk\u00fcrzung","``","UAL","''","?"],"question":"Welche Fluggesellschaft hat die Abk\u00fcrzung \"UAL\"?"},{"db_id":"world_1","query":"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"","query_toks":["SELECT","T2.Language","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.HeadOfState","=","``","Beatrix","''","AND","T2.IsOfficial","=","``","T","''"],"query_toks_no_value":["select","t2",".","language","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","headofstate","=","value","and","t2",".","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"Beatrix\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Welches","ist","die","offizielle","Sprache","des","Landes",",","dessen","Staatsoberhaupt","Beatrix","hei\u00dft","?"],"question":"Welches ist die offizielle Sprache des Landes, dessen Staatsoberhaupt Beatrix hei\u00dft?"},{"db_id":"employee_hire_evaluation","query":"SELECT count(*) ,  city FROM employee GROUP BY city","query_toks":["SELECT","count","(","*",")",",","city","FROM","employee","GROUP","BY","city"],"query_toks_no_value":["select","count","(","*",")",",","city","from","employee","group","by","city"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hlen","Sie","die","Anzahl","der","Mitarbeiter","f\u00fcr","jede","Stadt","."],"question":"Z\u00e4hlen Sie die Anzahl der Mitarbeiter f\u00fcr jede Stadt. "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.template_type_code","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id","GROUP","BY","T1.template_type_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","template_type_code","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id","group","by","t1",".","template_type_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Vorlagentypcode","wird","von","den","meisten","Dokumenten","verwendet","?"],"question":"Welcher Vorlagentypcode wird von den meisten Dokumenten verwendet? "},{"db_id":"world_1","query":"SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"","query_toks":["SELECT","count","(","*",")","FROM","country","WHERE","GovernmentForm","=","``","Republic","''"],"query_toks_no_value":["select","count","(","*",")","from","country","where","governmentform","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"Republic\"",null]]},"question_toks":["Wie","viele","L\u00e4nder","haben","Regierungen",",","die","Republiken","sind","?"],"question":"Wie viele L\u00e4nder haben Regierungen, die Republiken sind?"},{"db_id":"car_1","query":"SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';","query_toks":["SELECT","T1.countryId",",","T1.CountryName","FROM","Countries","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.CountryId","=","T2.Country","GROUP","BY","T1.countryId","HAVING","count","(","*",")",">","3","UNION","SELECT","T1.countryId",",","T1.CountryName","FROM","Countries","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.CountryId","=","T2.Country","JOIN","MODEL_LIST","AS","T3","ON","T2.Id","=","T3.Maker","WHERE","T3.Model","=","'fiat","'",";"],"query_toks_no_value":["select","t1",".","countryid",",","t1",".","countryname","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country","group","by","t1",".","countryid","having","count","(","*",")",">","value","union","select","t1",".","countryid",",","t1",".","countryname","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country","join","model_list","as","t3","on","t2",".","id","=","t3",".","maker","where","t3",".","model","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,3,false]],"having":[[false,3,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"fiat\"",null]]},"where":[]},"question_toks":["Wie","lauten","die","ID","und","die","Namen","der","L\u00e4nder",",","die","mehr","als","3","Autohersteller","haben","oder","das","'Fiat'-Modell","produzieren","?"],"question":"Wie lauten die ID und die Namen der L\u00e4nder, die mehr als 3 Autohersteller haben oder das 'Fiat'-Modell produzieren?"},{"db_id":"pets_1","query":"SELECT petid ,  weight FROM pets WHERE pet_age  >  1","query_toks":["SELECT","petid",",","weight","FROM","pets","WHERE","pet_age",">","1"],"query_toks_no_value":["select","petid",",","weight","from","pets","where","pet_age",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],1.0,null]]},"question_toks":["Ermitteln","Sie","die","Identit\u00e4t","und","das","Gewicht","aller","Haustiere",",","die","\u00e4lter","als","1","Jahr","sind","."],"question":"Ermitteln Sie die Identit\u00e4t und das Gewicht aller Haustiere, die \u00e4lter als 1 Jahr sind. "},{"db_id":"car_1","query":"SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;","query_toks":["SELECT","T1.Id",",","T1.Maker","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","GROUP","BY","T1.Id","HAVING","count","(","*",")",">","=","2","INTERSECT","SELECT","T1.Id",",","T1.Maker","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","JOIN","CAR_NAMES","AS","T3","ON","T2.model","=","T3.model","GROUP","BY","T1.Id","HAVING","count","(","*",")",">","3",";"],"query_toks_no_value":["select","t1",".","id",",","t1",".","maker","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","group","by","t1",".","id","having","count","(","*",")",">","=","value","intersect","select","t1",".","id",",","t1",".","maker","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","join","car_names","as","t3","on","t2",".","model","=","t3",".","model","group","by","t1",".","id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[[false,3,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Autohersteller",",","die","mindestens","2","Modelle","und","mehr","als","3","Automarken","produzieren","?","Geben","Sie","die","Kennung","und","den","Hersteller","an","."],"question":"Welches sind die Autohersteller, die mindestens 2 Modelle und mehr als 3 Automarken produzieren? Geben Sie die Kennung und den Hersteller an. "},{"db_id":"world_1","query":"SELECT count(*) FROM country WHERE continent  =  \"Asia\"","query_toks":["SELECT","count","(","*",")","FROM","country","WHERE","continent","=","``","Asia","''"],"query_toks_no_value":["select","count","(","*",")","from","country","where","continent","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Wie","viele","L\u00e4nder","gibt","es","in","Asien","?"],"question":"Wie viele L\u00e4nder gibt es in Asien?"},{"db_id":"tvshow","query":"SELECT Episode FROM TV_series ORDER BY rating","query_toks":["SELECT","Episode","FROM","TV_series","ORDER","BY","rating"],"query_toks_no_value":["select","episode","from","tv_series","order","by","rating"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","sind","alle","Episoden","nach","Bewertungen","sortiert","?"],"question":"Welche sind alle Episoden nach Bewertungen sortiert?"},{"db_id":"world_1","query":"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","query_toks":["SELECT","sum","(","Population",")",",","GovernmentForm","FROM","country","GROUP","BY","GovernmentForm","HAVING","avg","(","LifeExpectancy",")",">","72"],"query_toks_no_value":["select","sum","(","population",")",",","governmentform","from","country","group","by","governmentform","having","avg","(","lifeexpectancy",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,19,false]],"having":[[false,3,[0,[5,15,false],null],72.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]],[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","verschiedenen","Regierungsformen","und","wie","hoch","ist","die","Gesamtbev\u00f6lkerung","der","einzelnen","Regierungsformen",",","die","eine","durchschnittliche","Lebenserwartung","von","mehr","als","72","Jahren","haben","?"],"question":"Welches sind die verschiedenen Regierungsformen und wie hoch ist die Gesamtbev\u00f6lkerung der einzelnen Regierungsformen, die eine durchschnittliche Lebenserwartung von mehr als 72 Jahren haben?"},{"db_id":"flight_2","query":"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"","query_toks":["SELECT","AirportCode",",","AirportName","FROM","AIRPORTS","WHERE","city","=","``","Anthony","''"],"query_toks_no_value":["select","airportcode",",","airportname","from","airports","where","city","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Anthony\"",null]]},"question_toks":["Geben","Sie","den","Flughafencode","und","den","Namen","des","Flughafens","an",",","der","der","Stadt","Anthony","entspricht","."],"question":"Geben Sie den Flughafencode und den Namen des Flughafens an, der der Stadt Anthony entspricht. "},{"db_id":"world_1","query":"SELECT Name FROM country ORDER BY Population ASC LIMIT 3","query_toks":["SELECT","Name","FROM","country","ORDER","BY","Population","ASC","LIMIT","3"],"query_toks_no_value":["select","name","from","country","order","by","population","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["asc",[[0,[0,14,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","Nationen","mit","den","3","niedrigsten","Bev\u00f6lkerungszahlen","?"],"question":"Wie lauten die Namen der Nationen mit den 3 niedrigsten Bev\u00f6lkerungszahlen? "},{"db_id":"singer","query":"SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC","query_toks":["SELECT","Name","FROM","singer","ORDER","BY","Net_Worth_Millions","ASC"],"query_toks_no_value":["select","name","from","singer","order","by","net_worth_millions","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,4,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","S\u00e4nger",",","geordnet","nach","aufsteigendem","Nettowert","?"],"question":"Wie lauten die Namen der S\u00e4nger, geordnet nach aufsteigendem Nettowert? "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2","query_toks":["SELECT","document_id","FROM","Paragraphs","GROUP","BY","document_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","document_id","from","paragraphs","group","by","document_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,15,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","alle","Dokument-IDs","mit","mindestens","zwei","Abs\u00e4tzen","."],"question":"Liste alle Dokument-IDs mit mindestens zwei Abs\u00e4tzen. "},{"db_id":"orchestra","query":"SELECT count(DISTINCT Nationality) FROM conductor","query_toks":["SELECT","count","(","DISTINCT","Nationality",")","FROM","conductor"],"query_toks_no_value":["select","count","(","distinct","nationality",")","from","conductor"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,4,true],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hlen","Sie","die","Anzahl","der","verschiedenen","Nationalit\u00e4ten","der","Konduktoren","."],"question":"Z\u00e4hlen Sie die Anzahl der verschiedenen Nationalit\u00e4ten der Konduktoren. "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1","query_toks":["SELECT","document_id","FROM","Paragraphs","GROUP","BY","document_id","ORDER","BY","count","(","*",")","ASC","LIMIT","1"],"query_toks_no_value":["select","document_id","from","paragraphs","group","by","document_id","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","das","Dokument","mit","der","geringsten","Anzahl","von","Abs\u00e4tzen","?"],"question":"Welches ist das Dokument mit der geringsten Anzahl von Abs\u00e4tzen? "},{"db_id":"world_1","query":"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"","query_toks":["SELECT","avg","(","LifeExpectancy",")","FROM","country","WHERE","Continent","=","``","Africa","''","AND","GovernmentForm","=","``","Republic","''"],"query_toks_no_value":["select","avg","(","lifeexpectancy",")","from","country","where","continent","=","value","and","governmentform","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Africa\"",null],"and",[false,2,[0,[0,19,false],null],"\"Republic\"",null]]},"question_toks":["Geben","Sie","die","durchschnittliche","Lebenserwartung","f\u00fcr","L\u00e4nder","in","Afrika","an",",","die","Republiken","sind","?"],"question":"Geben Sie die durchschnittliche Lebenserwartung f\u00fcr L\u00e4nder in Afrika an, die Republiken sind? "},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRLINES","query_toks":["SELECT","count","(","*",")","FROM","AIRLINES"],"query_toks_no_value":["select","count","(","*",")","from","airlines"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Fluggesellschaften","haben","wir","?"],"question":"Wie viele Fluggesellschaften haben wir?"},{"db_id":"car_1","query":"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","query_toks":["SELECT","T1.CountryName",",","T1.CountryId","FROM","COUNTRIES","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.CountryId","=","T2.Country","GROUP","BY","T1.CountryId","HAVING","count","(","*",")",">","=","1",";"],"query_toks_no_value":["select","t1",".","countryname",",","t1",".","countryid","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country","group","by","t1",".","countryid","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,3,false]],"having":[[false,5,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","und","Ausweise","aller","L\u00e4nder","mit","mindestens","einem","Autohersteller","?"],"question":"Wie lauten die Namen und Ausweise aller L\u00e4nder mit mindestens einem Autohersteller? "},{"db_id":"student_transcripts_tracking","query":"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","query_toks":["SELECT","T2.transcript_date",",","T1.transcript_id","FROM","Transcript_Contents","AS","T1","JOIN","Transcripts","AS","T2","ON","T1.transcript_id","=","T2.transcript_id","GROUP","BY","T1.transcript_id","ORDER","BY","count","(","*",")","ASC","LIMIT","1"],"query_toks_no_value":["select","t2",".","transcript_date",",","t1",".","transcript_id","from","transcript_contents","as","t1","join","transcripts","as","t2","on","t1",".","transcript_id","=","t2",".","transcript_id","group","by","t1",".","transcript_id","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,56,false],null],[0,52,false],null]],"table_units":[["table_unit",10],["table_unit",9]]},"groupBy":[[0,56,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,53,false],null]],[0,[0,[0,56,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","das","Datum","der","Abschrift","an",",","die","die","geringste","Anzahl","von","Ergebnissen","zeigt",",","und","geben","Sie","auch","die","ID","an","."],"question":"Zeigen Sie das Datum der Abschrift an, die die geringste Anzahl von Ergebnissen zeigt, und geben Sie auch die ID an."},{"db_id":"tvshow","query":"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";","query_toks":["SELECT","T2.Episode","FROM","TV_Channel","AS","T1","JOIN","TV_series","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T1.series_name","=","``","Sky","Radio","''",";"],"query_toks_no_value":["select","t2",".","episode","from","tv_channel","as","t1","join","tv_series","as","t2","on","t1",".","id","=","t2",".","channel","where","t1",".","series_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,18,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Sky Radio\"",null]]},"question_toks":["``","Was","ist","die","Episode","f\u00fcr","die","Fernsehserie","mit","dem","Namen","``","''","Sky","Radio","''","''","?"],"question":"\"Was ist die Episode f\u00fcr die Fernsehserie mit dem Namen \"\"Sky Radio\"\"? "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Templates","query_toks":["SELECT","count","(","*",")","FROM","Templates"],"query_toks_no_value":["select","count","(","*",")","from","templates"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Vorlagen","haben","wir","?"],"question":"Wie viele Vorlagen haben wir?"},{"db_id":"concert_singer","query":"SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","query_toks":["SELECT","LOCATION",",","name","FROM","stadium","WHERE","capacity","BETWEEN","5000","AND","10000"],"query_toks_no_value":["select","location",",","name","from","stadium","where","capacity","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,1,[0,[0,4,false],null],5000.0,10000.0]]},"question_toks":["Zeigen","Sie","den","Standort","und","den","Namen","f\u00fcr","alle","Stadien","mit","einer","Kapazit\u00e4t","zwischen","5000","und","10000","an","."],"question":"Zeigen Sie den Standort und den Namen f\u00fcr alle Stadien mit einer Kapazit\u00e4t zwischen 5000 und 10000 an."},{"db_id":"singer","query":"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","query_toks":["SELECT","Citizenship",",","max","(","Net_Worth_Millions",")","FROM","singer","GROUP","BY","Citizenship"],"query_toks_no_value":["select","citizenship",",","max","(","net_worth_millions",")","from","singer","group","by","citizenship"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[1,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","der","h\u00f6chste","Nettowert","jeder","Staatsb\u00fcrger","?"],"question":"Wie hoch ist der h\u00f6chste Nettowert jeder Staatsb\u00fcrger?"},{"db_id":"network_1","query":"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"","query_toks":["SELECT","count","(","*",")","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","WHERE","T2.name","=","``","Kyle","''"],"query_toks_no_value":["select","count","(","*",")","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Wie","viele","Freunde","hat","der","Gymnasialsch\u00fcler","Kyle","?"],"question":"Wie viele Freunde hat der Gymnasialsch\u00fcler Kyle?"},{"db_id":"museum_visit","query":"SELECT count(*) FROM visitor WHERE age  <  30","query_toks":["SELECT","count","(","*",")","FROM","visitor","WHERE","age","<","30"],"query_toks_no_value":["select","count","(","*",")","from","visitor","where","age","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,4,[0,[0,8,false],null],30.0,null]]},"question_toks":["Wie","viele","G\u00e4ste","unter","30","Jahren","gibt","es","hier","?"],"question":"Wie viele G\u00e4ste unter 30 Jahren gibt es hier?"},{"db_id":"network_1","query":"SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3","query_toks":["SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id","HAVING","count","(","*",")",">","=","3"],"query_toks_no_value":["select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[[false,5,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","von","Gymnasiasten",",","die","3","oder","mehr","Freunde","haben","?"],"question":"Wie lauten die Namen von Gymnasiasten, die 3 oder mehr Freunde haben?"},{"db_id":"concert_singer","query":"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","query_toks":["SELECT","T2.name",",","T2.location","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","WHERE","T1.Year","=","2014","INTERSECT","SELECT","T2.name",",","T2.location","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","WHERE","T1.Year","=","2015"],"query_toks_no_value":["select","t2",".","name",",","t2",".","location","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","where","t1",".","year","=","value","intersect","select","t2",".","name",",","t2",".","location","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","where","t1",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2015.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2014.0,null]]},"question_toks":["Wie","lauten","die","Namen","und","Standorte","der","Stadien",",","in","denen","sowohl","2014","als","auch","2015","Konzerte","stattfanden","?"],"question":"Wie lauten die Namen und Standorte der Stadien, in denen sowohl 2014 als auch 2015 Konzerte stattfanden?"},{"db_id":"world_1","query":"SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"","query_toks":["SELECT","count","(","*",")","FROM","country","WHERE","GovernmentForm","=","``","Republic","''"],"query_toks_no_value":["select","count","(","*",")","from","country","where","governmentform","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"Republic\"",null]]},"question_toks":["Wie","viele","Staaten","verf\u00fcgen","\u00fcber","eine","Republik","als","Regierungsform","?"],"question":"Wie viele Staaten verf\u00fcgen \u00fcber eine Republik als Regierungsform?"},{"db_id":"world_1","query":"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","query_toks":["SELECT","sum","(","Population",")",",","avg","(","LifeExpectancy",")",",","Continent","FROM","country","GROUP","BY","Continent","HAVING","avg","(","LifeExpectancy",")","<","72"],"query_toks_no_value":["select","sum","(","population",")",",","avg","(","lifeexpectancy",")",",","continent","from","country","group","by","continent","having","avg","(","lifeexpectancy",")","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,10,false]],"having":[[false,4,[0,[5,15,false],null],72.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]],[5,[0,[0,15,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","verschiedenen","Kontinente","und","die","ihnen","jeweils","entsprechende","Gesamtbev\u00f6lkerung","und","durchschnittliche","Lebenserwartung","f\u00fcr","Kontinente","mit","einer","durchschnittlichen","Lebenserwartung","von","weniger","als","72","Jahren","?"],"question":"Wie lauten die verschiedenen Kontinente und die ihnen jeweils entsprechende Gesamtbev\u00f6lkerung und durchschnittliche Lebenserwartung f\u00fcr Kontinente mit einer durchschnittlichen Lebenserwartung von weniger als 72 Jahren?"},{"db_id":"car_1","query":"SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;","query_toks":["SELECT","count","(","*",")","FROM","CARS_DATA","WHERE","Cylinders",">","4",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","cylinders",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],4.0,null]]},"question_toks":["Wie","hoch","ist","die","Anzahl","der","Autos","mit","mehr","als","4","Zylindern","?"],"question":"Wie hoch ist die Anzahl der Autos mit mehr als 4 Zylindern?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT DISTINCT template_type_code FROM Templates","query_toks":["SELECT","DISTINCT","template_type_code","FROM","Templates"],"query_toks_no_value":["select","distinct","template_type_code","from","templates"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","alle","einzelnen","Vorlagentyp-Codes","f\u00fcr","alle","Vorlagen","."],"question":"Zeige alle einzelnen Vorlagentyp-Codes f\u00fcr alle Vorlagen."},{"db_id":"world_1","query":"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode","query_toks":["SELECT","CountryCode",",","max","(","Percentage",")","FROM","countrylanguage","WHERE","LANGUAGE","=","``","Spanish","''","GROUP","BY","CountryCode"],"query_toks_no_value":["select","countrycode",",","max","(","percentage",")","from","countrylanguage","where","language","=","value","group","by","countrycode"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]],[1,[0,[0,26,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Spanish\"",null]]},"question_toks":["Wie","lauten","die","L\u00e4ndercodes","der","L\u00e4nder",",","in","denen","der","gr\u00f6\u00dfte","Prozentsatz","der","Menschen","Spanisch","spricht","?"],"question":"Wie lauten die L\u00e4ndercodes der L\u00e4nder, in denen der gr\u00f6\u00dfte Prozentsatz der Menschen Spanisch spricht?"},{"db_id":"wta_1","query":"SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'","query_toks":["SELECT","count","(","DISTINCT","winner_name",")","FROM","matches","WHERE","tourney_name","=","'WTA","Championships","'","AND","winner_hand","=","'L","'"],"query_toks_no_value":["select","count","(","distinct","winner_name",")","from","matches","where","tourney_name","=","value","and","winner_hand","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,34,true],null]]]],"union":null,"where":[[false,2,[0,[0,27,false],null],"\"WTA Championships\"",null],"and",[false,2,[0,[0,30,false],null],"\"L\"",null]]},"question_toks":["Finden","Sie","die","Anzahl","der","linksh\u00e4ndigen","Gewinner",",","die","an","den","WTA","Championships","teilgenommen","haben","."],"question":"Finden Sie die Anzahl der linksh\u00e4ndigen Gewinner, die an den WTA Championships teilgenommen haben."},{"db_id":"car_1","query":"SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;","query_toks":["SELECT","T1.CountryName","FROM","COUNTRIES","AS","T1","JOIN","CONTINENTS","AS","T2","ON","T1.Continent","=","T2.ContId","JOIN","CAR_MAKERS","AS","T3","ON","T1.CountryId","=","T3.Country","WHERE","T2.Continent","=","'europe","'","GROUP","BY","T1.CountryName","HAVING","count","(","*",")",">","=","3",";"],"query_toks_no_value":["select","t1",".","countryname","from","countries","as","t1","join","continents","as","t2","on","t1",".","continent","=","t2",".","contid","join","car_makers","as","t3","on","t1",".","countryid","=","t3",".","country","where","t2",".","continent","=","value","group","by","t1",".","countryname","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[[false,5,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"europe\"",null]]},"question_toks":["Welche","L\u00e4nder","in","europe","haben","mindestens","3","Autohersteller","?"],"question":"Welche L\u00e4nder in europe haben mindestens 3 Autohersteller?"},{"db_id":"network_1","query":"SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend","query_toks":["SELECT","id","FROM","Highschooler","EXCEPT","SELECT","student_id","FROM","Friend"],"query_toks_no_value":["select","id","from","highschooler","except","select","student_id","from","friend"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","die","Ausweise","aller","Studierenden",",","die","keine","Freunde","haben","."],"question":"Zeigen Sie die Ausweise aller Studierenden, die keine Freunde haben."},{"db_id":"student_transcripts_tracking","query":"SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.course_name","FROM","Courses","AS","T1","JOIN","Student_Enrolment_Courses","AS","T2","ON","T1.course_id","=","T2.course_id","GROUP","BY","T1.course_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","course_name","from","courses","as","t1","join","student_enrolment_courses","as","t2","on","t1",".","course_id","=","t2",".","course_id","group","by","t1",".","course_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,50,false],null]],"table_units":[["table_unit",1],["table_unit",8]]},"groupBy":[[0,11,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Name","des","Kurses","mit","den","meisten","Einschreibungen","?"],"question":"Wie lautet der Name des Kurses mit den meisten Einschreibungen?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","query_toks":["SELECT","T1.document_id",",","T2.document_name",",","count","(","*",")","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_id","=","T2.document_id","GROUP","BY","T1.document_id"],"query_toks_no_value":["select","t1",".","document_id",",","t2",".","document_name",",","count","(","*",")","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","group","by","t1",".","document_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,11,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","sehen","die","IDs","und","Namen","der","einzelnen","Dokumente","aus",",","sowie","die","Anzahl","der","Abs\u00e4tze","in","jedem","Dokument","?"],"question":"Wie sehen die IDs und Namen der einzelnen Dokumente aus, sowie die Anzahl der Abs\u00e4tze in jedem Dokument?"},{"db_id":"car_1","query":"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","query_toks":["SELECT","T1.CountryName",",","T1.CountryId","FROM","COUNTRIES","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.CountryId","=","T2.Country","GROUP","BY","T1.CountryId","HAVING","count","(","*",")",">","=","1",";"],"query_toks_no_value":["select","t1",".","countryname",",","t1",".","countryid","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country","group","by","t1",".","countryid","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,3,false]],"having":[[false,5,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["In","welchen","L\u00e4ndern","gibt","es","zumindest","einen","Autohersteller","?","Name","und","ID","auflisten","."],"question":"In welchen L\u00e4ndern gibt es zumindest einen Autohersteller? Name und ID auflisten."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID","query_toks":["SELECT","DISTINCT","T1.template_type_description","FROM","Ref_template_types","AS","T1","JOIN","Templates","AS","T2","ON","T1.template_type_code","=","T2.template_type_code","JOIN","Documents","AS","T3","ON","T2.Template_ID","=","T3.template_ID"],"query_toks_no_value":["select","distinct","t1",".","template_type_description","from","ref_template_types","as","t1","join","templates","as","t2","on","t1",".","template_type_code","=","t2",".","template_type_code","join","documents","as","t3","on","t2",".","template_id","=","t3",".","template_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,5,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","einzelnen","Vorlagentyp-Beschreibungen","f\u00fcr","die","Vorlagen",",","die","jemals","von","einem","Dokument","verwendet","wurden","?"],"question":"Welches sind die einzelnen Vorlagentyp-Beschreibungen f\u00fcr die Vorlagen, die jemals von einem Dokument verwendet wurden?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id","query_toks":["SELECT","T1.last_name","FROM","Students","AS","T1","JOIN","Addresses","AS","T2","ON","T1.current_address_id","=","T2.address_id","WHERE","T2.state_province_county","=","'NorthCarolina","'","EXCEPT","SELECT","DISTINCT","T3.last_name","FROM","Students","AS","T3","JOIN","Student_Enrolment","AS","T4","ON","T3.student_id","=","T4.student_id"],"query_toks_no_value":["select","t1",".","last_name","from","students","as","t1","join","addresses","as","t2","on","t1",".","current_address_id","=","t2",".","address_id","where","t2",".","state_province_county","=","value","except","select","distinct","t3",".","last_name","from","students","as","t3","join","student_enrolment","as","t4","on","t3",".","student_id","=","t4",".","student_id"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,47,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,37,false],null]]]],"union":null,"where":[]},"from":{"conds":[[false,2,[0,[0,33,false],null],[0,1,false],null]],"table_units":[["table_unit",6],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,37,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"NorthCarolina\"",null]]},"question_toks":["Wie","lauten","die","Nachnamen","der","Studierenden",",","die","in","North","Carolina","wohnen",",","aber","in","keinem","Studiengang","eingeschrieben","sind","?"],"question":"Wie lauten die Nachnamen der Studierenden, die in North Carolina wohnen, aber in keinem Studiengang eingeschrieben sind?"},{"db_id":"employee_hire_evaluation","query":"SELECT count(DISTINCT LOCATION) FROM shop","query_toks":["SELECT","count","(","DISTINCT","LOCATION",")","FROM","shop"],"query_toks_no_value":["select","count","(","distinct","location",")","from","shop"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,7,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","unterschiedliche","Gesch\u00e4ftsstellen","gibt","es","?"],"question":"Wie viele unterschiedliche Gesch\u00e4ftsstellen gibt es?"},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"","query_toks":["SELECT","count","(","*",")","FROM","AIRLINES","WHERE","Country","=","``","USA","''"],"query_toks_no_value":["select","count","(","*",")","from","airlines","where","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"USA\"",null]]},"question_toks":["Wie","viele","Fluggesellschaften","stammen","aus","den","USA","?"],"question":"Wie viele Fluggesellschaften stammen aus den USA?"},{"db_id":"concert_singer","query":"SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014","query_toks":["SELECT","name","FROM","stadium","EXCEPT","SELECT","T2.name","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","WHERE","T1.year","=","2014"],"query_toks_no_value":["select","name","from","stadium","except","select","t2",".","name","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","where","t1",".","year","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2014.0,null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","die","Namen","aller","Stadien","mit","Ausnahme","der","Stadien",",","die","im","Jahr","2014","ein","Konzert","geben","."],"question":"Zeigen Sie die Namen aller Stadien mit Ausnahme der Stadien, die im Jahr 2014 ein Konzert geben."},{"db_id":"concert_singer","query":"SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id","query_toks":["SELECT","T2.concert_name",",","T2.theme",",","count","(","*",")","FROM","singer_in_concert","AS","T1","JOIN","concert","AS","T2","ON","T1.concert_id","=","T2.concert_id","GROUP","BY","T2.concert_id"],"query_toks_no_value":["select","t2",".","concert_name",",","t2",".","theme",",","count","(","*",")","from","singer_in_concert","as","t1","join","concert","as","t2","on","t1",".","concert_id","=","t2",".","concert_id","group","by","t2",".","concert_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,20,false],null],[0,15,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]],[0,[0,[0,17,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen",",","Themen","und","die","Anzahl","der","S\u00e4nger\/innen","bei","jedem","einzelnen","Konzert","?"],"question":"Wie lauten die Namen, Themen und die Anzahl der S\u00e4nger\/innen bei jedem einzelnen Konzert?"},{"db_id":"wta_1","query":"SELECT count(DISTINCT country_code) FROM players","query_toks":["SELECT","count","(","DISTINCT","country_code",")","FROM","players"],"query_toks_no_value":["select","count","(","distinct","country_code",")","from","players"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,6,true],null]]]],"union":null,"where":[]},"question_toks":["Aus","wie","vielen","verschiedenen","L\u00e4ndern","stammen","die","Spieler","?"],"question":"Aus wie vielen verschiedenen L\u00e4ndern stammen die Spieler?"},{"db_id":"network_1","query":"SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id","query_toks":["SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","INTERSECT","SELECT","T2.name","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.liked_id","=","T2.id"],"query_toks_no_value":["select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","intersect","select","t2",".","name","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","liked_id","=","t2",".","id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","die","Namen","aller","Studierenden","an",",","die","einige","Freunde","haben","und","auch","von","jemand","anderem","gemocht","werden","."],"question":"Zeigen Sie die Namen aller Studierenden an, die einige Freunde haben und auch von jemand anderem gemocht werden."},{"db_id":"poker_player","query":"SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC","query_toks":["SELECT","Name",",","Birth_Date","FROM","people","ORDER","BY","Name","ASC"],"query_toks_no_value":["select","name",",","birth_date","from","people","order","by","name","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["F\u00fchren","Sie","die","Namen","und","Geburtsdaten","von","Personen","in","aufsteigender","alphabetischer","Reihenfolge","der","Namen","auf","."],"question":"F\u00fchren Sie die Namen und Geburtsdaten von Personen in aufsteigender alphabetischer Reihenfolge der Namen auf."},{"db_id":"employee_hire_evaluation","query":"SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)","query_toks":["SELECT","name","FROM","shop","WHERE","shop_id","NOT","IN","(","SELECT","shop_id","FROM","hiring",")"],"query_toks_no_value":["select","name","from","shop","where","shop_id","not","in","(","select","shop_id","from","hiring",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[true,8,[0,[0,5,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Welche","Gesch\u00e4fte","werden","ohne","Angestellte","betrieben","?","Finden","Sie","die","Namen","der","L\u00e4den"],"question":"Welche Gesch\u00e4fte werden ohne Angestellte betrieben? Finden Sie die Namen der L\u00e4den"},{"db_id":"world_1","query":"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode","query_toks":["SELECT","CountryCode",",","max","(","Percentage",")","FROM","countrylanguage","WHERE","LANGUAGE","=","``","Spanish","''","GROUP","BY","CountryCode"],"query_toks_no_value":["select","countrycode",",","max","(","percentage",")","from","countrylanguage","where","language","=","value","group","by","countrycode"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]],[1,[0,[0,26,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Spanish\"",null]]},"question_toks":["Senden","Sie","die","L\u00e4ndercodes","zur\u00fcck",",","in","denen","Spanisch","die","\u00fcberwiegend","gesprochene","Sprache","ist","."],"question":"Senden Sie die L\u00e4ndercodes zur\u00fcck, in denen Spanisch die \u00fcberwiegend gesprochene Sprache ist."},{"db_id":"wta_1","query":"SELECT min(loser_rank) FROM matches","query_toks":["SELECT","min","(","loser_rank",")","FROM","matches"],"query_toks_no_value":["select","min","(","loser_rank",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","den","h\u00f6chsten","Rang","der","Verlierer","in","allen","Spielen","."],"question":"Finden Sie den h\u00f6chsten Rang der Verlierer in allen Spielen. "},{"db_id":"student_transcripts_tracking","query":"SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1","query_toks":["SELECT","transcript_date","FROM","Transcripts","ORDER","BY","transcript_date","DESC","LIMIT","1"],"query_toks_no_value":["select","transcript_date","from","transcripts","order","by","transcript_date","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",9]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,53,false],null]]],"select":[false,[[0,[0,[0,53,false],null]]]],"union":null,"where":[]},"question_toks":["Wann","wurde","das","letzte","Transkript","ver\u00f6ffentlicht","?"],"question":"Wann wurde das letzte Transkript ver\u00f6ffentlicht? "},{"db_id":"car_1","query":"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","query_toks":["SELECT","T1.Continent",",","count","(","*",")","FROM","CONTINENTS","AS","T1","JOIN","COUNTRIES","AS","T2","ON","T1.ContId","=","T2.continent","JOIN","car_makers","AS","T3","ON","T2.CountryId","=","T3.Country","GROUP","BY","T1.Continent",";"],"query_toks_no_value":["select","t1",".","continent",",","count","(","*",")","from","continents","as","t1","join","countries","as","t2","on","t1",".","contid","=","t2",".","continent","join","car_makers","as","t3","on","t2",".","countryid","=","t3",".","country","group","by","t1",".","continent"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,5,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","einzelnen","Kontinente","und","wie","viele","Autohersteller","gibt","es","auf","jedem","Kontinent","?"],"question":"Wie lauten die Namen der einzelnen Kontinente und wie viele Autohersteller gibt es auf jedem Kontinent?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.SourceAirport","=","T2.AirportCode","WHERE","T2.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","sourceairport","=","t2",".","airportcode","where","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Wie","viele","Fl\u00fcge","starten","von","der","Stadt","Aberdeen"],"question":"Wie viele Fl\u00fcge starten von der Stadt Aberdeen"},{"db_id":"singer","query":"SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949","query_toks":["SELECT","Name","FROM","singer","WHERE","Birth_Year","=","1948","OR","Birth_Year","=","1949"],"query_toks_no_value":["select","name","from","singer","where","birth_year","=","value","or","birth_year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],1948.0,null],"or",[false,2,[0,[0,3,false],null],1949.0,null]]},"question_toks":["Die","Namen","von","S\u00e4ngern","anzeigen",",","deren","Geburtsjahr","entweder","1948","oder","1949","ist","?"],"question":"Die Namen von S\u00e4ngern anzeigen, deren Geburtsjahr entweder 1948 oder 1949 ist?"},{"db_id":"concert_singer","query":"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","query_toks":["SELECT","name",",","country",",","age","FROM","singer","ORDER","BY","age","DESC"],"query_toks_no_value":["select","name",",","country",",","age","from","singer","order","by","age","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","Name",",","Herkunftsland","und","Alter","f\u00fcr","alle","S\u00e4ngerInnen",",","geordnet","nach","Alter","vom","\u00e4ltesten","bis","zum","j\u00fcngsten","."],"question":"Zeigen Sie Name, Herkunftsland und Alter f\u00fcr alle S\u00e4ngerInnen, geordnet nach Alter vom \u00e4ltesten bis zum j\u00fcngsten."},{"db_id":"orchestra","query":"SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1","query_toks":["SELECT","T1.Name","FROM","conductor","AS","T1","JOIN","orchestra","AS","T2","ON","T1.Conductor_ID","=","T2.Conductor_ID","GROUP","BY","T2.Conductor_ID","HAVING","COUNT","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","name","from","conductor","as","t1","join","orchestra","as","t2","on","t1",".","conductor_id","=","t2",".","conductor_id","group","by","t2",".","conductor_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,8,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dfen","die","Dirigenten",",","die","in","mehr","als","einem","Orchester","dirigiert","haben","?"],"question":"Wie hei\u00dfen die Dirigenten, die in mehr als einem Orchester dirigiert haben?"},{"db_id":"concert_singer","query":"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","query_toks":["SELECT","song_name",",","song_release_year","FROM","singer","ORDER","BY","age","LIMIT","1"],"query_toks_no_value":["select","song_name",",","song_release_year","from","singer","order","by","age","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","und","Erscheinungsjahre","aller","Lieder","der","j\u00fcngsten","S\u00e4ngerIn","?"],"question":"Wie lauten die Namen und Erscheinungsjahre aller Lieder der j\u00fcngsten S\u00e4ngerIn?"},{"db_id":"dog_kennels","query":"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","query_toks":["SELECT","professional_id",",","last_name",",","cell_number","FROM","Professionals","WHERE","state","=","'Indiana","'","UNION","SELECT","T1.professional_id",",","T1.last_name",",","T1.cell_number","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id","GROUP","BY","T1.professional_id","HAVING","count","(","*",")",">","2"],"query_toks_no_value":["select","professional_id",",","last_name",",","cell_number","from","professionals","where","state","=","value","union","select","t1",".","professional_id",",","t1",".","last_name",",","t1",".","cell_number","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id","group","by","t1",".","professional_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,40,false],null]],[0,[0,[0,43,false],null]]]],"union":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,33,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,40,false],null]],[0,[0,[0,43,false],null]]]],"union":null,"where":[]},"where":[[false,2,[0,[0,38,false],null],"\"Indiana\"",null]]},"question_toks":["Welche","Fachkr\u00e4fte","leben","im","Bundesstaat","Indiana","oder","haben","mehr","als","2","Behandlungen","durchgef\u00fchrt","?","Gib","seinen","Ausweis",",","seinen","Nachnamen","und","sein","Mobiltelefon","an","."],"question":"Welche Fachkr\u00e4fte leben im Bundesstaat Indiana oder haben mehr als 2 Behandlungen durchgef\u00fchrt? Gib seinen Ausweis, seinen Nachnamen und sein Mobiltelefon an."},{"db_id":"world_1","query":"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"","query_toks":["SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","INTERSECT","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","French","''"],"query_toks_no_value":["select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","intersect","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"French\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},"question_toks":["Benennen","Sie","die","Namen","der","Nationen",",","die","sowohl","Englisch","als","auch","Franz\u00f6sisch","sprechen","."],"question":"Benennen Sie die Namen der Nationen, die sowohl Englisch als auch Franz\u00f6sisch sprechen."},{"db_id":"network_1","query":"SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"","query_toks":["SELECT","grade","FROM","Highschooler","WHERE","name","=","``","Kyle","''"],"query_toks_no_value":["select","grade","from","highschooler","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Geben","Sie","die","Note","f\u00fcr","den","Obersch\u00fcler","namens","Kyle","zur\u00fcck","."],"question":"Geben Sie die Note f\u00fcr den Obersch\u00fcler namens Kyle zur\u00fcck."},{"db_id":"flight_2","query":"SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"","query_toks":["SELECT","Country","FROM","AIRLINES","WHERE","Airline","=","``","JetBlue","Airways","''"],"query_toks_no_value":["select","country","from","airlines","where","airline","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"JetBlue Airways\"",null]]},"question_toks":["``","Zu","welchem","Land","geh\u00f6rt","die","Fluggesellschaft","``","''","JetBlue","Airways","''","''","?"],"question":"\"Zu welchem Land geh\u00f6rt die Fluggesellschaft \"\"JetBlue Airways\"\"?"},{"db_id":"dog_kennels","query":"SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'","query_toks":["SELECT","first_name",",","last_name",",","email_address","FROM","Owners","WHERE","state","LIKE","'","%","North","%","'"],"query_toks_no_value":["select","first_name",",","last_name",",","email_address","from","owners","where","state","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]],[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,9,[0,[0,15,false],null],"\"%North%\"",null]]},"question_toks":["Welche","Eigent\u00fcmer","wohnen","in","dem","Staat",",","dessen","Name","die","Teilzeichenfolge","'Nord","'","enth\u00e4lt","?","Geben","Sie","seinen","Vornamen",",","Nachnamen","und","seine","E-Mail-Adresse","an","."],"question":"Welche Eigent\u00fcmer wohnen in dem Staat, dessen Name die Teilzeichenfolge 'Nord' enth\u00e4lt? Geben Sie seinen Vornamen, Nachnamen und seine E-Mail-Adresse an."},{"db_id":"tvshow","query":"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";","query_toks":["SELECT","T2.Title","FROM","TV_Channel","AS","T1","JOIN","Cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T1.series_name","=","``","Sky","Radio","''",";"],"query_toks_no_value":["select","t2",".","title","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t1",".","series_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Sky Radio\"",null]]},"question_toks":["``","Wie","lautet","der","Titel","aller","Zeichentrickfilme",",","die","auf","dem","Fernsehkanal","mit","dem","Seriennamen","``","''","Sky","Radio","''","''","zu","sehen","sind","?"],"question":"\"Wie lautet der Titel aller Zeichentrickfilme, die auf dem Fernsehkanal mit dem Seriennamen \"\"Sky Radio\"\" zu sehen sind?"},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"","query_toks":["SELECT","count","(","*",")","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T2.Airline","=","T1.uid","WHERE","T1.Airline","=","``","United","Airlines","''","AND","T2.DestAirport","=","``","ASY","''"],"query_toks_no_value":["select","count","(","*",")","from","airlines","as","t1","join","flights","as","t2","on","t2",".","airline","=","t1",".","uid","where","t1",".","airline","=","value","and","t2",".","destairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,1,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"United Airlines\"",null],"and",[false,2,[0,[0,13,false],null],"\"ASY\"",null]]},"question_toks":["Wie","viele","Fl\u00fcge","von","``","United","Airlines","''","gehen","zum","Flughafen","``","ASY","''","?"],"question":"Wie viele Fl\u00fcge von \"United Airlines\" gehen zum Flughafen \"ASY\"?"},{"db_id":"wta_1","query":"SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1","query_toks":["SELECT","first_name",",","country_code","FROM","players","ORDER","BY","birth_date","LIMIT","1"],"query_toks_no_value":["select","first_name",",","country_code","from","players","order","by","birth_date","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Vorname","und","der","L\u00e4ndercode","des","\u00e4ltesten","Spielers","?"],"question":"Wie lautet der Vorname und der L\u00e4ndercode des \u00e4ltesten Spielers?"},{"db_id":"poker_player","query":"SELECT avg(Earnings) FROM poker_player","query_toks":["SELECT","avg","(","Earnings",")","FROM","poker_player"],"query_toks_no_value":["select","avg","(","earnings",")","from","poker_player"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","den","Durchschnittsverdienst","aller","Pokerspieler","zur\u00fcck","."],"question":"Geben Sie den Durchschnittsverdienst aller Pokerspieler zur\u00fcck."},{"db_id":"network_1","query":"SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Rufen","Sie","den","Namen","des","Gymnasiasten","mit","den","meisten","Freunden","zur\u00fcck","."],"question":"Rufen Sie den Namen des Gymnasiasten mit den meisten Freunden zur\u00fcck."},{"db_id":"network_1","query":"SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.name","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","ist","der","Name","des","High-School-Sch\u00fclers",",","der","die","h\u00f6chste","Anzahl","an","Likes","hat","?"],"question":"Wie ist der Name des High-School-Sch\u00fclers, der die h\u00f6chste Anzahl an Likes hat?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2","query_toks":["SELECT","document_id","FROM","Paragraphs","GROUP","BY","document_id","HAVING","count","(","*",")","BETWEEN","1","AND","2"],"query_toks_no_value":["select","document_id","from","paragraphs","group","by","document_id","having","count","(","*",")","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,15,false]],"having":[[false,1,[0,[3,0,false],null],1.0,2.0]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Nennen","Sie","die","IDs","von","Dokumenten",",","die","zwischen","einem","und","zwei","Abs\u00e4tzen","haben","."],"question":"Nennen Sie die IDs von Dokumenten, die zwischen einem und zwei Abs\u00e4tzen haben."},{"db_id":"poker_player","query":"SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1","query_toks":["SELECT","T1.Birth_Date","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T2.Earnings","ASC","LIMIT","1"],"query_toks_no_value":["select","t1",".","birth_date","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t2",".","earnings","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","das","Geburtsdatum","des","Pokerspielers","mit","dem","niedrigsten","Verdienst","?"],"question":"Wie lautet das Geburtsdatum des Pokerspielers mit dem niedrigsten Verdienst?"},{"db_id":"poker_player","query":"SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made","query_toks":["SELECT","T1.Name","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T2.Final_Table_Made"],"query_toks_no_value":["select","t1",".","name","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t2",".","final_table_made"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,3,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Namen","der","Poker-Spieler",",","aufsteigend","geordnet","nach","der","Zahl","der","Endtabellen",",","die","sie","geschafft","haben","?"],"question":"Was sind die Namen der Poker-Spieler, aufsteigend geordnet nach der Zahl der Endtabellen, die sie geschafft haben?"},{"db_id":"concert_singer","query":"SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015","query_toks":["SELECT","count","(","*",")","FROM","concert","WHERE","YEAR","=","2014","OR","YEAR","=","2015"],"query_toks_no_value":["select","count","(","*",")","from","concert","where","year","=","value","or","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2014.0,null],"or",[false,2,[0,[0,19,false],null],2015.0,null]]},"question_toks":["Wie","viele","Konzerte","finden","im","Jahr","2014","oder","2015","statt","?"],"question":"Wie viele Konzerte finden im Jahr 2014 oder 2015 statt?"},{"db_id":"employee_hire_evaluation","query":"SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)","query_toks":["SELECT","name","FROM","shop","WHERE","number_products",">","(","SELECT","avg","(","number_products",")","FROM","shop",")"],"query_toks_no_value":["select","name","from","shop","where","number_products",">","(","select","avg","(","number_products",")","from","shop",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,9,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Bei","welchen","Gesch\u00e4ften","liegt","die","Anzahl","der","Produkte","\u00fcber","dem","Durchschnitt","?","Nennen","Sie","mir","die","Namen","der","Gesch\u00e4fte","."],"question":"Bei welchen Gesch\u00e4ften liegt die Anzahl der Produkte \u00fcber dem Durchschnitt? Nennen Sie mir die Namen der Gesch\u00e4fte."},{"db_id":"network_1","query":"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","query_toks":["SELECT","T2.name",",","count","(","*",")","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Namen","von","High-School-Studenten","und","ihre","korrespondiere","Anzahl","von","Freunden","."],"question":"Zeige die Namen von High-School-Studenten und ihre korrespondiere Anzahl von Freunden."},{"db_id":"wta_1","query":"SELECT count(*) FROM matches","query_toks":["SELECT","count","(","*",")","FROM","matches"],"query_toks_no_value":["select","count","(","*",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hlen","Sie","die","Anzahl","der","Spiele","."],"question":"Z\u00e4hlen Sie die Anzahl der Spiele."},{"db_id":"pets_1","query":"SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)","query_toks":["SELECT","avg","(","age",")","FROM","student","WHERE","stuid","NOT","IN","(","SELECT","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid",")"],"query_toks_no_value":["select","avg","(","age",")","from","student","where","stuid","not","in","(","select","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","hoch","ist","das","Durchschnittsalter","f\u00fcr","alle","Studierenden",",","die","keine","Haustiere","besitzen","?"],"question":"Wie hoch ist das Durchschnittsalter f\u00fcr alle Studierenden, die keine Haustiere besitzen?"},{"db_id":"world_1","query":"SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","T1.Continent","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","GROUP","BY","T1.Continent","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","continent","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","group","by","t1",".","continent","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Kontinent","hat","die","meisten","Sprachen","?"],"question":"Welcher Kontinent hat die meisten Sprachen?"},{"db_id":"world_1","query":"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")","query_toks":["SELECT","sum","(","Population",")","FROM","country","WHERE","Name","NOT","IN","(","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''",")"],"query_toks_no_value":["select","sum","(","population",")","from","country","where","name","not","in","(","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]]]],"union":null,"where":[[true,8,[0,[0,9,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},null]]},"question_toks":["Wie","hoch","ist","die","Gesamtzahl","der","Menschen",",","die","in","den","L\u00e4ndern","ohne","Englischkenntnisse","leben","?"],"question":"Wie hoch ist die Gesamtzahl der Menschen, die in den L\u00e4ndern ohne Englischkenntnisse leben?"},{"db_id":"world_1","query":"SELECT name FROM city WHERE Population BETWEEN 160000 AND 90000","query_toks":["SELECT","name","FROM","city","WHERE","Population","BETWEEN","160000","AND","90000"],"query_toks_no_value":["select","name","from","city","where","population","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,1,[0,[0,5,false],null],160000.0,90000.0]]},"question_toks":["Rufen","Sie","die","Namen","der","St\u00e4dte","mit","einer","Einwohnerzahl","zwischen","160000","und","900000","zur\u00fcck","."],"question":"Rufen Sie die Namen der St\u00e4dte mit einer Einwohnerzahl zwischen 160000 und 900000 zur\u00fcck."},{"db_id":"concert_singer","query":"SELECT count(*) FROM singer","query_toks":["SELECT","count","(","*",")","FROM","singer"],"query_toks_no_value":["select","count","(","*",")","from","singer"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","S\u00e4nger","haben","wir","?"],"question":"Wie viele S\u00e4nger haben wir?"},{"db_id":"car_1","query":"SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;","query_toks":["SELECT","count","(","*",")","FROM","CARS_DATA","WHERE","YEAR","=","1980",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],1980.0,null]]},"question_toks":["Wie","viele","Autos","wurden","1980","hergestellt","?"],"question":"Wie viele Autos wurden 1980 hergestellt?"},{"db_id":"orchestra","query":"SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1","query_toks":["SELECT","T1.Name","FROM","conductor","AS","T1","JOIN","orchestra","AS","T2","ON","T1.Conductor_ID","=","T2.Conductor_ID","GROUP","BY","T2.Conductor_ID","HAVING","COUNT","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","name","from","conductor","as","t1","join","orchestra","as","t2","on","t1",".","conductor_id","=","t2",".","conductor_id","group","by","t2",".","conductor_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,8,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","die","Namen","von","Dirigenten","an",",","die","mehr","als","ein","Orchester","geleitet","haben","."],"question":"Zeigen Sie die Namen von Dirigenten an, die mehr als ein Orchester geleitet haben."},{"db_id":"pets_1","query":"SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'","query_toks":["SELECT","T2.petid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","WHERE","T1.Lname","=","'Smith","'"],"query_toks_no_value":["select","t2",".","petid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","where","t1",".","lname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Smith\"",null]]},"question_toks":["Wie","lautet","die","ID","des","Haustiers",",","das","der","Student","mit","dem","Nachnamen","``","Smith","''","besitzt","?"],"question":"Wie lautet die ID des Haustiers, das der Student mit dem Nachnamen \"Smith\" besitzt?"},{"db_id":"student_transcripts_tracking","query":"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","query_toks":["SELECT","T2.transcript_date",",","T1.transcript_id","FROM","Transcript_Contents","AS","T1","JOIN","Transcripts","AS","T2","ON","T1.transcript_id","=","T2.transcript_id","GROUP","BY","T1.transcript_id","ORDER","BY","count","(","*",")","ASC","LIMIT","1"],"query_toks_no_value":["select","t2",".","transcript_date",",","t1",".","transcript_id","from","transcript_contents","as","t1","join","transcripts","as","t2","on","t1",".","transcript_id","=","t2",".","transcript_id","group","by","t1",".","transcript_id","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,56,false],null],[0,52,false],null]],"table_units":[["table_unit",10],["table_unit",9]]},"groupBy":[[0,56,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,53,false],null]],[0,[0,[0,56,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","das","Datum","und","die","ID","des","Transkripts","mit","der","geringsten","Anzahl","von","Ergebnissen","?"],"question":"Was ist das Datum und die ID des Transkripts mit der geringsten Anzahl von Ergebnissen?"},{"db_id":"network_1","query":"SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","grade","FROM","Highschooler","GROUP","BY","grade","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","grade","from","highschooler","group","by","grade","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Die","Klassen",",","in","denen","die","meisten","Sch\u00fclerinnen","und","Sch\u00fcler","zur","Schule","gehen",",","zur\u00fcckgeben","."],"question":"Die Klassen, in denen die meisten Sch\u00fclerinnen und Sch\u00fcler zur Schule gehen, zur\u00fcckgeben. "},{"db_id":"pets_1","query":"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","query_toks":["SELECT","T1.fname",",","T1.age","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'dog","'","AND","T1.stuid","NOT","IN","(","SELECT","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'",")"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","age","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value","and","t1",".","stuid","not","in","(","select","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"dog\"",null],"and",[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null]]},null]]},"question_toks":["Was","ist","der","Vorname","jedes","Studenten",",","der","einen","Hund",",","aber","keine","Katze","hat","?"],"question":"Was ist der Vorname jedes Studenten, der einen Hund, aber keine Katze hat?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","query_toks":["SELECT","document_id",",","count","(","*",")","FROM","Paragraphs","GROUP","BY","document_id","ORDER","BY","document_id"],"query_toks_no_value":["select","document_id",",","count","(","*",")","from","paragraphs","group","by","document_id","order","by","document_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,15,false],null]]],"select":[false,[[0,[0,[0,15,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","die","verschiedenen","Dokument-IDs","zusammen","mit","der","Anzahl","der","entsprechenden","Abs\u00e4tze",",","geordnet","nach","IDs",",","zur\u00fcck","."],"question":"Geben Sie die verschiedenen Dokument-IDs zusammen mit der Anzahl der entsprechenden Abs\u00e4tze, geordnet nach IDs, zur\u00fcck."},{"db_id":"course_teach","query":"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"","query_toks":["SELECT","T3.Name","FROM","course_arrange","AS","T1","JOIN","course","AS","T2","ON","T1.Course_ID","=","T2.Course_ID","JOIN","teacher","AS","T3","ON","T1.Teacher_ID","=","T3.Teacher_ID","WHERE","T2.Course","=","``","Math","''"],"query_toks_no_value":["select","t3",".","name","from","course_arrange","as","t1","join","course","as","t2","on","t1",".","course_id","=","t2",".","course_id","join","teacher","as","t3","on","t1",".","teacher_id","=","t3",".","teacher_id","where","t2",".","course","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],"\"Math\"",null]]},"question_toks":["Zeigen","Sie","den","Namen","des","Lehrers","f\u00fcr","den","Mathekurs","an","."],"question":"Zeigen Sie den Namen des Lehrers f\u00fcr den Mathekurs an. "},{"db_id":"orchestra","query":"SELECT avg(Attendance) FROM SHOW","query_toks":["SELECT","avg","(","Attendance",")","FROM","SHOW"],"query_toks_no_value":["select","avg","(","attendance",")","from","show"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","durchschnittliche","Besucherzahl","aller","Shows","."],"question":"Zeige die durchschnittliche Besucherzahl aller Shows."},{"db_id":"pets_1","query":"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","query_toks":["SELECT","avg","(","weight",")",",","pettype","FROM","pets","GROUP","BY","pettype"],"query_toks_no_value":["select","avg","(","weight",")",",","pettype","from","pets","group","by","pettype"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,14,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","das","Durchschnittsgewicht","f\u00fcr","jede","Art","von","Heimtier","?"],"question":"Wie hoch ist das Durchschnittsgewicht f\u00fcr jede Art von Heimtier?"},{"db_id":"world_1","query":"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1","query_toks":["SELECT","T2.Language","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.Name","=","``","Aruba","''","ORDER","BY","Percentage","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","language","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","name","=","value","order","by","percentage","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,26,false],null]]],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Aruba\"",null]]},"question_toks":["Welche","Sprache","wird","\u00fcberwiegend","in","Aruba","gesprochen","?"],"question":"Welche Sprache wird \u00fcberwiegend in Aruba gesprochen?"},{"db_id":"network_1","query":"SELECT count(*) FROM Highschooler","query_toks":["SELECT","count","(","*",")","FROM","Highschooler"],"query_toks_no_value":["select","count","(","*",")","from","highschooler"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hle","die","Anzahl","an","Sch\u00fclern","."],"question":"Z\u00e4hle die Anzahl an Sch\u00fclern."},{"db_id":"dog_kennels","query":"SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'","query_toks":["SELECT","email_address","FROM","Professionals","WHERE","state","=","'Hawaii","'","OR","state","=","'Wisconsin","'"],"query_toks_no_value":["select","email_address","from","professionals","where","state","=","value","or","state","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,41,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],"\"Hawaii\"",null],"or",[false,2,[0,[0,38,false],null],"\"Wisconsin\"",null]]},"question_toks":["F\u00fchren","Sie","die","E-Mails","der","Fachleute","auf",",","die","im","Staat","Hawaii","oder","im","Staat","Wisconsin","leben","."],"question":"F\u00fchren Sie die E-Mails der Fachleute auf, die im Staat Hawaii oder im Staat Wisconsin leben."},{"db_id":"network_1","query":"SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10","query_toks":["SELECT","count","(","*",")","FROM","Highschooler","WHERE","grade","=","9","OR","grade","=","10"],"query_toks_no_value":["select","count","(","*",")","from","highschooler","where","grade","=","value","or","grade","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],9.0,null],"or",[false,2,[0,[0,3,false],null],10.0,null]]},"question_toks":["Z\u00e4hlen","Sie","die","Anzahl","der","Gymnasiasten","in","den","Klassen","9","oder","10","."],"question":"Z\u00e4hlen Sie die Anzahl der Gymnasiasten in den Klassen 9 oder 10."},{"db_id":"tvshow","query":"SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'","query_toks":["SELECT","T1.country","FROM","TV_Channel","AS","T1","JOIN","cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.written_by","=","'Todd","Casey","'"],"query_toks_no_value":["select","t1",".","country","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","written_by","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],"\"Todd Casey\"",null]]},"question_toks":["In","welchen","L\u00e4ndern","laufen","Zeichentrickfilme","im","Fernsehen",",","die","von","Todd","Casey","geschrieben","wurden","?"],"question":"In welchen L\u00e4ndern laufen Zeichentrickfilme im Fernsehen, die von Todd Casey geschrieben wurden?"},{"db_id":"dog_kennels","query":"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","query_toks":["SELECT","T1.name",",","T2.date_of_treatment","FROM","Dogs","AS","T1","JOIN","Treatments","AS","T2","ON","T1.dog_id","=","T2.dog_id","WHERE","T1.breed_code","=","(","SELECT","breed_code","FROM","Dogs","GROUP","BY","breed_code","ORDER","BY","count","(","*",")","ASC","LIMIT","1",")"],"query_toks_no_value":["select","t1",".","name",",","t2",".","date_of_treatment","from","dogs","as","t1","join","treatments","as","t2","on","t1",".","dog_id","=","t2",".","dog_id","where","t1",".","breed_code","=","(","select","breed_code","from","dogs","group","by","breed_code","order","by","count","(","*",")","asc","limit","value",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,20,false],null],[0,45,false],null]],"table_units":[["table_unit",5],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]],[0,[0,[0,48,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Tragen","Sie","die","Namen","der","Hunde","der","seltensten","Rasse","und","die","Behandlungsdaten","der","Hunde","ein","."],"question":"Tragen Sie die Namen der Hunde der seltensten Rasse und die Behandlungsdaten der Hunde ein."},{"db_id":"wta_1","query":"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","query_toks":["SELECT","T1.country_code",",","T1.first_name","FROM","players","AS","T1","JOIN","rankings","AS","T2","ON","T1.player_id","=","T2.player_id","ORDER","BY","T2.tours","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","country_code",",","t1",".","first_name","from","players","as","t1","join","rankings","as","t2","on","t1",".","player_id","=","t2",".","player_id","order","by","t2",".","tours","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,41,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,43,false],null]]],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Vorname","und","der","L\u00e4ndercode","des","Spielers","mit","den","meisten","Tourneen","?"],"question":"Wie lautet der Vorname und der L\u00e4ndercode des Spielers mit den meisten Tourneen?"},{"db_id":"concert_singer","query":"SELECT DISTINCT country FROM singer WHERE age  >  20","query_toks":["SELECT","DISTINCT","country","FROM","singer","WHERE","age",">","20"],"query_toks_no_value":["select","distinct","country","from","singer","where","age",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],20.0,null]]},"question_toks":["Was","sind","die","verschiedenen","L\u00e4nder","mit","S\u00e4ngern","\u00fcber","20","Jahren","?"],"question":"Was sind die verschiedenen L\u00e4nder mit S\u00e4ngern \u00fcber 20 Jahren?"},{"db_id":"car_1","query":"SELECT count(*) FROM COUNTRIES;","query_toks":["SELECT","count","(","*",")","FROM","COUNTRIES",";"],"query_toks_no_value":["select","count","(","*",")","from","countries"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","L\u00e4nder","gibt","es","?"],"question":"Wie viele L\u00e4nder gibt es?"},{"db_id":"wta_1","query":"SELECT avg(winner_rank) FROM matches","query_toks":["SELECT","avg","(","winner_rank",")","FROM","matches"],"query_toks_no_value":["select","avg","(","winner_rank",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,35,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","der","durchschnittliche","Rangfolge","der","Sieger","in","allen","Partien","?"],"question":"Wie hoch ist der durchschnittliche Rangfolge der Sieger in allen Partien?"},{"db_id":"student_transcripts_tracking","query":"SELECT first_name FROM Students WHERE current_address_id != permanent_address_id","query_toks":["SELECT","first_name","FROM","Students","WHERE","current_address_id","!","=","permanent_address_id"],"query_toks_no_value":["select","first_name","from","students","where","current_address_id","!","=","permanent_address_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]]]],"union":null,"where":[[false,7,[0,[0,33,false],null],[0,34,false],null]]},"question_toks":["Wessen","st\u00e4ndiger","Wohnsitz","unterscheidet","sich","von","seiner","aktuellen","Adresse","?","Geben","Sie","seinen","Vornamen","an","."],"question":"Wessen st\u00e4ndiger Wohnsitz unterscheidet sich von seiner aktuellen Adresse? Geben Sie seinen Vornamen an."},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.DestAirport","=","``","AHD","''"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","destairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"AHD\"",null]]},"question_toks":["Welche","Fluggesellschaften","haben","einen","Flug","mit","Zielflughafen","AHD","?"],"question":"Welche Fluggesellschaften haben einen Flug mit Zielflughafen AHD?"},{"db_id":"student_transcripts_tracking","query":"SELECT course_description FROM Courses WHERE course_name  =  'math'","query_toks":["SELECT","course_description","FROM","Courses","WHERE","course_name","=","'math","'"],"query_toks_no_value":["select","course_description","from","courses","where","course_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"math\"",null]]},"question_toks":["Wie","wird","der","Mathekurs","beschrieben","?"],"question":"Wie wird der Mathekurs beschrieben?"},{"db_id":"pets_1","query":"SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid","query_toks":["SELECT","count","(","*",")",",","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","GROUP","BY","T1.stuid"],"query_toks_no_value":["select","count","(","*",")",",","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","group","by","t1",".","stuid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Suche","nach","der","Anzahl","der","Haustiere","f\u00fcr","jeden","Studenten",",","der","ein","Haustier","und","einen","Studentenausweis","hat","."],"question":"Suche nach der Anzahl der Haustiere f\u00fcr jeden Studenten, der ein Haustier und einen Studentenausweis hat."},{"db_id":"flight_2","query":"SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1","query_toks":["SELECT","T1.AirportCode","FROM","AIRPORTS","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.AirportCode","=","T2.DestAirport","OR","T1.AirportCode","=","T2.SourceAirport","GROUP","BY","T1.AirportCode","ORDER","BY","count","(","*",")","LIMIT","1"],"query_toks_no_value":["select","t1",".","airportcode","from","airports","as","t1","join","flights","as","t2","on","t1",".","airportcode","=","t2",".","destairport","or","t1",".","airportcode","=","t2",".","sourceairport","group","by","t1",".","airportcode","order","by","count","(","*",")","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,13,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Code","des","Flughafens","mit","der","geringsten","Anzahl","von","Fl\u00fcgen","?"],"question":"Wie lautet der Code des Flughafens mit der geringsten Anzahl von Fl\u00fcgen?"},{"db_id":"orchestra","query":"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"","query_toks":["SELECT","COUNT","(","*",")","FROM","orchestra","WHERE","Major_Record_Format","=","``","CD","''","OR","Major_Record_Format","=","``","DVD","''"],"query_toks_no_value":["select","count","(","*",")","from","orchestra","where","major_record_format","=","value","or","major_record_format","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"CD\"",null],"or",[false,2,[0,[0,11,false],null],"\"DVD\"",null]]},"question_toks":["Z\u00e4hlen","Sie","die","Anzahl","der","Orchester",",","die","CD","oder","DVD","als","Aufnahmeformat","haben","."],"question":"Z\u00e4hlen Sie die Anzahl der Orchester, die CD oder DVD als Aufnahmeformat haben."},{"db_id":"dog_kennels","query":"SELECT max(age) FROM Dogs","query_toks":["SELECT","max","(","age",")","FROM","Dogs"],"query_toks_no_value":["select","max","(","age",")","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","alt","ist","der","\u00e4lteste","Hund","?"],"question":"Wie alt ist der \u00e4lteste Hund?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"","query_toks":["SELECT","document_id",",","template_id",",","Document_Description","FROM","Documents","WHERE","document_name","=","``","Robbin","CV","''"],"query_toks_no_value":["select","document_id",",","template_id",",","document_description","from","documents","where","document_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Robbin CV\"",null]]},"question_toks":["Geben","Sie","die","Dokument-ID",",","die","Vorlagen-ID","und","die","Beschreibung","f\u00fcr","das","Dokument","mit","dem","Namen","Robbin","CV","zur\u00fcck","."],"question":"Geben Sie die Dokument-ID, die Vorlagen-ID und die Beschreibung f\u00fcr das Dokument mit dem Namen Robbin CV zur\u00fcck."},{"db_id":"world_1","query":"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"","query_toks":["SELECT","COUNT","(","T2.Language",")","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.Name","=","``","Aruba","''"],"query_toks_no_value":["select","count","(","t2",".","language",")","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Aruba\"",null]]},"question_toks":["Welche","Gesamtzahl","von","Sprachen","wird","in","Aruba","gesprochen","?"],"question":"Welche Gesamtzahl von Sprachen wird in Aruba gesprochen?"},{"db_id":"dog_kennels","query":"SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.breed_name","FROM","Breeds","AS","T1","JOIN","Dogs","AS","T2","ON","T1.breed_code","=","T2.breed_code","GROUP","BY","T1.breed_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","breed_name","from","breeds","as","t1","join","dogs","as","t2","on","t1",".","breed_code","=","t2",".","breed_code","group","by","t1",".","breed_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,23,false],null]],"table_units":[["table_unit",0],["table_unit",5]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Rasse","haben","die","meisten","Hunde","?","Geben","Sie","mir","den","Namen","der","Rasse","."],"question":"Welche Rasse haben die meisten Hunde? Geben Sie mir den Namen der Rasse."},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"","query_toks":["SELECT","count","(","*",")","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T2.Airline","=","T1.uid","WHERE","T1.Airline","=","``","United","Airlines","''","AND","T2.SourceAirport","=","``","AHD","''"],"query_toks_no_value":["select","count","(","*",")","from","airlines","as","t1","join","flights","as","t2","on","t2",".","airline","=","t1",".","uid","where","t1",".","airline","=","value","and","t2",".","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,1,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"United Airlines\"",null],"and",[false,2,[0,[0,12,false],null],"\"AHD\"",null]]},"question_toks":["Nennen","Sie","die","Anzahl","der","vom","AHD-Flughafen","abgehenden","Fl\u00fcge","von","United","Airlines","."],"question":"Nennen Sie die Anzahl der vom AHD-Flughafen abgehenden Fl\u00fcge von United Airlines."},{"db_id":"world_1","query":"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode","query_toks":["SELECT","count","(","*",")",",","max","(","Percentage",")","FROM","countrylanguage","WHERE","LANGUAGE","=","``","Spanish","''","GROUP","BY","CountryCode"],"query_toks_no_value":["select","count","(","*",")",",","max","(","percentage",")","from","countrylanguage","where","language","=","value","group","by","countrycode"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[1,[0,[0,26,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Spanish\"",null]]},"question_toks":["Wie","hoch","ist","die","Gesamtzahl","der","L\u00e4nder",",","in","denen","Spanisch","vom","gr\u00f6\u00dften","Prozentsatz","der","Menschen","gesprochen","wird","?"],"question":"Wie hoch ist die Gesamtzahl der L\u00e4nder, in denen Spanisch vom gr\u00f6\u00dften Prozentsatz der Menschen gesprochen wird?"},{"db_id":"world_1","query":"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"","query_toks":["SELECT","count","(","DISTINCT","T2.Language",")","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","IndepYear","<","1930","AND","T2.IsOfficial","=","``","T","''"],"query_toks_no_value":["select","count","(","distinct","t2",".","language",")","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","indepyear","<","value","and","t2",".","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,24,true],null]]]],"union":null,"where":[[false,4,[0,[0,13,false],null],1930.0,null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Wie","viele","verschiedene","Amtssprachen","gab","es","in","den","vor","1930","gegr\u00fcndeten","L\u00e4ndern","insgesamt","?"],"question":"Wie viele verschiedene Amtssprachen gab es in den vor 1930 gegr\u00fcndeten L\u00e4ndern insgesamt?"},{"db_id":"car_1","query":"SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;","query_toks":["SELECT","DISTINCT","T1.Year","FROM","CARS_DATA","AS","T1","WHERE","T1.Weight",">","3000","AND","T1.weight","<","4000",";"],"query_toks_no_value":["select","distinct","t1",".","year","from","cars_data","as","t1","where","t1",".","weight",">","value","and","t1",".","weight","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,3,[0,[0,21,false],null],3000.0,null],"and",[false,4,[0,[0,21,false],null],4000.0,null]]},"question_toks":["In","welchen","Jahren","wurden","Autos","hergestellt",",","die","nicht","weniger","als","3000","und","nicht","mehr","als","4000","wogen","?"],"question":"In welchen Jahren wurden Autos hergestellt, die nicht weniger als 3000 und nicht mehr als 4000 wogen?"},{"db_id":"car_1","query":"SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;","query_toks":["SELECT","avg","(","mpg",")","FROM","CARS_DATA","WHERE","Cylinders","=","4",";"],"query_toks_no_value":["select","avg","(","mpg",")","from","cars_data","where","cylinders","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,17,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],4.0,null]]},"question_toks":["Wie","hoch","sind","die","durchschnittlichen","Meilen","pro","Gallone","bei","allen","Karten","mit","4","Zylindern","?"],"question":"Wie hoch sind die durchschnittlichen Meilen pro Gallone bei allen Karten mit 4 Zylindern?"},{"db_id":"world_1","query":"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District","query_toks":["SELECT","count","(","*",")",",","District","FROM","city","WHERE","Population",">","(","SELECT","avg","(","Population",")","FROM","city",")","GROUP","BY","District"],"query_toks_no_value":["select","count","(","*",")",",","district","from","city","where","population",">","(","select","avg","(","population",")","from","city",")","group","by","district"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,3,[0,[0,5,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,5,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","viele","St\u00e4dte","in","jedem","Bezirk","haben","eine","Einwohnerzahl",",","die","\u00fcber","dem","Durchschnitt","aller","St\u00e4dte","liegt","?"],"question":"Wie viele St\u00e4dte in jedem Bezirk haben eine Einwohnerzahl, die \u00fcber dem Durchschnitt aller St\u00e4dte liegt?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","query_toks":["SELECT","template_type_code",",","count","(","*",")","FROM","Templates","GROUP","BY","template_type_code"],"query_toks_no_value":["select","template_type_code",",","count","(","*",")","from","templates","group","by","template_type_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","verschiedenen","Codes","f\u00fcr","Vorlagentypen","und","wie","viele","Vorlagen","entsprechen","ihnen","jeweils","?"],"question":"Was sind die verschiedenen Codes f\u00fcr Vorlagentypen und wie viele Vorlagen entsprechen ihnen jeweils?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.document_id",",","T2.document_name","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_id","=","T2.document_id","GROUP","BY","T1.document_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","document_id",",","t2",".","document_name","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","group","by","t1",".","document_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","die","Dokumenten-ID","und","der","Name","des","Dokuments","mit","der","gr\u00f6\u00dften","Anzahl","von","Abs\u00e4tzen","?"],"question":"Wie lautet die Dokumenten-ID und der Name des Dokuments mit der gr\u00f6\u00dften Anzahl von Abs\u00e4tzen?"},{"db_id":"employee_hire_evaluation","query":"SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)","query_toks":["SELECT","name","FROM","shop","WHERE","number_products",">","(","SELECT","avg","(","number_products",")","FROM","shop",")"],"query_toks_no_value":["select","name","from","shop","where","number_products",">","(","select","avg","(","number_products",")","from","shop",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,9,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Suchen","Sie","die","Namen","von","Gesch\u00e4ften",",","deren","Anzahl","der","Produkte","\u00fcber","der","durchschnittlichen","Anzahl","der","Produkte","liegt","."],"question":"Suchen Sie die Namen von Gesch\u00e4ften, deren Anzahl der Produkte \u00fcber der durchschnittlichen Anzahl der Produkte liegt."},{"db_id":"orchestra","query":"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company","query_toks":["SELECT","Record_Company",",","COUNT","(","*",")","FROM","orchestra","GROUP","BY","Record_Company"],"query_toks_no_value":["select","record_company",",","count","(","*",")","from","orchestra","group","by","record_company"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Bitte","zeigen","Sie","die","verschiedenen","Schallplattenunternehmen","und","die","entsprechende","Anzahl","von","Orchestern","."],"question":"Bitte zeigen Sie die verschiedenen Schallplattenunternehmen und die entsprechende Anzahl von Orchestern."},{"db_id":"world_1","query":"SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"","query_toks":["SELECT","sum","(","Population",")",",","max","(","GNP",")","FROM","country","WHERE","Continent","=","``","Asia","''"],"query_toks_no_value":["select","sum","(","population",")",",","max","(","gnp",")","from","country","where","continent","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]],[1,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Wie","hoch","ist","die","Gesamtbev\u00f6lkerung","und","das","maximale","GNP","in","Asien","?"],"question":"Wie hoch ist die Gesamtbev\u00f6lkerung und das maximale GNP in Asien?"},{"db_id":"employee_hire_evaluation","query":"SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)","query_toks":["SELECT","name","FROM","employee","WHERE","Employee_ID","NOT","IN","(","SELECT","Employee_ID","FROM","evaluation",")"],"query_toks_no_value":["select","name","from","employee","where","employee_id","not","in","(","select","employee_id","from","evaluation",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Welches","sind","die","Namen","der","Angestellten",",","die","nie","eine","Evaluierung","erhielten","?"],"question":"Welches sind die Namen der Angestellten, die nie eine Evaluierung erhielten?"},{"db_id":"tvshow","query":"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";","query_toks":["SELECT","count","(","*",")","FROM","TV_Channel","WHERE","LANGUAGE","=","``","English","''",";"],"query_toks_no_value":["select","count","(","*",")","from","tv_channel","where","language","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"English\"",null]]},"question_toks":["Wie","viele","Fernsehsender","verwenden","Englisch","?"],"question":"Wie viele Fernsehsender verwenden Englisch?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id ,  document_name ,  document_description FROM Documents","query_toks":["SELECT","document_id",",","document_name",",","document_description","FROM","Documents"],"query_toks_no_value":["select","document_id",",","document_name",",","document_description","from","documents"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Stellen","Sie","Dokument-IDs",",","Dokumentnamen","und","Dokumentbeschreibungen","f\u00fcr","alle","Dokumente","auf","."],"question":"Stellen Sie Dokument-IDs, Dokumentnamen und Dokumentbeschreibungen f\u00fcr alle Dokumente auf."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"","query_toks":["SELECT","template_type_description","FROM","Ref_template_types","WHERE","template_type_code","=","``","AD","''"],"query_toks_no_value":["select","template_type_description","from","ref_template_types","where","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,1,false],null],"\"AD\"",null]]},"question_toks":["Rufen","Sie","die","Vorlagentypbeschreibung","des","Vorlagentyps","mit","dem","Code","AD","zur\u00fcck","."],"question":"Rufen Sie die Vorlagentypbeschreibung des Vorlagentyps mit dem Code AD zur\u00fcck."},{"db_id":"orchestra","query":"SELECT Name FROM conductor ORDER BY Year_of_Work DESC","query_toks":["SELECT","Name","FROM","conductor","ORDER","BY","Year_of_Work","DESC"],"query_toks_no_value":["select","name","from","conductor","order","by","year_of_work","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Namen","der","Dirigenten",",","absteigend","sortiert","nach","der","Anzahl","der","Jahre",",","in","denen","sie","gearbeitet","haben","?"],"question":"Was sind die Namen der Dirigenten, absteigend sortiert nach der Anzahl der Jahre, in denen sie gearbeitet haben?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5","query_toks":["SELECT","version_number",",","template_type_code","FROM","Templates","WHERE","version_number",">","5"],"query_toks_no_value":["select","version_number",",","template_type_code","from","templates","where","version_number",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],5.0,null]]},"question_toks":["Gib","die","Versionsnummern","und","Vorlagentypen-Codes","wieder","von","Vorlagen","mit","einer","Versionsnummer","gr\u00f6\u00dfer","als","f\u00fcnf","."],"question":"Gib die Versionsnummern und Vorlagentypen-Codes wieder von Vorlagen mit einer Versionsnummer gr\u00f6\u00dfer als f\u00fcnf."},{"db_id":"car_1","query":"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;","query_toks":["SELECT","max","(","Accelerate",")",",","Cylinders","FROM","CARS_DATA","GROUP","BY","Cylinders",";"],"query_toks_no_value":["select","max","(","accelerate",")",",","cylinders","from","cars_data","group","by","cylinders"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,22,false],null]],[0,[0,[0,18,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","die","maximale","Beschleunigung","f\u00fcr","alle","der","verschiedenen","Zylinder","?"],"question":"Wie hoch ist die maximale Beschleunigung f\u00fcr alle der verschiedenen Zylinder?"},{"db_id":"tvshow","query":"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";","query_toks":["SELECT","T1.series_name","FROM","TV_Channel","AS","T1","JOIN","TV_series","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.Episode","=","``","A","Love","of","a","Lifetime","''",";"],"query_toks_no_value":["select","t1",".","series_name","from","tv_channel","as","t1","join","tv_series","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","episode","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,18,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"A Love of a Lifetime\"",null]]},"question_toks":["``","Was","ist","der","TV-Kanal","einer","Fernsehserie","mit","der","Episode","``","''","Eine","Liebe","f\u00fcrs","Leben","''","''","?","F\u00fchren","Sie","den","Namen","des","TV-Kanals","der","Serie","auf","''","."],"question":"\"Was ist der TV-Kanal einer Fernsehserie mit der Episode \"\"Eine Liebe f\u00fcrs Leben\"\"? F\u00fchren Sie den Namen des TV-Kanals der Serie auf\"."},{"db_id":"world_1","query":"SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","LANGUAGE","FROM","countrylanguage","GROUP","BY","LANGUAGE","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","language","from","countrylanguage","group","by","language","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,24,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","die","Sprache","an",",","die","in","den","meisten","L\u00e4ndern","gesprochen","wird","."],"question":"Geben Sie die Sprache an, die in den meisten L\u00e4ndern gesprochen wird."},{"db_id":"voter_1","query":"SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )","query_toks":["SELECT","count","(","*",")","FROM","contestants","WHERE","contestant_number","NOT","IN","(","SELECT","contestant_number","FROM","votes",")"],"query_toks_no_value":["select","count","(","*",")","from","contestants","where","contestant_number","not","in","(","select","contestant_number","from","votes",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,3,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","viele","Wettbewerber","wurden","nicht","gew\u00e4hlt","?"],"question":"Wie viele Wettbewerber wurden nicht gew\u00e4hlt?"},{"db_id":"wta_1","query":"SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016","query_toks":["SELECT","winner_name","FROM","matches","WHERE","YEAR","=","2013","INTERSECT","SELECT","winner_name","FROM","matches","WHERE","YEAR","=","2016"],"query_toks_no_value":["select","winner_name","from","matches","where","year","=","value","intersect","select","winner_name","from","matches","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],2016.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],2013.0,null]]},"question_toks":["Liste","die","Namen","aller","Gewinner","auf",",","die","beide",",","2013","und","2016",",","gespielt","haben","."],"question":"Liste die Namen aller Gewinner auf, die beide, 2013 und 2016, gespielt haben."},{"db_id":"wta_1","query":"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","query_toks":["SELECT","avg","(","ranking",")",",","T1.first_name","FROM","players","AS","T1","JOIN","rankings","AS","T2","ON","T1.player_id","=","T2.player_id","GROUP","BY","T1.first_name"],"query_toks_no_value":["select","avg","(","ranking",")",",","t1",".","first_name","from","players","as","t1","join","rankings","as","t2","on","t1",".","player_id","=","t2",".","player_id","group","by","t1",".","first_name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,41,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,40,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Vornamen","aller","Spieler","und","ihre","durchschnittliche","Rangordnung","?"],"question":"Wie lauten die Vornamen aller Spieler und ihre durchschnittliche Rangordnung?"},{"db_id":"dog_kennels","query":"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.owner_id",",","T1.last_name","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id","JOIN","Treatments","AS","T3","ON","T2.dog_id","=","T3.dog_id","GROUP","BY","T1.owner_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","owner_id",",","t1",".","last_name","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","join","treatments","as","t3","on","t2",".","dog_id","=","t3",".","dog_id","group","by","t1",".","owner_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Besitzer","hat","f\u00fcr","die","meisten","Behandlungen","seiner","Hunde","bezahlt","?","Geben","Sie","die","Besitzer-ID","und","den","Nachnamen","an","."],"question":"Welcher Besitzer hat f\u00fcr die meisten Behandlungen seiner Hunde bezahlt? Geben Sie die Besitzer-ID und den Nachnamen an."},{"db_id":"concert_singer","query":"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","query_toks":["SELECT","song_name",",","song_release_year","FROM","singer","ORDER","BY","age","LIMIT","1"],"query_toks_no_value":["select","song_name",",","song_release_year","from","singer","order","by","age","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","den","Namen","und","das","Ver\u00f6ffentlichungsdatum","des","Liedes","des","j\u00fcngsten","S\u00e4ngers","."],"question":"Zeige den Namen und das Ver\u00f6ffentlichungsdatum des Liedes des j\u00fcngsten S\u00e4ngers."},{"db_id":"student_transcripts_tracking","query":"SELECT other_student_details FROM Students ORDER BY other_student_details DESC","query_toks":["SELECT","other_student_details","FROM","Students","ORDER","BY","other_student_details","DESC"],"query_toks_no_value":["select","other_student_details","from","students","order","by","other_student_details","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,43,false],null]]],"select":[false,[[0,[0,[0,43,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","weiteren","Details","kannst","du","mir","nennen","von","Studenten","in","umgekehrter","alphabetischer","Reihenfolge","?"],"question":"Welche weiteren Details kannst du mir nennen von Studenten in umgekehrter alphabetischer Reihenfolge?"},{"db_id":"network_1","query":"SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"","query_toks":["SELECT","ID","FROM","Highschooler","WHERE","name","=","``","Kyle","''"],"query_toks_no_value":["select","id","from","highschooler","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Weisen","Sie","den","Ausweis","des","Sch\u00fclers","namens","Kyle","vor","."],"question":"Weisen Sie den Ausweis des Sch\u00fclers namens Kyle vor."},{"db_id":"course_teach","query":"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name","query_toks":["SELECT","T2.Name",",","COUNT","(","*",")","FROM","course_arrange","AS","T1","JOIN","teacher","AS","T2","ON","T1.Teacher_ID","=","T2.Teacher_ID","GROUP","BY","T2.Name"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","course_arrange","as","t1","join","teacher","as","t2","on","t1",".","teacher_id","=","t2",".","teacher_id","group","by","t2",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,4,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["F\u00fchren","Sie","die","Namen","der","Lehrer","und","die","Anzahl","der","Kurse","an",",","die","sie","unterrichten","."],"question":"F\u00fchren Sie die Namen der Lehrer und die Anzahl der Kurse an, die sie unterrichten."},{"db_id":"wta_1","query":"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date","query_toks":["SELECT","first_name",",","last_name","FROM","players","WHERE","hand","=","'L","'","ORDER","BY","birth_date"],"query_toks_no_value":["select","first_name",",","last_name","from","players","where","hand","=","value","order","by","birth_date"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"L\"",null]]},"question_toks":["Welches","sind","die","vollst\u00e4ndigen","Namen","aller","linksh\u00e4ndigen","Spieler","in","der","Reihenfolge","ihres","Geburtsdatums","?"],"question":"Welches sind die vollst\u00e4ndigen Namen aller linksh\u00e4ndigen Spieler in der Reihenfolge ihres Geburtsdatums?"},{"db_id":"flight_2","query":"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","query_toks":["SELECT","T1.Abbreviation",",","T1.Country","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","GROUP","BY","T1.Airline","ORDER","BY","count","(","*",")","LIMIT","1"],"query_toks_no_value":["select","t1",".","abbreviation",",","t1",".","country","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","group","by","t1",".","airline","order","by","count","(","*",")","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Suchen","Sie","das","Abk\u00fcrzungen","und","das","Land","der","Fluggesellschaft","mit","der","geringsten","Anzahl","von","Fl\u00fcgen","?"],"question":"Suchen Sie das Abk\u00fcrzungen und das Land der Fluggesellschaft mit der geringsten Anzahl von Fl\u00fcgen?"},{"db_id":"car_1","query":"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","query_toks":["SELECT","T2.Make",",","T1.Year","FROM","CARS_DATA","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Id","=","T2.MakeId","WHERE","T1.Year","=","(","SELECT","min","(","YEAR",")","FROM","CARS_DATA",")",";"],"query_toks_no_value":["select","t2",".","make",",","t1",".","year","from","cars_data","as","t1","join","car_names","as","t2","on","t1",".","id","=","t2",".","makeid","where","t1",".","year","=","(","select","min","(","year",")","from","cars_data",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,13,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,23,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Suchen","Sie","die","Modelle","und","die","Herstellungszeit","der","Autos",",","die","im","fr\u00fchesten","Jahr","gefertigt","wurden","?"],"question":"Suchen Sie die Modelle und die Herstellungszeit der Autos, die im fr\u00fchesten Jahr gefertigt wurden?"},{"db_id":"car_1","query":"SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;","query_toks":["SELECT","count","(","*",")","FROM","CARS_DATA","WHERE","Cylinders",">","4",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","cylinders",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],4.0,null]]},"question_toks":["Wie","viele","Autos","verf\u00fcgen","\u00fcber","mehr","als","4","Zylinder","?"],"question":"Wie viele Autos verf\u00fcgen \u00fcber mehr als 4 Zylinder?"},{"db_id":"tvshow","query":"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","query_toks":["SELECT","count","(","*",")",",","Directed_by","FROM","cartoon","GROUP","BY","Directed_by"],"query_toks_no_value":["select","count","(","*",")",",","directed_by","from","cartoon","group","by","directed_by"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,21,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,21,false],null]]]],"union":null,"where":[]},"question_toks":["Ermitteln","Sie","die","Anzahl","der","Karikaturen",",","die","von","jedem","der","aufgef\u00fchrten","Direktoren","gedreht","wurden","."],"question":"Ermitteln Sie die Anzahl der Karikaturen, die von jedem der aufgef\u00fchrten Direktoren gedreht wurden."},{"db_id":"tvshow","query":"SELECT Title FROM Cartoon ORDER BY title","query_toks":["SELECT","Title","FROM","Cartoon","ORDER","BY","title"],"query_toks_no_value":["select","title","from","cartoon","order","by","title"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Listen","Sie","die","Titel","aller","Karikaturen","in","alphabetischer","Reihenfolge","auf","."],"question":"Listen Sie die Titel aller Karikaturen in alphabetischer Reihenfolge auf."},{"db_id":"world_1","query":"SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"","query_toks":["SELECT","sum","(","SurfaceArea",")","FROM","country","WHERE","Region","=","``","Caribbean","''"],"query_toks_no_value":["select","sum","(","surfacearea",")","from","country","where","region","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Caribbean\"",null]]},"question_toks":["Wie","gro\u00df","ist","die","Fl\u00e4che",",","die","die","L\u00e4nder","der","Karibik","zusammen","bedecken","?"],"question":"Wie gro\u00df ist die Fl\u00e4che, die die L\u00e4nder der Karibik zusammen bedecken?"},{"db_id":"course_teach","query":"SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)","query_toks":["SELECT","Name","FROM","teacher","WHERE","Teacher_id","NOT","IN","(","SELECT","Teacher_id","FROM","course_arrange",")"],"query_toks_no_value":["select","name","from","teacher","where","teacher_id","not","in","(","select","teacher_id","from","course_arrange",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[true,8,[0,[0,4,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Erw\u00e4hnen","Sie","die","Namen","von","Lehrkr\u00e4ften",",","die","nicht","f\u00fcr","die","Durchf\u00fchrung","von","Kursen","eingeteilt","wurden","."],"question":"Erw\u00e4hnen Sie die Namen von Lehrkr\u00e4ften, die nicht f\u00fcr die Durchf\u00fchrung von Kursen eingeteilt wurden."},{"db_id":"car_1","query":"SELECT Maker ,  Model FROM MODEL_LIST;","query_toks":["SELECT","Maker",",","Model","FROM","MODEL_LIST",";"],"query_toks_no_value":["select","maker",",","model","from","model_list"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Hersteller","und","Modelle","?"],"question":"Was sind die Hersteller und Modelle?"},{"db_id":"world_1","query":"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"","query_toks":["SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","AND","T2.IsOfficial","=","``","T","''","INTERSECT","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","French","''","AND","T2.IsOfficial","=","``","T","''"],"query_toks_no_value":["select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","t2",".","isofficial","=","value","intersect","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","t2",".","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"French\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Wie","lauten","die","Namen","von","Nationen",",","in","denen","sowohl","Englisch","als","auch","Franz\u00f6sisch","Amtssprachen","sind","?"],"question":"Wie lauten die Namen von Nationen, in denen sowohl Englisch als auch Franz\u00f6sisch Amtssprachen sind?"},{"db_id":"poker_player","query":"SELECT Earnings FROM poker_player ORDER BY Earnings DESC","query_toks":["SELECT","Earnings","FROM","poker_player","ORDER","BY","Earnings","DESC"],"query_toks_no_value":["select","earnings","from","poker_player","order","by","earnings","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Was","verdienen","die","Pokerspieler",",","absteigend","nach","Wert","geordnet","?"],"question":"Was verdienen die Pokerspieler, absteigend nach Wert geordnet?"},{"db_id":"tvshow","query":"SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";","query_toks":["SELECT","Content","FROM","TV_Channel","WHERE","series_name","=","``","Sky","Radio","''",";"],"query_toks_no_value":["select","content","from","tv_channel","where","series_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Sky Radio\"",null]]},"question_toks":["``","Was","ist","der","Inhalt","des","TV-Kanals","mit","der","Serienbezeichnung","``","''","Sky","Radio","''","''","?"],"question":"\"Was ist der Inhalt des TV-Kanals mit der Serienbezeichnung \"\"Sky Radio\"\"?"},{"db_id":"employee_hire_evaluation","query":"SELECT * FROM hiring","query_toks":["SELECT","*","FROM","hiring"],"query_toks_no_value":["select","*","from","hiring"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","alle","Informationen","\u00fcber","Einstellungen","?"],"question":"Wie lauten alle Informationen \u00fcber Einstellungen? "},{"db_id":"network_1","query":"SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id","query_toks":["SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","INTERSECT","SELECT","T2.name","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.liked_id","=","T2.id"],"query_toks_no_value":["select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","intersect","select","t2",".","name","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","liked_id","=","t2",".","id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","von","Gymnasiasten",",","die","sowohl","Freunde","haben","als","auch","gemocht","werden","?"],"question":"Wie lauten die Namen von Gymnasiasten, die sowohl Freunde haben als auch gemocht werden?"},{"db_id":"museum_visit","query":"SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)","query_toks":["SELECT","name","FROM","museum","WHERE","num_of_staff",">","(","SELECT","min","(","num_of_staff",")","FROM","museum","WHERE","open_year",">","2010",")"],"query_toks_no_value":["select","name","from","museum","where","num_of_staff",">","(","select","min","(","num_of_staff",")","from","museum","where","open_year",">","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,3,[0,[0,3,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,3,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],2010.0,null]]},null]]},"question_toks":["Finde","die","Namen","der","Museen",",","die","mehr","Personal","haben","als","die","Mindestpersonalzahl","aller","nach","2010","er\u00f6ffneten","Museen","."],"question":"Finde die Namen der Museen, die mehr Personal haben als die Mindestpersonalzahl aller nach 2010 er\u00f6ffneten Museen. "},{"db_id":"world_1","query":"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1","query_toks":["SELECT","T2.Language","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.Continent","=","``","Asia","''","GROUP","BY","T2.Language","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","language","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","continent","=","value","group","by","t2",".","language","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,24,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Welche","Sprache","ist","die","beliebteste","auf","dem","asiatischen","Kontinent","?"],"question":"Welche Sprache ist die beliebteste auf dem asiatischen Kontinent?"},{"db_id":"flight_2","query":"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"","query_toks":["SELECT","FlightNo","FROM","FLIGHTS","WHERE","DestAirport","=","``","APG","''"],"query_toks_no_value":["select","flightno","from","flights","where","destairport","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"APG\"",null]]},"question_toks":["Wie","sind","die","Flugnummern","der","am","Flughafen","``","APG","''","ankommenden","Fl\u00fcge","?"],"question":"Wie sind die Flugnummern der am Flughafen \"APG\" ankommenden Fl\u00fcge?"},{"db_id":"concert_singer","query":"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","query_toks":["SELECT","T2.name",",","T2.location","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","WHERE","T1.Year","=","2014","INTERSECT","SELECT","T2.name",",","T2.location","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","WHERE","T1.Year","=","2015"],"query_toks_no_value":["select","t2",".","name",",","t2",".","location","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","where","t1",".","year","=","value","intersect","select","t2",".","name",",","t2",".","location","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","where","t1",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2015.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2014.0,null]]},"question_toks":["Finden","Sie","den","Namen","und","den","Standort","der","Stadien",",","in","denen","einige","Konzerte","in","den","Jahren","2014","und","2015","stattfanden","."],"question":"Finden Sie den Namen und den Standort der Stadien, in denen einige Konzerte in den Jahren 2014 und 2015 stattfanden."},{"db_id":"flight_2","query":"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"","query_toks":["SELECT","FlightNo","FROM","FLIGHTS","WHERE","DestAirport","=","``","APG","''"],"query_toks_no_value":["select","flightno","from","flights","where","destairport","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"APG\"",null]]},"question_toks":["Geben","Sie","die","Flugnummern","der","bei","der","APG","landenden","Fl\u00fcge","an","."],"question":"Geben Sie die Flugnummern der bei der APG landenden Fl\u00fcge an."},{"db_id":"singer","query":"SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship","query_toks":["SELECT","Citizenship",",","COUNT","(","*",")","FROM","singer","GROUP","BY","Citizenship"],"query_toks_no_value":["select","citizenship",",","count","(","*",")","from","singer","group","by","citizenship"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","S\u00e4ngerinnen","und","S\u00e4nger","kommen","f\u00fcr","jede","Staatsb\u00fcrgerschaft","aus","diesem","Land","?"],"question":"Wie viele S\u00e4ngerinnen und S\u00e4nger kommen f\u00fcr jede Staatsb\u00fcrgerschaft aus diesem Land? "},{"db_id":"pets_1","query":"SELECT count(DISTINCT pettype) FROM pets","query_toks":["SELECT","count","(","DISTINCT","pettype",")","FROM","pets"],"query_toks_no_value":["select","count","(","distinct","pettype",")","from","pets"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,12,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Arten","von","Haustieren","gibt","es","?"],"question":"Wie viele verschiedene Arten von Haustieren gibt es?"},{"db_id":"car_1","query":"SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)","query_toks":["SELECT","T1.model","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","WHERE","T2.Weight","<","(","SELECT","avg","(","Weight",")","FROM","CARS_DATA",")"],"query_toks_no_value":["select","t1",".","model","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","where","t2",".","weight","<","(","select","avg","(","weight",")","from","cars_data",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,4,[0,[0,21,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,21,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finden","Sie","das","Modell","des","Autos",",","dessen","Gewicht","unter","dem","Durchschnittsgewicht","liegt","."],"question":"Finden Sie das Modell des Autos, dessen Gewicht unter dem Durchschnittsgewicht liegt."},{"db_id":"student_transcripts_tracking","query":"SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs","query_toks":["SELECT","count","(","DISTINCT","degree_summary_name",")","FROM","Degree_Programs"],"query_toks_no_value":["select","count","(","distinct","degree_summary_name",")","from","degree_programs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,20,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Abschlussnamen","werden","angeboten","?"],"question":"Wie viele verschiedene Abschlussnamen werden angeboten?"},{"db_id":"concert_singer","query":"SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1","query_toks":["SELECT","count","(","*",")","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","ORDER","BY","T2.Capacity","DESC","LIMIT","1"],"query_toks_no_value":["select","count","(","*",")","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","order","by","t2",".","capacity","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,4,false],null]]],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Konzerte","fanden","in","dem","Stadion","mit","der","gr\u00f6\u00dften","Kapazit\u00e4t","statt","?"],"question":"Wie viele Konzerte fanden in dem Stadion mit der gr\u00f6\u00dften Kapazit\u00e4t statt?"},{"db_id":"flight_2","query":"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"","query_toks":["SELECT","AirportName","FROM","AIRPORTS","WHERE","AirportCode","=","``","AKO","''"],"query_toks_no_value":["select","airportname","from","airports","where","airportcode","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"AKO\"",null]]},"question_toks":["Gib","den","Namen","des","Flughafens","mit","dem","Code","'AKO","'","wieder","."],"question":"Gib den Namen des Flughafens mit dem Code 'AKO' wieder."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","query_toks":["SELECT","T1.document_id",",","T2.document_name",",","count","(","*",")","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_id","=","T2.document_id","GROUP","BY","T1.document_id"],"query_toks_no_value":["select","t1",".","document_id",",","t2",".","document_name",",","count","(","*",")","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","group","by","t1",".","document_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,11,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Alle","Dokument-IDs",",","Namen","und","die","Anzahl","der","Abs\u00e4tze","in","jedem","Dokument","anzeigen","."],"question":"Alle Dokument-IDs, Namen und die Anzahl der Abs\u00e4tze in jedem Dokument anzeigen."},{"db_id":"concert_singer","query":"SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)","query_toks":["SELECT","name","FROM","stadium","WHERE","stadium_id","NOT","IN","(","SELECT","stadium_id","FROM","concert",")"],"query_toks_no_value":["select","name","from","stadium","where","stadium_id","not","in","(","select","stadium_id","from","concert",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","lauten","die","Namen","der","Stadien",",","in","denen","keine","Konzerte","stattfinden","?"],"question":"Wie lauten die Namen der Stadien, in denen keine Konzerte stattfinden?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"","query_toks":["SELECT","count","(","*",")","FROM","Templates","WHERE","template_type_code","=","``","CV","''"],"query_toks_no_value":["select","count","(","*",")","from","templates","where","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"CV\"",null]]},"question_toks":["Wie","viele","Vorlagen","haben","den","Vorlagentyp","Code","CV","?"],"question":"Wie viele Vorlagen haben den Vorlagentyp Code CV?"},{"db_id":"world_1","query":"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","query_toks":["SELECT","Name",",","SurfaceArea","FROM","country","ORDER","BY","SurfaceArea","DESC","LIMIT","5"],"query_toks_no_value":["select","name",",","surfacearea","from","country","order","by","surfacearea","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":5,"orderBy":["desc",[[0,[0,12,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","und","Gebiete","der","L\u00e4nder","mit","den","5","gr\u00f6\u00dften","Gebieten","?"],"question":"Wie lauten die Namen und Gebiete der L\u00e4nder mit den 5 gr\u00f6\u00dften Gebieten?"},{"db_id":"singer","query":"SELECT count(*) FROM singer","query_toks":["SELECT","count","(","*",")","FROM","singer"],"query_toks_no_value":["select","count","(","*",")","from","singer"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","S\u00e4ngerInnen","sind","vorhanden","?"],"question":"Wie viele S\u00e4ngerInnen sind vorhanden?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"","query_toks":["SELECT","document_id",",","template_id",",","Document_Description","FROM","Documents","WHERE","document_name","=","``","Robbin","CV","''"],"query_toks_no_value":["select","document_id",",","template_id",",","document_description","from","documents","where","document_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Robbin CV\"",null]]},"question_toks":["``","Wie","lauten","die","Dokument-ID",",","die","Vorlagen-ID","und","die","Beschreibung","f\u00fcr","ein","Dokument","mit","dem","Namen","``","''","Robbin","CV","''","''","?"],"question":"\"Wie lauten die Dokument-ID, die Vorlagen-ID und die Beschreibung f\u00fcr ein Dokument mit dem Namen \"\"Robbin CV\"\"?"},{"db_id":"poker_player","query":"SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Nationality","FROM","people","GROUP","BY","Nationality","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","nationality","from","people","group","by","nationality","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","die","Nationalit\u00e4t","an",",","die","bei","allen","Menschen","am","h\u00e4ufigsten","anzutreffen","ist","."],"question":"Geben Sie die Nationalit\u00e4t an, die bei allen Menschen am h\u00e4ufigsten anzutreffen ist."},{"db_id":"concert_singer","query":"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","query_toks":["SELECT","name",",","capacity","FROM","stadium","ORDER","BY","average","DESC","LIMIT","1"],"query_toks_no_value":["select","name",",","capacity","from","stadium","order","by","average","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,7,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Name","und","die","Kapazit\u00e4t","des","Stadions","mit","der","h\u00f6chsten","durchschnittlichen","Besucherzahl","?"],"question":"Wie lautet der Name und die Kapazit\u00e4t des Stadions mit der h\u00f6chsten durchschnittlichen Besucherzahl?"},{"db_id":"flight_2","query":"SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.City","FROM","AIRPORTS","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.AirportCode","=","T2.SourceAirport","GROUP","BY","T1.City","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","city","from","airports","as","t1","join","flights","as","t2","on","t1",".","airportcode","=","t2",".","sourceairport","group","by","t1",".","city","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,12,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Stadt","ist","der","h\u00e4ufigste","Herkunftsflughafen","?"],"question":"Welche Stadt ist der h\u00e4ufigste Herkunftsflughafen?"},{"db_id":"world_1","query":"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"","query_toks":["SELECT","sum","(","SurfaceArea",")","FROM","country","WHERE","Continent","=","``","Asia","''","OR","Continent","=","``","Europe","''"],"query_toks_no_value":["select","sum","(","surfacearea",")","from","country","where","continent","=","value","or","continent","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null],"or",[false,2,[0,[0,10,false],null],"\"Europe\"",null]]},"question_toks":["Was","ist","die","Gesamtfl\u00e4che","der","Kontinente","Asien","und","Europa","?"],"question":"Was ist die Gesamtfl\u00e4che der Kontinente Asien und Europa?"},{"db_id":"tvshow","query":"SELECT Title FROM Cartoon ORDER BY title","query_toks":["SELECT","Title","FROM","Cartoon","ORDER","BY","title"],"query_toks_no_value":["select","title","from","cartoon","order","by","title"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Titel","der","Karikaturen","in","alphabetischer","Reihenfolge","?"],"question":"Was sind die Titel der Karikaturen in alphabetischer Reihenfolge?"},{"db_id":"poker_player","query":"SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC","query_toks":["SELECT","T1.Name","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T2.Earnings","DESC"],"query_toks_no_value":["select","t1",".","name","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t2",".","earnings","desc"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","die","Namen","der","Pokerspieler","absteigend","sortiert","nach","ihrem","Verdienst","wieder","."],"question":"Gib die Namen der Pokerspieler absteigend sortiert nach ihrem Verdienst wieder."},{"db_id":"dog_kennels","query":"SELECT count(DISTINCT professional_id) FROM Treatments","query_toks":["SELECT","count","(","DISTINCT","professional_id",")","FROM","Treatments"],"query_toks_no_value":["select","count","(","distinct","professional_id",")","from","treatments"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,46,true],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","die","Anzahl","der","Fachleute","an",",","die","jemals","Hunde","behandelt","haben","."],"question":"Geben Sie die Anzahl der Fachleute an, die jemals Hunde behandelt haben."},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS"],"query_toks_no_value":["select","count","(","*",")","from","flights"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Fl\u00fcge","haben","wir","?"],"question":"Wie viele Fl\u00fcge haben wir?"},{"db_id":"concert_singer","query":"SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.name",",","T2.capacity","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","WHERE","T1.year",">","=","2014","GROUP","BY","T2.stadium_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name",",","t2",".","capacity","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","where","t1",".","year",">","=","value","group","by","t2",".","stadium_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,5,[0,[0,19,false],null],2014.0,null]]},"question_toks":["Wie","lautet","der","Name","und","die","Kapazit\u00e4t","des","Stadions","mit","den","meisten","Konzerten","nach","2013","?"],"question":"Wie lautet der Name und die Kapazit\u00e4t des Stadions mit den meisten Konzerten nach 2013?"},{"db_id":"orchestra","query":"SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1","query_toks":["SELECT","Year_of_Founded","FROM","orchestra","AS","T1","JOIN","performance","AS","T2","ON","T1.Orchestra_ID","=","T2.Orchestra_ID","GROUP","BY","T2.Orchestra_ID","HAVING","COUNT","(","*",")",">","1"],"query_toks_no_value":["select","year_of_founded","from","orchestra","as","t1","join","performance","as","t2","on","t1",".","orchestra_id","=","t2",".","orchestra_id","group","by","t2",".","orchestra_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,13,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,13,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","Gr\u00fcndungsjahre","von","Orchestern",",","die","mehr","als","eine","einzige","Auff\u00fchrung","erlebt","haben","?"],"question":"Was sind Gr\u00fcndungsjahre von Orchestern, die mehr als eine einzige Auff\u00fchrung erlebt haben?"},{"db_id":"poker_player","query":"SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1","query_toks":["SELECT","T2.Money_Rank","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T1.Height","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","money_rank","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t1",".","height","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","der","Geldrang","des","h\u00f6chsten","Pokerspielers","?"],"question":"Was ist der Geldrang des h\u00f6chsten Pokerspielers?"},{"db_id":"orchestra","query":"SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1","query_toks":["SELECT","Name","FROM","conductor","ORDER","BY","Year_of_Work","DESC","LIMIT","1"],"query_toks_no_value":["select","name","from","conductor","order","by","year_of_work","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Name","des","Dirigenten",",","der","die","meisten","Jahre","gearbeitet","hat","?"],"question":"Wie lautet der Name des Dirigenten, der die meisten Jahre gearbeitet hat?"},{"db_id":"car_1","query":"SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;","query_toks":["SELECT","T1.Id",",","T1.Maker","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","GROUP","BY","T1.Id","HAVING","count","(","*",")",">","=","2","INTERSECT","SELECT","T1.Id",",","T1.Maker","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","JOIN","CAR_NAMES","AS","T3","ON","T2.model","=","T3.model","GROUP","BY","T1.Id","HAVING","count","(","*",")",">","3",";"],"query_toks_no_value":["select","t1",".","id",",","t1",".","maker","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","group","by","t1",".","id","having","count","(","*",")",">","=","value","intersect","select","t1",".","id",",","t1",".","maker","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","join","car_names","as","t3","on","t2",".","model","=","t3",".","model","group","by","t1",".","id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[[false,3,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Identit\u00e4ten","und","Hersteller","aller","Autohersteller",",","die","mindestens","2","Modelle","und","mehr","als","3","Autos","herstellen","?"],"question":"Was sind die Identit\u00e4ten und Hersteller aller Autohersteller, die mindestens 2 Modelle und mehr als 3 Autos herstellen?"},{"db_id":"orchestra","query":"SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC","query_toks":["SELECT","Record_Company","FROM","orchestra","ORDER","BY","Year_of_Founded","DESC"],"query_toks_no_value":["select","record_company","from","orchestra","order","by","year_of_founded","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,10,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","die","Plattenfirmen","von","Orchestern","aus",",","sortiert","nach","ihren","Gr\u00fcndungsjahren","."],"question":"Gib die Plattenfirmen von Orchestern aus, sortiert nach ihren Gr\u00fcndungsjahren."},{"db_id":"wta_1","query":"SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016","query_toks":["SELECT","count","(","*",")","FROM","matches","WHERE","YEAR","=","2013","OR","YEAR","=","2016"],"query_toks_no_value":["select","count","(","*",")","from","matches","where","year","=","value","or","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],2013.0,null],"or",[false,2,[0,[0,38,false],null],2016.0,null]]},"question_toks":["Wie","viele","Partien","wurden","2013","oder","2016","ausgetragen","?"],"question":"Wie viele Partien wurden 2013 oder 2016 ausgetragen?"},{"db_id":"dog_kennels","query":"SELECT max(charge_amount) FROM Charges","query_toks":["SELECT","max","(","charge_amount",")","FROM","Charges"],"query_toks_no_value":["select","max","(","charge_amount",")","from","charges"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","der","Belastungsbetrag","f\u00fcr","den","teuersten","Belastungstyp","?"],"question":"Welches ist der Belastungsbetrag f\u00fcr den teuersten Belastungstyp?"},{"db_id":"network_1","query":"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"","query_toks":["SELECT","count","(","*",")","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","WHERE","T2.name","=","``","Kyle","''"],"query_toks_no_value":["select","count","(","*",")","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Wie","viele","Gesinnungen","hat","Kyle","?"],"question":"Wie viele Gesinnungen hat Kyle?"},{"db_id":"museum_visit","query":"SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)","query_toks":["SELECT","count","(","*",")","FROM","visitor","WHERE","id","NOT","IN","(","SELECT","t2.visitor_id","FROM","museum","AS","t1","JOIN","visit","AS","t2","ON","t1.Museum_ID","=","t2.Museum_ID","WHERE","t1.open_year",">","2010",")"],"query_toks_no_value":["select","count","(","*",")","from","visitor","where","id","not","in","(","select","t2",".","visitor_id","from","museum","as","t1","join","visit","as","t2","on","t1",".","museum_id","=","t2",".","museum_id","where","t1",".","open_year",">","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,5,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],2010.0,null]]},null]]},"question_toks":["Finde","die","Anzahl","der","Besucher",",","die","kein","nach","2010","er\u00f6ffnetes","Museum","besucht","haben","."],"question":"Finde die Anzahl der Besucher, die kein nach 2010 er\u00f6ffnetes Museum besucht haben."},{"db_id":"poker_player","query":"SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1","query_toks":["SELECT","Money_Rank","FROM","poker_player","ORDER","BY","Earnings","DESC","LIMIT","1"],"query_toks_no_value":["select","money_rank","from","poker_player","order","by","earnings","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","der","Geldrang","des","Pokerspielers","mit","dem","h\u00f6chsten","Verdienst","?"],"question":"Was ist der Geldrang des Pokerspielers mit dem h\u00f6chsten Verdienst?"},{"db_id":"employee_hire_evaluation","query":"SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC","query_toks":["SELECT","name",",","LOCATION",",","district","FROM","shop","ORDER","BY","number_products","DESC"],"query_toks_no_value":["select","name",",","location",",","district","from","shop","order","by","number_products","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Rufen","Sie","den","Namen",",","den","Standort","und","den","Bezirk","aller","Gesch\u00e4fte","in","absteigender","Reihenfolge","der","Anzahl","der","Produkte","ab","."],"question":"Rufen Sie den Namen, den Standort und den Bezirk aller Gesch\u00e4fte in absteigender Reihenfolge der Anzahl der Produkte ab."},{"db_id":"pets_1","query":"SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'","query_toks":["SELECT","stuid","FROM","student","EXCEPT","SELECT","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'"],"query_toks_no_value":["select","stuid","from","student","except","select","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","IDs","der","Studierenden",",","die","keine","Katzen","als","Haustiere","besitzen","?"],"question":"Was sind die IDs der Studierenden, die keine Katzen als Haustiere besitzen?"},{"db_id":"car_1","query":"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;","query_toks":["SELECT","max","(","Accelerate",")",",","Cylinders","FROM","CARS_DATA","GROUP","BY","Cylinders",";"],"query_toks_no_value":["select","max","(","accelerate",")",",","cylinders","from","cars_data","group","by","cylinders"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,22,false],null]],[0,[0,[0,18,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","maximale","Beschleunigung","f\u00fcr","verschiedene","Zylinderzahlen","?"],"question":"Was ist die maximale Beschleunigung f\u00fcr verschiedene Zylinderzahlen?"},{"db_id":"employee_hire_evaluation","query":"SELECT count(*) ,  city FROM employee GROUP BY city","query_toks":["SELECT","count","(","*",")",",","city","FROM","employee","GROUP","BY","city"],"query_toks_no_value":["select","count","(","*",")",",","city","from","employee","group","by","city"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","die","Zahl","der","Angestellten","aus","jeder","Stadt","?"],"question":"Wie hoch ist die Zahl der Angestellten aus jeder Stadt?"},{"db_id":"car_1","query":"SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;","query_toks":["SELECT","Count","(","*",")",",","T2.FullName",",","T2.id","FROM","MODEL_LIST","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.Maker","=","T2.Id","GROUP","BY","T2.id",";"],"query_toks_no_value":["select","count","(","*",")",",","t2",".","fullname",",","t2",".","id","from","model_list","as","t1","join","car_makers","as","t2","on","t1",".","maker","=","t2",".","id","group","by","t2",".","id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,8,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Automodelle","werden","von","jedem","Hersteller","gefertigt","?","Geben","Sie","die","Anzahl","und","den","vollst\u00e4ndigen","Namen","des","Herstellers","an","."],"question":"Wie viele Automodelle werden von jedem Hersteller gefertigt? Geben Sie die Anzahl und den vollst\u00e4ndigen Namen des Herstellers an."},{"db_id":"car_1","query":"SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;","query_toks":["SELECT","T2.MakeId",",","T2.Make","FROM","CARS_DATA","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Id","=","T2.MakeId","WHERE","T1.Horsepower",">","(","SELECT","min","(","Horsepower",")","FROM","CARS_DATA",")","AND","T1.Cylinders","<","=","3",";"],"query_toks_no_value":["select","t2",".","makeid",",","t2",".","make","from","cars_data","as","t1","join","car_names","as","t2","on","t1",".","id","=","t2",".","makeid","where","t1",".","horsepower",">","(","select","min","(","horsepower",")","from","cars_data",")","and","t1",".","cylinders","<","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,13,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,3,[0,[0,20,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,20,false],null]]]],"union":null,"where":[]},null],"and",[false,6,[0,[0,18,false],null],3.0,null]]},"question_toks":["Wie","hei\u00dfen","die","Autos",",","die","nicht","\u00fcber","die","Mindestleistung","verf\u00fcgen",",","die","Kennzeichen","und","Namen","mit","weniger","als","4","Zylindern","?"],"question":"Wie hei\u00dfen die Autos, die nicht \u00fcber die Mindestleistung verf\u00fcgen, die Kennzeichen und Namen mit weniger als 4 Zylindern?"},{"db_id":"wta_1","query":"SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'","query_toks":["SELECT","first_name",",","birth_date","FROM","players","WHERE","country_code","=","'USA","'"],"query_toks_no_value":["select","first_name",",","birth_date","from","players","where","country_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"USA\"",null]]},"question_toks":["Wie","lauten","die","Vornamen","und","Geburtsdaten","von","SpielerInnen","aus","den","USA","?"],"question":"Wie lauten die Vornamen und Geburtsdaten von SpielerInnen aus den USA?"},{"db_id":"car_1","query":"SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;","query_toks":["SELECT","T1.cylinders","FROM","CARS_DATA","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Id","=","T2.MakeId","WHERE","T2.Model","=","'volvo","'","ORDER","BY","T1.accelerate","ASC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","cylinders","from","cars_data","as","t1","join","car_names","as","t2","on","t1",".","id","=","t2",".","makeid","where","t2",".","model","=","value","order","by","t1",".","accelerate","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,13,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,22,false],null]]],"select":[false,[[0,[0,[0,18,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"volvo\"",null]]},"question_toks":["Wie","viele","Zylinder","hat","das","Auto","mit","der","geringsten","Beschleunigung","beim","Volvo-Modell","?"],"question":"Wie viele Zylinder hat das Auto mit der geringsten Beschleunigung beim Volvo-Modell?"},{"db_id":"orchestra","query":"SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008","query_toks":["SELECT","T1.Name","FROM","conductor","AS","T1","JOIN","orchestra","AS","T2","ON","T1.Conductor_ID","=","T2.Conductor_ID","WHERE","Year_of_Founded",">","2008"],"query_toks_no_value":["select","t1",".","name","from","conductor","as","t1","join","orchestra","as","t2","on","t1",".","conductor_id","=","t2",".","conductor_id","where","year_of_founded",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,3,[0,[0,10,false],null],2008.0,null]]},"question_toks":["Wie","hei\u00dfen","die","Dirigenten",",","die","nach","dem","Jahr","2008","gegr\u00fcndete","Orchester","dirigiert","haben","?"],"question":"Wie hei\u00dfen die Dirigenten, die nach dem Jahr 2008 gegr\u00fcndete Orchester dirigiert haben?"},{"db_id":"pets_1","query":"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","query_toks":["SELECT","avg","(","pet_age",")",",","max","(","pet_age",")",",","pettype","FROM","pets","GROUP","BY","pettype"],"query_toks_no_value":["select","avg","(","pet_age",")",",","max","(","pet_age",")",",","pettype","from","pets","group","by","pettype"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,13,false],null]],[1,[0,[0,13,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","das","Durchschnitts-","und","H\u00f6chstalter","f\u00fcr","jeden","Haustiertyp","?"],"question":"Was ist das Durchschnitts- und H\u00f6chstalter f\u00fcr jeden Haustiertyp?"},{"db_id":"battle_death","query":"SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'","query_toks":["SELECT","T1.killed",",","T1.injured","FROM","death","AS","T1","JOIN","ship","AS","t2","ON","T1.caused_by_ship_id","=","T2.id","WHERE","T2.tonnage","=","'t","'"],"query_toks_no_value":["select","t1",".","killed",",","t1",".","injured","from","death","as","t1","join","ship","as","t2","on","t1",".","caused_by_ship_id","=","t2",".","id","where","t2",".","tonnage","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,14,false],null],[0,8,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]],[0,[0,[0,18,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"t\"",null]]},"question_toks":["Welches","sind","die","Situationen","mit","Tod","und","Verletzung",",","die","durch","das","Schiff","mit","der","Tonnage","``","t","''","verursacht","wurden","?"],"question":"Welches sind die Situationen mit Tod und Verletzung, die durch das Schiff mit der Tonnage \"t\" verursacht wurden?"},{"db_id":"world_1","query":"SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1","query_toks":["SELECT","Name","FROM","country","WHERE","Continent","=","``","Asia","''","ORDER","BY","LifeExpectancy","LIMIT","1"],"query_toks_no_value":["select","name","from","country","where","continent","=","value","order","by","lifeexpectancy","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,15,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Wie","lautet","der","Name","des","Landes",",","das","in","Asia","die","k\u00fcrzeste","Lebenserwartung","hat","?"],"question":"Wie lautet der Name des Landes, das in Asia die k\u00fcrzeste Lebenserwartung hat?"},{"db_id":"orchestra","query":"SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Record_Company","FROM","orchestra","GROUP","BY","Record_Company","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","record_company","from","orchestra","group","by","record_company","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","die","Plattenfirma",",","die","von","der","gr\u00f6\u00dften","Zahl","von","Orchestern","benutzt","wird","?"],"question":"Welches ist die Plattenfirma, die von der gr\u00f6\u00dften Zahl von Orchestern benutzt wird?"},{"db_id":"employee_hire_evaluation","query":"SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)","query_toks":["SELECT","name","FROM","shop","WHERE","shop_id","NOT","IN","(","SELECT","shop_id","FROM","hiring",")"],"query_toks_no_value":["select","name","from","shop","where","shop_id","not","in","(","select","shop_id","from","hiring",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[true,8,[0,[0,5,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Suchen","Sie","die","Namen","der","Gesch\u00e4fte",",","die","keine","Mitarbeiter","einstellen","."],"question":"Suchen Sie die Namen der Gesch\u00e4fte, die keine Mitarbeiter einstellen."},{"db_id":"orchestra","query":"SELECT count(*) FROM conductor","query_toks":["SELECT","count","(","*",")","FROM","conductor"],"query_toks_no_value":["select","count","(","*",")","from","conductor"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Dirigenten","gibt","es","?"],"question":"Wie viele Dirigenten gibt es?"},{"db_id":"singer","query":"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","query_toks":["SELECT","T2.Title",",","T1.Name","FROM","singer","AS","T1","JOIN","song","AS","T2","ON","T1.Singer_ID","=","T2.Singer_ID"],"query_toks_no_value":["select","t2",".","title",",","t1",".","name","from","singer","as","t1","join","song","as","t2","on","t1",".","singer_id","=","t2",".","singer_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Liedtitel","und","S\u00e4ngernamen","?"],"question":"Wie lauten die Liedtitel und S\u00e4ngernamen?"},{"db_id":"dog_kennels","query":"SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs","query_toks":["SELECT","first_name","FROM","Professionals","UNION","SELECT","first_name","FROM","Owners","EXCEPT","SELECT","name","FROM","Dogs"],"query_toks_no_value":["select","first_name","from","professionals","union","select","first_name","from","owners","except","select","name","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]]]],"union":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"where":[]},"question_toks":["Finden","Sie","die","Vornamen",",","die","f\u00fcr","Fachleute","oder","Besitzer","verwendet","werden",",","aber","nicht","als","Hundenamen","verwendet","werden","."],"question":"Finden Sie die Vornamen, die f\u00fcr Fachleute oder Besitzer verwendet werden, aber nicht als Hundenamen verwendet werden."},{"db_id":"pets_1","query":"SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'","query_toks":["SELECT","stuid","FROM","student","EXCEPT","SELECT","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'"],"query_toks_no_value":["select","stuid","from","student","except","select","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Ermitteln","Sie","den","Ausweis","von","Studierenden",",","die","keine","Katze","als","Haustier","haben","."],"question":"Ermitteln Sie den Ausweis von Studierenden, die keine Katze als Haustier haben."},{"db_id":"world_1","query":"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"","query_toks":["SELECT","COUNT","(","T2.Language",")","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.Name","=","``","Aruba","''"],"query_toks_no_value":["select","count","(","t2",".","language",")","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Aruba\"",null]]},"question_toks":["Wie","viele","Sprachen","werden","in","Aruba","gesprochen","?"],"question":"Wie viele Sprachen werden in Aruba gesprochen?"},{"db_id":"world_1","query":"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"","query_toks":["SELECT","COUNT","(","*",")","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.Name","=","``","Afghanistan","''","AND","IsOfficial","=","``","T","''"],"query_toks_no_value":["select","count","(","*",")","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","name","=","value","and","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Afghanistan\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Wie","viele","offizielle","Sprachen","gibt","es","in","Afghanistan","?"],"question":"Wie viele offizielle Sprachen gibt es in Afghanistan?"},{"db_id":"orchestra","query":"SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC","query_toks":["SELECT","Record_Company","FROM","orchestra","ORDER","BY","Year_of_Founded","DESC"],"query_toks_no_value":["select","record_company","from","orchestra","order","by","year_of_founded","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,10,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Plattenfirmen","von","Orchestern","in","absteigender","Reihenfolge","der","Gr\u00fcndungsjahre","?"],"question":"Welches sind die Plattenfirmen von Orchestern in absteigender Reihenfolge der Gr\u00fcndungsjahre?"},{"db_id":"tvshow","query":"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","query_toks":["SELECT","title",",","Directed_by","FROM","Cartoon","ORDER","BY","Original_air_date"],"query_toks_no_value":["select","title",",","directed_by","from","cartoon","order","by","original_air_date"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,23,false],null]]],"select":[false,[[0,[0,[0,20,false],null]],[0,[0,[0,21,false],null]]]],"union":null,"where":[]},"question_toks":["alle","Zeichentrickfilmtitel","und","ihre","Regisseure","nach","ihrem","Sendedatum","geordnet","auflisten"],"question":"alle Zeichentrickfilmtitel und ihre Regisseure nach ihrem Sendedatum geordnet auflisten"},{"db_id":"pets_1","query":"SELECT weight FROM pets ORDER BY pet_age LIMIT 1","query_toks":["SELECT","weight","FROM","pets","ORDER","BY","pet_age","LIMIT","1"],"query_toks_no_value":["select","weight","from","pets","order","by","pet_age","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viel","wiegt","der","j\u00fcngste","Hund","?"],"question":"Wie viel wiegt der j\u00fcngste Hund?"},{"db_id":"poker_player","query":"SELECT avg(Earnings) FROM poker_player","query_toks":["SELECT","avg","(","Earnings",")","FROM","poker_player"],"query_toks_no_value":["select","avg","(","earnings",")","from","poker_player"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Was","verdienen","Poker-Spieler","im","Durchschnitt","?"],"question":"Was verdienen Poker-Spieler im Durchschnitt?"},{"db_id":"pets_1","query":"SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20","query_toks":["SELECT","count","(","*",")","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","WHERE","T1.age",">","20"],"query_toks_no_value":["select","count","(","*",")","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","where","t1",".","age",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],20.0,null]]},"question_toks":["Suche","nach","der","Anzahl","der","Haustiere","von","Studenten",",","die","\u00e4lter","als","20","Jahre","sind","."],"question":"Suche nach der Anzahl der Haustiere von Studenten, die \u00e4lter als 20 Jahre sind."},{"db_id":"world_1","query":"SELECT Name FROM country ORDER BY Population DESC LIMIT 3","query_toks":["SELECT","Name","FROM","country","ORDER","BY","Population","DESC","LIMIT","3"],"query_toks_no_value":["select","name","from","country","order","by","population","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[0,14,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Rufen","Sie","die","Namen","der","3","bev\u00f6lkerungsreichsten","L\u00e4nder","ab","."],"question":"Rufen Sie die Namen der 3 bev\u00f6lkerungsreichsten L\u00e4nder ab."},{"db_id":"wta_1","query":"SELECT count(DISTINCT loser_name) FROM matches","query_toks":["SELECT","count","(","DISTINCT","loser_name",")","FROM","matches"],"query_toks_no_value":["select","count","(","distinct","loser_name",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,15,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Namen","von","Verlierern","existieren","?"],"question":"Wie viele verschiedene Namen von Verlierern existieren?"},{"db_id":"orchestra","query":"SELECT avg(Attendance) FROM SHOW","query_toks":["SELECT","avg","(","Attendance",")","FROM","SHOW"],"query_toks_no_value":["select","avg","(","attendance",")","from","show"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","der","durchschnittliche","Besuch","von","Auftritten","?"],"question":"Wie hoch ist der durchschnittliche Besuch von Auftritten?"},{"db_id":"student_transcripts_tracking","query":"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","query_toks":["SELECT","transcript_date",",","other_details","FROM","Transcripts","ORDER","BY","transcript_date","ASC","LIMIT","1"],"query_toks_no_value":["select","transcript_date",",","other_details","from","transcripts","order","by","transcript_date","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",9]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,53,false],null]]],"select":[false,[[0,[0,[0,53,false],null]],[0,[0,[0,54,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","das","fr\u00fcheste","Datum","f\u00fcr","die","Ver\u00f6ffentlichung","eines","Transkripts",",","und","welche","Einzelheiten","k\u00f6nnen","Sie","mir","mitteilen","?"],"question":"Welches ist das fr\u00fcheste Datum f\u00fcr die Ver\u00f6ffentlichung eines Transkripts, und welche Einzelheiten k\u00f6nnen Sie mir mitteilen?"},{"db_id":"dog_kennels","query":"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","query_toks":["SELECT","T1.name",",","T2.date_of_treatment","FROM","Dogs","AS","T1","JOIN","Treatments","AS","T2","ON","T1.dog_id","=","T2.dog_id","WHERE","T1.breed_code","=","(","SELECT","breed_code","FROM","Dogs","GROUP","BY","breed_code","ORDER","BY","count","(","*",")","ASC","LIMIT","1",")"],"query_toks_no_value":["select","t1",".","name",",","t2",".","date_of_treatment","from","dogs","as","t1","join","treatments","as","t2","on","t1",".","dog_id","=","t2",".","dog_id","where","t1",".","breed_code","=","(","select","breed_code","from","dogs","group","by","breed_code","order","by","count","(","*",")","asc","limit","value",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,20,false],null],[0,45,false],null]],"table_units":[["table_unit",5],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]],[0,[0,[0,48,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Welche","Hunde","geh\u00f6ren","zu","den","seltensten","Rassen","?","Zeigen","Sie","ihre","Namen","und","Behandlungsdaten","an","."],"question":"Welche Hunde geh\u00f6ren zu den seltensten Rassen? Zeigen Sie ihre Namen und Behandlungsdaten an."},{"db_id":"course_teach","query":"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","query_toks":["SELECT","T3.Name",",","T2.Course","FROM","course_arrange","AS","T1","JOIN","course","AS","T2","ON","T1.Course_ID","=","T2.Course_ID","JOIN","teacher","AS","T3","ON","T1.Teacher_ID","=","T3.Teacher_ID","ORDER","BY","T3.Name"],"query_toks_no_value":["select","t3",".","name",",","t2",".","course","from","course_arrange","as","t1","join","course","as","t2","on","t1",".","course_id","=","t2",".","course_id","join","teacher","as","t3","on","t1",".","teacher_id","=","t3",".","teacher_id","order","by","t3",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,5,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","die","Namen","der","Lehrer","und","die","Kurse",",","die","sie","unterrichten","sollen",",","in","aufsteigender","alphabetischer","Reihenfolge","des","Lehrernamens","an","."],"question":"Zeigen Sie die Namen der Lehrer und die Kurse, die sie unterrichten sollen, in aufsteigender alphabetischer Reihenfolge des Lehrernamens an."},{"db_id":"dog_kennels","query":"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","query_toks":["SELECT","T1.first_name",",","T2.name","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id"],"query_toks_no_value":["select","t1",".","first_name",",","t2",".","name","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,25,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","der","Vorname","jedes","Besitzers","und","der","Name","seines","Hundes","?"],"question":"Wie lauten der Vorname jedes Besitzers und der Name seines Hundes?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'","query_toks":["SELECT","T1.first_name","FROM","Students","AS","T1","JOIN","Addresses","AS","T2","ON","T1.permanent_address_id","=","T2.address_id","WHERE","T2.country","=","'Haiti","'","UNION","SELECT","first_name","FROM","Students","WHERE","cell_mobile_number","=","'09700166582","'"],"query_toks_no_value":["select","t1",".","first_name","from","students","as","t1","join","addresses","as","t2","on","t1",".","permanent_address_id","=","t2",".","address_id","where","t2",".","country","=","value","union","select","first_name","from","students","where","cell_mobile_number","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,34,false],null],[0,1,false],null]],"table_units":[["table_unit",6],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]]]],"union":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],"\"09700166582\"",null]]},"where":[[false,2,[0,[0,8,false],null],"\"Haiti\"",null]]},"question_toks":["Wie","lauten","die","Vornamen","der","Sch\u00fclerinnen","und","Sch\u00fcler",",","die","dauerhaft","in","Haiti","leben","oder","die","Handynummer","09700166582","haben","?"],"question":"Wie lauten die Vornamen der Sch\u00fclerinnen und Sch\u00fcler, die dauerhaft in Haiti leben oder die Handynummer 09700166582 haben? "},{"db_id":"tvshow","query":"SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";","query_toks":["SELECT","Weekly_Rank","FROM","TV_series","WHERE","Episode","=","``","A","Love","of","a","Lifetime","''",";"],"query_toks_no_value":["select","weekly_rank","from","tv_series","where","episode","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"A Love of a Lifetime\"",null]]},"question_toks":["``","Was","ist","der","w\u00f6chentliche","Rang","einer","TV-Serie","mit","der","Episode","``","''","Eine","Liebe","f\u00fcrs","Leben","''","''","?"],"question":"\"Was ist der w\u00f6chentliche Rang einer TV-Serie mit der Episode \"\"Eine Liebe f\u00fcrs Leben\"\"?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'","query_toks":["SELECT","count","(","*",")","FROM","Documents","AS","T1","JOIN","Templates","AS","T2","ON","T1.Template_ID","=","T2.Template_ID","WHERE","T2.Template_Type_Code","=","'PPT","'"],"query_toks_no_value":["select","count","(","*",")","from","documents","as","t1","join","templates","as","t2","on","t1",".","template_id","=","t2",".","template_id","where","t2",".","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"PPT\"",null]]},"question_toks":["Z\u00e4hlen","Sie","die","Anzahl","der","Dokumente",",","die","den","Vorlagentyp","PPT","verwenden","."],"question":"Z\u00e4hlen Sie die Anzahl der Dokumente, die den Vorlagentyp PPT verwenden."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id ,  version_number ,  template_type_code FROM Templates","query_toks":["SELECT","template_id",",","version_number",",","template_type_code","FROM","Templates"],"query_toks_no_value":["select","template_id",",","version_number",",","template_type_code","from","templates"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Vorlagen-IDs",",","Versions-Nummern","und","Vorlagentyp-Codes","f\u00fcr","alle","Vorlagen","anzeigen","."],"question":"Vorlagen-IDs, Versions-Nummern und Vorlagentyp-Codes f\u00fcr alle Vorlagen anzeigen."},{"db_id":"flight_2","query":"SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"","query_toks":["SELECT","AirportName","FROM","AIRPORTS","WHERE","City","=","``","Aberdeen","''"],"query_toks_no_value":["select","airportname","from","airports","where","city","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Was","sind","Flughafennamen","bei","der","Stadt","'Aberdeen","'","?"],"question":"Was sind Flughafennamen bei der Stadt 'Aberdeen'?"},{"db_id":"poker_player","query":"SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID","query_toks":["SELECT","T1.Name","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID"],"query_toks_no_value":["select","t1",".","name","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","Pokerspieler","?"],"question":"Wie lauten die Namen der Pokerspieler?"},{"db_id":"course_teach","query":"SELECT count(*) FROM teacher","query_toks":["SELECT","count","(","*",")","FROM","teacher"],"query_toks_no_value":["select","count","(","*",")","from","teacher"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","die","Gesamtzahl","der","Lehrkr\u00e4fte","?"],"question":"Wie hoch ist die Gesamtzahl der Lehrkr\u00e4fte?"},{"db_id":"course_teach","query":"SELECT Name FROM teacher ORDER BY Age ASC","query_toks":["SELECT","Name","FROM","teacher","ORDER","BY","Age","ASC"],"query_toks_no_value":["select","name","from","teacher","order","by","age","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["F\u00fchren","Sie","die","Namen","der","Lehrer","in","aufsteigender","Reihenfolge","ihres","Alters","auf","."],"question":"F\u00fchren Sie die Namen der Lehrer in aufsteigender Reihenfolge ihres Alters auf."},{"db_id":"dog_kennels","query":"SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )","query_toks":["SELECT","count","(","*",")","FROM","Dogs","WHERE","age","<","(","SELECT","avg","(","age",")","FROM","Dogs",")"],"query_toks_no_value":["select","count","(","*",")","from","dogs","where","age","<","(","select","avg","(","age",")","from","dogs",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,4,[0,[0,26,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,26,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","viele","Hunde","haben","ein","Alter","unter","dem","Durchschnitt","?"],"question":"Wie viele Hunde haben ein Alter unter dem Durchschnitt?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id","query_toks":["SELECT","template_id",",","count","(","*",")","FROM","Documents","GROUP","BY","template_id"],"query_toks_no_value":["select","template_id",",","count","(","*",")","from","documents","group","by","template_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","verschiedenen","Vorlagen-IDs",",","die","f\u00fcr","Dokumente","verwendet","werden",",","und","wie","oft","wurden","sie","jeweils","verwendet","?"],"question":"Was sind die verschiedenen Vorlagen-IDs, die f\u00fcr Dokumente verwendet werden, und wie oft wurden sie jeweils verwendet?"},{"db_id":"course_teach","query":"SELECT count(*) FROM teacher","query_toks":["SELECT","count","(","*",")","FROM","teacher"],"query_toks_no_value":["select","count","(","*",")","from","teacher"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Lehrkr\u00e4fte","sind","vorhanden","?"],"question":"Wie viele Lehrkr\u00e4fte sind vorhanden?"},{"db_id":"flight_2","query":"SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.City","FROM","AIRPORTS","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.AirportCode","=","T2.DestAirport","GROUP","BY","T1.City","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","city","from","airports","as","t1","join","flights","as","t2","on","t1",".","airportcode","=","t2",".","destairport","group","by","t1",".","city","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,13,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Stadt","hat","die","meisten","Ankunftsfl\u00fcge","?"],"question":"Welche Stadt hat die meisten Ankunftsfl\u00fcge?"},{"db_id":"course_teach","query":"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"","query_toks":["SELECT","T3.Name","FROM","course_arrange","AS","T1","JOIN","course","AS","T2","ON","T1.Course_ID","=","T2.Course_ID","JOIN","teacher","AS","T3","ON","T1.Teacher_ID","=","T3.Teacher_ID","WHERE","T2.Course","=","``","Math","''"],"query_toks_no_value":["select","t3",".","name","from","course_arrange","as","t1","join","course","as","t2","on","t1",".","course_id","=","t2",".","course_id","join","teacher","as","t3","on","t1",".","teacher_id","=","t3",".","teacher_id","where","t2",".","course","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],"\"Math\"",null]]},"question_toks":["Wie","lauten","die","Namen","der","Menschen",",","die","Mathkurse","unterrichten","?"],"question":"Wie lauten die Namen der Menschen, die Mathkurse unterrichten?"},{"db_id":"tvshow","query":"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;","query_toks":["SELECT","Country",",","count","(","*",")","FROM","TV_Channel","GROUP","BY","Country","ORDER","BY","count","(","*",")","DESC","LIMIT","1",";"],"query_toks_no_value":["select","country",",","count","(","*",")","from","tv_channel","group","by","country","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","Land","hat","die","meisten","Fernsehkan\u00e4le","?","Geben","Sie","das","Land","und","die","Anzahl","der","TV-Kan\u00e4le","an",",","die","es","hat","."],"question":"Welches Land hat die meisten Fernsehkan\u00e4le? Geben Sie das Land und die Anzahl der TV-Kan\u00e4le an, die es hat."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"","query_toks":["SELECT","template_id","FROM","Templates","WHERE","template_type_code","=","``","PP","''","OR","template_type_code","=","``","PPT","''"],"query_toks_no_value":["select","template_id","from","templates","where","template_type_code","=","value","or","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"PP\"",null],"or",[false,2,[0,[0,5,false],null],"\"PPT\"",null]]},"question_toks":["Geben","Sie","die","IDs","von","Vorlagen","zur\u00fcck",",","die","den","Code","PP","oder","PPT","haben","."],"question":"Geben Sie die IDs von Vorlagen zur\u00fcck, die den Code PP oder PPT haben."},{"db_id":"student_transcripts_tracking","query":"SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.degree_summary_name","FROM","Degree_Programs","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.degree_program_id","=","T2.degree_program_id","GROUP","BY","T1.degree_summary_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","degree_summary_name","from","degree_programs","as","t1","join","student_enrolment","as","t2","on","t1",".","degree_program_id","=","t2",".","degree_program_id","group","by","t1",".","degree_summary_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[[0,20,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Suchen","Sie","die","Art","des","Programms",",","in","dem","die","meisten","Studenten","eingeschrieben","sind","?"],"question":"Suchen Sie die Art des Programms, in dem die meisten Studenten eingeschrieben sind?"},{"db_id":"wta_1","query":"SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","country_code","FROM","players","GROUP","BY","country_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","country_code","from","players","group","by","country_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Suche","nach","dem","Code","des","Landes","mit","der","gr\u00f6\u00dften","Anzahl","von","Spielern","."],"question":"Suche nach dem Code des Landes mit der gr\u00f6\u00dften Anzahl von Spielern."},{"db_id":"car_1","query":"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;","query_toks":["SELECT","DISTINCT","T1.model","FROM","MODEL_LIST","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.model","=","T2.model","JOIN","CARS_DATA","AS","T3","ON","T2.MakeId","=","T3.id","WHERE","T3.year",">","1980",";"],"query_toks_no_value":["select","distinct","t1",".","model","from","model_list","as","t1","join","car_names","as","t2","on","t1",".","model","=","t2",".","model","join","cars_data","as","t3","on","t2",".","makeid","=","t3",".","id","where","t3",".","year",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,14,false],null]],"table_units":[["table_unit",3],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,3,[0,[0,23,false],null],1980.0,null]]},"question_toks":["Welche","verschiedenen","Fahrzeugmodelle","werden","nach","1980","hergestellt","?"],"question":"Welche verschiedenen Fahrzeugmodelle werden nach 1980 hergestellt?"},{"db_id":"concert_singer","query":"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","query_toks":["SELECT","name",",","capacity","FROM","stadium","ORDER","BY","average","DESC","LIMIT","1"],"query_toks_no_value":["select","name",",","capacity","from","stadium","order","by","average","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,7,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Name","und","die","Kapazit\u00e4t","des","Stadions","mit","der","h\u00f6chsten","durchschnittlichen","Besucherzahl","?"],"question":"Wie lautet der Name und die Kapazit\u00e4t des Stadions mit der h\u00f6chsten durchschnittlichen Besucherzahl?"},{"db_id":"voter_1","query":"SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.area_code","FROM","area_code_state","AS","T1","JOIN","votes","AS","T2","ON","T1.state","=","T2.state","GROUP","BY","T1.area_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","area_code","from","area_code_state","as","t1","join","votes","as","t2","on","t1",".","state","=","t2",".","state","group","by","t1",".","area_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,2,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","die","Vorwahl",",","in","der","die","meisten","W\u00e4hler","zur","Wahl","gingen","?"],"question":"Welches ist die Vorwahl, in der die meisten W\u00e4hler zur Wahl gingen?"},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","GROUP","BY","T1.Airline","HAVING","count","(","*",")","<","200"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","group","by","t1",".","airline","having","count","(","*",")","<","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[[false,4,[0,[3,0,false],null],200.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","alle","Fluggesellschaften",",","die","weniger","als","200","Fl\u00fcge","aufweisen","."],"question":"Finden Sie alle Fluggesellschaften, die weniger als 200 Fl\u00fcge aufweisen."},{"db_id":"wta_1","query":"SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10","query_toks":["SELECT","tourney_name","FROM","matches","GROUP","BY","tourney_name","HAVING","count","(","*",")",">","10"],"query_toks_no_value":["select","tourney_name","from","matches","group","by","tourney_name","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,27,false]],"having":[[false,3,[0,[3,0,false],null],10.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,27,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","von","Turnieren",",","die","mehr","als","10","Partien","umfassen","?"],"question":"Wie lauten die Namen von Turnieren, die mehr als 10 Partien umfassen?"},{"db_id":"network_1","query":"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","query_toks":["SELECT","T2.name",",","count","(","*",")","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","die","Namen","der","Gymnasiasten",",","die","Likes","haben",",","und","die","Anzahl","der","Likes","f\u00fcr","jeden","."],"question":"Zeigen Sie die Namen der Gymnasiasten, die Likes haben, und die Anzahl der Likes f\u00fcr jeden."},{"db_id":"world_1","query":"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","query_toks":["SELECT","Name",",","SurfaceArea",",","IndepYear","FROM","country","ORDER","BY","Population","LIMIT","1"],"query_toks_no_value":["select","name",",","surfacearea",",","indepyear","from","country","order","by","population","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,14,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,12,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","den","Namen",",","das","Jahr","der","Unabh\u00e4ngigkeit","und","die","Fl\u00e4che","des","Landes","mit","der","niedrigsten","Bev\u00f6lkerungszahl","an","."],"question":"Geben Sie den Namen, das Jahr der Unabh\u00e4ngigkeit und die Fl\u00e4che des Landes mit der niedrigsten Bev\u00f6lkerungszahl an."},{"db_id":"tvshow","query":"SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'","query_toks":["SELECT","country","FROM","TV_Channel","EXCEPT","SELECT","T1.country","FROM","TV_Channel","AS","T1","JOIN","cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.written_by","=","'Todd","Casey","'"],"query_toks_no_value":["select","country","from","tv_channel","except","select","t1",".","country","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","written_by","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],"\"Todd Casey\"",null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","L\u00e4nder",",","die","keine","von","Todd","Casey","geschriebenen","Karikaturen","spielen","?"],"question":"Welches sind die L\u00e4nder, die keine von Todd Casey geschriebenen Karikaturen spielen?"},{"db_id":"poker_player","query":"SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made","query_toks":["SELECT","T1.Name","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T2.Final_Table_Made"],"query_toks_no_value":["select","t1",".","name","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t2",".","final_table_made"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,3,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Listen","Sie","die","Namen","der","Pokerspieler","in","aufsteigender","Reihenfolge","der","Finaltische","auf","."],"question":"Listen Sie die Namen der Pokerspieler in aufsteigender Reihenfolge der Finaltische auf."},{"db_id":"tvshow","query":"SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";","query_toks":["SELECT","Package_Option","FROM","TV_Channel","WHERE","series_name","=","``","Sky","Radio","''",";"],"query_toks_no_value":["select","package_option","from","tv_channel","where","series_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Sky Radio\"",null]]},"question_toks":["Was","sind","die","Paketangebote","der","Fernsehsender",",","deren","Seriennamen","Sky","Radio","sind","?"],"question":"Was sind die Paketangebote der Fernsehsender, deren Seriennamen Sky Radio sind?"},{"db_id":"car_1","query":"SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );","query_toks":["SELECT","COUNT","(","*",")","FROM","CARS_DATA","WHERE","Accelerate",">","(","SELECT","Accelerate","FROM","CARS_DATA","ORDER","BY","Horsepower","DESC","LIMIT","1",")",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","accelerate",">","(","select","accelerate","from","cars_data","order","by","horsepower","desc","limit","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,22,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,22,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","viele","Autos","verf\u00fcgen","\u00fcber","eine","gr\u00f6\u00dfere","Beschleunigungsleistung","als","das","Auto","mit","der","gr\u00f6\u00dften","Motorleistung","?"],"question":"Wie viele Autos verf\u00fcgen \u00fcber eine gr\u00f6\u00dfere Beschleunigungsleistung als das Auto mit der gr\u00f6\u00dften Motorleistung?"},{"db_id":"concert_singer","query":"SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30","query_toks":["SELECT","country","FROM","singer","WHERE","age",">","40","INTERSECT","SELECT","country","FROM","singer","WHERE","age","<","30"],"query_toks_no_value":["select","country","from","singer","where","age",">","value","intersect","select","country","from","singer","where","age","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,4,[0,[0,13,false],null],30.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],40.0,null]]},"question_toks":["Zeigen","Sie","L\u00e4nder",",","aus","denen","ein","S\u00e4nger","\u00fcber","40","und","ein","S\u00e4nger","unter","30","Jahren","stammt","."],"question":"Zeigen Sie L\u00e4nder, aus denen ein S\u00e4nger \u00fcber 40 und ein S\u00e4nger unter 30 Jahren stammt."},{"db_id":"car_1","query":"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;","query_toks":["SELECT","T1.Model","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","ORDER","BY","T2.horsepower","ASC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","model","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","order","by","t2",".","horsepower","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","das","Automodell","mit","der","geringsten","PS-Leistung","?"],"question":"Was ist das Automodell mit der geringsten PS-Leistung?"},{"db_id":"student_transcripts_tracking","query":"SELECT line_1 ,  line_2 FROM addresses","query_toks":["SELECT","line_1",",","line_2","FROM","addresses"],"query_toks_no_value":["select","line_1",",","line_2","from","addresses"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","erste","und","zweite","Zeile","f\u00fcr","alle","Adressen","?"],"question":"Was ist die erste und zweite Zeile f\u00fcr alle Adressen? "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'","query_toks":["SELECT","count","(","*",")","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_ID","=","T2.document_ID","WHERE","T2.document_name","=","'Summer","Show","'"],"query_toks_no_value":["select","count","(","*",")","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","where","t2",".","document_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Summer Show\"",null]]},"question_toks":["Z\u00e4hlen","Sie","die","Anzahl","der","Abs\u00e4tze","in","dem","Dokument","mit","dem","Namen","'Summer","Show","'","."],"question":"Z\u00e4hlen Sie die Anzahl der Abs\u00e4tze in dem Dokument mit dem Namen 'Summer Show'."},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","AHD","''"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"AHD\"",null]]},"question_toks":["Welche","Fluggesellschaften","haben","einen","Flug","mit","dem","Ursprungsflughafen","AHD","?"],"question":"Welche Fluggesellschaften haben einen Flug mit dem Ursprungsflughafen AHD?"},{"db_id":"voter_1","query":"SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'","query_toks":["SELECT","T2.created",",","T2.state",",","T2.phone_number","FROM","contestants","AS","T1","JOIN","votes","AS","T2","ON","T1.contestant_number","=","T2.contestant_number","WHERE","T1.contestant_name","=","'Tabatha","Gehling","'"],"query_toks_no_value":["select","t2",".","created",",","t2",".","state",",","t2",".","phone_number","from","contestants","as","t1","join","votes","as","t2","on","t1",".","contestant_number","=","t2",".","contestant_number","where","t1",".","contestant_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,8,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,7,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Tabatha Gehling\"",null]]},"question_toks":["Was","sind","die","Erstellungsdatum",",","Staaten","und","Telefonnummern","der","Stimmen",",","die","f\u00fcr","die","Kandidatin","mit","dem","Namen","'Tabatha","Gehling","'","abgegeben","wurden","?"],"question":"Was sind die Erstellungsdatum, Staaten und Telefonnummern der Stimmen, die f\u00fcr die Kandidatin mit dem Namen 'Tabatha Gehling' abgegeben wurden?"},{"db_id":"dog_kennels","query":"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code","query_toks":["SELECT","T1.cost_of_treatment",",","T2.treatment_type_description","FROM","Treatments","AS","T1","JOIN","treatment_types","AS","T2","ON","T1.treatment_type_code","=","T2.treatment_type_code"],"query_toks_no_value":["select","t1",".","cost_of_treatment",",","t2",".","treatment_type_description","from","treatments","as","t1","join","treatment_types","as","t2","on","t1",".","treatment_type_code","=","t2",".","treatment_type_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,47,false],null],[0,8,false],null]],"table_units":[["table_unit",7],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,49,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","sind","die","Kosten","und","die","Beschreibung","der","Behandlungsart","f\u00fcr","jede","Behandlung","?"],"question":"Wie sind die Kosten und die Beschreibung der Behandlungsart f\u00fcr jede Behandlung?"},{"db_id":"museum_visit","query":"SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1","query_toks":["SELECT","t1.id",",","t1.name",",","t1.age","FROM","visitor","AS","t1","JOIN","visit","AS","t2","ON","t1.id","=","t2.visitor_id","GROUP","BY","t1.id","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","id",",","t1",".","name",",","t1",".","age","from","visitor","as","t1","join","visit","as","t2","on","t1",".","id","=","t2",".","visitor_id","group","by","t1",".","id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[0,[0,[0,6,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["die","Identit\u00e4t",",","den","Namen","und","das","Alter","von","G\u00e4sten","finden",",","die","einige","Museen","mehr","als","einmal","besucht","haben","."],"question":"die Identit\u00e4t, den Namen und das Alter von G\u00e4sten finden, die einige Museen mehr als einmal besucht haben."},{"db_id":"student_transcripts_tracking","query":"SELECT avg(transcript_date) FROM Transcripts","query_toks":["SELECT","avg","(","transcript_date",")","FROM","Transcripts"],"query_toks_no_value":["select","avg","(","transcript_date",")","from","transcripts"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",9]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,53,false],null]]]],"union":null,"where":[]},"question_toks":["Wann","wurden","die","Transkriptionen","im","Durchschnitt","gedruckt","?"],"question":"Wann wurden die Transkriptionen im Durchschnitt gedruckt?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'","query_toks":["SELECT","count","(","*",")","FROM","Departments","AS","T1","JOIN","Degree_Programs","AS","T2","ON","T1.department_id","=","T2.department_id","WHERE","T1.department_name","=","'engineer","'"],"query_toks_no_value":["select","count","(","*",")","from","departments","as","t1","join","degree_programs","as","t2","on","t1",".","department_id","=","t2",".","department_id","where","t1",".","department_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,14,false],null],[0,19,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"engineer\"",null]]},"question_toks":["Wie","viele","Studieng\u00e4nge","hat","die","Ingenieurabteilung","?"],"question":"Wie viele Studieng\u00e4nge hat die Ingenieurabteilung?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(*) FROM Transcripts","query_toks":["SELECT","count","(","*",")","FROM","Transcripts"],"query_toks_no_value":["select","count","(","*",")","from","transcripts"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",9]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Transkriptionen","werden","ver\u00f6ffentlicht","?"],"question":"Wie viele Transkriptionen werden ver\u00f6ffentlicht?"},{"db_id":"museum_visit","query":"SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC","query_toks":["SELECT","name","FROM","visitor","WHERE","Level_of_membership",">","4","ORDER","BY","Level_of_membership","DESC"],"query_toks_no_value":["select","name","from","visitor","where","level_of_membership",">","value","order","by","level_of_membership","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,7,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,3,[0,[0,7,false],null],4.0,null]]},"question_toks":["Finden","Sie","die","Namen","der","G\u00e4ste",",","deren","Mitgliedschaft","h\u00f6her","als","4","ist",",","und","ordnen","Sie","die","Ergebnisse","nach","der","Stufe","von","hoch","nach","niedrig","."],"question":"Finden Sie die Namen der G\u00e4ste, deren Mitgliedschaft h\u00f6her als 4 ist, und ordnen Sie die Ergebnisse nach der Stufe von hoch nach niedrig."},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.SourceAirport","=","T2.AirportCode","WHERE","T2.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","sourceairport","=","t2",".","airportcode","where","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Geben","Sie","die","Anzahl","der","von","Aberdeen","abfliegenden","Fl\u00fcge","zur\u00fcck","."],"question":"Geben Sie die Anzahl der von Aberdeen abfliegenden Fl\u00fcge zur\u00fcck."},{"db_id":"employee_hire_evaluation","query":"SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","t1.name","FROM","employee","AS","t1","JOIN","evaluation","AS","t2","ON","t1.Employee_ID","=","t2.Employee_ID","GROUP","BY","t2.Employee_ID","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","employee","as","t1","join","evaluation","as","t2","on","t1",".","employee_id","=","t2",".","employee_id","group","by","t2",".","employee_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,15,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["finden","Sie","den","Namen","des","Mitarbeiters",",","der","bei","der","Bewertung","am","h\u00e4ufigsten","ausgezeichnet","wurde","."],"question":"finden Sie den Namen des Mitarbeiters, der bei der Bewertung am h\u00e4ufigsten ausgezeichnet wurde."},{"db_id":"concert_singer","query":"SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)","query_toks":["SELECT","name","FROM","stadium","WHERE","stadium_id","NOT","IN","(","SELECT","stadium_id","FROM","concert",")"],"query_toks_no_value":["select","name","from","stadium","where","stadium_id","not","in","(","select","stadium_id","from","concert",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,18,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Stadionnamen","ohne","Konzert","anzeigen","."],"question":"Stadionnamen ohne Konzert anzeigen."},{"db_id":"poker_player","query":"SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)","query_toks":["SELECT","Name","FROM","people","WHERE","People_ID","NOT","IN","(","SELECT","People_ID","FROM","poker_player",")"],"query_toks_no_value":["select","name","from","people","where","people_id","not","in","(","select","people_id","from","poker_player",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[true,8,[0,[0,7,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Die","Namen","von","Personen","auflisten",",","die","keine","Pokerspieler","sind","."],"question":"Die Namen von Personen auflisten, die keine Pokerspieler sind."},{"db_id":"car_1","query":"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;","query_toks":["SELECT","T1.Model","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","ORDER","BY","T2.mpg","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","model","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","order","by","t2",".","mpg","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,17,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","Modell","spart","am","meisten","Benzin","?","Das","heisst",",","die","maximale","Meilenzahl","pro","Gallone","haben","."],"question":"Welches Modell spart am meisten Benzin? Das heisst, die maximale Meilenzahl pro Gallone haben."},{"db_id":"car_1","query":"SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;","query_toks":["SELECT","COUNT","(","*",")","FROM","CARS_DATA","WHERE","Cylinders",">","6",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","cylinders",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],6.0,null]]},"question_toks":["Wie","viele","Fahrzeuge","haben","mehr","als","6","Zylinder","?"],"question":"Wie viele Fahrzeuge haben mehr als 6 Zylinder?"},{"db_id":"world_1","query":"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"","query_toks":["SELECT","COUNT","(","DISTINCT","Continent",")","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","Chinese","''"],"query_toks_no_value":["select","count","(","distinct","continent",")","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,10,true],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Chinese\"",null]]},"question_toks":["Wie","viele","verschiedene","Kontinente","gibt","es",",","auf","denen","Chinesisch","gesprochen","wird","?"],"question":"Wie viele verschiedene Kontinente gibt es, auf denen Chinesisch gesprochen wird?"},{"db_id":"tvshow","query":"SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";","query_toks":["SELECT","count","(","*",")","FROM","Cartoon","WHERE","Written_by","=","``","Joseph","Kuhr","''",";"],"query_toks_no_value":["select","count","(","*",")","from","cartoon","where","written_by","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],"\"Joseph Kuhr\"",null]]},"question_toks":["``","Wie","viele","Karikaturen","wurden","von","``","''","Joseph","Kuhr","''","''","geschrieben","?","''"],"question":"\"Wie viele Karikaturen wurden von \"\"Joseph Kuhr\"\" geschrieben?\""},{"db_id":"poker_player","query":"SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1","query_toks":["SELECT","Money_Rank","FROM","poker_player","ORDER","BY","Earnings","DESC","LIMIT","1"],"query_toks_no_value":["select","money_rank","from","poker_player","order","by","earnings","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Den","Geldrang","des","Spielers","mit","dem","h\u00f6chsten","Verdienst","abrufen","."],"question":"Den Geldrang des Spielers mit dem h\u00f6chsten Verdienst abrufen."},{"db_id":"world_1","query":"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1","query_toks":["SELECT","T2.Language","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.GovernmentForm","=","``","Republic","''","GROUP","BY","T2.Language","HAVING","COUNT","(","*",")","=","1"],"query_toks_no_value":["select","t2",".","language","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","governmentform","=","value","group","by","t2",".","language","having","count","(","*",")","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,24,false]],"having":[[false,2,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"Republic\"",null]]},"question_toks":["Welche","Sprachen","werden","nur","von","einem","einzigen","Land","mit","einer","Republikregierung","verwendet","?"],"question":"Welche Sprachen werden nur von einem einzigen Land mit einer Republikregierung verwendet?"},{"db_id":"pets_1","query":"SELECT count(*) FROM pets WHERE weight  >  10","query_toks":["SELECT","count","(","*",")","FROM","pets","WHERE","weight",">","10"],"query_toks_no_value":["select","count","(","*",")","from","pets","where","weight",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,14,false],null],10.0,null]]},"question_toks":["Wie","viele","Haustiere","weisen","ein","Gewicht","von","mehr","als","10","auf","?"],"question":"Wie viele Haustiere weisen ein Gewicht von mehr als 10 auf?"},{"db_id":"wta_1","query":"SELECT avg(winner_rank) FROM matches","query_toks":["SELECT","avg","(","winner_rank",")","FROM","matches"],"query_toks_no_value":["select","avg","(","winner_rank",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,35,false],null]]]],"union":null,"where":[]},"question_toks":["Suchen","Sie","den","durchschnittlichen","Rang","der","Sieger","in","allen","Partien","."],"question":"Suchen Sie den durchschnittlichen Rang der Sieger in allen Partien."},{"db_id":"world_1","query":"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","query_toks":["SELECT","sum","(","Population",")",",","GovernmentForm","FROM","country","GROUP","BY","GovernmentForm","HAVING","avg","(","LifeExpectancy",")",">","72"],"query_toks_no_value":["select","sum","(","population",")",",","governmentform","from","country","group","by","governmentform","having","avg","(","lifeexpectancy",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,19,false]],"having":[[false,3,[0,[5,15,false],null],72.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]],[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Den","Namen","der","Regierungsform","und","die","Gesamtbev\u00f6lkerung","f\u00fcr","jede","Regierungsform","mit","einer","durchschnittlichen","Lebenserwartung","von","mehr","als","72","Jahren","herausfinden","."],"question":"Den Namen der Regierungsform und die Gesamtbev\u00f6lkerung f\u00fcr jede Regierungsform mit einer durchschnittlichen Lebenserwartung von mehr als 72 Jahren herausfinden."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"","query_toks":["SELECT","template_type_code","FROM","Ref_template_types","WHERE","template_type_description","=","``","Book","''"],"query_toks_no_value":["select","template_type_code","from","ref_template_types","where","template_type_description","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Book\"",null]]},"question_toks":["Den","Typcode","des","Vorlagentyps","mit","der","Beschreibung","``","''","Buch","''","''","anzeigen","."],"question":"Den Typcode des Vorlagentyps mit der Beschreibung \"\"Buch\"\" anzeigen."},{"db_id":"world_1","query":"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","query_toks":["SELECT","COUNT","(","T2.Language",")",",","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","GROUP","BY","T1.Name","HAVING","COUNT","(","*",")",">","2"],"query_toks_no_value":["select","count","(","t2",".","language",")",",","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","group","by","t1",".","name","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,9,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,24,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Rufen","Sie","f\u00fcr","jedes","Land",",","das","mindestens","3","Sprachen","spricht",",","den","L\u00e4ndernamen","und","die","Anzahl","der","gesprochenen","Sprachen","ab","."],"question":"Rufen Sie f\u00fcr jedes Land, das mindestens 3 Sprachen spricht, den L\u00e4ndernamen und die Anzahl der gesprochenen Sprachen ab."},{"db_id":"singer","query":"SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC","query_toks":["SELECT","Name","FROM","singer","ORDER","BY","Net_Worth_Millions","ASC"],"query_toks_no_value":["select","name","from","singer","order","by","net_worth_millions","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,4,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["F\u00fchren","Sie","die","Namen","der","S\u00e4ngerInnen","in","aufsteigender","Reihenfolge","ihres","Nettoverm\u00f6gens","auf","."],"question":"F\u00fchren Sie die Namen der S\u00e4ngerInnen in aufsteigender Reihenfolge ihres Nettoverm\u00f6gens auf."},{"db_id":"flight_2","query":"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"","query_toks":["SELECT","FlightNo","FROM","FLIGHTS","WHERE","SourceAirport","=","``","APG","''"],"query_toks_no_value":["select","flightno","from","flights","where","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"APG\"",null]]},"question_toks":["``","Wie","viele","Fl\u00fcge","starten","vom","Flughafen","``","''","APG","''","''","?","''"],"question":"\"Wie viele Fl\u00fcge starten vom Flughafen \"\"APG\"\"?\""},{"db_id":"pets_1","query":"SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'","query_toks":["SELECT","DISTINCT","T1.Fname","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'","OR","T3.pettype","=","'dog","'"],"query_toks_no_value":["select","distinct","t1",".","fname","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value","or","t3",".","pettype","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null],"or",[false,2,[0,[0,12,false],null],"\"dog\"",null]]},"question_toks":["Wie","lauten","die","Vornamen","aller","Studierenden",",","die","eine","Katze","oder","einen","Hund","als","Haustier","besitzen","?"],"question":"Wie lauten die Vornamen aller Studierenden, die eine Katze oder einen Hund als Haustier besitzen?"},{"db_id":"pets_1","query":"SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20","query_toks":["SELECT","count","(","*",")","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","WHERE","T1.age",">","20"],"query_toks_no_value":["select","count","(","*",")","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","where","t1",".","age",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],20.0,null]]},"question_toks":["Wie","viele","Haustiere","besitzen","Studenten",",","die","\u00e4lter","als","20","Jahre","sind","?"],"question":"Wie viele Haustiere besitzen Studenten, die \u00e4lter als 20 Jahre sind?"},{"db_id":"world_1","query":"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")","query_toks":["SELECT","sum","(","Population",")","FROM","country","WHERE","Name","NOT","IN","(","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''",")"],"query_toks_no_value":["select","sum","(","population",")","from","country","where","name","not","in","(","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]]]],"union":null,"where":[[true,8,[0,[0,9,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},null]]},"question_toks":["Wie","viele","Menschen","leben","in","L\u00e4ndern",",","die","kein","Englisch","beherrschen","?"],"question":"Wie viele Menschen leben in L\u00e4ndern, die kein Englisch beherrschen?"},{"db_id":"battle_death","query":"SELECT note FROM death WHERE note LIKE '%East%'","query_toks":["SELECT","note","FROM","death","WHERE","note","LIKE","'","%","East","%","'"],"query_toks_no_value":["select","note","from","death","where","note","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,9,[0,[0,16,false],null],"\"%East%\"",null]]},"question_toks":["Was","sind","die","Anmerkungen","zu","den","Todesf\u00e4llen","mit","der","Teilzeichenfolge","``","Ost","''","?"],"question":"Was sind die Anmerkungen zu den Todesf\u00e4llen mit der Teilzeichenfolge \"Ost\"?"},{"db_id":"dog_kennels","query":"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.owner_id",",","T1.last_name","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id","JOIN","Treatments","AS","T3","ON","T2.dog_id","=","T3.dog_id","GROUP","BY","T1.owner_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","owner_id",",","t1",".","last_name","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","join","treatments","as","t3","on","t2",".","dog_id","=","t3",".","dog_id","group","by","t1",".","owner_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Nennen","Sie","mir","die","Besitzerkennung","und","den","Nachnamen","des","Hundebesitzers",",","der","am","meisten","f\u00fcr","die","Behandlung","seiner","Hunde","ausgegeben","hat","."],"question":"Nennen Sie mir die Besitzerkennung und den Nachnamen des Hundebesitzers, der am meisten f\u00fcr die Behandlung seiner Hunde ausgegeben hat."},{"db_id":"student_transcripts_tracking","query":"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.semester_name",",","T1.semester_id","FROM","Semesters","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.semester_id","=","T2.semester_id","GROUP","BY","T1.semester_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","semester_name",",","t1",".","semester_id","from","semesters","as","t1","join","student_enrolment","as","t2","on","t1",".","semester_id","=","t2",".","semester_id","group","by","t1",".","semester_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,28,false],null],[0,46,false],null]],"table_units":[["table_unit",5],["table_unit",7]]},"groupBy":[[0,28,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,29,false],null]],[0,[0,[0,28,false],null]]]],"union":null,"where":[]},"question_toks":["In","welchem","Semester","haben","sich","die","meisten","Studierenden","eingeschrieben","?","Zeigen","Sie","sowohl","den","Namen","als","auch","die","ID","an","."],"question":"In welchem Semester haben sich die meisten Studierenden eingeschrieben? Zeigen Sie sowohl den Namen als auch die ID an."},{"db_id":"world_1","query":"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","GROUP","BY","T1.Name","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","group","by","t1",".","name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Den","Namen","der","Nation","angeben",",","die","die","meisten","Sprachen","verwendet","."],"question":"Den Namen der Nation angeben, die die meisten Sprachen verwendet."},{"db_id":"network_1","query":"SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10","query_toks":["SELECT","count","(","*",")","FROM","Highschooler","WHERE","grade","=","9","OR","grade","=","10"],"query_toks_no_value":["select","count","(","*",")","from","highschooler","where","grade","=","value","or","grade","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],9.0,null],"or",[false,2,[0,[0,3,false],null],10.0,null]]},"question_toks":["Wie","viele","Gymnasiasten","besuchen","die","Klassen","9","oder","10","?"],"question":"Wie viele Gymnasiasten besuchen die Klassen 9 oder 10?"},{"db_id":"student_transcripts_tracking","query":"SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id","query_toks":["SELECT","DISTINCT","T1.course_name","FROM","Courses","AS","T1","JOIN","Student_Enrolment_Courses","AS","T2","ON","T1.course_id","=","T2.course_id"],"query_toks_no_value":["select","distinct","t1",".","course_name","from","courses","as","t1","join","student_enrolment_courses","as","t2","on","t1",".","course_id","=","t2",".","course_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,50,false],null]],"table_units":[["table_unit",1],["table_unit",8]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","aller","Kurse",",","f\u00fcr","die","sich","einige","Studierende","eingeschrieben","haben","?"],"question":"Wie lauten die Namen aller Kurse, f\u00fcr die sich einige Studierende eingeschrieben haben?"},{"db_id":"student_transcripts_tracking","query":"SELECT section_description FROM Sections WHERE section_name  =  'h'","query_toks":["SELECT","section_description","FROM","Sections","WHERE","section_name","=","'h","'"],"query_toks_no_value":["select","section_description","from","sections","where","section_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,26,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"h\"",null]]},"question_toks":["Den","Abschnitt","h","beschreiben","."],"question":"Den Abschnitt h beschreiben."},{"db_id":"employee_hire_evaluation","query":"SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000","query_toks":["SELECT","district","FROM","shop","WHERE","Number_products","<","3000","INTERSECT","SELECT","district","FROM","shop","WHERE","Number_products",">","10000"],"query_toks_no_value":["select","district","from","shop","where","number_products","<","value","intersect","select","district","from","shop","where","number_products",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],10000.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,4,[0,[0,9,false],null],3000.0,null]]},"question_toks":["Finden","Sie","die","Bezirke",",","in","denen","es","sowohl","Gesch\u00e4fte","mit","weniger","als","3000","Produkten","als","auch","Gesch\u00e4fte","mit","mehr","als","10000","Produkten","im","Angebot","sind","."],"question":"Finden Sie die Bezirke, in denen es sowohl Gesch\u00e4fte mit weniger als 3000 Produkten als auch Gesch\u00e4fte mit mehr als 10000 Produkten im Angebot sind."},{"db_id":"orchestra","query":"SELECT count(DISTINCT Nationality) FROM conductor","query_toks":["SELECT","count","(","DISTINCT","Nationality",")","FROM","conductor"],"query_toks_no_value":["select","count","(","distinct","nationality",")","from","conductor"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,4,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Nationalit\u00e4ten","haben","die","Dirigenten","?"],"question":"Wie viele verschiedene Nationalit\u00e4ten haben die Dirigenten?"},{"db_id":"car_1","query":"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';","query_toks":["SELECT","DISTINCT","T1.model","FROM","MODEL_LIST","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Model","=","T2.Model","JOIN","CARS_DATA","AS","T3","ON","T2.MakeId","=","T3.Id","JOIN","CAR_MAKERS","AS","T4","ON","T1.Maker","=","T4.Id","WHERE","T3.weight","<","3500","AND","T4.FullName","!","=","'Ford","Motor","Company","'",";"],"query_toks_no_value":["select","distinct","t1",".","model","from","model_list","as","t1","join","car_names","as","t2","on","t1",".","model","=","t2",".","model","join","cars_data","as","t3","on","t2",".","makeid","=","t3",".","id","join","car_makers","as","t4","on","t1",".","maker","=","t4",".","id","where","t3",".","weight","<","value","and","t4",".","fullname","!","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,14,false],null]],"table_units":[["table_unit",3],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,4,[0,[0,21,false],null],3500.0,null],"and",[false,7,[0,[0,8,false],null],"\"Ford Motor Company\"",null]]},"question_toks":["Welches","sind","die","verschiedenen","Modelle",",","die","leichter","als","3500","sind",",","aber","nicht","von","der","Ford","Motor","Company","hergestellt","wurden","?"],"question":"Welches sind die verschiedenen Modelle, die leichter als 3500 sind, aber nicht von der Ford Motor Company hergestellt wurden?"},{"db_id":"battle_death","query":"SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.id",",","T2.name","FROM","death","AS","T1","JOIN","ship","AS","t2","ON","T1.caused_by_ship_id","=","T2.id","GROUP","BY","T2.id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","id",",","t2",".","name","from","death","as","t1","join","ship","as","t2","on","t1",".","caused_by_ship_id","=","t2",".","id","group","by","t2",".","id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,14,false],null],[0,8,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","die","ID","und","der","Name","des","Schiffes",",","das","die","meisten","Gesamtverletzungen","verursacht","hat","?"],"question":"Wie lautet die ID und der Name des Schiffes, das die meisten Gesamtverletzungen verursacht hat?"},{"db_id":"world_1","query":"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"","query_toks":["SELECT","*","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","AND","IsOfficial","=","``","T","''","UNION","SELECT","*","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","Dutch","''","AND","IsOfficial","=","``","T","''"],"query_toks_no_value":["select","*","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","isofficial","=","value","union","select","*","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,0,false],null]]]],"union":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Dutch\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"where":[[false,2,[0,[0,24,false],null],"\"English\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["In","welchen","L\u00e4ndern","ist","entweder","Englisch","oder","Niederl\u00e4ndisch","die","offizielle","Sprache","?"],"question":"In welchen L\u00e4ndern ist entweder Englisch oder Niederl\u00e4ndisch die offizielle Sprache?"},{"db_id":"pets_1","query":"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","query_toks":["SELECT","DISTINCT","T1.fname",",","T1.age","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid"],"query_toks_no_value":["select","distinct","t1",".","fname",",","t1",".","age","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Den","Vornamen","und","das","Alter","der","Studierenden","finden",",","die","ein","Haustier","haben","."],"question":"Den Vornamen und das Alter der Studierenden finden, die ein Haustier haben."},{"db_id":"battle_death","query":"SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10","query_toks":["SELECT","T1.id",",","T1.name","FROM","battle","AS","T1","JOIN","ship","AS","T2","ON","T1.id","=","T2.lost_in_battle","JOIN","death","AS","T3","ON","T2.id","=","T3.caused_by_ship_id","GROUP","BY","T1.id","HAVING","sum","(","T3.killed",")",">","10"],"query_toks_no_value":["select","t1",".","id",",","t1",".","name","from","battle","as","t1","join","ship","as","t2","on","t1",".","id","=","t2",".","lost_in_battle","join","death","as","t3","on","t2",".","id","=","t3",".","caused_by_ship_id","group","by","t1",".","id","having","sum","(","t3",".","killed",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[[false,3,[0,[4,17,false],null],10.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","IDs","und","Namen","der","Schlachten",",","die","zu","insgesamt","mehr","als","10","Toten","f\u00fchrten","?"],"question":"Wie lauten die IDs und Namen der Schlachten, die zu insgesamt mehr als 10 Toten f\u00fchrten?"},{"db_id":"wta_1","query":"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","query_toks":["SELECT","sum","(","ranking_points",")",",","T1.first_name","FROM","players","AS","T1","JOIN","rankings","AS","T2","ON","T1.player_id","=","T2.player_id","GROUP","BY","T1.first_name"],"query_toks_no_value":["select","sum","(","ranking_points",")",",","t1",".","first_name","from","players","as","t1","join","rankings","as","t2","on","t1",".","player_id","=","t2",".","player_id","group","by","t1",".","first_name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,41,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,42,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","die","Gesamtpunktzahl","f\u00fcr","jeden","Spieler","und","seinen","Vornamen","an","."],"question":"Geben Sie die Gesamtpunktzahl f\u00fcr jeden Spieler und seinen Vornamen an."},{"db_id":"network_1","query":"SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2","query_toks":["SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","WHERE","T2.grade",">","5","GROUP","BY","T1.student_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","where","t2",".","grade",">","value","group","by","t1",".","student_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,3,[0,[0,3,false],null],5.0,null]]},"question_toks":["Zeigen","Sie","die","Namen","der","Sch\u00fclerInnen",",","die","eine","Note","h\u00f6her","als","5","haben","und","mindestens","2","Freunde","haben","."],"question":"Zeigen Sie die Namen der Sch\u00fclerInnen, die eine Note h\u00f6her als 5 haben und mindestens 2 Freunde haben."},{"db_id":"pets_1","query":"SELECT count(DISTINCT pettype) FROM pets","query_toks":["SELECT","count","(","DISTINCT","pettype",")","FROM","pets"],"query_toks_no_value":["select","count","(","distinct","pettype",")","from","pets"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,12,true],null]]]],"union":null,"where":[]},"question_toks":["Die","Anzahl","der","verschiedenen","Arten","von","Haustieren","ermitteln","."],"question":"Die Anzahl der verschiedenen Arten von Haustieren ermitteln. "},{"db_id":"world_1","query":"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"","query_toks":["SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","AND","T2.IsOfficial","=","``","T","''","INTERSECT","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","French","''","AND","T2.IsOfficial","=","``","T","''"],"query_toks_no_value":["select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","t2",".","isofficial","=","value","intersect","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","t2",".","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"French\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Nennen","Sie","die","L\u00e4nder","mit","Englisch","und","Franz\u00f6sisch","als","offizielle","Sprachen","."],"question":"Nennen Sie die L\u00e4nder mit Englisch und Franz\u00f6sisch als offizielle Sprachen."},{"db_id":"tvshow","query":"SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')","query_toks":["SELECT","package_option","FROM","TV_Channel","WHERE","id","NOT","IN","(","SELECT","channel","FROM","cartoon","WHERE","directed_by","=","'Ben","Jones","'",")"],"query_toks_no_value":["select","package_option","from","tv_channel","where","id","not","in","(","select","channel","from","cartoon","where","directed_by","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null]]},null]]},"question_toks":["die","Paketangebote","des","Fernsehsenders","finden",",","die","keinen","Zeichentrickfilm","unter","der","Regie","von","Ben","Jones","haben","."],"question":"die Paketangebote des Fernsehsenders finden, die keinen Zeichentrickfilm unter der Regie von Ben Jones haben."},{"db_id":"car_1","query":"SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';","query_toks":["SELECT","T1.Accelerate","FROM","CARS_DATA","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Id","=","T2.MakeId","WHERE","T2.Make","=","'amc","hornet","sportabout","(","sw",")","'",";"],"query_toks_no_value":["select","t1",".","accelerate","from","cars_data","as","t1","join","car_names","as","t2","on","t1",".","id","=","t2",".","makeid","where","t2",".","make","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,13,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"amc hornet sportabout (sw)\"",null]]},"question_toks":["Wie","stark","beschleunigt","das","Auto",",","das","amc","hornet","sportabout","(","sw",")","macht","?"],"question":"Wie stark beschleunigt das Auto, das amc hornet sportabout (sw) macht?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3","query_toks":["SELECT","template_type_code","FROM","Templates","GROUP","BY","template_type_code","HAVING","count","(","*",")","<","3"],"query_toks_no_value":["select","template_type_code","from","templates","group","by","template_type_code","having","count","(","*",")","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,5,false]],"having":[[false,4,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Alle","Vorlagentypcodes","mit","weniger","als","drei","Vorlagen","anzeigen","."],"question":"Alle Vorlagentypcodes mit weniger als drei Vorlagen anzeigen."},{"db_id":"dog_kennels","query":"SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )","query_toks":["SELECT","count","(","*",")","FROM","Professionals","WHERE","professional_id","NOT","IN","(","SELECT","professional_id","FROM","Treatments",")"],"query_toks_no_value":["select","count","(","*",")","from","professionals","where","professional_id","not","in","(","select","professional_id","from","treatments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,33,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,46,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","viele","Fachleute","haben","keine","Hunde","behandelt","?"],"question":"Wie viele Fachleute haben keine Hunde behandelt?"},{"db_id":"world_1","query":"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"","query_toks":["SELECT","Population",",","LifeExpectancy","FROM","country","WHERE","Name","=","``","Brazil","''"],"query_toks_no_value":["select","population",",","lifeexpectancy","from","country","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Brazil\"",null]]},"question_toks":["Wie","hoch","sind","die","Bev\u00f6lkerungszahl","und","die","Lebenserwartung","in","Brasilien","?"],"question":"Wie hoch sind die Bev\u00f6lkerungszahl und die Lebenserwartung in Brasilien?"},{"db_id":"world_1","query":"SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")","query_toks":["SELECT","Name","FROM","country","WHERE","Continent","=","``","Asia","''","AND","population",">","(","SELECT","max","(","population",")","FROM","country","WHERE","Continent","=","``","Africa","''",")"],"query_toks_no_value":["select","name","from","country","where","continent","=","value","and","population",">","(","select","max","(","population",")","from","country","where","continent","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null],"and",[false,3,[0,[0,14,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Africa\"",null]]},null]]},"question_toks":["Welche","asiatischen","L\u00e4nder","haben","eine","Bev\u00f6lkerung",",","die","gr\u00f6\u00dfer","ist","als","alle","L\u00e4nder","Afrikas","?"],"question":"Welche asiatischen L\u00e4nder haben eine Bev\u00f6lkerung, die gr\u00f6\u00dfer ist als alle L\u00e4nder Afrikas?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(DISTINCT current_address_id) FROM Students","query_toks":["SELECT","count","(","DISTINCT","current_address_id",")","FROM","Students"],"query_toks_no_value":["select","count","(","distinct","current_address_id",")","from","students"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,33,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Adressen","besitzen","die","Studierenden","derzeit","?"],"question":"Wie viele verschiedene Adressen besitzen die Studierenden derzeit?"},{"db_id":"wta_1","query":"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","query_toks":["SELECT","winner_name",",","loser_name","FROM","matches","ORDER","BY","minutes","DESC","LIMIT","1"],"query_toks_no_value":["select","winner_name",",","loser_name","from","matches","order","by","minutes","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","des","Siegers","und","des","Verlierers",",","die","das","l\u00e4ngste","Match","bestritten","haben","?"],"question":"Wie lauten die Namen des Siegers und des Verlierers, die das l\u00e4ngste Match bestritten haben?"},{"db_id":"student_transcripts_tracking","query":"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","query_toks":["SELECT","DISTINCT","T1.first_name",",","T1.middle_name",",","T1.last_name","FROM","Students","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.student_id","=","T2.student_id","JOIN","Degree_Programs","AS","T3","ON","T2.degree_program_id","=","T3.degree_program_id","WHERE","T3.degree_summary_name","=","'Bachelor","'"],"query_toks_no_value":["select","distinct","t1",".","first_name",",","t1",".","middle_name",",","t1",".","last_name","from","students","as","t1","join","student_enrolment","as","t2","on","t1",".","student_id","=","t2",".","student_id","join","degree_programs","as","t3","on","t2",".","degree_program_id","=","t3",".","degree_program_id","where","t3",".","degree_summary_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,47,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"Bachelor\"",null]]},"question_toks":["Wer","ist","in","einem","Bachelor-Studiengang","immatrikuliert","?","F\u00fchren","Sie","den","Vornamen",",","den","zweiten","Vornamen","und","den","Nachnamen","auf","."],"question":"Wer ist in einem Bachelor-Studiengang immatrikuliert? F\u00fchren Sie den Vornamen, den zweiten Vornamen und den Nachnamen auf."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id","query_toks":["SELECT","template_type_code","FROM","Templates","EXCEPT","SELECT","template_type_code","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id"],"query_toks_no_value":["select","template_type_code","from","templates","except","select","template_type_code","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Alle","Vorlagentypcodes","anzeigen",",","die","von","keinem","Dokument","verwendet","werden","."],"question":"Alle Vorlagentypcodes anzeigen, die von keinem Dokument verwendet werden."},{"db_id":"world_1","query":"SELECT count(*) FROM country WHERE continent  =  \"Asia\"","query_toks":["SELECT","count","(","*",")","FROM","country","WHERE","continent","=","``","Asia","''"],"query_toks_no_value":["select","count","(","*",")","from","country","where","continent","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Die","Liste","der","L\u00e4nder","in","Asien","z\u00e4hlen","."],"question":"Die Liste der L\u00e4nder in Asien z\u00e4hlen."},{"db_id":"student_transcripts_tracking","query":"SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )","query_toks":["SELECT","semester_name","FROM","Semesters","WHERE","semester_id","NOT","IN","(","SELECT","semester_id","FROM","Student_Enrolment",")"],"query_toks_no_value":["select","semester_name","from","semesters","where","semester_id","not","in","(","select","semester_id","from","student_enrolment",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,29,false],null]]]],"union":null,"where":[[true,8,[0,[0,28,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,46,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["In","welchen","Semestern","ist","kein","Student","immatrikuliert","?","Geben","Sie","den","Semesternamen","an","."],"question":"In welchen Semestern ist kein Student immatrikuliert? Geben Sie den Semesternamen an."},{"db_id":"world_1","query":"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"","query_toks":["SELECT","avg","(","GNP",")",",","sum","(","population",")","FROM","country","WHERE","GovernmentForm","=","``","US","Territory","''"],"query_toks_no_value":["select","avg","(","gnp",")",",","sum","(","population",")","from","country","where","governmentform","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,16,false],null]],[4,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"US Territory\"",null]]},"question_toks":["Wie","hoch","ist","das","durchschnittliche","BIP","und","die","Gesamtbev\u00f6lkerung","in","allen","Nationen",",","deren","Regierung","auf","US-Territorium","liegt","?"],"question":"Wie hoch ist das durchschnittliche BIP und die Gesamtbev\u00f6lkerung in allen Nationen, deren Regierung auf US-Territorium liegt?"},{"db_id":"concert_singer","query":"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","query_toks":["SELECT","name",",","country","FROM","singer","WHERE","song_name","LIKE","'","%","Hey","%","'"],"query_toks_no_value":["select","name",",","country","from","singer","where","song_name","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,9,[0,[0,11,false],null],"\"%Hey%\"",null]]},"question_toks":["Wie","lautet","der","Name","und","die","Nation","des","S\u00e4ngers",",","der","ein","Lied","mit","``","Hey","''","im","Namen","hat","?"],"question":"Wie lautet der Name und die Nation des S\u00e4ngers, der ein Lied mit \"Hey\" im Namen hat?"},{"db_id":"car_1","query":"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","query_toks":["SELECT","T1.Continent",",","count","(","*",")","FROM","CONTINENTS","AS","T1","JOIN","COUNTRIES","AS","T2","ON","T1.ContId","=","T2.continent","JOIN","car_makers","AS","T3","ON","T2.CountryId","=","T3.Country","GROUP","BY","T1.Continent",";"],"query_toks_no_value":["select","t1",".","continent",",","count","(","*",")","from","continents","as","t1","join","countries","as","t2","on","t1",".","contid","=","t2",".","continent","join","car_makers","as","t3","on","t2",".","countryid","=","t3",".","country","group","by","t1",".","continent"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,5,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Autohersteller","gibt","es","auf","jedem","Kontinent","?","Geben","Sie","den","Namen","des","Kontinents","und","die","Anzahl","an","."],"question":"Wie viele Autohersteller gibt es auf jedem Kontinent? Geben Sie den Namen des Kontinents und die Anzahl an."},{"db_id":"voter_1","query":"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2","query_toks":["SELECT","T1.contestant_number",",","T1.contestant_name","FROM","contestants","AS","T1","JOIN","votes","AS","T2","ON","T1.contestant_number","=","T2.contestant_number","GROUP","BY","T1.contestant_number","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","contestant_number",",","t1",".","contestant_name","from","contestants","as","t1","join","votes","as","t2","on","t1",".","contestant_number","=","t2",".","contestant_number","group","by","t1",".","contestant_number","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,8,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,3,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Teilnehmerzahlen","und","die","Namen","der","Teilnehmer",",","die","mindestens","zwei","Stimmen","hatten","?"],"question":"Wie lauten die Teilnehmerzahlen und die Namen der Teilnehmer, die mindestens zwei Stimmen hatten?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code ,  template_type_description FROM Ref_template_types","query_toks":["SELECT","template_type_code",",","template_type_description","FROM","Ref_template_types"],"query_toks_no_value":["select","template_type_code",",","template_type_description","from","ref_template_types"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Alle","Vorlagentypcodes","und","Beschreibungen","anzeigen","."],"question":"Alle Vorlagentypcodes und Beschreibungen anzeigen."},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","WHERE","T2.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","where","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Wie","viele","Fl\u00fcge","kommen","in","der","Stadt","Aberdeen","an","?"],"question":"Wie viele Fl\u00fcge kommen in der Stadt Aberdeen an?"},{"db_id":"tvshow","query":"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","query_toks":["SELECT","Episode",",","Rating","FROM","TV_series","ORDER","BY","Rating","DESC","LIMIT","3",";"],"query_toks_no_value":["select","episode",",","rating","from","tv_series","order","by","rating","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","die","Top","3","der","TV-Serien","mit","der","h\u00f6chsten","Bewertung","an",".","Nennen","Sie","die","Episode","und","die","Bewertung","der","TV-Serie","."],"question":"Geben Sie die Top 3 der TV-Serien mit der h\u00f6chsten Bewertung an. Nennen Sie die Episode und die Bewertung der TV-Serie."},{"db_id":"wta_1","query":"SELECT count(*) ,  hand FROM players GROUP BY hand","query_toks":["SELECT","count","(","*",")",",","hand","FROM","players","GROUP","BY","hand"],"query_toks_no_value":["select","count","(","*",")",",","hand","from","players","group","by","hand"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","Anzahl","der","Spieler","f\u00fcr","jeden","Handtyp","."],"question":"Finden Sie die Anzahl der Spieler f\u00fcr jeden Handtyp."},{"db_id":"network_1","query":"SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2","query_toks":["SELECT","T2.name","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","name","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,6,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","von","Studierenden",",","die","2","oder","mehr","Vorlieben","haben","?"],"question":"Wie lauten die Namen von Studierenden, die 2 oder mehr Vorlieben haben?"},{"db_id":"world_1","query":"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","query_toks":["SELECT","Name",",","SurfaceArea",",","IndepYear","FROM","country","ORDER","BY","Population","LIMIT","1"],"query_toks_no_value":["select","name",",","surfacearea",",","indepyear","from","country","order","by","population","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,14,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,12,false],null]],[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","der","Name",",","das","Unabh\u00e4ngigkeitsjahr","und","die","Fl\u00e4che","des","Landes","mit","der","kleinsten","Bev\u00f6lkerung","?"],"question":"Wie lauten der Name, das Unabh\u00e4ngigkeitsjahr und die Fl\u00e4che des Landes mit der kleinsten Bev\u00f6lkerung?"},{"db_id":"concert_singer","query":"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","query_toks":["SELECT","T2.name",",","count","(","*",")","FROM","singer_in_concert","AS","T1","JOIN","singer","AS","T2","ON","T1.singer_id","=","T2.singer_id","GROUP","BY","T2.singer_id"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","singer_in_concert","as","t1","join","singer","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","group","by","t2",".","singer_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,21,false],null],[0,8,false],null]],"table_units":[["table_unit",3],["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Nennen","Sie","die","Namen","der","S\u00e4nger","und","die","Anzahl","der","Konzerte","f\u00fcr","jeden","S\u00e4nger","."],"question":"Nennen Sie die Namen der S\u00e4nger und die Anzahl der Konzerte f\u00fcr jeden S\u00e4nger."},{"db_id":"pets_1","query":"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","query_toks":["SELECT","avg","(","weight",")",",","pettype","FROM","pets","GROUP","BY","pettype"],"query_toks_no_value":["select","avg","(","weight",")",",","pettype","from","pets","group","by","pettype"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,14,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Ermitteln","Sie","das","Durchschnittsgewicht","f\u00fcr","jeden","Haustiertyp","."],"question":"Ermitteln Sie das Durchschnittsgewicht f\u00fcr jeden Haustiertyp."},{"db_id":"world_1","query":"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")","query_toks":["SELECT","COUNT","(","*",")","FROM","(","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","INTERSECT","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","Dutch","''",")"],"query_toks_no_value":["select","count","(","*",")","from","(","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","intersect","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["sql",{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Dutch\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]}]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","L\u00e4nder","sprechen","sowohl","Englisch","als","auch","Niederl\u00e4ndisch","?"],"question":"Wie viele L\u00e4nder sprechen sowohl Englisch als auch Niederl\u00e4ndisch?"},{"db_id":"museum_visit","query":"SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","t2.Museum_ID",",","t1.name","FROM","museum","AS","t1","JOIN","visit","AS","t2","ON","t1.Museum_ID","=","t2.Museum_ID","GROUP","BY","t2.Museum_ID","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","museum_id",",","t1",".","name","from","museum","as","t1","join","visit","as","t2","on","t1",".","museum_id","=","t2",".","museum_id","group","by","t2",".","museum_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","die","Kennung","und","der","Name","des","Museums",",","das","am","h\u00e4ufigsten","besucht","wird","?"],"question":"Wie lautet die Kennung und der Name des Museums, das am h\u00e4ufigsten besucht wird?"},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","APG","''","INTERSECT","SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","CVO","''"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value","intersect","select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"CVO\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"APG\"",null]]},"question_toks":["Finden","Sie","alle","Fluggesellschaften",",","die","Fl\u00fcge","von","den","beiden","Flugh\u00e4fen","'APG","'","und","'CVO","'","haben","."],"question":"Finden Sie alle Fluggesellschaften, die Fl\u00fcge von den beiden Flugh\u00e4fen 'APG' und 'CVO' haben."},{"db_id":"singer","query":"SELECT Birth_Year ,  Citizenship FROM singer","query_toks":["SELECT","Birth_Year",",","Citizenship","FROM","singer"],"query_toks_no_value":["select","birth_year",",","citizenship","from","singer"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Geburtsjahre","und","Staatsangeh\u00f6rigkeiten","der","S\u00e4ngerinnen\/S\u00e4nger","?"],"question":"Welches sind die Geburtsjahre und Staatsangeh\u00f6rigkeiten der S\u00e4ngerinnen\/S\u00e4nger?"},{"db_id":"dog_kennels","query":"SELECT charge_type ,  charge_amount FROM Charges","query_toks":["SELECT","charge_type",",","charge_amount","FROM","Charges"],"query_toks_no_value":["select","charge_type",",","charge_amount","from","charges"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viel","kostet","jede","Geb\u00fchrenart","?","Geben","Sie","sowohl","die","Geb\u00fchrenart","als","auch","den","Betrag","an","."],"question":"Wie viel kostet jede Geb\u00fchrenart? Geben Sie sowohl die Geb\u00fchrenart als auch den Betrag an."},{"db_id":"dog_kennels","query":"SELECT count(DISTINCT dog_id) FROM Treatments","query_toks":["SELECT","count","(","DISTINCT","dog_id",")","FROM","Treatments"],"query_toks_no_value":["select","count","(","distinct","dog_id",")","from","treatments"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,45,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Hunde","wurden","behandelt","?"],"question":"Wie viele Hunde wurden behandelt?"},{"db_id":"poker_player","query":"SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200","query_toks":["SELECT","avg","(","T2.Earnings",")","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","WHERE","T1.Height",">","200"],"query_toks_no_value":["select","avg","(","t2",".","earnings",")","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","where","t1",".","height",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,6,false],null]]]],"union":null,"where":[[false,3,[0,[0,11,false],null],200.0,null]]},"question_toks":["Geben","Sie","den","Durchschnittsverdienst","von","Pokerspielern","an",",","die","gr\u00f6\u00dfer","als","200","sind","."],"question":"Geben Sie den Durchschnittsverdienst von Pokerspielern an, die gr\u00f6\u00dfer als 200 sind."},{"db_id":"poker_player","query":"SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID","query_toks":["SELECT","T1.Name","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID"],"query_toks_no_value":["select","t1",".","name","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","die","Namen","aller","Pokerspieler","zur\u00fcck","."],"question":"Geben Sie die Namen aller Pokerspieler zur\u00fcck."},{"db_id":"flight_2","query":"SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.City","FROM","AIRPORTS","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.AirportCode","=","T2.SourceAirport","GROUP","BY","T1.City","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","city","from","airports","as","t1","join","flights","as","t2","on","t1",".","airportcode","=","t2",".","sourceairport","group","by","t1",".","city","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,12,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Stadt","hat","die","meisten","abfliegenden","Fl\u00fcge","?"],"question":"Welche Stadt hat die meisten abfliegenden Fl\u00fcge?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1","query_toks":["SELECT","document_id","FROM","Paragraphs","GROUP","BY","document_id","ORDER","BY","count","(","*",")","ASC","LIMIT","1"],"query_toks_no_value":["select","document_id","from","paragraphs","group","by","document_id","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","die","ID","des","Dokuments","mit","den","wenigsten","Abs\u00e4tzen","zur\u00fcck","."],"question":"Geben Sie die ID des Dokuments mit den wenigsten Abs\u00e4tzen zur\u00fcck."},{"db_id":"pets_1","query":"SELECT max(weight) ,  petType FROM pets GROUP BY petType","query_toks":["SELECT","max","(","weight",")",",","petType","FROM","pets","GROUP","BY","petType"],"query_toks_no_value":["select","max","(","weight",")",",","pettype","from","pets","group","by","pettype"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,14,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","das","H\u00f6chstgewicht","und","den","Typ","f\u00fcr","jede","Art","von","Haustier","an","."],"question":"Geben Sie das H\u00f6chstgewicht und den Typ f\u00fcr jede Art von Haustier an."},{"db_id":"flight_2","query":"SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"","query_toks":["SELECT","Country","FROM","AIRLINES","WHERE","Airline","=","``","JetBlue","Airways","''"],"query_toks_no_value":["select","country","from","airlines","where","airline","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"JetBlue Airways\"",null]]},"question_toks":["Mit","welchem","Land","ist","Jetblue","Airways","verbunden","?"],"question":"Mit welchem Land ist Jetblue Airways verbunden?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2","query_toks":["SELECT","document_id","FROM","Paragraphs","GROUP","BY","document_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","document_id","from","paragraphs","group","by","document_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,15,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Ausweise","haben","Dokumente","mit","2","oder","mehr","Abs\u00e4tzen","?"],"question":"Welche Ausweise haben Dokumente mit 2 oder mehr Abs\u00e4tzen?"},{"db_id":"network_1","query":"SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"","query_toks":["SELECT","grade","FROM","Highschooler","WHERE","name","=","``","Kyle","''"],"query_toks_no_value":["select","grade","from","highschooler","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["In","welche","Klasse","geht","Kyle","?"],"question":"In welche Klasse geht Kyle?"},{"db_id":"world_1","query":"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","query_toks":["SELECT","Name",",","SurfaceArea","FROM","country","ORDER","BY","SurfaceArea","DESC","LIMIT","5"],"query_toks_no_value":["select","name",",","surfacearea","from","country","order","by","surfacearea","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":5,"orderBy":["desc",[[0,[0,12,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","die","Namen","und","Fl\u00e4chenangaben","der","5","gr\u00f6\u00dften","L\u00e4nder","zur\u00fcck","."],"question":"Geben Sie die Namen und Fl\u00e4chenangaben der 5 gr\u00f6\u00dften L\u00e4nder zur\u00fcck."},{"db_id":"car_1","query":"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;","query_toks":["SELECT","avg","(","Weight",")",",","YEAR","FROM","CARS_DATA","GROUP","BY","YEAR",";"],"query_toks_no_value":["select","avg","(","weight",")",",","year","from","cars_data","group","by","year"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,21,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","das","Durchschnittsgewicht","der","Autos","jedes","Jahr","?"],"question":"Was ist das Durchschnittsgewicht der Autos jedes Jahr?"},{"db_id":"poker_player","query":"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","query_toks":["SELECT","Final_Table_Made",",","Best_Finish","FROM","poker_player"],"query_toks_no_value":["select","final_table_made",",","best_finish","from","poker_player"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Listen","Sie","die","erreichten","Endspieltische","und","die","besten","Platzierungen","der","Pokerspieler","auf","."],"question":"Listen Sie die erreichten Endspieltische und die besten Platzierungen der Pokerspieler auf."},{"db_id":"dog_kennels","query":"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'","query_toks":["SELECT","T1.first_name",",","T2.name","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id","WHERE","T1.state","=","'Virginia","'"],"query_toks_no_value":["select","t1",".","first_name",",","t2",".","name","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","where","t1",".","state","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,25,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"Virginia\"",null]]},"question_toks":["Welche","Hunde","geh\u00f6ren","jemandem",",","der","in","Virginia","lebt","?","Geben","Sie","den","Vornamen","des","Besitzers","und","den","Namen","des","Hundes","an","."],"question":"Welche Hunde geh\u00f6ren jemandem, der in Virginia lebt? Geben Sie den Vornamen des Besitzers und den Namen des Hundes an."},{"db_id":"concert_singer","query":"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","query_toks":["SELECT","T2.name",",","count","(","*",")","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","GROUP","BY","T1.stadium_id"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","group","by","t1",".","stadium_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Konzerte","finden","in","jedem","Stadion","statt","?"],"question":"Wie viele Konzerte finden in jedem Stadion statt?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","query_toks":["SELECT","T1.course_name",",","T1.course_id","FROM","Courses","AS","T1","JOIN","Sections","AS","T2","ON","T1.course_id","=","T2.course_id","GROUP","BY","T1.course_id","HAVING","count","(","*",")","<","=","2"],"query_toks_no_value":["select","t1",".","course_name",",","t1",".","course_id","from","courses","as","t1","join","sections","as","t2","on","t1",".","course_id","=","t2",".","course_id","group","by","t1",".","course_id","having","count","(","*",")","<","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,24,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[[0,10,false]],"having":[[false,6,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","und","Ausweise","aller","Kurse","mit","weniger","als","2","Abschnitten","?"],"question":"Wie lauten die Namen und Ausweise aller Kurse mit weniger als 2 Abschnitten?"},{"db_id":"dog_kennels","query":"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code","query_toks":["SELECT","T1.cost_of_treatment",",","T2.treatment_type_description","FROM","Treatments","AS","T1","JOIN","treatment_types","AS","T2","ON","T1.treatment_type_code","=","T2.treatment_type_code"],"query_toks_no_value":["select","t1",".","cost_of_treatment",",","t2",".","treatment_type_description","from","treatments","as","t1","join","treatment_types","as","t2","on","t1",".","treatment_type_code","=","t2",".","treatment_type_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,47,false],null],[0,8,false],null]],"table_units":[["table_unit",7],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,49,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Listen","Sie","die","Kosten","f\u00fcr","jede","Behandlung","und","die","entsprechende","Beschreibung","der","Behandlungsart","auf","."],"question":"Listen Sie die Kosten f\u00fcr jede Behandlung und die entsprechende Beschreibung der Behandlungsart auf."},{"db_id":"flight_2","query":"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"","query_toks":["SELECT","Airline","FROM","AIRLINES","WHERE","Abbreviation","=","``","UAL","''"],"query_toks_no_value":["select","airline","from","airlines","where","abbreviation","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],"\"UAL\"",null]]},"question_toks":["Geben","Sie","die","Fluggesellschaft","mit","dem","K\u00fcrzel","'UAL","'","an","."],"question":"Geben Sie die Fluggesellschaft mit dem K\u00fcrzel 'UAL' an."},{"db_id":"flight_2","query":"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"","query_toks":["SELECT","T1.FlightNo","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","WHERE","T2.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","t1",".","flightno","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","where","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["``","Was","sind","die","Flugnummern","der","Fl\u00fcge",",","die","in","der","Stadt","``","''","Aberdeen","''","''","ankommen","?","''"],"question":"\" Was sind die Flugnummern der Fl\u00fcge, die in der Stadt \"\"Aberdeen\"\" ankommen?\""},{"db_id":"flight_2","query":"SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1","query_toks":["SELECT","T1.AirportCode","FROM","AIRPORTS","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.AirportCode","=","T2.DestAirport","OR","T1.AirportCode","=","T2.SourceAirport","GROUP","BY","T1.AirportCode","ORDER","BY","count","(","*",")","LIMIT","1"],"query_toks_no_value":["select","t1",".","airportcode","from","airports","as","t1","join","flights","as","t2","on","t1",".","airportcode","=","t2",".","destairport","or","t1",".","airportcode","=","t2",".","sourceairport","group","by","t1",".","airportcode","order","by","count","(","*",")","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,13,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","den","Code","des","Flughafens","mit","den","wenigsten","Fl\u00fcgen","an","."],"question":"Geben Sie den Code des Flughafens mit den wenigsten Fl\u00fcgen an."},{"db_id":"network_1","query":"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id","query_toks":["SELECT","student_id",",","count","(","*",")","FROM","Likes","GROUP","BY","student_id"],"query_toks_no_value":["select","student_id",",","count","(","*",")","from","likes","group","by","student_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","``","Vorlieben","''","stehen","f\u00fcr","jeden","Studentenausweis","?"],"question":"Wie viele \" Vorlieben\" stehen f\u00fcr jeden Studentenausweis?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"","query_toks":["SELECT","T1.paragraph_text","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_id","=","T2.document_id","WHERE","T2.document_name","=","``","Customer","reviews","''"],"query_toks_no_value":["select","t1",".","paragraph_text","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","where","t2",".","document_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Customer reviews\"",null]]},"question_toks":["Welches","sind","die","Absatztexte","f\u00fcr","das","Dokument","mit","dem","Namen","'Customer","reviews","'","?"],"question":"Welches sind die Absatztexte f\u00fcr das Dokument mit dem Namen 'Customer reviews'?"},{"db_id":"student_transcripts_tracking","query":"SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'","query_toks":["SELECT","zip_postcode","FROM","Addresses","WHERE","city","=","'Port","Chelsea","'"],"query_toks_no_value":["select","zip_postcode","from","addresses","where","city","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Port Chelsea\"",null]]},"question_toks":["Wie","lautet","die","Postleitzahl","f\u00fcr","Port","Chelsea","?"],"question":"Wie lautet die Postleitzahl f\u00fcr Port Chelsea?"},{"db_id":"dog_kennels","query":"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","query_toks":["SELECT","DISTINCT","T1.date_arrived",",","T1.date_departed","FROM","Dogs","AS","T1","JOIN","Treatments","AS","T2","ON","T1.dog_id","=","T2.dog_id"],"query_toks_no_value":["select","distinct","t1",".","date_arrived",",","t1",".","date_departed","from","dogs","as","t1","join","treatments","as","t2","on","t1",".","dog_id","=","t2",".","dog_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,20,false],null],[0,45,false],null]],"table_units":[["table_unit",5],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,30,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Ermitteln","Sie","das","Ankunftsdatum","und","das","Abreisedatum","der","Hunde",",","die","eine","Behandlung","erhalten","haben","."],"question":"Ermitteln Sie das Ankunftsdatum und das Abreisedatum der Hunde, die eine Behandlung erhalten haben."},{"db_id":"student_transcripts_tracking","query":"SELECT avg(transcript_date) FROM Transcripts","query_toks":["SELECT","avg","(","transcript_date",")","FROM","Transcripts"],"query_toks_no_value":["select","avg","(","transcript_date",")","from","transcripts"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",9]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,53,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","das","durchschnittliche","Datum","der","Abschrift","?"],"question":"Was ist das durchschnittliche Datum der Abschrift?"},{"db_id":"museum_visit","query":"SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1","query_toks":["SELECT","t1.name",",","t1.age","FROM","visitor","AS","t1","JOIN","visit","AS","t2","ON","t1.id","=","t2.visitor_id","ORDER","BY","t2.num_of_ticket","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name",",","t1",".","age","from","visitor","as","t1","join","visit","as","t2","on","t1",".","id","=","t2",".","visitor_id","order","by","t2",".","num_of_ticket","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","den","Namen","und","das","Alter","des","Besuchers",",","der","die","meisten","Tickets","auf","einmal","gekauft","hat","."],"question":"Finden Sie den Namen und das Alter des Besuchers, der die meisten Tickets auf einmal gekauft hat."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID","query_toks":["SELECT","DISTINCT","T1.template_type_description","FROM","Ref_template_types","AS","T1","JOIN","Templates","AS","T2","ON","T1.template_type_code","=","T2.template_type_code","JOIN","Documents","AS","T3","ON","T2.Template_ID","=","T3.template_ID"],"query_toks_no_value":["select","distinct","t1",".","template_type_description","from","ref_template_types","as","t1","join","templates","as","t2","on","t1",".","template_type_code","=","t2",".","template_type_code","join","documents","as","t3","on","t2",".","template_id","=","t3",".","template_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,5,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","die","verschiedenen","Beschreibungen","f\u00fcr","Vorlagen","zur\u00fcck",",","die","in","einem","Dokument","verwendet","wurden","."],"question":"Geben Sie die verschiedenen Beschreibungen f\u00fcr Vorlagen zur\u00fcck, die in einem Dokument verwendet wurden."},{"db_id":"poker_player","query":"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality","query_toks":["SELECT","Nationality",",","COUNT","(","*",")","FROM","people","GROUP","BY","Nationality"],"query_toks_no_value":["select","nationality",",","count","(","*",")","from","people","group","by","nationality"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","verschiedenen","Nationalit\u00e4ten","von","Personen","und","die","entsprechende","Anzahl","von","Personen","aus","jeder","Nation","?"],"question":"Welches sind die verschiedenen Nationalit\u00e4ten von Personen und die entsprechende Anzahl von Personen aus jeder Nation?"},{"db_id":"dog_kennels","query":"SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'","query_toks":["SELECT","role_code",",","street",",","city",",","state","FROM","professionals","WHERE","city","LIKE","'","%","West","%","'"],"query_toks_no_value":["select","role_code",",","street",",","city",",","state","from","professionals","where","city","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]],[0,[0,[0,38,false],null]]]],"union":null,"where":[[false,9,[0,[0,37,false],null],"\"%West%\"",null]]},"question_toks":["Finden","Sie","die","Rolle",",","die","Stra\u00dfe",",","die","Stadt","und","den","Bundesland","der","Fachkr\u00e4fte",",","die","in","einer","Stadt","leben",",","die","die","Teilstrings","'West","'","enth\u00e4lt","."],"question":"Finden Sie die Rolle, die Stra\u00dfe, die Stadt und den Bundesland der Fachkr\u00e4fte, die in einer Stadt leben, die die Teilstrings 'West' enth\u00e4lt."},{"db_id":"student_transcripts_tracking","query":"SELECT section_description FROM Sections WHERE section_name  =  'h'","query_toks":["SELECT","section_description","FROM","Sections","WHERE","section_name","=","'h","'"],"query_toks_no_value":["select","section_description","from","sections","where","section_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,26,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"h\"",null]]},"question_toks":["Wie","lautet","die","Beschreibung","f\u00fcr","den","Abschnitt","mit","der","Bezeichnung","h","?"],"question":"Wie lautet die Beschreibung f\u00fcr den Abschnitt mit der Bezeichnung h?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT min(Version_Number) ,  template_type_code FROM Templates","query_toks":["SELECT","min","(","Version_Number",")",",","template_type_code","FROM","Templates"],"query_toks_no_value":["select","min","(","version_number",")",",","template_type_code","from","templates"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","die","niedrigste","Versionsnummer","zusammen","mit","dem","entsprechenden","Code","des","Vorlagentyps","zur\u00fcck","."],"question":"Geben Sie die niedrigste Versionsnummer zusammen mit dem entsprechenden Code des Vorlagentyps zur\u00fcck."},{"db_id":"concert_singer","query":"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","query_toks":["SELECT","T2.name",",","count","(","*",")","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","GROUP","BY","T1.stadium_id"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","group","by","t1",".","stadium_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","den","Stadionnamen","und","die","Anzahl","der","Konzerte","in","jedem","Stadion","an","."],"question":"Zeigen Sie den Stadionnamen und die Anzahl der Konzerte in jedem Stadion an."},{"db_id":"student_transcripts_tracking","query":"SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id","query_toks":["SELECT","T1.last_name","FROM","Students","AS","T1","JOIN","Addresses","AS","T2","ON","T1.current_address_id","=","T2.address_id","WHERE","T2.state_province_county","=","'NorthCarolina","'","EXCEPT","SELECT","DISTINCT","T3.last_name","FROM","Students","AS","T3","JOIN","Student_Enrolment","AS","T4","ON","T3.student_id","=","T4.student_id"],"query_toks_no_value":["select","t1",".","last_name","from","students","as","t1","join","addresses","as","t2","on","t1",".","current_address_id","=","t2",".","address_id","where","t2",".","state_province_county","=","value","except","select","distinct","t3",".","last_name","from","students","as","t3","join","student_enrolment","as","t4","on","t3",".","student_id","=","t4",".","student_id"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,47,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,37,false],null]]]],"union":null,"where":[]},"from":{"conds":[[false,2,[0,[0,33,false],null],[0,1,false],null]],"table_units":[["table_unit",6],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,37,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"NorthCarolina\"",null]]},"question_toks":["Finden","Sie","den","Nachnamen","der","Studenten",",","die","derzeit","im","Bundesstaat","North","Carolina","leben",",","aber","in","keinem","Studiengang","eingeschrieben","sind","."],"question":"Finden Sie den Nachnamen der Studenten, die derzeit im Bundesstaat North Carolina leben, aber in keinem Studiengang eingeschrieben sind."},{"db_id":"flight_2","query":"SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.AirportCode","FROM","AIRPORTS","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.AirportCode","=","T2.DestAirport","OR","T1.AirportCode","=","T2.SourceAirport","GROUP","BY","T1.AirportCode","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","airportcode","from","airports","as","t1","join","flights","as","t2","on","t1",".","airportcode","=","t2",".","destairport","or","t1",".","airportcode","=","t2",".","sourceairport","group","by","t1",".","airportcode","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,13,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Flughafencode","des","Flughafens","mit","den","meisten","Fl\u00fcgen","?"],"question":"Wie lautet der Flughafencode des Flughafens mit den meisten Fl\u00fcgen?"},{"db_id":"course_teach","query":"SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Hometown","FROM","teacher","GROUP","BY","Hometown","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","hometown","from","teacher","group","by","hometown","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Nennen","Sie","die","h\u00e4ufigste","Heimatstadt","von","Lehrern","."],"question":"Nennen Sie die h\u00e4ufigste Heimatstadt von Lehrern."},{"db_id":"employee_hire_evaluation","query":"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","query_toks":["SELECT","manager_name",",","district","FROM","shop","ORDER","BY","number_products","DESC","LIMIT","1"],"query_toks_no_value":["select","manager_name",",","district","from","shop","order","by","number_products","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","den","Namen","des","Gesch\u00e4ftsleiters","und","den","Bezirk","des","Gesch\u00e4fts",",","dessen","Anzahl","der","Produkte","am","gr\u00f6\u00dften","ist","."],"question":"Finden Sie den Namen des Gesch\u00e4ftsleiters und den Bezirk des Gesch\u00e4fts, dessen Anzahl der Produkte am gr\u00f6\u00dften ist."},{"db_id":"singer","query":"SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)","query_toks":["SELECT","Name","FROM","singer","WHERE","Singer_ID","NOT","IN","(","SELECT","Singer_ID","FROM","song",")"],"query_toks_no_value":["select","name","from","singer","where","singer_id","not","in","(","select","singer_id","from","song",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","hei\u00dft","jeder","S\u00e4nger",",","der","kein","Lied","hat","?"],"question":"Wie hei\u00dft jeder S\u00e4nger, der kein Lied hat? "},{"db_id":"car_1","query":"SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;","query_toks":["SELECT","DISTINCT","T1.Year","FROM","CARS_DATA","AS","T1","WHERE","T1.Weight",">","3000","AND","T1.weight","<","4000",";"],"query_toks_no_value":["select","distinct","t1",".","year","from","cars_data","as","t1","where","t1",".","weight",">","value","and","t1",".","weight","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,3,[0,[0,21,false],null],3000.0,null],"and",[false,4,[0,[0,21,false],null],4000.0,null]]},"question_toks":["Was","sind","die","verschiedenen","Jahre",",","in","denen","es","Autos","mit","einem","Gewicht","von","weniger","als","4000","und","auch","Autos","mit","einem","Gewicht","von","mehr","als","3000","produzierte","wurden","?"],"question":"Was sind die verschiedenen Jahre, in denen es Autos mit einem Gewicht von weniger als 4000 und auch Autos mit einem Gewicht von mehr als 3000 produzierte wurden?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(*) FROM Transcripts","query_toks":["SELECT","count","(","*",")","FROM","Transcripts"],"query_toks_no_value":["select","count","(","*",")","from","transcripts"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",9]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Transkriptionen","sind","aufgelistet","?"],"question":"Wie viele Transkriptionen sind aufgelistet?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3","query_toks":["SELECT","template_type_code","FROM","Templates","GROUP","BY","template_type_code","HAVING","count","(","*",")","<","3"],"query_toks_no_value":["select","template_type_code","from","templates","group","by","template_type_code","having","count","(","*",")","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,5,false]],"having":[[false,4,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Codes","von","Vorlagentypen",",","die","weniger","als","3","Vorlagen","haben","?"],"question":"Wie lauten die Codes von Vorlagentypen, die weniger als 3 Vorlagen haben?"},{"db_id":"dog_kennels","query":"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","query_toks":["SELECT","professional_id",",","last_name",",","cell_number","FROM","Professionals","WHERE","state","=","'Indiana","'","UNION","SELECT","T1.professional_id",",","T1.last_name",",","T1.cell_number","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id","GROUP","BY","T1.professional_id","HAVING","count","(","*",")",">","2"],"query_toks_no_value":["select","professional_id",",","last_name",",","cell_number","from","professionals","where","state","=","value","union","select","t1",".","professional_id",",","t1",".","last_name",",","t1",".","cell_number","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id","group","by","t1",".","professional_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,40,false],null]],[0,[0,[0,43,false],null]]]],"union":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,33,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,40,false],null]],[0,[0,[0,43,false],null]]]],"union":null,"where":[]},"where":[[false,2,[0,[0,38,false],null],"\"Indiana\"",null]]},"question_toks":["Finden","Sie","die","Identit\u00e4t",",","den","Nachnamen","und","das","Mobiltelefon","der","Fachkr\u00e4fte",",","die","im","Bundesstaat","Indiana","leben","oder","mehr","als","zwei","Behandlungen","durchgef\u00fchrt","haben","."],"question":"Finden Sie die Identit\u00e4t, den Nachnamen und das Mobiltelefon der Fachkr\u00e4fte, die im Bundesstaat Indiana leben oder mehr als zwei Behandlungen durchgef\u00fchrt haben."},{"db_id":"wta_1","query":"SELECT count(DISTINCT country_code) FROM players","query_toks":["SELECT","count","(","DISTINCT","country_code",")","FROM","players"],"query_toks_no_value":["select","count","(","distinct","country_code",")","from","players"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,6,true],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","Anzahl","der","verschiedenen","L\u00e4ndercodes","aller","Spieler","."],"question":"Finden Sie die Anzahl der verschiedenen L\u00e4ndercodes aller Spieler."},{"db_id":"concert_singer","query":"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","query_toks":["SELECT","T2.name",",","count","(","*",")","FROM","singer_in_concert","AS","T1","JOIN","singer","AS","T2","ON","T1.singer_id","=","T2.singer_id","GROUP","BY","T2.singer_id"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","singer_in_concert","as","t1","join","singer","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","group","by","t2",".","singer_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,21,false],null],[0,8,false],null]],"table_units":[["table_unit",3],["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","S\u00e4nger","und","die","Anzahl","der","Konzerte","f\u00fcr","jede","Person","?"],"question":"Wie lauten die Namen der S\u00e4nger und die Anzahl der Konzerte f\u00fcr jede Person?"},{"db_id":"student_transcripts_tracking","query":"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","query_toks":["SELECT","transcript_date",",","other_details","FROM","Transcripts","ORDER","BY","transcript_date","ASC","LIMIT","1"],"query_toks_no_value":["select","transcript_date",",","other_details","from","transcripts","order","by","transcript_date","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",9]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,53,false],null]]],"select":[false,[[0,[0,[0,53,false],null]],[0,[0,[0,54,false],null]]]],"union":null,"where":[]},"question_toks":["Wann","ist","die","erste","Abschrift","ver\u00f6ffentlicht","?","Nennen","Sie","das","Datum","und","Details","."],"question":"Wann ist die erste Abschrift ver\u00f6ffentlicht? Nennen Sie das Datum und Details."},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","CVO","''","EXCEPT","SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","APG","''"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value","except","select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"APG\"",null]]},"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"CVO\"",null]]},"question_toks":["Finden","Sie","alle","Fluggesellschaften",",","die","Fl\u00fcge","vom","Flughafen","'CVO","'",",","aber","nicht","von","der","'APG","'","haben","."],"question":"Finden Sie alle Fluggesellschaften, die Fl\u00fcge vom Flughafen 'CVO', aber nicht von der 'APG' haben."},{"db_id":"singer","query":"SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship","query_toks":["SELECT","Citizenship",",","COUNT","(","*",")","FROM","singer","GROUP","BY","Citizenship"],"query_toks_no_value":["select","citizenship",",","count","(","*",")","from","singer","group","by","citizenship"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","die","unterschiedliche","Staatsangeh\u00f6rigkeit","der","S\u00e4nger","und","die","Anzahl","der","S\u00e4nger","jeder","Staatsangeh\u00f6rigkeit","an","."],"question":"Zeigen Sie die unterschiedliche Staatsangeh\u00f6rigkeit der S\u00e4nger und die Anzahl der S\u00e4nger jeder Staatsangeh\u00f6rigkeit an."},{"db_id":"dog_kennels","query":"SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'","query_toks":["SELECT","email_address","FROM","Professionals","WHERE","state","=","'Hawaii","'","OR","state","=","'Wisconsin","'"],"query_toks_no_value":["select","email_address","from","professionals","where","state","=","value","or","state","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,41,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],"\"Hawaii\"",null],"or",[false,2,[0,[0,38,false],null],"\"Wisconsin\"",null]]},"question_toks":["Wie","lauten","die","E-Mails","der","Fachkr\u00e4fte",",","die","entweder","im","Staat","Hawaii","oder","im","Staat","Wisconsin","leben","?"],"question":"Wie lauten die E-Mails der Fachkr\u00e4fte, die entweder im Staat Hawaii oder im Staat Wisconsin leben?"},{"db_id":"pets_1","query":"SELECT max(weight) ,  petType FROM pets GROUP BY petType","query_toks":["SELECT","max","(","weight",")",",","petType","FROM","pets","GROUP","BY","petType"],"query_toks_no_value":["select","max","(","weight",")",",","pettype","from","pets","group","by","pettype"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,14,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Ermitteln","Sie","das","H\u00f6chstgewicht","f\u00fcr","jede","Art","von","Haustier",".","Listen","Sie","das","H\u00f6chstgewicht","und","den","Haustiertyp","auf","."],"question":"Ermitteln Sie das H\u00f6chstgewicht f\u00fcr jede Art von Haustier. Listen Sie das H\u00f6chstgewicht und den Haustiertyp auf."},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","GROUP","BY","T1.Airline","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","group","by","t1",".","airline","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Fluggesellschaft","bedient","die","meisten","Fl\u00fcge","?"],"question":"Welche Fluggesellschaft bedient die meisten Fl\u00fcge?"},{"db_id":"car_1","query":"SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;","query_toks":["SELECT","DISTINCT","T2.Model","FROM","CAR_NAMES","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Model","=","T2.Model","JOIN","CAR_MAKERS","AS","T3","ON","T2.Maker","=","T3.Id","JOIN","CARS_DATA","AS","T4","ON","T1.MakeId","=","T4.Id","WHERE","T3.FullName","=","'General","Motors","'","OR","T4.weight",">","3500",";"],"query_toks_no_value":["select","distinct","t2",".","model","from","car_names","as","t1","join","model_list","as","t2","on","t1",".","model","=","t2",".","model","join","car_makers","as","t3","on","t2",".","maker","=","t3",".","id","join","cars_data","as","t4","on","t1",".","makeid","=","t4",".","id","where","t3",".","fullname","=","value","or","t4",".","weight",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,14,false],null],[0,12,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"General Motors\"",null],"or",[false,3,[0,[0,21,false],null],3500.0,null]]},"question_toks":["Welche","unverwechselbaren","Modelle","werden","von","Herstellern","mit","dem","vollen","Namen","General","Motors","oder","mit","einem","Gewicht","von","mehr","als","3500","hergestellt","?"],"question":"Welche unverwechselbaren Modelle werden von Herstellern mit dem vollen Namen General Motors oder mit einem Gewicht von mehr als 3500 hergestellt?"},{"db_id":"world_1","query":"SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"","query_toks":["SELECT","Name","FROM","country","WHERE","continent","=","``","Europe","''","AND","Population","=","``","80000","''"],"query_toks_no_value":["select","name","from","country","where","continent","=","value","and","population","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Europe\"",null],"and",[false,2,[0,[0,14,false],null],"\"80000\"",null]]},"question_toks":["Geben","Sie","die","Namen","der","L\u00e4nder","an",",","die","in","Europa","liegen","und","eine","Bev\u00f6lkerung","von","80000","Einwohnern","haben","."],"question":"Geben Sie die Namen der L\u00e4nder an, die in Europa liegen und eine Bev\u00f6lkerung von 80000 Einwohnern haben."},{"db_id":"wta_1","query":"SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016","query_toks":["SELECT","winner_name","FROM","matches","WHERE","YEAR","=","2013","INTERSECT","SELECT","winner_name","FROM","matches","WHERE","YEAR","=","2016"],"query_toks_no_value":["select","winner_name","from","matches","where","year","=","value","intersect","select","winner_name","from","matches","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],2016.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],2013.0,null]]},"question_toks":["Wie","lauten","die","Namen","der","Spieler",",","die","sowohl","2013","als","auch","2016","gewonnen","haben","?"],"question":"Wie lauten die Namen der Spieler, die sowohl 2013 als auch 2016 gewonnen haben?"},{"db_id":"world_1","query":"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"","query_toks":["SELECT","DISTINCT","T1.Region","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","OR","T2.Language","=","``","Dutch","''"],"query_toks_no_value":["select","distinct","t1",".","region","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","or","t2",".","language","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null],"or",[false,2,[0,[0,24,false],null],"\"Dutch\"",null]]},"question_toks":["Welche","Regionen","sprechen","Dutch","oder","English","?"],"question":"Welche Regionen sprechen Dutch oder English?"},{"db_id":"flight_2","query":"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"","query_toks":["SELECT","T1.FlightNo","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","WHERE","T2.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","t1",".","flightno","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","where","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Geben","Sie","die","Flugnummern","der","in","Aberdeen","ankommenden","Fl\u00fcge","an","."],"question":"Geben Sie die Flugnummern der in Aberdeen ankommenden Fl\u00fcge an."},{"db_id":"real_estate_properties","query":"SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code","query_toks":["SELECT","T2.property_type_description","FROM","Properties","AS","T1","JOIN","Ref_Property_Types","AS","T2","ON","T1.property_type_code","=","T2.property_type_code","GROUP","BY","T1.property_type_code"],"query_toks_no_value":["select","t2",".","property_type_description","from","properties","as","t1","join","ref_property_types","as","t2","on","t1",".","property_type_code","=","t2",".","property_type_code","group","by","t1",".","property_type_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,3,false],null]],"table_units":[["table_unit",3],["table_unit",1]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","die","Eigenschaftstypbeschreibungen","der","zu","dem","entsprechenden","Code","geh\u00f6renden","Eigenschaften","an","."],"question":"Zeigen Sie die Eigenschaftstypbeschreibungen der zu dem entsprechenden Code geh\u00f6renden Eigenschaften an."},{"db_id":"world_1","query":"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1","query_toks":["SELECT","T2.Language","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.Name","=","``","Aruba","''","ORDER","BY","Percentage","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","language","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","name","=","value","order","by","percentage","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,26,false],null]]],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Aruba\"",null]]},"question_toks":["Welche","Sprache","ist","die","beliebteste","in","Aruba","?"],"question":"Welche Sprache ist die beliebteste in Aruba?"},{"db_id":"car_1","query":"SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;","query_toks":["SELECT","Weight","FROM","CARS_DATA","WHERE","Cylinders","=","4","AND","YEAR","=","1974","ORDER","BY","Weight","ASC","LIMIT","1",";"],"query_toks_no_value":["select","weight","from","cars_data","where","cylinders","=","value","and","year","=","value","order","by","weight","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,21,false],null]]],"select":[false,[[0,[0,[0,21,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],4.0,null],"and",[false,2,[0,[0,23,false],null],1974.0,null]]},"question_toks":["Was","ist","das","kleinste","Gewicht","des","1974","mit","8","Zylindern","produzierten","Autos","?"],"question":"Was ist das kleinste Gewicht des 1974 mit 8 Zylindern produzierten Autos?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"","query_toks":["SELECT","T2.document_name","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id","WHERE","T1.template_type_code","=","``","BK","''"],"query_toks_no_value":["select","t2",".","document_name","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id","where","t1",".","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"BK\"",null]]},"question_toks":["Wie","lauten","die","Namen","von","Dokumenten",",","die","Vorlagen","mit","dem","Code","BK","verwenden","?"],"question":"Wie lauten die Namen von Dokumenten, die Vorlagen mit dem Code BK verwenden?"},{"db_id":"world_1","query":"SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"","query_toks":["SELECT","Code","FROM","country","WHERE","GovernmentForm","!","=","``","Republic","''","EXCEPT","SELECT","CountryCode","FROM","countrylanguage","WHERE","LANGUAGE","=","``","English","''"],"query_toks_no_value":["select","code","from","country","where","governmentform","!","=","value","except","select","countrycode","from","countrylanguage","where","language","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,7,[0,[0,19,false],null],"\"Republic\"",null]]},"question_toks":["Wie","lauten","die","Codes","der","L\u00e4nder",",","die","kein","Englisch","sprechen","und","deren","Regierungsformen","keine","Republik","sind","?"],"question":"Wie lauten die Codes der L\u00e4nder, die kein Englisch sprechen und deren Regierungsformen keine Republik sind?"},{"db_id":"world_1","query":"SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")","query_toks":["SELECT","Name","FROM","country","WHERE","Continent","=","``","Asia","''","AND","population",">","(","SELECT","min","(","population",")","FROM","country","WHERE","Continent","=","``","Africa","''",")"],"query_toks_no_value":["select","name","from","country","where","continent","=","value","and","population",">","(","select","min","(","population",")","from","country","where","continent","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null],"and",[false,3,[0,[0,14,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Africa\"",null]]},null]]},"question_toks":["Welches","sind","die","asiatischen","L\u00e4nder",",","deren","Bev\u00f6lkerung","gr\u00f6\u00dfer","ist","als","die","jedes","anderen","Landes","in","Afrika","?"],"question":"Welches sind die asiatischen L\u00e4nder, deren Bev\u00f6lkerung gr\u00f6\u00dfer ist als die jedes anderen Landes in Afrika?"},{"db_id":"poker_player","query":"SELECT count(DISTINCT Nationality) FROM people","query_toks":["SELECT","count","(","DISTINCT","Nationality",")","FROM","people"],"query_toks_no_value":["select","count","(","distinct","nationality",")","from","people"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,8,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Nationalit\u00e4ten","gibt","es","?"],"question":"Wie viele verschiedene Nationalit\u00e4ten gibt es?"},{"db_id":"world_1","query":"SELECT count(DISTINCT LANGUAGE) FROM countrylanguage","query_toks":["SELECT","count","(","DISTINCT","LANGUAGE",")","FROM","countrylanguage"],"query_toks_no_value":["select","count","(","distinct","language",")","from","countrylanguage"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,24,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Sprachen","werden","in","der","Welt","verwendet","?"],"question":"Wie viele verschiedene Sprachen werden in der Welt verwendet?"},{"db_id":"dog_kennels","query":"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","query_toks":["SELECT","T1.professional_id",",","T1.role_code",",","T1.first_name","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id","GROUP","BY","T1.professional_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","professional_id",",","t1",".","role_code",",","t1",".","first_name","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id","group","by","t1",".","professional_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,33,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,34,false],null]],[0,[0,[0,35,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","Identit\u00e4t",",","Rolle","und","Vorname","der","Fachkr\u00e4fte",",","die","zwei","oder","mehr","Behandlungen","durchgef\u00fchrt","haben","?"],"question":"Wie lauten Identit\u00e4t, Rolle und Vorname der Fachkr\u00e4fte, die zwei oder mehr Behandlungen durchgef\u00fchrt haben?"},{"db_id":"wta_1","query":"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","query_toks":["SELECT","T1.country_code",",","T1.first_name","FROM","players","AS","T1","JOIN","matches","AS","T2","ON","T1.player_id","=","T2.winner_id","WHERE","T2.tourney_name","=","'WTA","Championships","'","INTERSECT","SELECT","T1.country_code",",","T1.first_name","FROM","players","AS","T1","JOIN","matches","AS","T2","ON","T1.player_id","=","T2.winner_id","WHERE","T2.tourney_name","=","'Australian","Open","'"],"query_toks_no_value":["select","t1",".","country_code",",","t1",".","first_name","from","players","as","t1","join","matches","as","t2","on","t1",".","player_id","=","t2",".","winner_id","where","t2",".","tourney_name","=","value","intersect","select","t1",".","country_code",",","t1",".","first_name","from","players","as","t1","join","matches","as","t2","on","t1",".","player_id","=","t2",".","winner_id","where","t2",".","tourney_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,32,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,32,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,27,false],null],"\"Australian Open\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,27,false],null],"\"WTA Championships\"",null]]},"question_toks":["Wie","lauten","die","Vornamen","und","L\u00e4ndercodes","der","Spieler",",","die","sowohl","die","WTA-Meisterschaften","als","auch","die","Australian","Open","gewonnen","haben","?"],"question":"Wie lauten die Vornamen und L\u00e4ndercodes der Spieler, die sowohl die WTA-Meisterschaften als auch die Australian Open gewonnen haben?"},{"db_id":"pets_1","query":"SELECT count(*) FROM pets WHERE weight  >  10","query_toks":["SELECT","count","(","*",")","FROM","pets","WHERE","weight",">","10"],"query_toks_no_value":["select","count","(","*",")","from","pets","where","weight",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,14,false],null],10.0,null]]},"question_toks":["Ermitteln","Sie","die","Anzahl","der","Haustiere",",","deren","Gewicht","schwerer","als","10","ist","."],"question":"Ermitteln Sie die Anzahl der Haustiere, deren Gewicht schwerer als 10 ist."},{"db_id":"poker_player","query":"SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Nationality","FROM","people","GROUP","BY","Nationality","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","nationality","from","people","group","by","nationality","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","die","h\u00e4ufigste","Nationalit\u00e4t","der","Bev\u00f6lkerung","?"],"question":"Welches ist die h\u00e4ufigste Nationalit\u00e4t der Bev\u00f6lkerung?"},{"db_id":"voter_1","query":"SELECT contestant_name FROM contestants WHERE contestant_name LIKE \"%Al%\"","query_toks":["SELECT","contestant_name","FROM","contestants","WHERE","contestant_name","LIKE","``","%","Al","%","''"],"query_toks_no_value":["select","contestant_name","from","contestants","where","contestant_name","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,9,[0,[0,4,false],null],"\"%Al%\"",null]]},"question_toks":["Geben","Sie","die","Namen","der","Teilnehmer","zur\u00fcck",",","deren","Namen","die","Teilzeichenfolge","'Al","'","enthalten","."],"question":"Geben Sie die Namen der Teilnehmer zur\u00fcck, deren Namen die Teilzeichenfolge 'Al' enthalten."},{"db_id":"world_1","query":"SELECT count(DISTINCT LANGUAGE) FROM countrylanguage","query_toks":["SELECT","count","(","DISTINCT","LANGUAGE",")","FROM","countrylanguage"],"query_toks_no_value":["select","count","(","distinct","language",")","from","countrylanguage"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,24,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","einheitliche","Sprachen","werden","in","der","Welt","gesprochen","?"],"question":"Wie viele einheitliche Sprachen werden in der Welt gesprochen?"},{"db_id":"employee_hire_evaluation","query":"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","query_toks":["SELECT","count","(","*",")",",","t2.name","FROM","hiring","AS","t1","JOIN","shop","AS","t2","ON","t1.shop_id","=","t2.shop_id","GROUP","BY","t2.name"],"query_toks_no_value":["select","count","(","*",")",",","t2",".","name","from","hiring","as","t1","join","shop","as","t2","on","t1",".","shop_id","=","t2",".","shop_id","group","by","t2",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,5,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","f\u00fcr","jedes","Gesch\u00e4ft","die","Anzahl","der","dort","besch\u00e4ftigten","Mitarbeiter","und","den","Namen","des","Gesch\u00e4fts","an","."],"question":"Geben Sie f\u00fcr jedes Gesch\u00e4ft die Anzahl der dort besch\u00e4ftigten Mitarbeiter und den Namen des Gesch\u00e4fts an."},{"db_id":"course_teach","query":"SELECT Age ,  Hometown FROM teacher","query_toks":["SELECT","Age",",","Hometown","FROM","teacher"],"query_toks_no_value":["select","age",",","hometown","from","teacher"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","Alter","und","welchen","Heimatsitz","hat","jeder","Lehrer","?"],"question":"Welches Alter und welchen Heimatsitz hat jeder Lehrer?"},{"db_id":"network_1","query":"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","query_toks":["SELECT","student_id",",","count","(","*",")","FROM","Friend","GROUP","BY","student_id"],"query_toks_no_value":["select","student_id",",","count","(","*",")","from","friend","group","by","student_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Freunde","hat","jeder","Student","?"],"question":"Wie viele Freunde hat jeder Student?"},{"db_id":"orchestra","query":"SELECT Name FROM conductor ORDER BY Age ASC","query_toks":["SELECT","Name","FROM","conductor","ORDER","BY","Age","ASC"],"query_toks_no_value":["select","name","from","conductor","order","by","age","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,3,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Listen","Sie","die","Namen","der","Dirigenten","in","aufsteigender","Reihenfolge","ihres","Alters","auf","."],"question":"Listen Sie die Namen der Dirigenten in aufsteigender Reihenfolge ihres Alters auf."},{"db_id":"car_1","query":"SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;","query_toks":["SELECT","CountryName","FROM","countries","EXCEPT","SELECT","T1.CountryName","FROM","countries","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.countryId","=","T2.Country",";"],"query_toks_no_value":["select","countryname","from","countries","except","select","t1",".","countryname","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","L\u00e4nder",",","in","denen","es","keinen","einzigen","Autohersteller","gibt","?"],"question":"Wie lauten die Namen der L\u00e4nder, in denen es keinen einzigen Autohersteller gibt?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id","query_toks":["SELECT","template_id",",","count","(","*",")","FROM","Documents","GROUP","BY","template_id"],"query_toks_no_value":["select","template_id",",","count","(","*",")","from","documents","group","by","template_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigt","alle","Vorlagen-IDs","und","die","Anzahl","der","Dokumente",",","die","jede","Vorlage","verwenden","."],"question":"Zeigt alle Vorlagen-IDs und die Anzahl der Dokumente, die jede Vorlage verwenden."},{"db_id":"world_1","query":"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1","query_toks":["SELECT","T1.Name",",","T1.Population","FROM","city","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.CountryCode","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","ORDER","BY","T1.Population","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name",",","t1",".","population","from","city","as","t1","join","countrylanguage","as","t2","on","t1",".","countrycode","=","t2",".","countrycode","where","t2",".","language","=","value","order","by","t1",".","population","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,23,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},"question_toks":["Welches","ist","die","bev\u00f6lkerungsreichste","Stadt",",","die","Englisch","spricht","?"],"question":"Welches ist die bev\u00f6lkerungsreichste Stadt, die Englisch spricht?"},{"db_id":"world_1","query":"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"","query_toks":["SELECT","CountryCode","FROM","countrylanguage","EXCEPT","SELECT","CountryCode","FROM","countrylanguage","WHERE","LANGUAGE","=","``","English","''"],"query_toks_no_value":["select","countrycode","from","countrylanguage","except","select","countrycode","from","countrylanguage","where","language","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","L\u00e4ndercodes","f\u00fcr","L\u00e4nder",",","die","kein","Englisch","sprechen","?"],"question":"Wie lauten die L\u00e4ndercodes f\u00fcr L\u00e4nder, die kein Englisch sprechen?"},{"db_id":"world_1","query":"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"","query_toks":["SELECT","*","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","AND","IsOfficial","=","``","T","''","UNION","SELECT","*","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","Dutch","''","AND","IsOfficial","=","``","T","''"],"query_toks_no_value":["select","*","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","isofficial","=","value","union","select","*","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,0,false],null]]]],"union":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Dutch\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"where":[[false,2,[0,[0,24,false],null],"\"English\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Welche","L\u00e4nder","haben","entweder","English","oder","Dutch","als","offizielle","Sprache","?"],"question":"Welche L\u00e4nder haben entweder English oder Dutch als offizielle Sprache?"},{"db_id":"car_1","query":"SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';","query_toks":["SELECT","count","(","*",")","FROM","MODEL_LIST","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.Maker","=","T2.Id","JOIN","COUNTRIES","AS","T3","ON","T2.Country","=","T3.CountryId","WHERE","T3.CountryName","=","'usa","'",";"],"query_toks_no_value":["select","count","(","*",")","from","model_list","as","t1","join","car_makers","as","t2","on","t1",".","maker","=","t2",".","id","join","countries","as","t3","on","t2",".","country","=","t3",".","countryid","where","t3",".","countryname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"usa\"",null]]},"question_toks":["Wie","viele","Automodelle","werden","in","den","Vereinigten","Staaten","hergestellt","?"],"question":"Wie viele Automodelle werden in den Vereinigten Staaten hergestellt?"},{"db_id":"employee_hire_evaluation","query":"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","query_toks":["SELECT","count","(","*",")",",","LOCATION","FROM","shop","GROUP","BY","LOCATION"],"query_toks_no_value":["select","count","(","*",")",",","location","from","shop","group","by","location"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Gesch\u00e4fte","gibt","es","an","jedem","Standort","?"],"question":"Wie viele Gesch\u00e4fte gibt es an jedem Standort?"},{"db_id":"poker_player","query":"SELECT Name FROM people WHERE Nationality != \"Russia\"","query_toks":["SELECT","Name","FROM","people","WHERE","Nationality","!","=","``","Russia","''"],"query_toks_no_value":["select","name","from","people","where","nationality","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,7,[0,[0,8,false],null],"\"Russia\"",null]]},"question_toks":["Wie","lauten","die","Namen","von","Personen",",","die","nicht","aus","Russland","stammen","?"],"question":"Wie lauten die Namen von Personen, die nicht aus Russland stammen?"},{"db_id":"wta_1","query":"SELECT avg(loser_age) ,  avg(winner_age) FROM matches","query_toks":["SELECT","avg","(","loser_age",")",",","avg","(","winner_age",")","FROM","matches"],"query_toks_no_value":["select","avg","(","loser_age",")",",","avg","(","winner_age",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,9,false],null]],[5,[0,[0,28,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","das","Durchschnittsalter","der","Verlierer","und","Gewinner","aller","Spiele","."],"question":"Finden Sie das Durchschnittsalter der Verlierer und Gewinner aller Spiele."},{"db_id":"network_1","query":"SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","grade","FROM","Highschooler","GROUP","BY","grade","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","grade","from","highschooler","group","by","grade","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Klasse","hat","die","meisten","Gymnasiasten","?"],"question":"Welche Klasse hat die meisten Gymnasiasten?"},{"db_id":"poker_player","query":"SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000","query_toks":["SELECT","max","(","Final_Table_Made",")","FROM","poker_player","WHERE","Earnings","<","200000"],"query_toks_no_value":["select","max","(","final_table_made",")","from","poker_player","where","earnings","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,3,false],null]]]],"union":null,"where":[[false,4,[0,[0,6,false],null],200000.0,null]]},"question_toks":["Wie","viele","Finaltische","k\u00f6nnen","maximal","von","Pokerspielern","mit","einem","Verdienst","von","weniger","als","200000","erreicht","werden","?"],"question":"Wie viele Finaltische k\u00f6nnen maximal von Pokerspielern mit einem Verdienst von weniger als 200000 erreicht werden?"},{"db_id":"orchestra","query":"SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","T1.Name","FROM","conductor","AS","T1","JOIN","orchestra","AS","T2","ON","T1.Conductor_ID","=","T2.Conductor_ID","GROUP","BY","T2.Conductor_ID","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","conductor","as","t1","join","orchestra","as","t2","on","t1",".","conductor_id","=","t2",".","conductor_id","group","by","t2",".","conductor_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Name","des","Dirigenten",",","der","die","meisten","Orchester","dirigiert","hat","?"],"question":"Wie lautet der Name des Dirigenten, der die meisten Orchester dirigiert hat?"},{"db_id":"dog_kennels","query":"SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'","query_toks":["SELECT","first_name",",","last_name",",","email_address","FROM","Owners","WHERE","state","LIKE","'","%","North","%","'"],"query_toks_no_value":["select","first_name",",","last_name",",","email_address","from","owners","where","state","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]],[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,9,[0,[0,15,false],null],"\"%North%\"",null]]},"question_toks":["Geben","Sie","Vorname",",","Nachname","und","E-Mail","der","Eigent\u00fcmer","zur\u00fcck",",","die","in","einem","Staat","leben",",","dessen","Name","die","Teilzeichenfolge","'Nord","'","enth\u00e4lt","."],"question":"Geben Sie Vorname, Nachname und E-Mail der Eigent\u00fcmer zur\u00fcck, die in einem Staat leben, dessen Name die Teilzeichenfolge 'Nord' enth\u00e4lt."},{"db_id":"dog_kennels","query":"SELECT avg(age) FROM Dogs","query_toks":["SELECT","avg","(","age",")","FROM","Dogs"],"query_toks_no_value":["select","avg","(","age",")","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","das","Durchschnittsalter","aller","Hunde","?"],"question":"Was ist das Durchschnittsalter aller Hunde?"},{"db_id":"battle_death","query":"SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'","query_toks":["SELECT","name","FROM","battle","WHERE","bulgarian_commander","=","'Kaloyan","'","AND","latin_commander","=","'Baldwin","I","'"],"query_toks_no_value":["select","name","from","battle","where","bulgarian_commander","=","value","and","latin_commander","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Kaloyan\"",null],"and",[false,2,[0,[0,5,false],null],"\"Baldwin I\"",null]]},"question_toks":["Wie","lauten","die","verschiedenen","Schlachtennamen",",","die","zwischen","dem","bulgarischen","Befehlshaber","'Kaloyan","'","und","dem","lateinischen","Befehlshaber","'Baldwin","I","'","ausgetragen","werden","?"],"question":"Wie lauten die verschiedenen Schlachtennamen, die zwischen dem bulgarischen Befehlshaber 'Kaloyan' und dem lateinischen Befehlshaber 'Baldwin I' ausgetragen werden?"},{"db_id":"course_teach","query":"SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33","query_toks":["SELECT","Name","FROM","teacher","WHERE","Age","=","32","OR","Age","=","33"],"query_toks_no_value":["select","name","from","teacher","where","age","=","value","or","age","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],32.0,null],"or",[false,2,[0,[0,6,false],null],33.0,null]]},"question_toks":["Wie","lauten","die","Namen","der","Lehrer",",","die","entweder","32","oder","33","Jahre","alt","sind","?"],"question":"Wie lauten die Namen der Lehrer, die entweder 32 oder 33 Jahre alt sind?"},{"db_id":"student_transcripts_tracking","query":"SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.department_name",",","T1.department_id","FROM","Degree_Programs","AS","T1","JOIN","Departments","AS","T2","ON","T1.department_id","=","T2.department_id","GROUP","BY","T1.department_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","department_name",",","t1",".","department_id","from","degree_programs","as","t1","join","departments","as","t2","on","t1",".","department_id","=","t2",".","department_id","group","by","t1",".","department_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,19,false],null],[0,14,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Abteilung","bietet","die","meisten","Abschl\u00fcsse","an","?","Geben","Sie","den","Namen","und","die","ID","der","Abteilung","an","."],"question":"Welche Abteilung bietet die meisten Abschl\u00fcsse an? Geben Sie den Namen und die ID der Abteilung an."},{"db_id":"tvshow","query":"SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2","query_toks":["SELECT","id","FROM","tv_channel","GROUP","BY","country","HAVING","count","(","*",")",">","2"],"query_toks_no_value":["select","id","from","tv_channel","group","by","country","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","ID","der","Fernsehsender","aus","den","L\u00e4ndern",",","in","denen","es","mehr","als","zwei","Fernsehsender","gibt","."],"question":"Finden Sie die ID der Fernsehsender aus den L\u00e4ndern, in denen es mehr als zwei Fernsehsender gibt."},{"db_id":"singer","query":"SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949","query_toks":["SELECT","Name","FROM","singer","WHERE","Birth_Year","=","1948","OR","Birth_Year","=","1949"],"query_toks_no_value":["select","name","from","singer","where","birth_year","=","value","or","birth_year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],1948.0,null],"or",[false,2,[0,[0,3,false],null],1949.0,null]]},"question_toks":["Wie","lauten","die","Namen","der","S\u00e4ngerinnen","und","S\u00e4nger",",","deren","Geburtsjahr","1948","oder","1949","ist","?"],"question":"Wie lauten die Namen der S\u00e4ngerinnen und S\u00e4nger, deren Geburtsjahr 1948 oder 1949 ist?"},{"db_id":"wta_1","query":"SELECT count(*) FROM matches","query_toks":["SELECT","count","(","*",")","FROM","matches"],"query_toks_no_value":["select","count","(","*",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","Gesamtzahl","der","Spiele","."],"question":"Finden Sie die Gesamtzahl der Spiele."},{"db_id":"student_transcripts_tracking","query":"SELECT line_1 ,  line_2 FROM addresses","query_toks":["SELECT","line_1",",","line_2","FROM","addresses"],"query_toks_no_value":["select","line_1",",","line_2","from","addresses"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","alle","Adressen","einschlie\u00dflich","Zeile","1","und","Zeile","2","?"],"question":"Was sind alle Adressen einschlie\u00dflich Zeile 1 und Zeile 2?"},{"db_id":"car_1","query":"SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;","query_toks":["SELECT","T1.horsepower","FROM","CARS_DATA","AS","T1","ORDER","BY","T1.accelerate","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","horsepower","from","cars_data","as","t1","order","by","t1",".","accelerate","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,22,false],null]]],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","die","Leistung","des","Wagens","mit","der","h\u00f6chsten","Beschleunigung","?"],"question":"Wie hoch ist die Leistung des Wagens mit der h\u00f6chsten Beschleunigung?"},{"db_id":"car_1","query":"SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;","query_toks":["SELECT","T2.CountryName","FROM","CAR_MAKERS","AS","T1","JOIN","COUNTRIES","AS","T2","ON","T1.Country","=","T2.CountryId","GROUP","BY","T1.Country","ORDER","BY","Count","(","*",")","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t2",".","countryname","from","car_makers","as","t1","join","countries","as","t2","on","t1",".","country","=","t2",".","countryid","group","by","t1",".","country","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","der","L\u00e4nder","hat","die","meisten","Autohersteller","?","Listen","Sie","den","L\u00e4ndernamen","auf","."],"question":"Welches der L\u00e4nder hat die meisten Autohersteller? Listen Sie den L\u00e4ndernamen auf."},{"db_id":"pets_1","query":"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","query_toks":["SELECT","T1.fname",",","T1.sex","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","GROUP","BY","T1.stuid","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","sex","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","group","by","t1",".","stuid","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","den","Vornamen","und","das","Geschlecht","von","Studierenden",",","die","mehr","als","ein","Haustier","haben","."],"question":"Finden Sie den Vornamen und das Geschlecht von Studierenden, die mehr als ein Haustier haben."},{"db_id":"pets_1","query":"SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid","query_toks":["SELECT","count","(","*",")",",","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","GROUP","BY","T1.stuid"],"query_toks_no_value":["select","count","(","*",")",",","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","group","by","t1",".","stuid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["F\u00fcr","Studierende",",","die","Haustiere","haben",",","wie","viele","Haustiere","hat","jeder","Studierende","?"],"question":"F\u00fcr Studierende, die Haustiere haben, wie viele Haustiere hat jeder Studierende?"},{"db_id":"poker_player","query":"SELECT count(*) FROM poker_player","query_toks":["SELECT","count","(","*",")","FROM","poker_player"],"query_toks_no_value":["select","count","(","*",")","from","poker_player"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hlen","Sie","die","Anzahl","der","Pokerspieler","."],"question":"Z\u00e4hlen Sie die Anzahl der Pokerspieler."},{"db_id":"flight_2","query":"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"","query_toks":["SELECT","Abbreviation","FROM","AIRLINES","WHERE","Airline","=","``","JetBlue","Airways","''"],"query_toks_no_value":["select","abbreviation","from","airlines","where","airline","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"JetBlue Airways\"",null]]},"question_toks":["``","Wie","lautet","die","Abk\u00fcrzung","der","Fluggesellschaft","``","''","JetBlue","Airways","''","''","?"],"question":"\"Wie lautet die Abk\u00fcrzung der Fluggesellschaft \"\"JetBlue Airways\"\"?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents","query_toks":["SELECT","template_id","FROM","Templates","EXCEPT","SELECT","template_id","FROM","Documents"],"query_toks_no_value":["select","template_id","from","templates","except","select","template_id","from","documents"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","die","IDs","f\u00fcr","alle","Vorlagen","an",",","die","von","keinem","Dokument","verwendet","werden","."],"question":"Zeigen Sie die IDs f\u00fcr alle Vorlagen an, die von keinem Dokument verwendet werden."},{"db_id":"world_1","query":"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1","query_toks":["SELECT","T2.Language","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.Continent","=","``","Asia","''","GROUP","BY","T2.Language","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","language","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","continent","=","value","group","by","t2",".","language","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,24,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Welches","ist","die","Sprache",",","die","von","der","gr\u00f6ssten","Anzahl","asiatischer","Nationen","verwendet","wird","?"],"question":"Welches ist die Sprache, die von der gr\u00f6ssten Anzahl asiatischer Nationen verwendet wird?"},{"db_id":"wta_1","query":"SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3","query_toks":["SELECT","DISTINCT","winner_name",",","winner_rank","FROM","matches","ORDER","BY","winner_age","LIMIT","3"],"query_toks_no_value":["select","distinct","winner_name",",","winner_rank","from","matches","order","by","winner_age","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["asc",[[0,[0,28,false],null]]],"select":[true,[[0,[0,[0,34,false],null]],[0,[0,[0,35,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","den","Namen","und","Rang","der","3","j\u00fcngsten","Gewinner","\u00fcber","alle","Spiele","hinweg","."],"question":"Finden Sie den Namen und Rang der 3 j\u00fcngsten Gewinner \u00fcber alle Spiele hinweg."},{"db_id":"network_1","query":"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","query_toks":["SELECT","student_id",",","count","(","*",")","FROM","Friend","GROUP","BY","student_id"],"query_toks_no_value":["select","student_id",",","count","(","*",")","from","friend","group","by","student_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","die","Studentenausweise","und","die","Nummern","der","Freunde",",","der","entsprechenden","Studenten","an","."],"question":"Zeigen Sie die Studentenausweise und die Nummern der Freunde, der entsprechenden Studenten an."},{"db_id":"world_1","query":"SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"","query_toks":["SELECT","sum","(","Population",")","FROM","city","WHERE","District","=","``","Gelderland","''"],"query_toks_no_value":["select","sum","(","population",")","from","city","where","district","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Gelderland\"",null]]},"question_toks":["Wie","viele","Menschen","leben","im","Bezirk","Gelderland","?"],"question":"Wie viele Menschen leben im Bezirk Gelderland?"},{"db_id":"world_1","query":"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"","query_toks":["SELECT","avg","(","LifeExpectancy",")","FROM","country","WHERE","Continent","=","``","Africa","''","AND","GovernmentForm","=","``","Republic","''"],"query_toks_no_value":["select","avg","(","lifeexpectancy",")","from","country","where","continent","=","value","and","governmentform","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Africa\"",null],"and",[false,2,[0,[0,19,false],null],"\"Republic\"",null]]},"question_toks":["Wie","hoch","ist","die","durchschnittliche","Lebenserwartung","in","afrikanischen","L\u00e4ndern",",","die","Republiken","sind","?"],"question":"Wie hoch ist die durchschnittliche Lebenserwartung in afrikanischen L\u00e4ndern, die Republiken sind?"},{"db_id":"tvshow","query":"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;","query_toks":["SELECT","count","(","DISTINCT","series_name",")",",","count","(","DISTINCT","content",")","FROM","TV_Channel",";"],"query_toks_no_value":["select","count","(","distinct","series_name",")",",","count","(","distinct","content",")","from","tv_channel"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,2,true],null]],[3,[0,[0,5,true],null]]]],"union":null,"where":[]},"question_toks":["Listen","Sie","die","Anzahl","der","verschiedenen","Seriennamen","und","Inhalte","in","der","TV-Kanaltabelle","auf","."],"question":"Listen Sie die Anzahl der verschiedenen Seriennamen und Inhalte in der TV-Kanaltabelle auf."},{"db_id":"dog_kennels","query":"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","query_toks":["SELECT","DISTINCT","T1.first_name",",","T3.treatment_type_description","FROM","professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id","JOIN","Treatment_types","AS","T3","ON","T2.treatment_type_code","=","T3.treatment_type_code"],"query_toks_no_value":["select","distinct","t1",".","first_name",",","t3",".","treatment_type_description","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id","join","treatment_types","as","t3","on","t2",".","treatment_type_code","=","t3",".","treatment_type_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,35,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Nennen","Sie","die","Vornamen","aller","Fachkr\u00e4fte","zusammen","mit","der","Beschreibung","der","Behandlung",",","die","sie","durchgef\u00fchrt","haben","."],"question":"Nennen Sie die Vornamen aller Fachkr\u00e4fte zusammen mit der Beschreibung der Behandlung, die sie durchgef\u00fchrt haben."},{"db_id":"car_1","query":"SELECT count(*) FROM COUNTRIES;","query_toks":["SELECT","count","(","*",")","FROM","COUNTRIES",";"],"query_toks_no_value":["select","count","(","*",")","from","countries"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","L\u00e4nder","sind","aufgelistet","?"],"question":"Wie viele L\u00e4nder sind aufgelistet?"},{"db_id":"dog_kennels","query":"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id","query_toks":["SELECT","professional_id",",","role_code",",","email_address","FROM","Professionals","EXCEPT","SELECT","T1.professional_id",",","T1.role_code",",","T1.email_address","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id"],"query_toks_no_value":["select","professional_id",",","role_code",",","email_address","from","professionals","except","select","t1",".","professional_id",",","t1",".","role_code",",","t1",".","email_address","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,34,false],null]],[0,[0,[0,41,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,34,false],null]],[0,[0,[0,41,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Fachmann","hat","keine","Behandlung","bei","Hunden","durchgef\u00fchrt","?","Geben","Sie","den","Namen",",","die","Rolle","und","die","E-Mail-Adresse","des","Fachmanns","an","."],"question":"Welcher Fachmann hat keine Behandlung bei Hunden durchgef\u00fchrt? Geben Sie den Namen, die Rolle und die E-Mail-Adresse des Fachmanns an."},{"db_id":"museum_visit","query":"SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008","query_toks":["SELECT","count","(","*",")","FROM","museum","WHERE","open_year",">","2013","OR","open_year","<","2008"],"query_toks_no_value":["select","count","(","*",")","from","museum","where","open_year",">","value","or","open_year","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],2013.0,null],"or",[false,4,[0,[0,4,false],null],2008.0,null]]},"question_toks":["Wie","viele","Museen","wurden","nach","2013","oder","vor","2008","er\u00f6ffnet","?"],"question":"Wie viele Museen wurden nach 2013 oder vor 2008 er\u00f6ffnet?"},{"db_id":"dog_kennels","query":"SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )","query_toks":["SELECT","T1.last_name","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id","WHERE","T2.age","=","(","SELECT","max","(","age",")","FROM","Dogs",")"],"query_toks_no_value":["select","t1",".","last_name","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","where","t2",".","age","=","(","select","max","(","age",")","from","dogs",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,26,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,26,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Listen","Sie","den","Nachnamen","des","Besitzers","auf",",","der","den","j\u00fcngsten","Hund","besitzt","."],"question":"Listen Sie den Nachnamen des Besitzers auf, der den j\u00fcngsten Hund besitzt."},{"db_id":"car_1","query":"SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;","query_toks":["SELECT","avg","(","horsepower",")","FROM","CARS_DATA","WHERE","YEAR","<","1980",";"],"query_toks_no_value":["select","avg","(","horsepower",")","from","cars_data","where","year","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,20,false],null]]]],"union":null,"where":[[false,4,[0,[0,23,false],null],1980.0,null]]},"question_toks":["Wie","hoch","ist","die","durchschnittliche","PS-Leistung","der","Autos","vor","1980","?"],"question":"Wie hoch ist die durchschnittliche PS-Leistung der Autos vor 1980?"},{"db_id":"battle_death","query":"SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'","query_toks":["SELECT","name",",","RESULT",",","bulgarian_commander","FROM","battle","EXCEPT","SELECT","T1.name",",","T1.result",",","T1.bulgarian_commander","FROM","battle","AS","T1","JOIN","ship","AS","T2","ON","T1.id","=","T2.lost_in_battle","WHERE","T2.location","=","'English","Channel","'"],"query_toks_no_value":["select","name",",","result",",","bulgarian_commander","from","battle","except","select","t1",".","name",",","t1",".","result",",","t1",".","bulgarian_commander","from","battle","as","t1","join","ship","as","t2","on","t1",".","id","=","t2",".","lost_in_battle","where","t2",".","location","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,6,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"English Channel\"",null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,6,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","Namen",",","Ergebnisse","und","bulgarische","Kommandeure","der","Schlachten","ohne","verlorene","Schiffe","im","``","English","Channel","``","."],"question":"Zeigen Sie Namen, Ergebnisse und bulgarische Kommandeure der Schlachten ohne verlorene Schiffe im \" English Channel \"."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.template_id",",","T2.Template_Type_Code","FROM","Documents","AS","T1","JOIN","Templates","AS","T2","ON","T1.template_id","=","T2.template_id","GROUP","BY","T1.template_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","template_id",",","t2",".","template_type_code","from","documents","as","t1","join","templates","as","t2","on","t1",".","template_id","=","t2",".","template_id","group","by","t1",".","template_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","ID-","und","Typcode","f\u00fcr","die","Vorlage",",","die","in","den","meisten","Dokumenten","verwendet","wird","?"],"question":"Wie lautet der ID- und Typcode f\u00fcr die Vorlage, die in den meisten Dokumenten verwendet wird?"},{"db_id":"student_transcripts_tracking","query":"SELECT section_name ,  section_description FROM Sections","query_toks":["SELECT","section_name",",","section_description","FROM","Sections"],"query_toks_no_value":["select","section_name",",","section_description","from","sections"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]],[0,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","und","Beschreibungen","aller","Bereiche","?"],"question":"Wie lauten die Namen und Beschreibungen aller Bereiche?"},{"db_id":"dog_kennels","query":"SELECT state FROM Owners INTERSECT SELECT state FROM Professionals","query_toks":["SELECT","state","FROM","Owners","INTERSECT","SELECT","state","FROM","Professionals"],"query_toks_no_value":["select","state","from","owners","intersect","select","state","from","professionals"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,38,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","Bundesstaaten",",","in","denen","sowohl","Eigent\u00fcmer","als","auch","Fachleute","leben","."],"question":"Finden Sie die Bundesstaaten, in denen sowohl Eigent\u00fcmer als auch Fachleute leben."},{"db_id":"pets_1","query":"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","query_toks":["SELECT","major",",","age","FROM","student","WHERE","stuid","NOT","IN","(","SELECT","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'",")"],"query_toks_no_value":["select","major",",","age","from","student","where","stuid","not","in","(","select","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null]]},null]]},"question_toks":["Finden","Sie","die","Hauptf\u00e4cher","und","das","Alter","der","Studenten",",","die","keine","Katze","als","Haustier","haben","."],"question":"Finden Sie die Hauptf\u00e4cher und das Alter der Studenten, die keine Katze als Haustier haben."},{"db_id":"employee_hire_evaluation","query":"SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","t2.name","FROM","hiring","AS","t1","JOIN","shop","AS","t2","ON","t1.shop_id","=","t2.shop_id","GROUP","BY","t1.shop_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name","from","hiring","as","t1","join","shop","as","t2","on","t1",".","shop_id","=","t2",".","shop_id","group","by","t1",".","shop_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,5,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,11,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","Gesch\u00e4ft","hat","die","meisten","Mitarbeiter","?","Geben","Sie","mir","den","Namen","des","Gesch\u00e4fts","."],"question":"Welches Gesch\u00e4ft hat die meisten Mitarbeiter? Geben Sie mir den Namen des Gesch\u00e4fts."},{"db_id":"singer","query":"SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1","query_toks":["SELECT","T1.Name","FROM","singer","AS","T1","JOIN","song","AS","T2","ON","T1.Singer_ID","=","T2.Singer_ID","GROUP","BY","T1.Name","HAVING","COUNT","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","name","from","singer","as","t1","join","song","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","group","by","t1",".","name","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,2,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","die","Namen","von","S\u00e4ngern","an",",","die","mehr","als","ein","Lied","haben","."],"question":"Zeigen Sie die Namen von S\u00e4ngern an, die mehr als ein Lied haben."},{"db_id":"network_1","query":"SELECT grade ,  count(*) FROM Highschooler GROUP BY grade","query_toks":["SELECT","grade",",","count","(","*",")","FROM","Highschooler","GROUP","BY","grade"],"query_toks_no_value":["select","grade",",","count","(","*",")","from","highschooler","group","by","grade"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Gymnasiasten","gibt","es","in","jeder","Klasse","?"],"question":"Wie viele Gymnasiasten gibt es in jeder Klasse?"},{"db_id":"car_1","query":"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","query_toks":["SELECT","T2.Make",",","T1.Year","FROM","CARS_DATA","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Id","=","T2.MakeId","WHERE","T1.Year","=","(","SELECT","min","(","YEAR",")","FROM","CARS_DATA",")",";"],"query_toks_no_value":["select","t2",".","make",",","t1",".","year","from","cars_data","as","t1","join","car_names","as","t2","on","t1",".","id","=","t2",".","makeid","where","t1",".","year","=","(","select","min","(","year",")","from","cars_data",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,13,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,23,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wer","ist","der","Hersteller","des","im","fr\u00fchesten","Jahr","produzierten","Carr","und","welches","Jahr","war","es","?"],"question":"Wer ist der Hersteller des im fr\u00fchesten Jahr produzierten Carr und welches Jahr war es?"},{"db_id":"student_transcripts_tracking","query":"SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'","query_toks":["SELECT","DISTINCT","T2.semester_id","FROM","Degree_Programs","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.degree_program_id","=","T2.degree_program_id","WHERE","degree_summary_name","=","'Master","'","INTERSECT","SELECT","DISTINCT","T2.semester_id","FROM","Degree_Programs","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.degree_program_id","=","T2.degree_program_id","WHERE","degree_summary_name","=","'Bachelor","'"],"query_toks_no_value":["select","distinct","t2",".","semester_id","from","degree_programs","as","t1","join","student_enrolment","as","t2","on","t1",".","degree_program_id","=","t2",".","degree_program_id","where","degree_summary_name","=","value","intersect","select","distinct","t2",".","semester_id","from","degree_programs","as","t1","join","student_enrolment","as","t2","on","t1",".","degree_program_id","=","t2",".","degree_program_id","where","degree_summary_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,46,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"Bachelor\"",null]]},"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,46,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"Master\"",null]]},"question_toks":["Welches","ist","die","Kennung","des","Semesters",",","in","dem","sowohl","Master-","als","auch","Bachelor-Studenten","eingeschrieben","waren","?"],"question":"Welches ist die Kennung des Semesters, in dem sowohl Master- als auch Bachelor-Studenten eingeschrieben waren?"},{"db_id":"course_teach","query":"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID","query_toks":["SELECT","T3.Name",",","T2.Course","FROM","course_arrange","AS","T1","JOIN","course","AS","T2","ON","T1.Course_ID","=","T2.Course_ID","JOIN","teacher","AS","T3","ON","T1.Teacher_ID","=","T3.Teacher_ID"],"query_toks_no_value":["select","t3",".","name",",","t2",".","course","from","course_arrange","as","t1","join","course","as","t2","on","t1",".","course_id","=","t2",".","course_id","join","teacher","as","t3","on","t1",".","teacher_id","=","t3",".","teacher_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","die","Namen","der","Lehrer","und","die","Kurse",",","die","sie","unterrichten","sollen","."],"question":"Zeigen Sie die Namen der Lehrer und die Kurse, die sie unterrichten sollen."},{"db_id":"museum_visit","query":"SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'","query_toks":["SELECT","Num_of_Staff",",","Open_Year","FROM","museum","WHERE","name","=","'Plaza","Museum","'"],"query_toks_no_value":["select","num_of_staff",",","open_year","from","museum","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Plaza Museum\"",null]]},"question_toks":["Welches","sind","das","Er\u00f6ffnungsjahr","und","die","Mitarbeiterzahl","des","Museums","mit","dem","Namen","Plaza","Museum","?"],"question":"Welches sind das Er\u00f6ffnungsjahr und die Mitarbeiterzahl des Museums mit dem Namen Plaza Museum?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"","query_toks":["SELECT","T2.template_id","FROM","Ref_template_types","AS","T1","JOIN","Templates","AS","T2","ON","T1.template_type_code","=","T2.template_type_code","WHERE","T1.template_type_description","=","``","Presentation","''"],"query_toks_no_value":["select","t2",".","template_id","from","ref_template_types","as","t1","join","templates","as","t2","on","t1",".","template_type_code","=","t2",".","template_type_code","where","t1",".","template_type_description","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,5,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Presentation\"",null]]},"question_toks":["``","Was","sind","die","Vorlagen-IDs","mit","der","Beschreibung","des","Vorlagentyps","``","''","Pr\u00e4sentation","''","''","."],"question":"\"Was sind die Vorlagen-IDs mit der Beschreibung des Vorlagentyps \"\"Pr\u00e4sentation\"\"."},{"db_id":"orchestra","query":"SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008","query_toks":["SELECT","T1.Name","FROM","conductor","AS","T1","JOIN","orchestra","AS","T2","ON","T1.Conductor_ID","=","T2.Conductor_ID","WHERE","Year_of_Founded",">","2008"],"query_toks_no_value":["select","t1",".","name","from","conductor","as","t1","join","orchestra","as","t2","on","t1",".","conductor_id","=","t2",".","conductor_id","where","year_of_founded",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,3,[0,[0,10,false],null],2008.0,null]]},"question_toks":["Bitte","geben","Sie","den","Namen","des","Dirigenten","an",",","der","ein","nach","2008","gegr\u00fcndetes","Orchester","dirigiert","hat","."],"question":"Bitte geben Sie den Namen des Dirigenten an, der ein nach 2008 gegr\u00fcndetes Orchester dirigiert hat."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id","query_toks":["SELECT","template_type_code","FROM","Templates","EXCEPT","SELECT","template_type_code","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id"],"query_toks_no_value":["select","template_type_code","from","templates","except","select","template_type_code","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Codes","der","Vorlagetypen",",","die","f\u00fcr","kein","Dokument","verwendet","werden","?"],"question":"Wie lauten die Codes der Vorlagetypen, die f\u00fcr kein Dokument verwendet werden?"},{"db_id":"world_1","query":"SELECT Name FROM country WHERE IndepYear  >  1950","query_toks":["SELECT","Name","FROM","country","WHERE","IndepYear",">","1950"],"query_toks_no_value":["select","name","from","country","where","indepyear",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],1950.0,null]]},"question_toks":["Was","sind","die","Namen","aller","L\u00e4nder","die","nach","1950","unabh\u00e4ngig","wurden","?"],"question":"Was sind die Namen aller L\u00e4nder die nach 1950 unabh\u00e4ngig wurden?"},{"db_id":"orchestra","query":"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"","query_toks":["SELECT","max","(","SHARE",")",",","min","(","SHARE",")","FROM","performance","WHERE","TYPE","!","=","``","Live","final","''"],"query_toks_no_value":["select","max","(","share",")",",","min","(","share",")","from","performance","where","type","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,18,false],null]],[2,[0,[0,18,false],null]]]],"union":null,"where":[[false,7,[0,[0,14,false],null],"\"Live final\"",null]]},"question_toks":["Welches","sind","der","maximale","und","der","minimale","Anteil","von","Auff\u00fchrungen",",","deren","Typ","nicht","``","Live-Finale","''","ist","?"],"question":"Welches sind der maximale und der minimale Anteil von Auff\u00fchrungen, deren Typ nicht \"Live-Finale\" ist?"},{"db_id":"car_1","query":"SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';","query_toks":["SELECT","avg","(","T2.edispl",")","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","WHERE","T1.Model","=","'volvo","'",";"],"query_toks_no_value":["select","avg","(","t2",".","edispl",")","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","where","t1",".","model","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,19,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"volvo\"",null]]},"question_toks":["Wie","hoch","ist","der","durchschnittliche","edispl","der","Autus","von","Modell","Volvo","?"],"question":"Wie hoch ist der durchschnittliche edispl der Autus von Modell Volvo?"},{"db_id":"network_1","query":"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"","query_toks":["SELECT","T3.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","JOIN","Highschooler","AS","T3","ON","T1.friend_id","=","T3.id","WHERE","T2.name","=","``","Kyle","''"],"query_toks_no_value":["select","t3",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","join","highschooler","as","t3","on","t1",".","friend_id","=","t3",".","id","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Zeige","die","Namen","alle","Freund","von","Sch\u00fcler","Kyle","an","."],"question":"Zeige die Namen alle Freund von Sch\u00fcler Kyle an. "},{"db_id":"car_1","query":"SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;","query_toks":["SELECT","T2.MakeId",",","T2.Make","FROM","CARS_DATA","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Id","=","T2.MakeId","WHERE","T1.Horsepower",">","(","SELECT","min","(","Horsepower",")","FROM","CARS_DATA",")","AND","T1.Cylinders","<","=","3",";"],"query_toks_no_value":["select","t2",".","makeid",",","t2",".","make","from","cars_data","as","t1","join","car_names","as","t2","on","t1",".","id","=","t2",".","makeid","where","t1",".","horsepower",">","(","select","min","(","horsepower",")","from","cars_data",")","and","t1",".","cylinders","<","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,13,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,3,[0,[0,20,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,20,false],null]]]],"union":null,"where":[]},null],"and",[false,6,[0,[0,18,false],null],3.0,null]]},"question_toks":["Welche","von","den","Autos","mit","mehr","als","der","niedrigsten","PS-Leistung","haben","nicht","mehr","als","3","Zylinder","?","F\u00fchren","Sie","die","Marke","und","den","Namen","des","Autos","auf","."],"question":"Welche von den Autos mit mehr als der niedrigsten PS-Leistung haben nicht mehr als 3 Zylinder? F\u00fchren Sie die Marke und den Namen des Autos auf."},{"db_id":"employee_hire_evaluation","query":"SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1","query_toks":["SELECT","t1.name","FROM","employee","AS","t1","JOIN","evaluation","AS","t2","ON","t1.Employee_ID","=","t2.Employee_ID","ORDER","BY","t2.bonus","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","employee","as","t1","join","evaluation","as","t2","on","t1",".","employee_id","=","t2",".","employee_id","order","by","t2",".","bonus","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,15,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,17,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","den","Namen","des","Angestellten",",","der","den","h\u00f6chsten","einmaligen","Bonus","erhalten","hat","."],"question":"Finde den Namen des Angestellten, der den h\u00f6chsten einmaligen Bonus erhalten hat. "},{"db_id":"world_1","query":"SELECT Name FROM country ORDER BY Population ASC LIMIT 3","query_toks":["SELECT","Name","FROM","country","ORDER","BY","Population","ASC","LIMIT","3"],"query_toks_no_value":["select","name","from","country","order","by","population","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["asc",[[0,[0,14,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Gebe","die","Namen","der","3","L\u00e4nder","mit","den","wenigsten","Einwohnern","an","."],"question":"Gebe die Namen der 3 L\u00e4nder mit den wenigsten Einwohnern an. "},{"db_id":"poker_player","query":"SELECT Earnings FROM poker_player ORDER BY Earnings DESC","query_toks":["SELECT","Earnings","FROM","poker_player","ORDER","BY","Earnings","DESC"],"query_toks_no_value":["select","earnings","from","poker_player","order","by","earnings","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","die","Einkommen","der","Pokerspieler","in","absteigender","Reihenfolge","an","."],"question":"Liste die Einkommen der Pokerspieler in absteigender Reihenfolge an. "},{"db_id":"student_transcripts_tracking","query":"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","query_toks":["SELECT","DISTINCT","T1.first_name",",","T1.middle_name",",","T1.last_name","FROM","Students","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.student_id","=","T2.student_id","JOIN","Degree_Programs","AS","T3","ON","T2.degree_program_id","=","T3.degree_program_id","WHERE","T3.degree_summary_name","=","'Bachelor","'"],"query_toks_no_value":["select","distinct","t1",".","first_name",",","t1",".","middle_name",",","t1",".","last_name","from","students","as","t1","join","student_enrolment","as","t2","on","t1",".","student_id","=","t2",".","student_id","join","degree_programs","as","t3","on","t2",".","degree_program_id","=","t3",".","degree_program_id","where","t3",".","degree_summary_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,47,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"Bachelor\"",null]]},"question_toks":["Wie","lauten","die","Vor-",",","Mittel-","und","Nachnamen","aller","in","einem","Bachelor-Studiengang","eingeschriebenen","Personen","?"],"question":"Wie lauten die Vor-, Mittel- und Nachnamen aller in einem Bachelor-Studiengang eingeschriebenen Personen?"},{"db_id":"network_1","query":"SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)","query_toks":["SELECT","min","(","grade",")","FROM","Highschooler","WHERE","id","NOT","IN","(","SELECT","T1.student_id","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id",")"],"query_toks_no_value":["select","min","(","grade",")","from","highschooler","where","id","not","in","(","select","t1",".","student_id","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,3,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finden","Sie","die","Mindestnote","von","Studierenden",",","die","keine","Freunde","haben","."],"question":"Finden Sie die Mindestnote von Studierenden, die keine Freunde haben. "},{"db_id":"student_transcripts_tracking","query":"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.student_id",",","T1.first_name",",","T1.middle_name",",","T1.last_name",",","count","(","*",")",",","T1.student_id","FROM","Students","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.student_id","=","T2.student_id","GROUP","BY","T1.student_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","student_id",",","t1",".","first_name",",","t1",".","middle_name",",","t1",".","last_name",",","count","(","*",")",",","t1",".","student_id","from","students","as","t1","join","student_enrolment","as","t2","on","t1",".","student_id","=","t2",".","student_id","group","by","t1",".","student_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,47,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,32,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,32,false],null]],[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]],[3,[0,[0,0,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Student","hat","sich","am","h\u00e4ufigsten","f\u00fcr","ein","Programm","eingeschrieben","?","Geben","Sie","die","Kennung",",","den","Vornamen",",","den","zweiten","Vornamen",",","den","Nachnamen",",","die","Anzahl","der","Einschreibungen","und","die","Studentenkennung","an","."],"question":"Welcher Student hat sich am h\u00e4ufigsten f\u00fcr ein Programm eingeschrieben? Geben Sie die Kennung, den Vornamen, den zweiten Vornamen, den Nachnamen, die Anzahl der Einschreibungen und die Studentenkennung an. "},{"db_id":"flight_2","query":"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","query_toks":["SELECT","T1.Abbreviation",",","T1.Country","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","GROUP","BY","T1.Airline","ORDER","BY","count","(","*",")","LIMIT","1"],"query_toks_no_value":["select","t1",".","abbreviation",",","t1",".","country","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","group","by","t1",".","airline","order","by","count","(","*",")","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","die","Abk\u00fcrzung","der","Airilne","mit","den","wenigsten","Fl\u00fcgen","und","in","welchem","Land","befindet","sie","sich","?"],"question":"Wie lautet die Abk\u00fcrzung der Airilne mit den wenigsten Fl\u00fcgen und in welchem Land befindet sie sich?"},{"db_id":"car_1","query":"SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;","query_toks":["SELECT","Count","(","*",")",",","T2.FullName",",","T2.id","FROM","MODEL_LIST","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.Maker","=","T2.Id","GROUP","BY","T2.id",";"],"query_toks_no_value":["select","count","(","*",")",",","t2",".","fullname",",","t2",".","id","from","model_list","as","t1","join","car_makers","as","t2","on","t1",".","maker","=","t2",".","id","group","by","t2",".","id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,6,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,8,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","die","Anzahl","der","Automodelle",",","die","von","jedem","Hersteller","produziert","werden",",","und","wie","lautet","die","Kennung","und","der","vollst\u00e4ndige","Name","jedes","Herstellers","?"],"question":"Wie hoch ist die Anzahl der Automodelle, die von jedem Hersteller produziert werden, und wie lautet die Kennung und der vollst\u00e4ndige Name jedes Herstellers?"},{"db_id":"car_1","query":"SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;","query_toks":["SELECT","T1.cylinders","FROM","CARS_DATA","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Id","=","T2.MakeId","WHERE","T2.Model","=","'volvo","'","ORDER","BY","T1.accelerate","ASC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","cylinders","from","cars_data","as","t1","join","car_names","as","t2","on","t1",".","id","=","t2",".","makeid","where","t2",".","model","=","value","order","by","t1",".","accelerate","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,13,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,22,false],null]]],"select":[false,[[0,[0,[0,18,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"volvo\"",null]]},"question_toks":["Wie","viele","Zylinder","hat","bei","einem","Volvo-Modell","die","Version","mit","der","geringsten","Beschleunigung","?"],"question":"Wie viele Zylinder hat bei einem Volvo-Modell die Version mit der geringsten Beschleunigung? "},{"db_id":"wta_1","query":"SELECT count(DISTINCT loser_name) FROM matches","query_toks":["SELECT","count","(","DISTINCT","loser_name",")","FROM","matches"],"query_toks_no_value":["select","count","(","distinct","loser_name",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,15,true],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","Anzahl","der","eindeutigen","Namen","der","Verlierer","."],"question":"Finden Sie die Anzahl der eindeutigen Namen der Verlierer."},{"db_id":"course_teach","query":"SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2","query_toks":["SELECT","T2.Name","FROM","course_arrange","AS","T1","JOIN","teacher","AS","T2","ON","T1.Teacher_ID","=","T2.Teacher_ID","GROUP","BY","T2.Name","HAVING","COUNT","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","name","from","course_arrange","as","t1","join","teacher","as","t2","on","t1",".","teacher_id","=","t2",".","teacher_id","group","by","t2",".","name","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,4,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,5,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Namen","der","Lehrer","die","mindestens","zwei","Kurse","unterrichten","."],"question":"Zeige die Namen der Lehrer die mindestens zwei Kurse unterrichten. "},{"db_id":"car_1","query":"SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;","query_toks":["SELECT","avg","(","horsepower",")","FROM","CARS_DATA","WHERE","YEAR","<","1980",";"],"query_toks_no_value":["select","avg","(","horsepower",")","from","cars_data","where","year","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,20,false],null]]]],"union":null,"where":[[false,4,[0,[0,23,false],null],1980.0,null]]},"question_toks":["Wie","hoch","ist","die","durchschnittliche","Pferdest\u00e4rke","f\u00fcr","alle","vor","1980","hergestellten","Karten","?"],"question":"Wie hoch ist die durchschnittliche Pferdest\u00e4rke f\u00fcr alle vor 1980 hergestellten Karten? "},{"db_id":"student_transcripts_tracking","query":"SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )","query_toks":["SELECT","semester_name","FROM","Semesters","WHERE","semester_id","NOT","IN","(","SELECT","semester_id","FROM","Student_Enrolment",")"],"query_toks_no_value":["select","semester_name","from","semesters","where","semester_id","not","in","(","select","semester_id","from","student_enrolment",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,29,false],null]]]],"union":null,"where":[[true,8,[0,[0,28,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,46,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Was","ist","der","Name","des","Semesters",",","in","dem","keine","Studenten","eingeschrieben","sind","."],"question":"Was ist der Name des Semesters, in dem keine Studenten eingeschrieben sind."},{"db_id":"network_1","query":"SELECT grade FROM Highschooler","query_toks":["SELECT","grade","FROM","Highschooler"],"query_toks_no_value":["select","grade","from","highschooler"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","Note","jedes","Sch\u00fclers","?"],"question":"Was ist die Note jedes Sch\u00fclers?"},{"db_id":"pets_1","query":"SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)","query_toks":["SELECT","avg","(","age",")","FROM","student","WHERE","stuid","NOT","IN","(","SELECT","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid",")"],"query_toks_no_value":["select","avg","(","age",")","from","student","where","stuid","not","in","(","select","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Ermitteln","Sie","das","Durchschnittsalter","der","Studenten",",","die","kein","Haustier","haben","."],"question":"Ermitteln Sie das Durchschnittsalter der Studenten, die kein Haustier haben. "},{"db_id":"dog_kennels","query":"SELECT count(DISTINCT professional_id) FROM Treatments","query_toks":["SELECT","count","(","DISTINCT","professional_id",")","FROM","Treatments"],"query_toks_no_value":["select","count","(","distinct","professional_id",")","from","treatments"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,46,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Fachleute","haben","Hunde","behandelt","?"],"question":"Wie viele Fachleute haben Hunde behandelt? "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"","query_toks":["SELECT","document_name",",","template_id","FROM","Documents","WHERE","Document_Description","LIKE","``","%","w","%","''"],"query_toks_no_value":["select","document_name",",","template_id","from","documents","where","document_description","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,9,[0,[0,12,false],null],"\"%w%\"",null]]},"question_toks":["Wie","lauten","der","Dokumentname","und","die","Vorlagen-ID","f\u00fcr","ein","Dokument","mit","einer","Beschreibung","mit","dem","Buchstaben","``","w","''","darin","?"],"question":"Wie lauten der Dokumentname und die Vorlagen-ID f\u00fcr ein Dokument mit einer Beschreibung mit dem Buchstaben \"w\" darin? "},{"db_id":"network_1","query":"SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)","query_toks":["SELECT","avg","(","grade",")","FROM","Highschooler","WHERE","id","IN","(","SELECT","T1.student_id","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id",")"],"query_toks_no_value":["select","avg","(","grade",")","from","highschooler","where","id","in","(","select","t1",".","student_id","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,3,false],null]]]],"union":null,"where":[[false,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finden","Sie","die","Durchschnittsnote","aller","Studenten",",","die","einige","Freunde","haben","."],"question":"Finden Sie die Durchschnittsnote aller Studenten, die einige Freunde haben. "},{"db_id":"dog_kennels","query":"SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1","query_toks":["SELECT","name",",","age",",","weight","FROM","Dogs","WHERE","abandoned_yn","=","1"],"query_toks_no_value":["select","name",",","age",",","weight","from","dogs","where","abandoned_yn","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]],[0,[0,[0,26,false],null]],[0,[0,[0,29,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],1.0,null]]},"question_toks":["Wie","lauten","Name",",","Alter","und","Gewicht","der","Hunde",",","die","ausgesetzt","wurden","?","Beachten","Sie",",","dass","in","den","Tabellen","1","f\u00fcr","ja","und","0","f\u00fcr","nein","steht","."],"question":"Wie lauten Name, Alter und Gewicht der Hunde, die ausgesetzt wurden? Beachten Sie, dass in den Tabellen 1 f\u00fcr ja und 0 f\u00fcr nein steht. "},{"db_id":"voter_1","query":"SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'","query_toks":["SELECT","count","(","*",")","FROM","votes","WHERE","state","=","'NY","'","OR","state","=","'CA","'"],"query_toks_no_value":["select","count","(","*",")","from","votes","where","state","=","value","or","state","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"NY\"",null],"or",[false,2,[0,[0,7,false],null],"\"CA\"",null]]},"question_toks":["Wie","hoch","ist","die","Anzahl","der","Stimmen","der","Bundesstaaten","'NY","'","oder","'CA","'","?"],"question":"Wie hoch ist die Anzahl der Stimmen der Bundesstaaten 'NY' oder 'CA'?"},{"db_id":"poker_player","query":"SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1","query_toks":["SELECT","T1.Birth_Date","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T2.Earnings","ASC","LIMIT","1"],"query_toks_no_value":["select","t1",".","birth_date","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t2",".","earnings","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","das","Geburtsdatum","des","Pokerspielers","mit","dem","niedrigsten","Verdienst","an","."],"question":"Geben Sie das Geburtsdatum des Pokerspielers mit dem niedrigsten Verdienst an."},{"db_id":"singer","query":"SELECT Name FROM singer WHERE Citizenship != \"France\"","query_toks":["SELECT","Name","FROM","singer","WHERE","Citizenship","!","=","``","France","''"],"query_toks_no_value":["select","name","from","singer","where","citizenship","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,7,[0,[0,5,false],null],"\"France\"",null]]},"question_toks":["``","Nennen","Sie","die","Namen","von","S\u00e4ngern",",","deren","Staatsangeh\u00f6rigkeit","nicht","``","Frankreich","''","ist"],"question":"\"Nennen Sie die Namen von S\u00e4ngern, deren Staatsangeh\u00f6rigkeit nicht \"Frankreich\" ist"},{"db_id":"course_teach","query":"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID","query_toks":["SELECT","T3.Name",",","T2.Course","FROM","course_arrange","AS","T1","JOIN","course","AS","T2","ON","T1.Course_ID","=","T2.Course_ID","JOIN","teacher","AS","T3","ON","T1.Teacher_ID","=","T3.Teacher_ID"],"query_toks_no_value":["select","t3",".","name",",","t2",".","course","from","course_arrange","as","t1","join","course","as","t2","on","t1",".","course_id","=","t2",".","course_id","join","teacher","as","t3","on","t1",".","teacher_id","=","t3",".","teacher_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dfen","die","einzelnen","Lehrer","und","welchen","Kurs","unterrichten","sie","?"],"question":"Wie hei\u00dfen die einzelnen Lehrer und welchen Kurs unterrichten sie?"},{"db_id":"orchestra","query":"SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003","query_toks":["SELECT","Record_Company","FROM","orchestra","WHERE","Year_of_Founded","<","2003","INTERSECT","SELECT","Record_Company","FROM","orchestra","WHERE","Year_of_Founded",">","2003"],"query_toks_no_value":["select","record_company","from","orchestra","where","year_of_founded","<","value","intersect","select","record_company","from","orchestra","where","year_of_founded",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,3,[0,[0,10,false],null],2003.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,4,[0,[0,10,false],null],2003.0,null]]},"question_toks":["Zeigen","Sie","die","Plattenfirmen",",","die","von","vor","2003","und","nach","2003","gegr\u00fcndeten","Orchestern","gemeinsam","genutzt","werden","."],"question":"Zeigen Sie die Plattenfirmen, die von vor 2003 und nach 2003 gegr\u00fcndeten Orchestern gemeinsam genutzt werden. "},{"db_id":"employee_hire_evaluation","query":"SELECT min(Number_products) ,  max(Number_products) FROM shop","query_toks":["SELECT","min","(","Number_products",")",",","max","(","Number_products",")","FROM","shop"],"query_toks_no_value":["select","min","(","number_products",")",",","max","(","number_products",")","from","shop"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,9,false],null]],[1,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","minimale","und","maximale","Anzahl","von","Produkten","aller","Gesch\u00e4fte","."],"question":"Finde die minimale und maximale Anzahl von Produkten aller Gesch\u00e4fte. "},{"db_id":"world_1","query":"SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","LANGUAGE","FROM","countrylanguage","GROUP","BY","LANGUAGE","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","language","from","countrylanguage","group","by","language","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,24,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Sprache","wird","von","den","meisten","L\u00e4ndern","gesprochen","?"],"question":"Welche Sprache wird von den meisten L\u00e4ndern gesprochen? "},{"db_id":"flight_2","query":"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"","query_toks":["SELECT","count","(","*",")","FROM","Flights","AS","T1","JOIN","Airports","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","WHERE","T2.city","=","``","Aberdeen","''","OR","T2.city","=","``","Abilene","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","where","t2",".","city","=","value","or","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null],"or",[false,2,[0,[0,5,false],null],"\"Abilene\"",null]]},"question_toks":["Wie","viele","Fl\u00fcge","landen","in","Aberdeen","oder","Abilene","?"],"question":"Wie viele Fl\u00fcge landen in Aberdeen oder Abilene?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT min(Version_Number) ,  template_type_code FROM Templates","query_toks":["SELECT","min","(","Version_Number",")",",","template_type_code","FROM","Templates"],"query_toks_no_value":["select","min","(","version_number",")",",","template_type_code","from","templates"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","kleinste","Versionsnummer","und","der","Code","f\u00fcr","den","Vorlagentyp","?"],"question":"Was ist die kleinste Versionsnummer und der Code f\u00fcr den Vorlagentyp?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs","query_toks":["SELECT","count","(","DISTINCT","degree_summary_name",")","FROM","Degree_Programs"],"query_toks_no_value":["select","count","(","distinct","degree_summary_name",")","from","degree_programs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,20,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Abschl\u00fcsse","werden","angeboten","?"],"question":"Wie viele verschiedene Abschl\u00fcsse werden angeboten? "},{"db_id":"tvshow","query":"SELECT max(SHARE) , min(SHARE) FROM TV_series;","query_toks":["SELECT","max","(","SHARE",")",",","min","(","SHARE",")","FROM","TV_series",";"],"query_toks_no_value":["select","max","(","share",")",",","min","(","share",")","from","tv_series"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,14,false],null]],[2,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","der","minimale","und","maximale","Anteil","von","Fernsehserien","?"],"question":"Was ist der minimale und maximale Anteil von Fernsehserien?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'","query_toks":["SELECT","T1.paragraph_id",",","T1.paragraph_text","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_id","=","T2.document_id","WHERE","T2.Document_Name","=","'Welcome","to","NY","'"],"query_toks_no_value":["select","t1",".","paragraph_id",",","t1",".","paragraph_text","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","where","t2",".","document_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Welcome to NY\"",null]]},"question_toks":["Welches","sind","die","Ausweise","und","Texte","der","Abs\u00e4tze","in","dem","Dokument","mit","dem","Titel","'Willkommen","in","New","York","'","?"],"question":"Welches sind die Ausweise und Texte der Abs\u00e4tze in dem Dokument mit dem Titel 'Willkommen in New York'?"},{"db_id":"wta_1","query":"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","query_toks":["SELECT","count","(","*",")",",","YEAR","FROM","matches","GROUP","BY","YEAR"],"query_toks_no_value":["select","count","(","*",")",",","year","from","matches","group","by","year"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,38,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,38,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","Anzahl","der","Spiele",",","die","in","jedem","Jahr","stattgefunden","haben","."],"question":"Finden Sie die Anzahl der Spiele, die in jedem Jahr stattgefunden haben."},{"db_id":"world_1","query":"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","query_toks":["SELECT","sum","(","Population",")",",","avg","(","LifeExpectancy",")",",","Continent","FROM","country","GROUP","BY","Continent","HAVING","avg","(","LifeExpectancy",")","<","72"],"query_toks_no_value":["select","sum","(","population",")",",","avg","(","lifeexpectancy",")",",","continent","from","country","group","by","continent","having","avg","(","lifeexpectancy",")","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,10,false]],"having":[[false,4,[0,[5,15,false],null],72.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,14,false],null]],[5,[0,[0,15,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","die","durchschnittliche","Lebenserwartung","und","die","Gesamtbev\u00f6lkerung","f\u00fcr","jeden","Kontinent",",","auf","dem","die","durchschnittliche","Lebenserwartung","weniger","als","72","Jahre","betr\u00e4gt","?"],"question":"Finden Sie die durchschnittliche Lebenserwartung und die Gesamtbev\u00f6lkerung f\u00fcr jeden Kontinent, auf dem die durchschnittliche Lebenserwartung weniger als 72 Jahre betr\u00e4gt?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code ,  template_type_description FROM Ref_template_types","query_toks":["SELECT","template_type_code",",","template_type_description","FROM","Ref_template_types"],"query_toks_no_value":["select","template_type_code",",","template_type_description","from","ref_template_types"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Typcodes","und","Beschreibungen","f\u00fcr","alle","Vorlagentypen","?"],"question":"Wie lauten die Typcodes und Beschreibungen f\u00fcr alle Vorlagentypen? "},{"db_id":"student_transcripts_tracking","query":"SELECT count(DISTINCT department_id) FROM Degree_Programs","query_toks":["SELECT","count","(","DISTINCT","department_id",")","FROM","Degree_Programs"],"query_toks_no_value":["select","count","(","distinct","department_id",")","from","degree_programs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,19,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Abteilungen","bieten","Abschl\u00fcsse","an","?"],"question":"Wie viele verschiedene Abteilungen bieten Abschl\u00fcsse an? "},{"db_id":"car_1","query":"SELECT Maker ,  Model FROM MODEL_LIST;","query_toks":["SELECT","Maker",",","Model","FROM","MODEL_LIST",";"],"query_toks_no_value":["select","maker",",","model","from","model_list"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","all","die","Hersteller","und","Modelle","?"],"question":"Was sind all die Hersteller und Modelle? "},{"db_id":"concert_singer","query":"SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","YEAR","FROM","concert","GROUP","BY","YEAR","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","year","from","concert","group","by","year","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","das","Jahr","mit","den","meisten","Konzerten","?"],"question":"Welches ist das Jahr mit den meisten Konzerten? "},{"db_id":"student_transcripts_tracking","query":"SELECT section_name FROM Sections ORDER BY section_name DESC","query_toks":["SELECT","section_name","FROM","Sections","ORDER","BY","section_name","DESC"],"query_toks_no_value":["select","section_name","from","sections","order","by","section_name","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,25,false],null]]],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","das","Jahr","mit","den","meisten","Konzerten","?","Wie","lauten","die","Namen","der","Sektionen","in","umgekehrter","alphabetischer","Reihenfolge","?"],"question":"Welches ist das Jahr mit den meisten Konzerten? Wie lauten die Namen der Sektionen in umgekehrter alphabetischer Reihenfolge? "},{"db_id":"world_1","query":"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","query_toks":["SELECT","LANGUAGE",",","CountryCode",",","max","(","Percentage",")","FROM","countrylanguage","GROUP","BY","CountryCode"],"query_toks_no_value":["select","language",",","countrycode",",","max","(","percentage",")","from","countrylanguage","group","by","countrycode"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,24,false],null]],[0,[0,[0,23,false],null]],[1,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","L\u00e4ndercodes","der","verschiedenen","L\u00e4nder",",","und","welche","Sprachen","werden","jeweils","von","dem","gr\u00f6\u00dften","Prozentsatz","der","Menschen","gesprochen","?"],"question":"Welches sind die L\u00e4ndercodes der verschiedenen L\u00e4nder, und welche Sprachen werden jeweils von dem gr\u00f6\u00dften Prozentsatz der Menschen gesprochen?"},{"db_id":"dog_kennels","query":"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","query_toks":["SELECT","T1.first_name",",","T1.last_name",",","T2.size_code","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","last_name",",","t2",".","size_code","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]],[0,[0,[0,24,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","der","Vorname",",","der","Nachname","und","die","Gr\u00f6\u00dfe","des","Hundes","jedes","Besitzers","?"],"question":"Wie lauten der Vorname, der Nachname und die Gr\u00f6\u00dfe des Hundes jedes Besitzers?"},{"db_id":"poker_player","query":"SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1","query_toks":["SELECT","T2.Money_Rank","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T1.Height","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","money_rank","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t1",".","height","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,11,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","den","Geldrang","des","Pokerspielers","mit","der","gr\u00f6\u00dften","H\u00f6he","zur\u00fcck","."],"question":"Geben Sie den Geldrang des Pokerspielers mit der gr\u00f6\u00dften H\u00f6he zur\u00fcck."},{"db_id":"course_teach","query":"SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33","query_toks":["SELECT","Name","FROM","teacher","WHERE","Age","=","32","OR","Age","=","33"],"query_toks_no_value":["select","name","from","teacher","where","age","=","value","or","age","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],32.0,null],"or",[false,2,[0,[0,6,false],null],33.0,null]]},"question_toks":["Zeige","den","Namen","von","Lehrern","im","Alter","von","32","oder","33","Jahren","an","?"],"question":"Zeige den Namen von Lehrern im Alter von 32 oder 33 Jahren an?"},{"db_id":"pets_1","query":"SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'","query_toks":["SELECT","T1.lname","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pet_age","=","3","AND","T3.pettype","=","'cat","'"],"query_toks_no_value":["select","t1",".","lname","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pet_age","=","value","and","t3",".","pettype","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],3.0,null],"and",[false,2,[0,[0,12,false],null],"\"cat\"",null]]},"question_toks":["Finden","Sie","den","Nachnamen","des","Studenten",",","der","eine","Katze","im","Alter","von","3","Jahren","hat","."],"question":"Finden Sie den Nachnamen des Studenten, der eine Katze im Alter von 3 Jahren hat."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'","query_toks":["SELECT","Other_Details","FROM","Paragraphs","WHERE","paragraph_text","=","'Korea","'"],"query_toks_no_value":["select","other_details","from","paragraphs","where","paragraph_text","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,2,[0,[0,16,false],null],"\"Korea\"",null]]},"question_toks":["Was","sind","die","Details","des","Absatzes",",","der","den","Text","``","Korea","''","enth\u00e4lt","?"],"question":"Was sind die Details des Absatzes, der den Text \"Korea\" enth\u00e4lt? "},{"db_id":"world_1","query":"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")","query_toks":["SELECT","Name","FROM","country","WHERE","SurfaceArea",">","(","SELECT","min","(","SurfaceArea",")","FROM","country","WHERE","Continent","=","``","Europe","''",")"],"query_toks_no_value":["select","name","from","country","where","surfacearea",">","(","select","min","(","surfacearea",")","from","country","where","continent","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,3,[0,[0,12,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Europe\"",null]]},null]]},"question_toks":["Welche","L\u00e4nder","haben","eine","gr\u00f6\u00dfere","Fl\u00e4che","als","jedes","andere","Land","in","Europa","?"],"question":"Welche L\u00e4nder haben eine gr\u00f6\u00dfere Fl\u00e4che als jedes andere Land in Europa?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"","query_toks":["SELECT","template_type_description","FROM","Ref_template_types","WHERE","template_type_code","=","``","AD","''"],"query_toks_no_value":["select","template_type_description","from","ref_template_types","where","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,1,false],null],"\"AD\"",null]]},"question_toks":["``","Wie","lauten","die","Beschreibungen","des","Vorlagentyps","f\u00fcr","den","Code","des","Vorlagentyps","``","''","AD","''","''","."],"question":"\"Wie lauten die Beschreibungen des Vorlagentyps f\u00fcr den Code des Vorlagentyps \"\"AD\"\". "},{"db_id":"course_teach","query":"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown","query_toks":["SELECT","Hometown",",","COUNT","(","*",")","FROM","teacher","GROUP","BY","Hometown"],"query_toks_no_value":["select","hometown",",","count","(","*",")","from","teacher","group","by","hometown"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","verschiedenen","Heimatst\u00e4dte","der","Lehrer","und","die","Anzahl","der","Lehrer","aus","den","einzelnen","Heimatst\u00e4dten","an","."],"question":"Zeige die verschiedenen Heimatst\u00e4dte der Lehrer und die Anzahl der Lehrer aus den einzelnen Heimatst\u00e4dten an."},{"db_id":"tvshow","query":"SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";","query_toks":["SELECT","Title","FROM","Cartoon","WHERE","Directed_by","=","``","Ben","Jones","''",";"],"query_toks_no_value":["select","title","from","cartoon","where","directed_by","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null]]},"question_toks":["Wie","lauten","die","Namen","aller","Zeichentrickfilme","unter","der","Regie","von","Ben","Jones","?"],"question":"Wie lauten die Namen aller Zeichentrickfilme unter der Regie von Ben Jones? "},{"db_id":"tvshow","query":"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";","query_toks":["SELECT","T1.series_name","FROM","TV_Channel","AS","T1","JOIN","Cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.Title","=","``","The","Rise","of","the","Blue","Beetle","!","``",";"],"query_toks_no_value":["select","t1",".","series_name","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","title","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"The Rise of the Blue Beetle!\"",null]]},"question_toks":["``","Welcher","Fernsehsender","zeigt","den","Zeichentrickfilm","``","The","Rise","of","the","Blue","Beetle","!","''","?","Nenne","den","Seriennamen","des","Fernsehkanals",".","''"],"question":"\"Welcher Fernsehsender zeigt den Zeichentrickfilm \"The Rise of the Blue Beetle!\"? Nenne den Seriennamen des Fernsehkanals.\""},{"db_id":"student_transcripts_tracking","query":"SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'","query_toks":["SELECT","department_description","FROM","Departments","WHERE","department_name","LIKE","'","%","computer","%","'"],"query_toks_no_value":["select","department_description","from","departments","where","department_name","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,9,[0,[0,15,false],null],"\"%computer%\"",null]]},"question_toks":["Wie","lautet","die","Abteilungsbeschreibung","f\u00fcr","diejenige",",","in","dessen","Namen","das","Wort","Computer","vorkommt","?"],"question":"Wie lautet die Abteilungsbeschreibung f\u00fcr diejenige, in dessen Namen das Wort Computer vorkommt? "},{"db_id":"battle_death","query":"SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'","query_toks":["SELECT","DISTINCT","T1.id",",","T1.name","FROM","battle","AS","T1","JOIN","ship","AS","T2","ON","T1.id","=","T2.lost_in_battle","WHERE","T2.ship_type","=","'Brig","'"],"query_toks_no_value":["select","distinct","t1",".","id",",","t1",".","name","from","battle","as","t1","join","ship","as","t2","on","t1",".","id","=","t2",".","lost_in_battle","where","t2",".","ship_type","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Brig\"",null]]},"question_toks":["Wie","lauten","die","verschiedenen","Kennungen","und","Namen","der","Schlachten",",","in","denen","Schiffe","des","Typs","``","Brig","''","verloren","gingen","?"],"question":"Wie lauten die verschiedenen Kennungen und Namen der Schlachten, in denen Schiffe des Typs \"Brig\" verloren gingen? "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.template_id",",","T2.Template_Type_Code","FROM","Documents","AS","T1","JOIN","Templates","AS","T2","ON","T1.template_id","=","T2.template_id","GROUP","BY","T1.template_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","template_id",",","t2",".","template_type_code","from","documents","as","t1","join","templates","as","t2","on","t1",".","template_id","=","t2",".","template_id","group","by","t1",".","template_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","die","Kennung","und","den","Typcode","der","Vorlage","zur\u00fcck",",","die","f\u00fcr","die","gr\u00f6\u00dfte","Anzahl","von","Dokumenten","verwendet","wird","."],"question":"Geben Sie die Kennung und den Typcode der Vorlage zur\u00fcck, die f\u00fcr die gr\u00f6\u00dfte Anzahl von Dokumenten verwendet wird. "},{"db_id":"course_teach","query":"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown","query_toks":["SELECT","Hometown",",","COUNT","(","*",")","FROM","teacher","GROUP","BY","Hometown"],"query_toks_no_value":["select","hometown",",","count","(","*",")","from","teacher","group","by","hometown"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Lehrer","gibt","es","in","jeder","Heimatstadt","?"],"question":"Wie viele Lehrer gibt es in jeder Heimatstadt? "},{"db_id":"concert_singer","query":"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","query_toks":["SELECT","avg","(","age",")",",","min","(","age",")",",","max","(","age",")","FROM","singer","WHERE","country","=","'France","'"],"query_toks_no_value":["select","avg","(","age",")",",","min","(","age",")",",","max","(","age",")","from","singer","where","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,13,false],null]],[2,[0,[0,13,false],null]],[1,[0,[0,13,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"France\"",null]]},"question_toks":["Was","ist","das","Durchschnitts-",",","Mindest-","und","H\u00f6chstalter","f\u00fcr","alle","franz\u00f6sischen","S\u00e4nger","?"],"question":"Was ist das Durchschnitts-, Mindest- und H\u00f6chstalter f\u00fcr alle franz\u00f6sischen S\u00e4nger? "},{"db_id":"employee_hire_evaluation","query":"SELECT name FROM employee ORDER BY age","query_toks":["SELECT","name","FROM","employee","ORDER","BY","age"],"query_toks_no_value":["select","name","from","employee","order","by","age"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,3,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Sortieren","Sie","die","Namen","der","Mitarbeiter","nach","ihrem","Alter","in","aufsteigender","Reihenfolge","."],"question":"Sortieren Sie die Namen der Mitarbeiter nach ihrem Alter in aufsteigender Reihenfolge. "},{"db_id":"car_1","query":"SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;","query_toks":["SELECT","mpg","FROM","CARS_DATA","WHERE","Cylinders","=","8","OR","YEAR","<","1980","ORDER","BY","mpg","DESC","LIMIT","1",";"],"query_toks_no_value":["select","mpg","from","cars_data","where","cylinders","=","value","or","year","<","value","order","by","mpg","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,17,false],null]]],"select":[false,[[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],8.0,null],"or",[false,4,[0,[0,23,false],null],1980.0,null]]},"question_toks":["Wie","viele","Kilometer","pro","Gallone","leistet","ein","8-Zylinder-Auto",",","das","vor","1980","hergestellt","wurde","?"],"question":"Wie viele Kilometer pro Gallone leistet ein 8-Zylinder-Auto, das vor 1980 hergestellt wurde?"},{"db_id":"wta_1","query":"SELECT first_name ,  last_name FROM players ORDER BY birth_date","query_toks":["SELECT","first_name",",","last_name","FROM","players","ORDER","BY","birth_date"],"query_toks_no_value":["select","first_name",",","last_name","from","players","order","by","birth_date"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","vollst\u00e4ndigen","Namen","aller","Spieler",",","sortiert","nach","Geburtsdatum","?"],"question":"Wie lauten die vollst\u00e4ndigen Namen aller Spieler, sortiert nach Geburtsdatum? "},{"db_id":"world_1","query":"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1","query_toks":["SELECT","T2.Language","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.GovernmentForm","=","``","Republic","''","GROUP","BY","T2.Language","HAVING","COUNT","(","*",")","=","1"],"query_toks_no_value":["select","t2",".","language","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","governmentform","=","value","group","by","t2",".","language","having","count","(","*",")","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,24,false]],"having":[[false,2,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,24,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],"\"Republic\"",null]]},"question_toks":["Welche","Sprachen","werden","in","republikanischen","Regierungen","nur","von","einem","Land","gesprochen","?"],"question":"Welche Sprachen werden in republikanischen Regierungen nur von einem Land gesprochen? "},{"db_id":"poker_player","query":"SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC","query_toks":["SELECT","T1.Name","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","ORDER","BY","T2.Earnings","DESC"],"query_toks_no_value":["select","t1",".","name","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","order","by","t2",".","earnings","desc"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","Pokerspieler","in","absteigender","Reihenfolge","der","Gewinne","?"],"question":"Wie lauten die Namen der Pokerspieler in absteigender Reihenfolge der Gewinne?"},{"db_id":"world_1","query":"SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"","query_toks":["SELECT","DISTINCT","T3.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","JOIN","city","AS","T3","ON","T1.Code","=","T3.CountryCode","WHERE","T2.IsOfficial","=","'T","'","AND","T2.Language","=","'Chinese","'","AND","T1.Continent","=","``","Asia","''"],"query_toks_no_value":["select","distinct","t3",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","join","city","as","t3","on","t1",".","code","=","t3",".","countrycode","where","t2",".","isofficial","=","value","and","t2",".","language","=","value","and","t1",".","continent","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"T\"",null],"and",[false,2,[0,[0,24,false],null],"\"Chinese\"",null],"and",[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Geben","Sie","die","verschiedenen","Namen","der","St\u00e4dte","an",",","die","in","Asien","liegen","und","f\u00fcr","die","Chinesisch","die","offizielle","Sprache","ist","."],"question":"Geben Sie die verschiedenen Namen der St\u00e4dte an, die in Asien liegen und f\u00fcr die Chinesisch die offizielle Sprache ist."},{"db_id":"car_1","query":"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';","query_toks":["SELECT","DISTINCT","T1.model","FROM","MODEL_LIST","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Model","=","T2.Model","JOIN","CARS_DATA","AS","T3","ON","T2.MakeId","=","T3.Id","JOIN","CAR_MAKERS","AS","T4","ON","T1.Maker","=","T4.Id","WHERE","T3.weight","<","3500","AND","T4.FullName","!","=","'Ford","Motor","Company","'",";"],"query_toks_no_value":["select","distinct","t1",".","model","from","model_list","as","t1","join","car_names","as","t2","on","t1",".","model","=","t2",".","model","join","cars_data","as","t3","on","t2",".","makeid","=","t3",".","id","join","car_makers","as","t4","on","t1",".","maker","=","t4",".","id","where","t3",".","weight","<","value","and","t4",".","fullname","!","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,14,false],null]],"table_units":[["table_unit",3],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,4,[0,[0,21,false],null],3500.0,null],"and",[false,7,[0,[0,8,false],null],"\"Ford Motor Company\"",null]]},"question_toks":["Welche","Modelle","sind","leichter","als","3500",",","werden","aber","nicht","von","der","'Ford","Motor","Company","'","gebaut","?"],"question":"Welche Modelle sind leichter als 3500, werden aber nicht von der 'Ford Motor Company' gebaut? "},{"db_id":"world_1","query":"SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"","query_toks":["SELECT","sum","(","SurfaceArea",")","FROM","country","WHERE","Region","=","``","Caribbean","''"],"query_toks_no_value":["select","sum","(","surfacearea",")","from","country","where","region","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Caribbean\"",null]]},"question_toks":["Wie","gro\u00df","ist","die","Gesamtfl\u00e4che","der","L\u00e4nder","in","der","karibischen","Region","?"],"question":"Wie gro\u00df ist die Gesamtfl\u00e4che der L\u00e4nder in der karibischen Region?"},{"db_id":"singer","query":"SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000","query_toks":["SELECT","DISTINCT","T1.Name","FROM","singer","AS","T1","JOIN","song","AS","T2","ON","T1.Singer_ID","=","T2.Singer_ID","WHERE","T2.Sales",">","300000"],"query_toks_no_value":["select","distinct","t1",".","name","from","singer","as","t1","join","song","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","where","t2",".","sales",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],300000.0,null]]},"question_toks":["Was","sind","die","verschiedenen","Namen","der","S\u00e4ngerinnen","und","S\u00e4nger",",","die","mehr","als","300000","verkauft","haben","?"],"question":"Was sind die verschiedenen Namen der S\u00e4ngerinnen und S\u00e4nger, die mehr als 300000 verkauft haben? "},{"db_id":"tvshow","query":"SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'","query_toks":["SELECT","T1.country","FROM","TV_Channel","AS","T1","JOIN","cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.written_by","=","'Todd","Casey","'"],"query_toks_no_value":["select","t1",".","country","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","written_by","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],"\"Todd Casey\"",null]]},"question_toks":["Welche","Fernsehsender","in","welchen","L\u00e4ndern","spielen","einen","Zeichentrickfilm","von","Todd","Casey","?"],"question":"Welche Fernsehsender in welchen L\u00e4ndern spielen einen Zeichentrickfilm von Todd Casey? "},{"db_id":"tvshow","query":"SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";","query_toks":["SELECT","Air_Date","FROM","TV_series","WHERE","Episode","=","``","A","Love","of","a","Lifetime","''",";"],"query_toks_no_value":["select","air_date","from","tv_series","where","episode","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"A Love of a Lifetime\"",null]]},"question_toks":["``","Wann","wird","die","TV-Serie","mit","der","Episode","``","''","Eine","Liebe","f\u00fcrs","Leben","''","ausgestrahlt","?"],"question":"\"Wann wird die TV-Serie mit der Episode \"\"Eine Liebe f\u00fcrs Leben\" ausgestrahlt?"},{"db_id":"concert_singer","query":"SELECT country ,  count(*) FROM singer GROUP BY country","query_toks":["SELECT","country",",","count","(","*",")","FROM","singer","GROUP","BY","country"],"query_toks_no_value":["select","country",",","count","(","*",")","from","singer","group","by","country"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","S\u00e4nger","kommen","aus","jedem","Land","?"],"question":"Wie viele S\u00e4nger kommen aus jedem Land?"},{"db_id":"student_transcripts_tracking","query":"SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'","query_toks":["SELECT","department_description","FROM","Departments","WHERE","department_name","LIKE","'","%","computer","%","'"],"query_toks_no_value":["select","department_description","from","departments","where","department_name","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,9,[0,[0,15,false],null],"\"%computer%\"",null]]},"question_toks":["Wie","lautet","die","Beschreibung","der","Abteilung",",","deren","Name","die","Teilzeichenfolge","des","Computers","enth\u00e4lt","?"],"question":"Wie lautet die Beschreibung der Abteilung, deren Name die Teilzeichenfolge des Computers enth\u00e4lt?"},{"db_id":"world_1","query":"SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"","query_toks":["SELECT","Population",",","Region","FROM","country","WHERE","Name","=","``","Angola","''"],"query_toks_no_value":["select","population",",","region","from","country","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Angola\"",null]]},"question_toks":["Zu","welcher","Region","geh\u00f6rt","Angola","und","wie","gro\u00df","ist","seine","Bev\u00f6lkerung","?"],"question":"Zu welcher Region geh\u00f6rt Angola und wie gro\u00df ist seine Bev\u00f6lkerung? "},{"db_id":"concert_singer","query":"SELECT country ,  count(*) FROM singer GROUP BY country","query_toks":["SELECT","country",",","count","(","*",")","FROM","singer","GROUP","BY","country"],"query_toks_no_value":["select","country",",","count","(","*",")","from","singer","group","by","country"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","alle","L\u00e4nder","und","die","Anzahl","der","S\u00e4nger","in","jedem","Land","an","."],"question":"Zeigen Sie alle L\u00e4nder und die Anzahl der S\u00e4nger in jedem Land an. "},{"db_id":"student_transcripts_tracking","query":"SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.degree_summary_name","FROM","Degree_Programs","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.degree_program_id","=","T2.degree_program_id","GROUP","BY","T1.degree_summary_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","degree_summary_name","from","degree_programs","as","t1","join","student_enrolment","as","t2","on","t1",".","degree_program_id","=","t2",".","degree_program_id","group","by","t1",".","degree_summary_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[[0,20,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Name","der","Zusammenfassung","des","Studienabschlusses",",","f\u00fcr","den","die","meisten","Studierenden","eingeschrieben","sind","?"],"question":"Wie lautet der Name der Zusammenfassung des Studienabschlusses, f\u00fcr den die meisten Studierenden eingeschrieben sind? "},{"db_id":"student_transcripts_tracking","query":"SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'","query_toks":["SELECT","zip_postcode","FROM","Addresses","WHERE","city","=","'Port","Chelsea","'"],"query_toks_no_value":["select","zip_postcode","from","addresses","where","city","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Port Chelsea\"",null]]},"question_toks":["Wie","lautet","die","Postleitzahl","der","Adresse","in","der","Stadt","Port","Chelsea","?"],"question":"Wie lautet die Postleitzahl der Adresse in der Stadt Port Chelsea? "},{"db_id":"pets_1","query":"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","query_toks":["SELECT","major",",","age","FROM","student","WHERE","stuid","NOT","IN","(","SELECT","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'",")"],"query_toks_no_value":["select","major",",","age","from","student","where","stuid","not","in","(","select","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null]]},null]]},"question_toks":["Welches","Hauptfach","hat","jeder","Student",",","der","keine","Katze","als","Haustier","besitzt",",","und","wie","alt","sind","sie","?"],"question":"Welches Hauptfach hat jeder Student, der keine Katze als Haustier besitzt, und wie alt sind sie? "},{"db_id":"dog_kennels","query":"SELECT max(charge_amount) FROM Charges","query_toks":["SELECT","max","(","charge_amount",")","FROM","Charges"],"query_toks_no_value":["select","max","(","charge_amount",")","from","charges"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viel","kostet","die","teuerste","Geb\u00fchrenart","?"],"question":"Wie viel kostet die teuerste Geb\u00fchrenart?"},{"db_id":"pets_1","query":"SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'","query_toks":["SELECT","T1.Fname","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'","INTERSECT","SELECT","T1.Fname","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'dog","'"],"query_toks_no_value":["select","t1",".","fname","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value","intersect","select","t1",".","fname","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"dog\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null]]},"question_toks":["Wie","lauten","die","Vornamen","der","Sch\u00fclerinnen","und","Sch\u00fcler",",","die","sowohl","Katzen","als","auch","Hunde","als","Haustiere","haben","?"],"question":"Wie lauten die Vornamen der Sch\u00fclerinnen und Sch\u00fcler, die sowohl Katzen als auch Hunde als Haustiere haben? "},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","GROUP","BY","T1.Airline","HAVING","count","(","*",")",">","10"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","group","by","t1",".","airline","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[[false,3,[0,[3,0,false],null],10.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","alle","Fluggesellschaften",",","die","mindestens","10","Fl\u00fcge","haben","."],"question":"Finden Sie alle Fluggesellschaften, die mindestens 10 Fl\u00fcge haben."},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"","query_toks":["SELECT","count","(","*",")","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T2.Airline","=","T1.uid","WHERE","T1.Airline","=","``","United","Airlines","''","AND","T2.SourceAirport","=","``","AHD","''"],"query_toks_no_value":["select","count","(","*",")","from","airlines","as","t1","join","flights","as","t2","on","t2",".","airline","=","t1",".","uid","where","t1",".","airline","=","value","and","t2",".","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,1,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"United Airlines\"",null],"and",[false,2,[0,[0,12,false],null],"\"AHD\"",null]]},"question_toks":["Wie","viele","Fl\u00fcge","von","'United","Airlines","'","starten","vom","Flughafen","'AHD","'","?"],"question":"Wie viele Fl\u00fcge von 'United Airlines' starten vom Flughafen 'AHD'? "},{"db_id":"museum_visit","query":"SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009","query_toks":["SELECT","avg","(","num_of_staff",")","FROM","museum","WHERE","open_year","<","2009"],"query_toks_no_value":["select","avg","(","num_of_staff",")","from","museum","where","open_year","<","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,3,false],null]]]],"union":null,"where":[[false,4,[0,[0,4,false],null],2009.0,null]]},"question_toks":["Finden","Sie","die","durchschnittliche","Anzahl","der","Mitarbeiter","der","Museen",",","die","vor","2009","ge\u00f6ffnet","waren","."],"question":"Finden Sie die durchschnittliche Anzahl der Mitarbeiter der Museen, die vor 2009 ge\u00f6ffnet waren."},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.DestAirport","=","``","AHD","''"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","destairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"AHD\"",null]]},"question_toks":["Welche","Fluggesellschaften","haben","Fl\u00fcge",",","die","am","Flughafen","'AHD","'","ankommen","?"],"question":"Welche Fluggesellschaften haben Fl\u00fcge, die am Flughafen 'AHD' ankommen? "},{"db_id":"employee_hire_evaluation","query":"SELECT count(DISTINCT LOCATION) FROM shop","query_toks":["SELECT","count","(","DISTINCT","LOCATION",")","FROM","shop"],"query_toks_no_value":["select","count","(","distinct","location",")","from","shop"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,7,true],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hlen","Sie","die","Anzahl","der","verschiedenen","Gesch\u00e4ftsstandorte","."],"question":"Z\u00e4hlen Sie die Anzahl der verschiedenen Gesch\u00e4ftsstandorte. "},{"db_id":"voter_1","query":"SELECT max(area_code) ,  min(area_code) FROM area_code_state","query_toks":["SELECT","max","(","area_code",")",",","min","(","area_code",")","FROM","area_code_state"],"query_toks_no_value":["select","max","(","area_code",")",",","min","(","area_code",")","from","area_code_state"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,1,false],null]],[2,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","H\u00f6chst-","und","Mindestwerte","der","Vorwahlen","?"],"question":"Was sind die H\u00f6chst- und Mindestwerte der Vorwahlen? "},{"db_id":"world_1","query":"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"","query_toks":["SELECT","DISTINCT","T1.Region","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","OR","T2.Language","=","``","Dutch","''"],"query_toks_no_value":["select","distinct","t1",".","region","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","or","t2",".","language","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null],"or",[false,2,[0,[0,24,false],null],"\"Dutch\"",null]]},"question_toks":["In","welchen","Regionen","wird","Englisch","oder","Niederl\u00e4ndisch","gesprochen","?"],"question":"In welchen Regionen wird Englisch oder Niederl\u00e4ndisch gesprochen? "},{"db_id":"world_1","query":"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1","query_toks":["SELECT","Name",",","Population",",","LifeExpectancy","FROM","country","WHERE","Continent","=","``","Asia","''","ORDER","BY","SurfaceArea","DESC","LIMIT","1"],"query_toks_no_value":["select","name",",","population",",","lifeexpectancy","from","country","where","continent","=","value","order","by","surfacearea","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,12,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,14,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Finden","Sie","den","Namen",",","die","Bev\u00f6lkerung","und","die","erwartete","Lebenserwartung","des","asiatischen","Landes","mit","der","gr\u00f6\u00dften","Fl\u00e4che","?"],"question":"Finden Sie den Namen, die Bev\u00f6lkerung und die erwartete Lebenserwartung des asiatischen Landes mit der gr\u00f6\u00dften Fl\u00e4che? "},{"db_id":"concert_singer","query":"SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)","query_toks":["SELECT","song_name","FROM","singer","WHERE","age",">","(","SELECT","avg","(","age",")","FROM","singer",")"],"query_toks_no_value":["select","song_name","from","singer","where","age",">","(","select","avg","(","age",")","from","singer",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,13,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["F\u00fchren","Sie","alle","Liednamen","von","S\u00e4ngern","auf",",","die","\u00fcber","dem","Durchschnittsalter","liegen","."],"question":"F\u00fchren Sie alle Liednamen von S\u00e4ngern auf, die \u00fcber dem Durchschnittsalter liegen. "},{"db_id":"student_transcripts_tracking","query":"SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'","query_toks":["SELECT","count","(","*",")","FROM","Departments","AS","T1","JOIN","Degree_Programs","AS","T2","ON","T1.department_id","=","T2.department_id","WHERE","T1.department_name","=","'engineer","'"],"query_toks_no_value":["select","count","(","*",")","from","departments","as","t1","join","degree_programs","as","t2","on","t1",".","department_id","=","t2",".","department_id","where","t1",".","department_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,14,false],null],[0,19,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"engineer\"",null]]},"question_toks":["Wie","viele","Abschl\u00fcsse","bietet","die","Ingenieurabteilung","an","?"],"question":"Wie viele Abschl\u00fcsse bietet die Ingenieurabteilung an? "},{"db_id":"world_1","query":"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"","query_toks":["SELECT","Population",",","LifeExpectancy","FROM","country","WHERE","Name","=","``","Brazil","''"],"query_toks_no_value":["select","population",",","lifeexpectancy","from","country","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Brazil\"",null]]},"question_toks":["Nennen","Sie","mir","die","Bev\u00f6lkerung","und","die","Lebenserwartung","Brasiliens","."],"question":"Nennen Sie mir die Bev\u00f6lkerung und die Lebenserwartung Brasiliens."},{"db_id":"world_1","query":"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"","query_toks":["SELECT","COUNT","(","*",")","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T1.Name","=","``","Afghanistan","''","AND","IsOfficial","=","``","T","''"],"query_toks_no_value":["select","count","(","*",")","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t1",".","name","=","value","and","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Afghanistan\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Wie","viele","offizielle","Sprachen","werden","in","Afghanistan","gesprochen","?"],"question":"Wie viele offizielle Sprachen werden in Afghanistan gesprochen? "},{"db_id":"wta_1","query":"SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3","query_toks":["SELECT","DISTINCT","winner_name",",","winner_rank","FROM","matches","ORDER","BY","winner_age","LIMIT","3"],"query_toks_no_value":["select","distinct","winner_name",",","winner_rank","from","matches","order","by","winner_age","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["asc",[[0,[0,28,false],null]]],"select":[true,[[0,[0,[0,34,false],null]],[0,[0,[0,35,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","und","R\u00e4nge","der","drei","j\u00fcngsten","Sieger","\u00fcber","alle","Spiele","hinweg","?"],"question":"Wie lauten die Namen und R\u00e4nge der drei j\u00fcngsten Sieger \u00fcber alle Spiele hinweg? "},{"db_id":"poker_player","query":"SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2","query_toks":["SELECT","Nationality","FROM","people","GROUP","BY","Nationality","HAVING","COUNT","(","*",")",">","=","2"],"query_toks_no_value":["select","nationality","from","people","group","by","nationality","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","die","Nationalit\u00e4ten","an",",","f\u00fcr","die","es","zwei","oder","mehr","Personen","gibt","."],"question":"Geben Sie die Nationalit\u00e4ten an, f\u00fcr die es zwei oder mehr Personen gibt. "},{"db_id":"car_1","query":"SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;","query_toks":["SELECT","Weight","FROM","CARS_DATA","WHERE","Cylinders","=","4","AND","YEAR","=","1974","ORDER","BY","Weight","ASC","LIMIT","1",";"],"query_toks_no_value":["select","weight","from","cars_data","where","cylinders","=","value","and","year","=","value","order","by","weight","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,21,false],null]]],"select":[false,[[0,[0,[0,21,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],4.0,null],"and",[false,2,[0,[0,23,false],null],1974.0,null]]},"question_toks":["Was","ist","das","Mindestgewicht","des","1974","produzierten","8-Zylinder-Autos","?"],"question":"Was ist das Mindestgewicht des 1974 produzierten 8-Zylinder-Autos?"},{"db_id":"car_1","query":"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;","query_toks":["SELECT","T1.Model","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","ORDER","BY","T2.mpg","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","model","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","order","by","t2",".","mpg","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,17,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","das","Auto","wModell","mit","der","h\u00f6chsten","mpg","?"],"question":"Welches ist das Auto wModell mit der h\u00f6chsten mpg?"},{"db_id":"world_1","query":"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"","query_toks":["SELECT","count","(","DISTINCT","T2.Language",")","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","IndepYear","<","1930","AND","T2.IsOfficial","=","``","T","''"],"query_toks_no_value":["select","count","(","distinct","t2",".","language",")","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","indepyear","<","value","and","t2",".","isofficial","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,24,true],null]]]],"union":null,"where":[[false,4,[0,[0,13,false],null],1930.0,null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},"question_toks":["Wie","hoch","ist","die","Gesamtzahl","der","einzigartigen","offiziellen","Sprachen",",","die","in","den","L\u00e4ndern","gesprochen","werden",",","die","vor","1930","gegr\u00fcndet","wurden","?"],"question":"Wie hoch ist die Gesamtzahl der einzigartigen offiziellen Sprachen, die in den L\u00e4ndern gesprochen werden, die vor 1930 gegr\u00fcndet wurden?"},{"db_id":"wta_1","query":"SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10","query_toks":["SELECT","tourney_name","FROM","matches","GROUP","BY","tourney_name","HAVING","count","(","*",")",">","10"],"query_toks_no_value":["select","tourney_name","from","matches","group","by","tourney_name","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,27,false]],"having":[[false,3,[0,[3,0,false],null],10.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,27,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","den","Namen","eines","Turniers",",","das","mehr","als","10","Spiele","hat","."],"question":"Finden Sie den Namen eines Turniers, das mehr als 10 Spiele hat. "},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","GROUP","BY","T1.Airline","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","group","by","t1",".","airline","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Fluggesellschaft","hat","die","meisten","Fl\u00fcge","?"],"question":"Welche Fluggesellschaft hat die meisten Fl\u00fcge? "},{"db_id":"tvshow","query":"SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";","query_toks":["SELECT","Weekly_Rank","FROM","TV_series","WHERE","Episode","=","``","A","Love","of","a","Lifetime","''",";"],"query_toks_no_value":["select","weekly_rank","from","tv_series","where","episode","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"A Love of a Lifetime\"",null]]},"question_toks":["``","Was","ist","der","w\u00f6chentliche","Rang","f\u00fcr","die","Episode","``","''","Eine","Liebe","f\u00fcrs","Leben","''","''","?"],"question":"\"Was ist der w\u00f6chentliche Rang f\u00fcr die Episode \"\"Eine Liebe f\u00fcrs Leben\"\"? "},{"db_id":"tvshow","query":"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","query_toks":["SELECT","T1.series_name",",","T1.country","FROM","TV_Channel","AS","T1","JOIN","cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.directed_by","=","'Michael","Chang","'","INTERSECT","SELECT","T1.series_name",",","T1.country","FROM","TV_Channel","AS","T1","JOIN","cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.directed_by","=","'Ben","Jones","'"],"query_toks_no_value":["select","t1",".","series_name",",","t1",".","country","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","directed_by","=","value","intersect","select","t1",".","series_name",",","t1",".","country","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","directed_by","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Michael Chang\"",null]]},"question_toks":["Wie","lauten","der","Name","der","Serie","und","das","Land","aller","Fernsehsender",",","die","Zeichentrickfilme","unter","der","Regie","von","Ben","Jones","und","Zeichentrickfilme","unter","der","Regie","von","Michael","Chang","zeigen","?"],"question":"Wie lauten der Name der Serie und das Land aller Fernsehsender, die Zeichentrickfilme unter der Regie von Ben Jones und Zeichentrickfilme unter der Regie von Michael Chang zeigen? "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"","query_toks":["SELECT","template_id","FROM","Templates","WHERE","template_type_code","=","``","PP","''","OR","template_type_code","=","``","PPT","''"],"query_toks_no_value":["select","template_id","from","templates","where","template_type_code","=","value","or","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"PP\"",null],"or",[false,2,[0,[0,5,false],null],"\"PPT\"",null]]},"question_toks":["Was","sind","die","Kennungen","von","Vorlagen","mit","dem","Vorlagentypcode","PP","oder","PPT","?"],"question":"Was sind die Kennungen von Vorlagen mit dem Vorlagentypcode PP oder PPT? "},{"db_id":"poker_player","query":"SELECT Name FROM people WHERE Nationality != \"Russia\"","query_toks":["SELECT","Name","FROM","people","WHERE","Nationality","!","=","``","Russia","''"],"query_toks_no_value":["select","name","from","people","where","nationality","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,7,[0,[0,8,false],null],"\"Russia\"",null]]},"question_toks":["``","Zeige","Namen","von","Personen","an",",","deren","Nationalit\u00e4t","nicht","``","''","Russland","''","''","ist","''","."],"question":"\"Zeige Namen von Personen an, deren Nationalit\u00e4t nicht \"\"Russland\"\" ist\". "},{"db_id":"employee_hire_evaluation","query":"SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1","query_toks":["SELECT","city","FROM","employee","WHERE","age","<","30","GROUP","BY","city","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","city","from","employee","where","age","<","value","group","by","city","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,4,[0,[0,3,false],null],30.0,null]]},"question_toks":["Finden","Sie","die","St\u00e4dte",",","in","denen","mehr","als","ein","Mitarbeiter","unter","30","besch\u00e4ftigt","ist","."],"question":"Finden Sie die St\u00e4dte, in denen mehr als ein Mitarbeiter unter 30 besch\u00e4ftigt ist."},{"db_id":"orchestra","query":"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"","query_toks":["SELECT","COUNT","(","*",")","FROM","orchestra","WHERE","Major_Record_Format","=","``","CD","''","OR","Major_Record_Format","=","``","DVD","''"],"query_toks_no_value":["select","count","(","*",")","from","orchestra","where","major_record_format","=","value","or","major_record_format","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"CD\"",null],"or",[false,2,[0,[0,11,false],null],"\"DVD\"",null]]},"question_toks":["``","Suchen","Sie","die","Anzahl","der","Orchester",",","deren","Plattenformat","``","''","CD","''","oder","``","''","DVD","''","''","ist","."],"question":"\"Suchen Sie die Anzahl der Orchester, deren Plattenformat \"\"CD\" oder \"\"DVD\"\" ist."},{"db_id":"network_1","query":"SELECT name FROM Highschooler WHERE grade  =  10","query_toks":["SELECT","name","FROM","Highschooler","WHERE","grade","=","10"],"query_toks_no_value":["select","name","from","highschooler","where","grade","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],10.0,null]]},"question_toks":["Zeigen","Sie","die","Namen","aller","Sch\u00fcler","in","Klasse","10","an","."],"question":"Zeigen Sie die Namen aller Sch\u00fcler in Klasse 10 an. "},{"db_id":"singer","query":"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name","query_toks":["SELECT","T1.Name",",","sum","(","T2.Sales",")","FROM","singer","AS","T1","JOIN","song","AS","T2","ON","T1.Singer_ID","=","T2.Singer_ID","GROUP","BY","T1.Name"],"query_toks_no_value":["select","t1",".","name",",","sum","(","t2",".","sales",")","from","singer","as","t1","join","song","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","group","by","t1",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[4,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","der","Gesamtumsatz","f\u00fcr","jeden","S\u00e4ngernamen","f\u00fcr","ihre","Lieder","?"],"question":"Wie hoch ist der Gesamtumsatz f\u00fcr jeden S\u00e4ngernamen f\u00fcr ihre Lieder? "},{"db_id":"pets_1","query":"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","query_toks":["SELECT","T1.fname",",","T1.age","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'dog","'","AND","T1.stuid","NOT","IN","(","SELECT","T1.stuid","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'",")"],"query_toks_no_value":["select","t1",".","fname",",","t1",".","age","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value","and","t1",".","stuid","not","in","(","select","t1",".","stuid","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"dog\"",null],"and",[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null]]},null]]},"question_toks":["Finden","Sie","den","Vornamen","und","das","Alter","von","Studierenden",",","die","einen","Hund",",","aber","keine","Katze","als","Haustier","haben","."],"question":"Finden Sie den Vornamen und das Alter von Studierenden, die einen Hund, aber keine Katze als Haustier haben."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"","query_toks":["SELECT","T2.document_name","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id","WHERE","T1.template_type_code","=","``","BK","''"],"query_toks_no_value":["select","t2",".","document_name","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id","where","t1",".","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"BK\"",null]]},"question_toks":["Zeige","Dokumentnamen","an",",","die","Vorlagen","mit","dem","Vorlagentypcode","BK","verwenden","."],"question":"Zeige Dokumentnamen an, die Vorlagen mit dem Vorlagentypcode BK verwenden."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'","query_toks":["SELECT","count","(","*",")","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_ID","=","T2.document_ID","WHERE","T2.document_name","=","'Summer","Show","'"],"query_toks_no_value":["select","count","(","*",")","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","where","t2",".","document_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Summer Show\"",null]]},"question_toks":["Wie","viele","Abs\u00e4tze","f\u00fcr","das","Dokument","mit","dem","Namen","'Summer","Show","'","?"],"question":"Wie viele Abs\u00e4tze f\u00fcr das Dokument mit dem Namen 'Summer Show'? "},{"db_id":"student_transcripts_tracking","query":"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","query_toks":["SELECT","T2.transcript_date",",","T1.transcript_id","FROM","Transcript_Contents","AS","T1","JOIN","Transcripts","AS","T2","ON","T1.transcript_id","=","T2.transcript_id","GROUP","BY","T1.transcript_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","transcript_date",",","t1",".","transcript_id","from","transcript_contents","as","t1","join","transcripts","as","t2","on","t1",".","transcript_id","=","t2",".","transcript_id","group","by","t1",".","transcript_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,56,false],null],[0,52,false],null]],"table_units":[["table_unit",10],["table_unit",9]]},"groupBy":[[0,56,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,53,false],null]],[0,[0,[0,56,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","das","Datum","und","die","ID","des","Transkripts",",","in","dem","mindestens","2","Kurse","aufgef\u00fchrt","sind","?"],"question":"Was ist das Datum und die ID des Transkripts, in dem mindestens 2 Kurse aufgef\u00fchrt sind? "},{"db_id":"concert_singer","query":"SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014","query_toks":["SELECT","T2.name","FROM","singer_in_concert","AS","T1","JOIN","singer","AS","T2","ON","T1.singer_id","=","T2.singer_id","JOIN","concert","AS","T3","ON","T1.concert_id","=","T3.concert_id","WHERE","T3.year","=","2014"],"query_toks_no_value":["select","t2",".","name","from","singer_in_concert","as","t1","join","singer","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","join","concert","as","t3","on","t1",".","concert_id","=","t3",".","concert_id","where","t3",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,21,false],null],[0,8,false],null]],"table_units":[["table_unit",3],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2014.0,null]]},"question_toks":["Listen","Sie","alle","S\u00e4ngernamen","in","Konzerten","im","Jahr","2014","auf","."],"question":"Listen Sie alle S\u00e4ngernamen in Konzerten im Jahr 2014 auf. "},{"db_id":"concert_singer","query":"SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)","query_toks":["SELECT","song_name","FROM","singer","WHERE","age",">","(","SELECT","avg","(","age",")","FROM","singer",")"],"query_toks_no_value":["select","song_name","from","singer","where","age",">","(","select","avg","(","age",")","from","singer",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,13,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","lauten","die","Namen","aller","Lieder","von","S\u00e4ngern",",","die","\u00e4lter","als","der","Durchschnitt","sind","?"],"question":"Wie lauten die Namen aller Lieder von S\u00e4ngern, die \u00e4lter als der Durchschnitt sind? "},{"db_id":"concert_singer","query":"SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.name",",","T2.capacity","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","WHERE","T1.year",">","=","2014","GROUP","BY","T2.stadium_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name",",","t2",".","capacity","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","where","t1",".","year",">","=","value","group","by","t2",".","stadium_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,5,[0,[0,19,false],null],2014.0,null]]},"question_toks":["Zeigen","Sie","den","Namen","und","die","Kapazit\u00e4t","des","Stadions","mit","den","meisten","Konzerten","im","Jahr","2014","oder","sp\u00e4ter","an","."],"question":"Zeigen Sie den Namen und die Kapazit\u00e4t des Stadions mit den meisten Konzerten im Jahr 2014 oder sp\u00e4ter an. "},{"db_id":"network_1","query":"SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.name","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","den","Namen","des","Sch\u00fclers","mit","den","meisten","Vorlieben","an","."],"question":"Geben Sie den Namen des Sch\u00fclers mit den meisten Vorlieben an. "},{"db_id":"pets_1","query":"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","query_toks":["SELECT","pettype",",","weight","FROM","pets","ORDER","BY","pet_age","LIMIT","1"],"query_toks_no_value":["select","pettype",",","weight","from","pets","order","by","pet_age","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,12,false],null]],[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Art","von","Haustier","ist","das","j\u00fcngste","Tier",",","und","wie","viel","wiegt","es","?"],"question":"Welche Art von Haustier ist das j\u00fcngste Tier, und wie viel wiegt es? "},{"db_id":"pets_1","query":"SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'","query_toks":["SELECT","DISTINCT","T1.Fname","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'","OR","T3.pettype","=","'dog","'"],"query_toks_no_value":["select","distinct","t1",".","fname","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value","or","t3",".","pettype","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null],"or",[false,2,[0,[0,12,false],null],"\"dog\"",null]]},"question_toks":["Finden","Sie","den","Vornamen","von","Studierenden",",","die","eine","Katze","oder","einen","Hund","als","Haustier","haben","."],"question":"Finden Sie den Vornamen von Studierenden, die eine Katze oder einen Hund als Haustier haben."},{"db_id":"world_1","query":"SELECT Name FROM country ORDER BY Population DESC LIMIT 3","query_toks":["SELECT","Name","FROM","country","ORDER","BY","Population","DESC","LIMIT","3"],"query_toks_no_value":["select","name","from","country","order","by","population","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":3,"orderBy":["desc",[[0,[0,14,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","L\u00e4nden","mit","den","3","gr\u00f6\u00dften","Bev\u00f6lkerungen","?"],"question":"Wie lauten die Namen der L\u00e4nden mit den 3 gr\u00f6\u00dften Bev\u00f6lkerungen?"},{"db_id":"network_1","query":"SELECT grade FROM Highschooler","query_toks":["SELECT","grade","FROM","Highschooler"],"query_toks_no_value":["select","grade","from","highschooler"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","alle","Noten","der","Gymnasiasten","."],"question":"Zeigen Sie alle Noten der Gymnasiasten."},{"db_id":"orchestra","query":"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company","query_toks":["SELECT","Record_Company",",","COUNT","(","*",")","FROM","orchestra","GROUP","BY","Record_Company"],"query_toks_no_value":["select","record_company",",","count","(","*",")","from","orchestra","group","by","record_company"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Orchester","verwaltet","jede","Plattenfirma","?"],"question":"Wie viele Orchester verwaltet jede Plattenfirma? "},{"db_id":"network_1","query":"SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3","query_toks":["SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id","HAVING","count","(","*",")",">","=","3"],"query_toks_no_value":["select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[[false,5,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Namen","der","Sch\u00fcler","die","mindestens","3","Freunde","haben","."],"question":"Zeige die Namen der Sch\u00fcler die mindestens 3 Freunde haben."},{"db_id":"world_1","query":"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"","query_toks":["SELECT","COUNT","(","DISTINCT","Continent",")","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","Chinese","''"],"query_toks_no_value":["select","count","(","distinct","continent",")","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,10,true],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Chinese\"",null]]},"question_toks":["Wie","viele","Kontinente","sprechen","Chinesisch","?"],"question":"Wie viele Kontinente sprechen Chinesisch?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","JOIN","AIRLINES","AS","T3","ON","T3.uid","=","T1.Airline","WHERE","T2.City","=","``","Aberdeen","''","AND","T3.Airline","=","``","United","Airlines","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","join","airlines","as","t3","on","t3",".","uid","=","t1",".","airline","where","t2",".","city","=","value","and","t3",".","airline","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null],"and",[false,2,[0,[0,2,false],null],"\"United Airlines\"",null]]},"question_toks":["Wie","viele","United","Airlines","Fl\u00fcge","gehen","in","die","Stadt","'Aberdeen","'","?"],"question":"Wie viele United Airlines Fl\u00fcge gehen in die Stadt 'Aberdeen'?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents","query_toks":["SELECT","template_id","FROM","Templates","EXCEPT","SELECT","template_id","FROM","Documents"],"query_toks_no_value":["select","template_id","from","templates","except","select","template_id","from","documents"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","K\u00fcrzel","f\u00fcr","Vorlagen",",","die","in","keinem","Dokument","verwendet","werden","?"],"question":"Wie lauten die K\u00fcrzel f\u00fcr Vorlagen, die in keinem Dokument verwendet werden?"},{"db_id":"wta_1","query":"SELECT first_name ,  last_name FROM players ORDER BY birth_date","query_toks":["SELECT","first_name",",","last_name","FROM","players","ORDER","BY","birth_date"],"query_toks_no_value":["select","first_name",",","last_name","from","players","order","by","birth_date"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["F\u00fchren","Sie","den","Vor-","und","Nachnamen","aller","Spieler","in","der","Reihenfolge","ihres","Geburtsdatums","auf","."],"question":"F\u00fchren Sie den Vor- und Nachnamen aller Spieler in der Reihenfolge ihres Geburtsdatums auf."},{"db_id":"course_teach","query":"SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)","query_toks":["SELECT","Name","FROM","teacher","WHERE","Teacher_id","NOT","IN","(","SELECT","Teacher_id","FROM","course_arrange",")"],"query_toks_no_value":["select","name","from","teacher","where","teacher_id","not","in","(","select","teacher_id","from","course_arrange",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[true,8,[0,[0,4,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","lauten","die","Namen","der","Lehrkr\u00e4fte",",","deren","Kurse","nicht","arrangiert","wurden","?"],"question":"Wie lauten die Namen der Lehrkr\u00e4fte, deren Kurse nicht arrangiert wurden? "},{"db_id":"employee_hire_evaluation","query":"SELECT sum(bonus) FROM evaluation","query_toks":["SELECT","sum","(","bonus",")","FROM","evaluation"],"query_toks_no_value":["select","sum","(","bonus",")","from","evaluation"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,17,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","der","Gesamtbonus",",","der","in","allen","Bewertungen","angegeben","wird","?"],"question":"Was ist der Gesamtbonus, der in allen Bewertungen angegeben wird? "},{"db_id":"world_1","query":"SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"","query_toks":["SELECT","Code","FROM","country","WHERE","GovernmentForm","!","=","``","Republic","''","EXCEPT","SELECT","CountryCode","FROM","countrylanguage","WHERE","LANGUAGE","=","``","English","''"],"query_toks_no_value":["select","code","from","country","where","governmentform","!","=","value","except","select","countrycode","from","countrylanguage","where","language","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,7,[0,[0,19,false],null],"\"Republic\"",null]]},"question_toks":["Geben","Sie","die","Codes","von","L\u00e4ndern","an",",","die","kein","Englisch","sprechen","und","keine","Republiken","als","Regierungen","haben","."],"question":"Geben Sie die Codes von L\u00e4ndern an, die kein Englisch sprechen und keine Republiken als Regierungen haben. "},{"db_id":"battle_death","query":"SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'","query_toks":["SELECT","T1.name",",","T1.date","FROM","battle","AS","T1","JOIN","ship","AS","T2","ON","T1.id","=","T2.lost_in_battle","WHERE","T2.name","=","'Lettice","'","INTERSECT","SELECT","T1.name",",","T1.date","FROM","battle","AS","T1","JOIN","ship","AS","T2","ON","T1.id","=","T2.lost_in_battle","WHERE","T2.name","=","'HMS","Atalanta","'"],"query_toks_no_value":["select","t1",".","name",",","t1",".","date","from","battle","as","t1","join","ship","as","t2","on","t1",".","id","=","t2",".","lost_in_battle","where","t2",".","name","=","value","intersect","select","t1",".","name",",","t1",".","date","from","battle","as","t1","join","ship","as","t2","on","t1",".","id","=","t2",".","lost_in_battle","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,7,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"HMS Atalanta\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Lettice\"",null]]},"question_toks":["Nennen","Sie","den","Namen","und","das","Datum","der","Schlacht",",","die","das","Schiff","namens","``","Lettice","''","und","das","Schiff","namens","``","HMS","Atalanta","''","verloren","hat","."],"question":"Nennen Sie den Namen und das Datum der Schlacht, die das Schiff namens \"Lettice\" und das Schiff namens \"HMS Atalanta\" verloren hat. "},{"db_id":"poker_player","query":"SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)","query_toks":["SELECT","Name","FROM","people","WHERE","People_ID","NOT","IN","(","SELECT","People_ID","FROM","poker_player",")"],"query_toks_no_value":["select","name","from","people","where","people_id","not","in","(","select","people_id","from","poker_player",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[true,8,[0,[0,7,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","lauten","die","Namen","von","Personen",",","die","nicht","pokern","?"],"question":"Wie lauten die Namen von Personen, die nicht pokern? "},{"db_id":"museum_visit","query":"SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4","query_toks":["SELECT","avg","(","age",")","FROM","visitor","WHERE","Level_of_membership","<","=","4"],"query_toks_no_value":["select","avg","(","age",")","from","visitor","where","level_of_membership","<","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,8,false],null]]]],"union":null,"where":[[false,6,[0,[0,7,false],null],4.0,null]]},"question_toks":["Wie","hoch","ist","das","Durchschnittsalter","der","Besucher",",","deren","Mitgliederzahl","nicht","h\u00f6her","als","4","ist","?"],"question":"Wie hoch ist das Durchschnittsalter der Besucher, deren Mitgliederzahl nicht h\u00f6her als 4 ist? "},{"db_id":"flight_2","query":"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"","query_toks":["SELECT","FlightNo","FROM","FLIGHTS","WHERE","SourceAirport","=","``","APG","''"],"query_toks_no_value":["select","flightno","from","flights","where","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"APG\"",null]]},"question_toks":["Geben","Sie","die","Flugnummern","von","Fl\u00fcgen","an","die","von","APG","abgehen","an","."],"question":"Geben Sie die Flugnummern von Fl\u00fcgen an die von APG abgehen an."},{"db_id":"car_1","query":"SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;","query_toks":["SELECT","CountryName","FROM","countries","EXCEPT","SELECT","T1.CountryName","FROM","countries","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.countryId","=","T2.Country",";"],"query_toks_no_value":["select","countryname","from","countries","except","select","t1",".","countryname","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","L\u00e4nder",",","in","denen","es","keine","Autohersteller","gibt","?"],"question":"Wie lauten die L\u00e4nder, in denen es keine Autohersteller gibt?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.address_id",",","T1.line_1",",","T1.line_2","FROM","Addresses","AS","T1","JOIN","Students","AS","T2","ON","T1.address_id","=","T2.current_address_id","GROUP","BY","T1.address_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","address_id",",","t1",".","line_1",",","t1",".","line_2","from","addresses","as","t1","join","students","as","t2","on","t1",".","address_id","=","t2",".","current_address_id","group","by","t1",".","address_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,33,false],null]],"table_units":[["table_unit",0],["table_unit",6]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","die","Kennung",",","Zeile","1","und","Zeile","2","der","Adresse","mit","den","meisten","Studierenden","?"],"question":"Wie lautet die Kennung, Zeile 1 und Zeile 2 der Adresse mit den meisten Studierenden?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","template_type_code","FROM","Templates","GROUP","BY","template_type_code","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","template_type_code","from","templates","group","by","template_type_code","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Vorlagentyp-Code","hat","die","meisten","Vorlagen","?"],"question":"Welcher Vorlagentyp-Code hat die meisten Vorlagen? "},{"db_id":"poker_player","query":"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","query_toks":["SELECT","Final_Table_Made",",","Best_Finish","FROM","poker_player"],"query_toks_no_value":["select","final_table_made",",","best_finish","from","poker_player"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","sehen","die","Finaltabellen","aus","und","wie","sehen","die","besten","Ergebnisse","f\u00fcr","alle","Pokerspieler","aus","?"],"question":"Wie sehen die Finaltabellen aus und wie sehen die besten Ergebnisse f\u00fcr alle Pokerspieler aus?"},{"db_id":"museum_visit","query":"SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011","query_toks":["SELECT","t1.name","FROM","visitor","AS","t1","JOIN","visit","AS","t2","ON","t1.id","=","t2.visitor_id","JOIN","museum","AS","t3","ON","t3.Museum_ID","=","t2.Museum_ID","WHERE","t3.open_year","<","2009","INTERSECT","SELECT","t1.name","FROM","visitor","AS","t1","JOIN","visit","AS","t2","ON","t1.id","=","t2.visitor_id","JOIN","museum","AS","t3","ON","t3.Museum_ID","=","t2.Museum_ID","WHERE","t3.open_year",">","2011"],"query_toks_no_value":["select","t1",".","name","from","visitor","as","t1","join","visit","as","t2","on","t1",".","id","=","t2",".","visitor_id","join","museum","as","t3","on","t3",".","museum_id","=","t2",".","museum_id","where","t3",".","open_year","<","value","intersect","select","t1",".","name","from","visitor","as","t1","join","visit","as","t2","on","t1",".","id","=","t2",".","visitor_id","join","museum","as","t3","on","t3",".","museum_id","=","t2",".","museum_id","where","t3",".","open_year",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],2011.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,4,[0,[0,4,false],null],2009.0,null]]},"question_toks":["Wie","lautet","der","Name","des","Besuchers",",","der","sowohl","ein","vor","2009","als","auch","ein","nach","2011","er\u00f6ffnetes","Museum","besucht","hat","?"],"question":"Wie lautet der Name des Besuchers, der sowohl ein vor 2009 als auch ein nach 2011 er\u00f6ffnetes Museum besucht hat? "},{"db_id":"tvshow","query":"SELECT Episode FROM TV_series ORDER BY rating","query_toks":["SELECT","Episode","FROM","TV_series","ORDER","BY","rating"],"query_toks_no_value":["select","episode","from","tv_series","order","by","rating"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Ordnen","Sie","die","Episode","aller","TV-Serien","nach","Bewertung","."],"question":"Ordnen Sie die Episode aller TV-Serien nach Bewertung."},{"db_id":"car_1","query":"SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;","query_toks":["SELECT","T1.CountryName","FROM","COUNTRIES","AS","T1","JOIN","CONTINENTS","AS","T2","ON","T1.Continent","=","T2.ContId","JOIN","CAR_MAKERS","AS","T3","ON","T1.CountryId","=","T3.Country","WHERE","T2.Continent","=","'europe","'","GROUP","BY","T1.CountryName","HAVING","count","(","*",")",">","=","3",";"],"query_toks_no_value":["select","t1",".","countryname","from","countries","as","t1","join","continents","as","t2","on","t1",".","continent","=","t2",".","contid","join","car_makers","as","t3","on","t1",".","countryid","=","t3",".","country","where","t2",".","continent","=","value","group","by","t1",".","countryname","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[[false,5,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"europe\"",null]]},"question_toks":["Wie","lauten","die","Namen","aller","europ\u00e4ischen","L\u00e4nder","mit","mindestens","3","Herstellungsfirmen","?"],"question":"Wie lauten die Namen aller europ\u00e4ischen L\u00e4nder mit mindestens 3 Herstellungsfirmen?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"","query_toks":["SELECT","count","(","*",")","FROM","Templates","WHERE","template_type_code","=","``","CV","''"],"query_toks_no_value":["select","count","(","*",")","from","templates","where","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"CV\"",null]]},"question_toks":["Z\u00e4hlen","Sie","die","Anzahl","der","Vorlagen","vom","Typ","CV","."],"question":"Z\u00e4hlen Sie die Anzahl der Vorlagen vom Typ CV. "},{"db_id":"student_transcripts_tracking","query":"SELECT count(*) FROM Courses","query_toks":["SELECT","count","(","*",")","FROM","Courses"],"query_toks_no_value":["select","count","(","*",")","from","courses"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Kurse","gibt","es","?"],"question":"Wie viele Kurse gibt es?"},{"db_id":"network_1","query":"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","query_toks":["SELECT","T2.name",",","count","(","*",")","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","Sch\u00fcler",",","die","Vorlieben","haben",",","und","wie","viele","Vorlieben","hat","jeder","von","ihnen","?"],"question":"Wie lauten die Namen der Sch\u00fcler, die Vorlieben haben, und wie viele Vorlieben hat jeder von ihnen? "},{"db_id":"museum_visit","query":"SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit","query_toks":["SELECT","avg","(","num_of_ticket",")",",","max","(","num_of_ticket",")","FROM","visit"],"query_toks_no_value":["select","avg","(","num_of_ticket",")",",","max","(","num_of_ticket",")","from","visit"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,11,false],null]],[1,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","die","durchschnittliche","und","maximale","Anzahl","der","bei","allen","Besuchen","gekauften","Eintrittskarten","?"],"question":"Wie hoch ist die durchschnittliche und maximale Anzahl der bei allen Besuchen gekauften Eintrittskarten?"},{"db_id":"employee_hire_evaluation","query":"SELECT count(*) FROM employee","query_toks":["SELECT","count","(","*",")","FROM","employee"],"query_toks_no_value":["select","count","(","*",")","from","employee"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hle","die","Anzahl","der","Angestellten","."],"question":"Z\u00e4hle die Anzahl der Angestellten. "},{"db_id":"world_1","query":"SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")","query_toks":["SELECT","Name","FROM","country","WHERE","Continent","=","``","Africa","''","AND","population","<","(","SELECT","min","(","population",")","FROM","country","WHERE","Continent","=","``","Asia","''",")"],"query_toks_no_value":["select","name","from","country","where","continent","=","value","and","population","<","(","select","min","(","population",")","from","country","where","continent","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Africa\"",null],"and",[false,4,[0,[0,14,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},null]]},"question_toks":["Welche","afrikanische","L\u00e4nder","haben","kleinere","Bev\u00f6lkerungen","als","jedes","Land","in","Asien"],"question":"Welche afrikanische L\u00e4nder haben kleinere Bev\u00f6lkerungen als jedes Land in Asien"},{"db_id":"dog_kennels","query":"SELECT DISTINCT breed_code ,  size_code FROM dogs","query_toks":["SELECT","DISTINCT","breed_code",",","size_code","FROM","dogs"],"query_toks_no_value":["select","distinct","breed_code",",","size_code","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,23,false],null]],[0,[0,[0,24,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","all","die","m\u00f6glichen","Kombinationen","von","Rassentyp","und","Gr\u00f6\u00dfentyp","?"],"question":"Was sind all die m\u00f6glichen Kombinationen von Rassentyp und Gr\u00f6\u00dfentyp?"},{"db_id":"world_1","query":"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")","query_toks":["SELECT","Name","FROM","country","WHERE","SurfaceArea",">","(","SELECT","min","(","SurfaceArea",")","FROM","country","WHERE","Continent","=","``","Europe","''",")"],"query_toks_no_value":["select","name","from","country","where","surfacearea",">","(","select","min","(","surfacearea",")","from","country","where","continent","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,3,[0,[0,12,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Europe\"",null]]},null]]},"question_toks":["Welches","sind","die","L\u00e4nder",",","die","eine","gr\u00f6\u00dfere","Fl\u00e4che","als","jedes","andere","Land","in","Europa","haben","?"],"question":"Welches sind die L\u00e4nder, die eine gr\u00f6\u00dfere Fl\u00e4che als jedes andere Land in Europa haben? "},{"db_id":"student_transcripts_tracking","query":"SELECT section_name FROM Sections ORDER BY section_name DESC","query_toks":["SELECT","section_name","FROM","Sections","ORDER","BY","section_name","DESC"],"query_toks_no_value":["select","section_name","from","sections","order","by","section_name","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,25,false],null]]],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[]},"question_toks":["F\u00fchren","Sie","den","Abschnittsnamen","in","umgekehrter","lexikographischer","Reihenfolge","auf","."],"question":"F\u00fchren Sie den Abschnittsnamen in umgekehrter lexikographischer Reihenfolge auf. "},{"db_id":"car_1","query":"SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;","query_toks":["SELECT","Model","FROM","CAR_NAMES","GROUP","BY","Model","ORDER","BY","count","(","*",")","DESC","LIMIT","1",";"],"query_toks_no_value":["select","model","from","car_names","group","by","model","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,14,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","Modell","hat","die","meisten","Versionen","?"],"question":"Welches Modell hat die meisten Versionen? "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","query_toks":["SELECT","document_id",",","count","(","*",")","FROM","Paragraphs","GROUP","BY","document_id","ORDER","BY","document_id"],"query_toks_no_value":["select","document_id",",","count","(","*",")","from","paragraphs","group","by","document_id","order","by","document_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,15,false],null]]],"select":[false,[[0,[0,[0,15,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","alle","Dokument-IDs","und","die","Anzahl","der","Abs\u00e4tze","in","jedem","Dokument","an",".","Ordne","nach","Dokument-ID","."],"question":"Zeige alle Dokument-IDs und die Anzahl der Abs\u00e4tze in jedem Dokument an. Ordne nach Dokument-ID. "},{"db_id":"pets_1","query":"SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'","query_toks":["SELECT","count","(","*",")","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T2.petid","=","T3.petid","WHERE","T1.sex","=","'F","'","AND","T3.pettype","=","'dog","'"],"query_toks_no_value":["select","count","(","*",")","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t2",".","petid","=","t3",".","petid","where","t1",".","sex","=","value","and","t3",".","pettype","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"F\"",null],"and",[false,2,[0,[0,12,false],null],"\"dog\"",null]]},"question_toks":["Wie","viele","Haushunde","werden","von","Studentinnen","aufgezogen","?"],"question":"Wie viele Haushunde werden von Studentinnen aufgezogen? "},{"db_id":"wta_1","query":"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","query_toks":["SELECT","T1.first_name",",","T1.country_code",",","T1.birth_date","FROM","players","AS","T1","JOIN","matches","AS","T2","ON","T1.player_id","=","T2.winner_id","ORDER","BY","T2.winner_rank_points","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","country_code",",","t1",".","birth_date","from","players","as","t1","join","matches","as","t2","on","t1",".","player_id","=","t2",".","winner_id","order","by","t2",".","winner_rank_points","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,32,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,36,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,6,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Finden","Sie","den","Vornamen",",","den","L\u00e4ndercode","und","das","Geburtsdatum","des","Siegers",",","der","in","allen","Spielen","die","h\u00f6chsten","Ranglistenpunkte","erzielt","hat","."],"question":"Finden Sie den Vornamen, den L\u00e4ndercode und das Geburtsdatum des Siegers, der in allen Spielen die h\u00f6chsten Ranglistenpunkte erzielt hat. "},{"db_id":"dog_kennels","query":"SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'","query_toks":["SELECT","role_code",",","street",",","city",",","state","FROM","professionals","WHERE","city","LIKE","'","%","West","%","'"],"query_toks_no_value":["select","role_code",",","street",",","city",",","state","from","professionals","where","city","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]],[0,[0,[0,38,false],null]]]],"union":null,"where":[[false,9,[0,[0,37,false],null],"\"%West%\"",null]]},"question_toks":["Welche","Fachkr\u00e4fte","leben","in","einer","Stadt","mit","dem","Teilgebiet","``","West","''","?","F\u00fchren","Sie","seine","oder","ihre","Rolle",",","Stra\u00dfe",",","Stadt","und","Staat","auf","."],"question":"Welche Fachkr\u00e4fte leben in einer Stadt mit dem Teilgebiet \"West\"? F\u00fchren Sie seine oder ihre Rolle, Stra\u00dfe, Stadt und Staat auf. "},{"db_id":"flight_2","query":"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"","query_toks":["SELECT","AirportCode",",","AirportName","FROM","AIRPORTS","WHERE","city","=","``","Anthony","''"],"query_toks_no_value":["select","airportcode",",","airportname","from","airports","where","city","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Anthony\"",null]]},"question_toks":["Geben","Sie","den","Flughafencode","und","den","Namen","in","der","Stadt","Anthony","an","."],"question":"Geben Sie den Flughafencode und den Namen in der Stadt Anthony an. "},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'","query_toks":["SELECT","T1.paragraph_id",",","T1.paragraph_text","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_id","=","T2.document_id","WHERE","T2.Document_Name","=","'Welcome","to","NY","'"],"query_toks_no_value":["select","t1",".","paragraph_id",",","t1",".","paragraph_text","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","where","t2",".","document_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Welcome to NY\"",null]]},"question_toks":["Alle","Absatz-IDs","und","Texte","f\u00fcr","das","Dokument","mit","dem","Namen","'Welcome","to","NY","'","anzeigen","."],"question":"Alle Absatz-IDs und Texte f\u00fcr das Dokument mit dem Namen 'Welcome to NY' anzeigen. "},{"db_id":"tvshow","query":"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE","query_toks":["SELECT","LANGUAGE",",","count","(","*",")","FROM","TV_Channel","GROUP","BY","LANGUAGE"],"query_toks_no_value":["select","language",",","count","(","*",")","from","tv_channel","group","by","language"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","f\u00fcr","jede","Sprache","die","Anzahl","der","TV-Kan\u00e4le","an",",","die","sie","einsetzen","."],"question":"Geben Sie f\u00fcr jede Sprache die Anzahl der TV-Kan\u00e4le an, die sie einsetzen."},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","GROUP","BY","T1.Airline","HAVING","count","(","*",")","<","200"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","group","by","t1",".","airline","having","count","(","*",")","<","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[[false,4,[0,[3,0,false],null],200.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Fluggesellschaften","haben","weniger","als","200","Fl\u00fcge","?"],"question":"Welche Fluggesellschaften haben weniger als 200 Fl\u00fcge?"},{"db_id":"concert_singer","query":"SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014","query_toks":["SELECT","name","FROM","stadium","EXCEPT","SELECT","T2.name","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","WHERE","T1.year","=","2014"],"query_toks_no_value":["select","name","from","stadium","except","select","t2",".","name","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","where","t1",".","year","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2014.0,null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","aller","Stadien",",","in","denen","2014","kein","Konzert","stattfand","?"],"question":"Wie lauten die Namen aller Stadien, in denen 2014 kein Konzert stattfand?"},{"db_id":"wta_1","query":"SELECT count(*) FROM players","query_toks":["SELECT","count","(","*",")","FROM","players"],"query_toks_no_value":["select","count","(","*",")","from","players"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Spieler","stehen","zur","Verf\u00fcgung","?"],"question":"Wie viele Spieler stehen zur Verf\u00fcgung?"},{"db_id":"battle_death","query":"SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'","query_toks":["SELECT","name",",","RESULT","FROM","battle","WHERE","bulgarian_commander","!","=","'Boril","'"],"query_toks_no_value":["select","name",",","result","from","battle","where","bulgarian_commander","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[[false,7,[0,[0,4,false],null],"\"Boril\"",null]]},"question_toks":["Wie","lauten","der","Name","und","die","Ergebnisse","der","Gefechte",",","wo","doch","der","bulgarische","Kommandeur","nicht","``","Boril","''","ist","?"],"question":"Wie lauten der Name und die Ergebnisse der Gefechte, wo doch der bulgarische Kommandeur nicht \"Boril\" ist?"},{"db_id":"dog_kennels","query":"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","query_toks":["SELECT","T1.date_of_treatment",",","T2.first_name","FROM","Treatments","AS","T1","JOIN","Professionals","AS","T2","ON","T1.professional_id","=","T2.professional_id"],"query_toks_no_value":["select","t1",".","date_of_treatment",",","t2",".","first_name","from","treatments","as","t1","join","professionals","as","t2","on","t1",".","professional_id","=","t2",".","professional_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,46,false],null],[0,33,false],null]],"table_units":[["table_unit",7],["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,48,false],null]],[0,[0,[0,35,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","das","Datum","und","der","Vorname","des","ausf\u00fchrenden","Spezialisten","f\u00fcr","jede","Behandlung","?"],"question":"Wie lauten das Datum und der Vorname des ausf\u00fchrenden Spezialisten f\u00fcr jede Behandlung?"},{"db_id":"tvshow","query":"SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";","query_toks":["SELECT","Air_Date","FROM","TV_series","WHERE","Episode","=","``","A","Love","of","a","Lifetime","''",";"],"query_toks_no_value":["select","air_date","from","tv_series","where","episode","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"A Love of a Lifetime\"",null]]},"question_toks":["``","Wann","wurde","die","Episode","``","''","Eine","Liebe","f\u00fcrs","Leben","''","ausgestrahlt","?","''"],"question":"\"Wann wurde die Episode \"\"Eine Liebe f\u00fcrs Leben\" ausgestrahlt?\""},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","WHERE","DestAirport","=","``","ATO","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","where","destairport","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"ATO\"",null]]},"question_toks":["Z\u00e4hlen","Sie","die","Fl\u00fcge","in","ATO","."],"question":"Z\u00e4hlen Sie die Fl\u00fcge in ATO."},{"db_id":"student_transcripts_tracking","query":"SELECT first_name FROM Students WHERE current_address_id != permanent_address_id","query_toks":["SELECT","first_name","FROM","Students","WHERE","current_address_id","!","=","permanent_address_id"],"query_toks_no_value":["select","first_name","from","students","where","current_address_id","!","=","permanent_address_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]]]],"union":null,"where":[[false,7,[0,[0,33,false],null],[0,34,false],null]]},"question_toks":["Wie","lautet","der","Vorname","des\/der","Studierenden",",","dessen\/deren","st\u00e4ndiger","Wohnsitz","sich","von","seinem\/ihrem","derzeitigen","Wohnsitz","unterscheidet","?"],"question":"Wie lautet der Vorname des\/der Studierenden, dessen\/deren st\u00e4ndiger Wohnsitz sich von seinem\/ihrem derzeitigen Wohnsitz unterscheidet?"},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRPORTS","query_toks":["SELECT","count","(","*",")","FROM","AIRPORTS"],"query_toks_no_value":["select","count","(","*",")","from","airports"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Flugh\u00e4fen","besitzen","wir","?"],"question":"Wie viele Flugh\u00e4fen besitzen wir?"},{"db_id":"tvshow","query":"SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";","query_toks":["SELECT","Package_Option","FROM","TV_Channel","WHERE","series_name","=","``","Sky","Radio","''",";"],"query_toks_no_value":["select","package_option","from","tv_channel","where","series_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Sky Radio\"",null]]},"question_toks":["``","Was","ist","die","Paket-Variante","eines","TV-Kanals","mit","der","Serienbezeichnung","``","''","Sky","Radio","''","''","?"],"question":"\"Was ist die Paket-Variante eines TV-Kanals mit der Serienbezeichnung \"\"Sky Radio\"\"?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","WHERE","SourceAirport","=","``","APG","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","where","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"APG\"",null]]},"question_toks":["Z\u00e4hlen","Sie","die","Anzahl","der","Fl\u00fcge",",","die","von","der","'APG","'","starten","."],"question":"Z\u00e4hlen Sie die Anzahl der Fl\u00fcge, die von der 'APG' starten."},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","WHERE","SourceAirport","=","``","APG","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","where","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"APG\"",null]]},"question_toks":["Wie","viele","Fl\u00fcge","starten","von","der","'APG","'","?"],"question":"Wie viele Fl\u00fcge starten von der 'APG'?"},{"db_id":"dog_kennels","query":"SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )","query_toks":["SELECT","name","FROM","Dogs","WHERE","dog_id","NOT","IN","(","SELECT","dog_id","FROM","Treatments","GROUP","BY","dog_id","HAVING","sum","(","cost_of_treatment",")",">","1000",")"],"query_toks_no_value":["select","name","from","dogs","where","dog_id","not","in","(","select","dog_id","from","treatments","group","by","dog_id","having","sum","(","cost_of_treatment",")",">","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[[true,8,[0,[0,20,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[[0,45,false]],"having":[[false,3,[0,[4,49,false],null],1000.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,45,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Bei","welchen","Hunden","haben","die","Behandlungskosten","f\u00fcr","ihren","Besitzer","nicht","mehr","als","1000","betragen","?","Listen","Sie","die","Namen","der","Hunde","auf","."],"question":"Bei welchen Hunden haben die Behandlungskosten f\u00fcr ihren Besitzer nicht mehr als 1000 betragen? Listen Sie die Namen der Hunde auf."},{"db_id":"car_1","query":"SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;","query_toks":["SELECT","COUNT","(","*",")","FROM","CARS_DATA","WHERE","Cylinders",">","6",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","cylinders",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,18,false],null],6.0,null]]},"question_toks":["Wie","hoch","ist","die","Anzahl","der","Fahrzeuge","mit","mehr","als","6","Zylindern","?"],"question":"Wie hoch ist die Anzahl der Fahrzeuge mit mehr als 6 Zylindern?"},{"db_id":"pets_1","query":"SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'","query_toks":["SELECT","T1.Fname","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'cat","'","INTERSECT","SELECT","T1.Fname","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T3.petid","=","T2.petid","WHERE","T3.pettype","=","'dog","'"],"query_toks_no_value":["select","t1",".","fname","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value","intersect","select","t1",".","fname","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t3",".","petid","=","t2",".","petid","where","t3",".","pettype","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"dog\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"cat\"",null]]},"question_toks":["Den","Namen","von","Studierenden","finden",",","die","sowohl","Katzen","als","auch","Hunde","als","Haustiere","haben","."],"question":"Den Namen von Studierenden finden, die sowohl Katzen als auch Hunde als Haustiere haben."},{"db_id":"network_1","query":"SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes","query_toks":["SELECT","student_id","FROM","Friend","INTERSECT","SELECT","liked_id","FROM","Likes"],"query_toks_no_value":["select","student_id","from","friend","intersect","select","liked_id","from","likes"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","IDs","von","Studierenden",",","die","sowohl","Freunde","haben","als","auch","beliebt","sind","?"],"question":"Wie lauten die IDs von Studierenden, die sowohl Freunde haben als auch beliebt sind?"},{"db_id":"world_1","query":"SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')","query_toks":["SELECT","DISTINCT","T2.Name","FROM","country","AS","T1","JOIN","city","AS","T2","ON","T2.CountryCode","=","T1.Code","WHERE","T1.Continent","=","'Europe","'","AND","T1.Name","NOT","IN","(","SELECT","T3.Name","FROM","country","AS","T3","JOIN","countrylanguage","AS","T4","ON","T3.Code","=","T4.CountryCode","WHERE","T4.IsOfficial","=","'T","'","AND","T4.Language","=","'English","'",")"],"query_toks_no_value":["select","distinct","t2",".","name","from","country","as","t1","join","city","as","t2","on","t2",".","countrycode","=","t1",".","code","where","t1",".","continent","=","value","and","t1",".","name","not","in","(","select","t3",".","name","from","country","as","t3","join","countrylanguage","as","t4","on","t3",".","code","=","t4",".","countrycode","where","t4",".","isofficial","=","value","and","t4",".","language","=","value",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,8,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Europe\"",null],"and",[true,8,[0,[0,9,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"T\"",null],"and",[false,2,[0,[0,24,false],null],"\"English\"",null]]},null]]},"question_toks":["Welche","St\u00e4dte","geh\u00f6ren","zu","den","europ\u00e4ischen","L\u00e4ndern",",","in","denen","Englisch","nicht","die","Amtssprache","ist","?"],"question":"Welche St\u00e4dte geh\u00f6ren zu den europ\u00e4ischen L\u00e4ndern, in denen Englisch nicht die Amtssprache ist?"},{"db_id":"battle_death","query":"SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );","query_toks":["SELECT","count","(","*",")","FROM","battle","WHERE","id","NOT","IN","(","SELECT","lost_in_battle","FROM","ship","WHERE","tonnage","=","'225","'",")",";"],"query_toks_no_value":["select","count","(","*",")","from","battle","where","id","not","in","(","select","lost_in_battle","from","ship","where","tonnage","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"225\"",null]]},null]]},"question_toks":["Wie","viele","Gefechte","hat","kein","Schiff","mit","der","Tonnage","'225","'","verloren","?"],"question":"Wie viele Gefechte hat kein Schiff mit der Tonnage '225' verloren?"},{"db_id":"wta_1","query":"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","winner_name",",","winner_rank_points","FROM","matches","GROUP","BY","winner_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","winner_name",",","winner_rank_points","from","matches","group","by","winner_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,34,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,36,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dft","der","Sieger",",","der","die","meisten","Wettk\u00e4mpfe","gewonnen","hat",",","und","wie","viele","Rangpunkte","hat","er","?"],"question":"Wie hei\u00dft der Sieger, der die meisten Wettk\u00e4mpfe gewonnen hat, und wie viele Rangpunkte hat er?"},{"db_id":"tvshow","query":"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";","query_toks":["SELECT","T1.series_name","FROM","TV_Channel","AS","T1","JOIN","Cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.Title","=","``","The","Rise","of","the","Blue","Beetle","!","``",";"],"query_toks_no_value":["select","t1",".","series_name","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","title","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"The Rise of the Blue Beetle!\"",null]]},"question_toks":["``","Wie","lautet","der","Name","der","Serie","des","Fernsehkanals",",","der","den","Zeichentrickfilm","``","''","Der","Aufstieg","des","Blauen","K\u00e4fers","''","ausstrahlt","?"],"question":"\"Wie lautet der Name der Serie des Fernsehkanals, der den Zeichentrickfilm \"\"Der Aufstieg des Blauen K\u00e4fers\" ausstrahlt?"},{"db_id":"singer","query":"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name","query_toks":["SELECT","T1.Name",",","sum","(","T2.Sales",")","FROM","singer","AS","T1","JOIN","song","AS","T2","ON","T1.Singer_ID","=","T2.Singer_ID","GROUP","BY","T1.Name"],"query_toks_no_value":["select","t1",".","name",",","sum","(","t2",".","sales",")","from","singer","as","t1","join","song","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","group","by","t1",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[4,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Zeigen","Sie","die","Namen","der","S\u00e4nger","und","den","Gesamtverkauf","ihrer","Lieder","an","."],"question":"Zeigen Sie die Namen der S\u00e4nger und den Gesamtverkauf ihrer Lieder an."},{"db_id":"orchestra","query":"SELECT Name FROM conductor ORDER BY Year_of_Work DESC","query_toks":["SELECT","Name","FROM","conductor","ORDER","BY","Year_of_Work","DESC"],"query_toks_no_value":["select","name","from","conductor","order","by","year_of_work","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["F\u00fchren","Sie","die","Namen","der","Dirigenten","in","absteigender","Reihenfolge","der","Arbeitsjahre","auf","."],"question":"F\u00fchren Sie die Namen der Dirigenten in absteigender Reihenfolge der Arbeitsjahre auf."},{"db_id":"world_1","query":"SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1","query_toks":["SELECT","Name","FROM","country","WHERE","Continent","=","``","Asia","''","ORDER","BY","LifeExpectancy","LIMIT","1"],"query_toks_no_value":["select","name","from","country","where","continent","=","value","order","by","lifeexpectancy","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,15,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Benennen","Sie","das","Land","in","Asien","mit","der","niedrigsten","Lebenserwartung","."],"question":"Benennen Sie das Land in Asien mit der niedrigsten Lebenserwartung."},{"db_id":"dog_kennels","query":"SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )","query_toks":["SELECT","count","(","*",")","FROM","Dogs","WHERE","dog_id","NOT","IN","(","SELECT","dog_id","FROM","Treatments",")"],"query_toks_no_value":["select","count","(","*",")","from","dogs","where","dog_id","not","in","(","select","dog_id","from","treatments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,20,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,45,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","viele","Hunde","sind","nicht","behandelt","worden","?"],"question":"Wie viele Hunde sind nicht behandelt worden?"},{"db_id":"network_1","query":"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","query_toks":["SELECT","T2.name",",","count","(","*",")","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","GROUP","BY","T1.student_id"],"query_toks_no_value":["select","t2",".","name",",","count","(","*",")","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","group","by","t1",".","student_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dfen","die","Gymnasiasten","und","wie","viele","Freunde","hat","jeder","von","ihnen","?"],"question":"Wie hei\u00dfen die Gymnasiasten und wie viele Freunde hat jeder von ihnen?"},{"db_id":"network_1","query":"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"","query_toks":["SELECT","count","(","*",")","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","WHERE","T2.name","=","``","Kyle","''"],"query_toks_no_value":["select","count","(","*",")","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Die","Anzahl","der","Freunde","z\u00e4hlen",",","die","Kyle","hat","."],"question":"Die Anzahl der Freunde z\u00e4hlen, die Kyle hat."},{"db_id":"tvshow","query":"SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";","query_toks":["SELECT","Title","FROM","Cartoon","WHERE","Directed_by","=","``","Ben","Jones","''","OR","Directed_by","=","``","Brandon","Vietti","''",";"],"query_toks_no_value":["select","title","from","cartoon","where","directed_by","=","value","or","directed_by","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null],"or",[false,2,[0,[0,21,false],null],"\"Brandon Vietti\"",null]]},"question_toks":["Wie","lauten","die","Titel","aller","Karikaturen","unter","der","Regie","von","Ben","Jones","oder","Brandon","Vietti","?"],"question":"Wie lauten die Titel aller Karikaturen unter der Regie von Ben Jones oder Brandon Vietti?"},{"db_id":"battle_death","query":"SELECT max(killed) ,  min(killed) FROM death","query_toks":["SELECT","max","(","killed",")",",","min","(","killed",")","FROM","death"],"query_toks_no_value":["select","max","(","killed",")",",","min","(","killed",")","from","death"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,17,false],null]],[2,[0,[0,17,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","die","maximale","und","minimale","Zahl","der","jedes","Mal","verursachten","Todesopfer","?"],"question":"Wie hoch ist die maximale und minimale Zahl der jedes Mal verursachten Todesopfer?"},{"db_id":"car_1","query":"SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;","query_toks":["SELECT","count","(","*",")","FROM","CARS_DATA","WHERE","YEAR","=","1980",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],1980.0,null]]},"question_toks":["Wie","viele","Autos","wurden","1980","hergestellt","?"],"question":"Wie viele Autos wurden 1980 hergestellt?"},{"db_id":"wta_1","query":"SELECT count(*) ,  hand FROM players GROUP BY hand","query_toks":["SELECT","count","(","*",")",",","hand","FROM","players","GROUP","BY","hand"],"query_toks_no_value":["select","count","(","*",")",",","hand","from","players","group","by","hand"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Spieler","gibt","es","pro","Blatttyp","?"],"question":"Wie viele Spieler gibt es pro Blatttyp?"},{"db_id":"employee_hire_evaluation","query":"SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1","query_toks":["SELECT","t1.name","FROM","employee","AS","t1","JOIN","evaluation","AS","t2","ON","t1.Employee_ID","=","t2.Employee_ID","ORDER","BY","t2.bonus","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","employee","as","t1","join","evaluation","as","t2","on","t1",".","employee_id","=","t2",".","employee_id","order","by","t2",".","bonus","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,15,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,17,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Mitarbeiter","erhielt","den","gr\u00f6\u00dften","Zuschlag","?","Nennen","Sie","mir","den","Angestellten","."],"question":"Welcher Mitarbeiter erhielt den gr\u00f6\u00dften Zuschlag? Nennen Sie mir den Angestellten."},{"db_id":"dog_kennels","query":"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","query_toks":["SELECT","T1.first_name",",","T1.last_name",",","T2.size_code","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","last_name",",","t2",".","size_code","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]],[0,[0,[0,24,false],null]]]],"union":null,"where":[]},"question_toks":["F\u00fchren","Sie","den","Vornamen",",","den","Nachnamen","und","die","Gr\u00f6\u00dfe","des","Vornamens","jeder","Besitzerin","f\u00fcr","ihren","Hund","auf","."],"question":"F\u00fchren Sie den Vornamen, den Nachnamen und die Gr\u00f6\u00dfe des Vornamens jeder Besitzerin f\u00fcr ihren Hund auf."},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"","query_toks":["SELECT","count","(","*",")","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T2.Airline","=","T1.uid","WHERE","T1.Airline","=","``","United","Airlines","''","AND","T2.DestAirport","=","``","ASY","''"],"query_toks_no_value":["select","count","(","*",")","from","airlines","as","t1","join","flights","as","t2","on","t2",".","airline","=","t1",".","uid","where","t1",".","airline","=","value","and","t2",".","destairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,1,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"United Airlines\"",null],"and",[false,2,[0,[0,13,false],null],"\"ASY\"",null]]},"question_toks":["Z\u00e4hlen","Sie","die","Fl\u00fcge","von","United","Airlines",",","die","am","Flughafen","ASY","landen","."],"question":"Z\u00e4hlen Sie die Fl\u00fcge von United Airlines, die am Flughafen ASY landen."},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","JOIN","AIRPORTS","AS","T3","ON","T1.SourceAirport","=","T3.AirportCode","WHERE","T2.City","=","``","Ashley","''","AND","T3.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","join","airports","as","t3","on","t1",".","sourceairport","=","t3",".","airportcode","where","t2",".","city","=","value","and","t3",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Ashley\"",null],"and",[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Wie","viele","Fl\u00fcge","starten","von","Aberdeen","nach","Ashley","?"],"question":"Wie viele Fl\u00fcge starten von Aberdeen nach Ashley?"},{"db_id":"student_transcripts_tracking","query":"SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id","query_toks":["SELECT","DISTINCT","T1.course_name","FROM","Courses","AS","T1","JOIN","Student_Enrolment_Courses","AS","T2","ON","T1.course_id","=","T2.course_id"],"query_toks_no_value":["select","distinct","t1",".","course_name","from","courses","as","t1","join","student_enrolment_courses","as","t2","on","t1",".","course_id","=","t2",".","course_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,50,false],null]],"table_units":[["table_unit",1],["table_unit",8]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Unter","welchen","Kursnamen","sind","die","Kurse",",","in","die","sich","jemals","Studierende","eingeschrieben","haben","?"],"question":"Unter welchen Kursnamen sind die Kurse, in die sich jemals Studierende eingeschrieben haben?"},{"db_id":"car_1","query":"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","query_toks":["SELECT","T2.horsepower",",","T1.Make","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","WHERE","T2.cylinders","=","3","ORDER","BY","T2.horsepower","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t2",".","horsepower",",","t1",".","make","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","where","t2",".","cylinders","=","value","order","by","t2",".","horsepower","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,20,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],3.0,null]]},"question_toks":["Was","ist","die","maximale","Leistung","und","die","Marke","der","Automodelle","mit","3","Zylindern","?"],"question":"Was ist die maximale Leistung und die Marke der Automodelle mit 3 Zylindern?"},{"db_id":"tvshow","query":"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";","query_toks":["SELECT","count","(","*",")","FROM","TV_Channel","WHERE","LANGUAGE","=","``","English","''",";"],"query_toks_no_value":["select","count","(","*",")","from","tv_channel","where","language","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"English\"",null]]},"question_toks":["Wie","viele","TV-Kan\u00e4le","verwenden","die","Englische","Sprache","?"],"question":"Wie viele TV-Kan\u00e4le verwenden die Englische Sprache?"},{"db_id":"concert_singer","query":"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","query_toks":["SELECT","name",",","country","FROM","singer","WHERE","song_name","LIKE","'","%","Hey","%","'"],"query_toks_no_value":["select","name",",","country","from","singer","where","song_name","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,9,[0,[0,11,false],null],"\"%Hey%\"",null]]},"question_toks":["Wie","lautet","der","Name","und","das","Herkunftsland","jedes","S\u00e4ngers",",","der","ein","Lied","mit","dem","Wort","``","Hey","''","im","Titel","hat","?"],"question":"Wie lautet der Name und das Herkunftsland jedes S\u00e4ngers, der ein Lied mit dem Wort \"Hey\" im Titel hat?"},{"db_id":"network_1","query":"SELECT name FROM Highschooler WHERE grade  =  10","query_toks":["SELECT","name","FROM","Highschooler","WHERE","grade","=","10"],"query_toks_no_value":["select","name","from","highschooler","where","grade","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,3,false],null],10.0,null]]},"question_toks":["Wie","hei\u00dfen","alle","Gymnasiasten","in","Klasse","10","?"],"question":"Wie hei\u00dfen alle Gymnasiasten in Klasse 10?"},{"db_id":"employee_hire_evaluation","query":"SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC","query_toks":["SELECT","name",",","LOCATION",",","district","FROM","shop","ORDER","BY","number_products","DESC"],"query_toks_no_value":["select","name",",","location",",","district","from","shop","order","by","number_products","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Sortieren","Sie","alle","Gesch\u00e4fte","nach","der","Anzahl","der","Produkte","in","absteigender","Reihenfolge",",","und","rufen","Sie","den","Namen",",","den","Standort","und","den","Bezirk","jedes","Gesch\u00e4fts","ab","."],"question":"Sortieren Sie alle Gesch\u00e4fte nach der Anzahl der Produkte in absteigender Reihenfolge, und rufen Sie den Namen, den Standort und den Bezirk jedes Gesch\u00e4fts ab."},{"db_id":"tvshow","query":"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","query_toks":["SELECT","title",",","Directed_by","FROM","Cartoon","ORDER","BY","Original_air_date"],"query_toks_no_value":["select","title",",","directed_by","from","cartoon","order","by","original_air_date"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,23,false],null]]],"select":[false,[[0,[0,[0,20,false],null]],[0,[0,[0,21,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dfen","die","Regisseure","aller","Karikaturen",",","die","nach","Flugdatum","geordnet","sind",",","und","wie","lauten","sie","?"],"question":"Wie hei\u00dfen die Regisseure aller Karikaturen, die nach Flugdatum geordnet sind, und wie lauten sie?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(DISTINCT current_address_id) FROM Students","query_toks":["SELECT","count","(","DISTINCT","current_address_id",")","FROM","Students"],"query_toks_no_value":["select","count","(","distinct","current_address_id",")","from","students"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,33,true],null]]]],"union":null,"where":[]},"question_toks":["An","welchen","verschiedenen","Adressen","wohnen","Studierende","?"],"question":"An welchen verschiedenen Adressen wohnen Studierende?"},{"db_id":"voter_1","query":"SELECT max(created) FROM votes WHERE state  =  'CA'","query_toks":["SELECT","max","(","created",")","FROM","votes","WHERE","state","=","'CA","'"],"query_toks_no_value":["select","max","(","created",")","from","votes","where","state","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"CA\"",null]]},"question_toks":["Was","ist","der","letzte","Zeitpunkt",",","an","dem","Stimmen","aus","dem","Staat","'CA","'","erstellt","werden","?"],"question":"Was ist der letzte Zeitpunkt, an dem Stimmen aus dem Staat 'CA' erstellt werden?"},{"db_id":"battle_death","query":"SELECT count(DISTINCT RESULT) FROM battle","query_toks":["SELECT","count","(","DISTINCT","RESULT",")","FROM","battle"],"query_toks_no_value":["select","count","(","distinct","result",")","from","battle"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,6,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Ergebnisse","gibt","es","bei","den","Auseinandersetzungen","?"],"question":"Wie viele verschiedene Ergebnisse gibt es bei den Auseinandersetzungen?"},{"db_id":"poker_player","query":"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality","query_toks":["SELECT","Nationality",",","COUNT","(","*",")","FROM","people","GROUP","BY","Nationality"],"query_toks_no_value":["select","nationality",",","count","(","*",")","from","people","group","by","nationality"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Angeh\u00f6rige","jeder","Nationalit\u00e4t","sind","vorhanden","?"],"question":"Wie viele Angeh\u00f6rige jeder Nationalit\u00e4t sind vorhanden?"},{"db_id":"tvshow","query":"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'","query_toks":["SELECT","Pixel_aspect_ratio_PAR",",","country","FROM","tv_channel","WHERE","LANGUAGE","!","=","'English","'"],"query_toks_no_value":["select","pixel_aspect_ratio_par",",","country","from","tv_channel","where","language","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,7,[0,[0,4,false],null],"\"English\"",null]]},"question_toks":["Das","Pixelseitenverh\u00e4ltnis","und","die","Nation","der","Fernsehkan\u00e4le","finden",",","die","kein","Englisch","verwenden","."],"question":"Das Pixelseitenverh\u00e4ltnis und die Nation der Fernsehkan\u00e4le finden, die kein Englisch verwenden."},{"db_id":"dog_kennels","query":"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","query_toks":["SELECT","DISTINCT","T1.first_name",",","T1.last_name","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","WHERE","cost_of_treatment","<","(","SELECT","avg","(","cost_of_treatment",")","FROM","Treatments",")"],"query_toks_no_value":["select","distinct","t1",".","first_name",",","t1",".","last_name","from","professionals","as","t1","join","treatments","as","t2","where","cost_of_treatment","<","(","select","avg","(","cost_of_treatment",")","from","treatments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,35,false],null]],[0,[0,[0,40,false],null]]]],"union":null,"where":[[false,4,[0,[0,49,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,49,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Welche","Fachkr\u00e4fte","haben","eine","Behandlung","durchgef\u00fchrt",",","die","weniger","als","der","Durchschnitt","kostet","?","Nennen","Sie","mir","Vornamen","und","Nachnamen","."],"question":"Welche Fachkr\u00e4fte haben eine Behandlung durchgef\u00fchrt, die weniger als der Durchschnitt kostet? Nennen Sie mir Vornamen und Nachnamen."},{"db_id":"world_1","query":"SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"","query_toks":["SELECT","DISTINCT","T3.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","JOIN","city","AS","T3","ON","T1.Code","=","T3.CountryCode","WHERE","T2.IsOfficial","=","'T","'","AND","T2.Language","=","'Chinese","'","AND","T1.Continent","=","``","Asia","''"],"query_toks_no_value":["select","distinct","t3",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","join","city","as","t3","on","t1",".","code","=","t3",".","countrycode","where","t2",".","isofficial","=","value","and","t2",".","language","=","value","and","t1",".","continent","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"T\"",null],"and",[false,2,[0,[0,24,false],null],"\"Chinese\"",null],"and",[false,2,[0,[0,10,false],null],"\"Asia\"",null]]},"question_toks":["Welche","einzigartigen","St\u00e4dte","gibt","es","in","asiatischen","L\u00e4ndern",",","in","denen","Chinesisch","die","Amtssprache","ist","?"],"question":"Welche einzigartigen St\u00e4dte gibt es in asiatischen L\u00e4ndern, in denen Chinesisch die Amtssprache ist?"},{"db_id":"concert_singer","query":"SELECT count(*) FROM singer","query_toks":["SELECT","count","(","*",")","FROM","singer"],"query_toks_no_value":["select","count","(","*",")","from","singer"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","die","Gesamtzahl","der","S\u00e4ngerInnen","?"],"question":"Wie hoch ist die Gesamtzahl der S\u00e4ngerInnen?"},{"db_id":"employee_hire_evaluation","query":"SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)","query_toks":["SELECT","name","FROM","employee","WHERE","Employee_ID","NOT","IN","(","SELECT","Employee_ID","FROM","evaluation",")"],"query_toks_no_value":["select","name","from","employee","where","employee_id","not","in","(","select","employee_id","from","evaluation",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finden","Sie","die","Namen","der","Mitarbeiter",",","die","bei","der","Auswertung","nie","einen","Preis","gewonnen","haben","."],"question":"Finden Sie die Namen der Mitarbeiter, die bei der Auswertung nie einen Preis gewonnen haben."},{"db_id":"student_transcripts_tracking","query":"SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1","query_toks":["SELECT","transcript_date","FROM","Transcripts","ORDER","BY","transcript_date","DESC","LIMIT","1"],"query_toks_no_value":["select","transcript_date","from","transcripts","order","by","transcript_date","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",9]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,53,false],null]]],"select":[false,[[0,[0,[0,53,false],null]]]],"union":null,"where":[]},"question_toks":["Wann","ist","das","letzte","Ver\u00f6ffentlichungsdatum","des","Transkripts","?"],"question":"Wann ist das letzte Ver\u00f6ffentlichungsdatum des Transkripts?"},{"db_id":"world_1","query":"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"","query_toks":["SELECT","Region","FROM","country","AS","T1","JOIN","city","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Name","=","``","Kabul","''"],"query_toks_no_value":["select","region","from","country","as","t1","join","city","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kabul\"",null]]},"question_toks":["In","welcher","geographischen","Region","liegt","die","Stadt","Kabul","?"],"question":"In welcher geographischen Region liegt die Stadt Kabul?"},{"db_id":"poker_player","query":"SELECT count(DISTINCT Nationality) FROM people","query_toks":["SELECT","count","(","DISTINCT","Nationality",")","FROM","people"],"query_toks_no_value":["select","count","(","distinct","nationality",")","from","people"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,8,true],null]]]],"union":null,"where":[]},"question_toks":["Die","Anzahl","der","verschiedenen","Nationalit\u00e4ten","z\u00e4hlen","."],"question":"Die Anzahl der verschiedenen Nationalit\u00e4ten z\u00e4hlen."},{"db_id":"dog_kennels","query":"SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1","query_toks":["SELECT","name",",","age",",","weight","FROM","Dogs","WHERE","abandoned_yn","=","1"],"query_toks_no_value":["select","name",",","age",",","weight","from","dogs","where","abandoned_yn","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]],[0,[0,[0,26,false],null]],[0,[0,[0,29,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],1.0,null]]},"question_toks":["Geben","Sie","den","Namen",",","das","Alter","und","das","Gewicht","der","Hunde","an",",","die","ausgesetzt","wurden","?","1","steht","f\u00fcr","ja",",","und","0","steht","f\u00fcr","nein","."],"question":"Geben Sie den Namen, das Alter und das Gewicht der Hunde an, die ausgesetzt wurden? 1 steht f\u00fcr ja, und 0 steht f\u00fcr nein."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Templates","query_toks":["SELECT","count","(","*",")","FROM","Templates"],"query_toks_no_value":["select","count","(","*",")","from","templates"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Die","Anzahl","der","Vorlagen","z\u00e4hlen","."],"question":"Die Anzahl der Vorlagen z\u00e4hlen."},{"db_id":"course_teach","query":"SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2","query_toks":["SELECT","Hometown","FROM","teacher","GROUP","BY","Hometown","HAVING","COUNT","(","*",")",">","=","2"],"query_toks_no_value":["select","hometown","from","teacher","group","by","hometown","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,7,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Die","Heimatst\u00e4dte","zeigen",",","die","von","mindestens","zwei","Lehrern","geteilt","werden","."],"question":"Die Heimatst\u00e4dte zeigen, die von mindestens zwei Lehrern geteilt werden."},{"db_id":"car_1","query":"SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';","query_toks":["SELECT","avg","(","T2.edispl",")","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","WHERE","T1.Model","=","'volvo","'",";"],"query_toks_no_value":["select","avg","(","t2",".","edispl",")","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","where","t1",".","model","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,19,false],null]]]],"union":null,"where":[[false,2,[0,[0,14,false],null],"\"volvo\"",null]]},"question_toks":["Wie","hoch","ist","der","durchschnittliche","Edispl","f\u00fcr","alle","Volvos","?"],"question":"Wie hoch ist der durchschnittliche Edispl f\u00fcr alle Volvos?"},{"db_id":"flight_2","query":"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"","query_toks":["SELECT","T1.FlightNo","FROM","FLIGHTS","AS","T1","JOIN","AIRLINES","AS","T2","ON","T2.uid","=","T1.Airline","WHERE","T2.Airline","=","``","United","Airlines","''"],"query_toks_no_value":["select","t1",".","flightno","from","flights","as","t1","join","airlines","as","t2","on","t2",".","uid","=","t1",".","airline","where","t2",".","airline","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"United Airlines\"",null]]},"question_toks":["``","Wie","lauten","die","Flugnummern","der","Fluggesellschaft","``","''","United","Airlines","''","''","?","''"],"question":"\"Wie lauten die Flugnummern der Fluggesellschaft \"\"United Airlines\"\"?\""},{"db_id":"flight_2","query":"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"","query_toks":["SELECT","City",",","Country","FROM","AIRPORTS","WHERE","AirportName","=","``","Alton","''"],"query_toks_no_value":["select","city",",","country","from","airports","where","airportname","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"Alton\"",null]]},"question_toks":["In","welcher","Stadt","und","welchem","Land","befindet","sich","der","Flughafen","Alton","?"],"question":"In welcher Stadt und welchem Land befindet sich der Flughafen Alton?"},{"db_id":"dog_kennels","query":"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","query_toks":["SELECT","T1.first_name",",","T2.name","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id"],"query_toks_no_value":["select","t1",".","first_name",",","t2",".","name","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,25,false],null]]]],"union":null,"where":[]},"question_toks":["Die","Paare","aus","dem","Vornamen","des","Besitzers","und","dem","Namen","der","Hunde","auflisten","."],"question":"Die Paare aus dem Vornamen des Besitzers und dem Namen der Hunde auflisten."},{"db_id":"wta_1","query":"SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1","query_toks":["SELECT","winner_name","FROM","matches","WHERE","tourney_name","=","'Australian","Open","'","ORDER","BY","winner_rank_points","DESC","LIMIT","1"],"query_toks_no_value":["select","winner_name","from","matches","where","tourney_name","=","value","order","by","winner_rank_points","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,36,false],null]]],"select":[false,[[0,[0,[0,34,false],null]]]],"union":null,"where":[[false,2,[0,[0,27,false],null],"\"Australian Open\"",null]]},"question_toks":["Wie","lautet","der","Name","des","Siegers","mit","den","meisten","Rangpunkten",",","der","am","Australian","Open-Turnier","teilgenommen","hat","?"],"question":"Wie lautet der Name des Siegers mit den meisten Rangpunkten, der am Australian Open-Turnier teilgenommen hat?"},{"db_id":"singer","query":"SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955","query_toks":["SELECT","Citizenship","FROM","singer","WHERE","Birth_Year","<","1945","INTERSECT","SELECT","Citizenship","FROM","singer","WHERE","Birth_Year",">","1955"],"query_toks_no_value":["select","citizenship","from","singer","where","birth_year","<","value","intersect","select","citizenship","from","singer","where","birth_year",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,3,[0,[0,3,false],null],1955.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,4,[0,[0,3,false],null],1945.0,null]]},"question_toks":["Welches","sind","die","Staatsangeh\u00f6rigkeiten",",","die","S\u00e4ngerInnen","mit","einem","Geburtsjahr","vor","1945","und","nach","1955","aufweisen","?"],"question":"Welches sind die Staatsangeh\u00f6rigkeiten, die S\u00e4ngerInnen mit einem Geburtsjahr vor 1945 und nach 1955 aufweisen?"},{"db_id":"employee_hire_evaluation","query":"SELECT * FROM hiring","query_toks":["SELECT","*","FROM","hiring"],"query_toks_no_value":["select","*","from","hiring"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","mir","alle","Informationen","zur","Einstellung","."],"question":"Geben Sie mir alle Informationen zur Einstellung. "},{"db_id":"poker_player","query":"SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2","query_toks":["SELECT","Nationality","FROM","people","GROUP","BY","Nationality","HAVING","COUNT","(","*",")",">","=","2"],"query_toks_no_value":["select","nationality","from","people","group","by","nationality","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,8,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Nationalit\u00e4ten",",","die","mindestens","zwei","Menschen","gemeinsam","teilen","?"],"question":"Welches sind die Nationalit\u00e4ten, die mindestens zwei Menschen gemeinsam teilen?"},{"db_id":"dog_kennels","query":"SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )","query_toks":["SELECT","avg","(","age",")","FROM","Dogs","WHERE","dog_id","IN","(","SELECT","dog_id","FROM","Treatments",")"],"query_toks_no_value":["select","avg","(","age",")","from","dogs","where","dog_id","in","(","select","dog_id","from","treatments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,26,false],null]]]],"union":null,"where":[[false,8,[0,[0,20,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,45,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Das","Durchschnittsalter","der","Hunde","ermitteln",",","die","einer","Behandlung","unterzogen","wurden","."],"question":"Das Durchschnittsalter der Hunde ermitteln, die einer Behandlung unterzogen wurden."},{"db_id":"network_1","query":"SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id","query_toks":["SELECT","name","FROM","Highschooler","EXCEPT","SELECT","T2.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id"],"query_toks_no_value":["select","name","from","highschooler","except","select","t2",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Die","Namen","aller","Gymnasiasten","anzeigen",",","die","keine","Freunde","haben","."],"question":"Die Namen aller Gymnasiasten anzeigen, die keine Freunde haben."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"","query_toks":["SELECT","T1.template_type_code","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id","WHERE","T2.document_name","=","``","Data","base","''"],"query_toks_no_value":["select","t1",".","template_type_code","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id","where","t2",".","document_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Data base\"",null]]},"question_toks":["Den","Code","des","Vorlagentyps","der","Vorlage","abrufen",",","die","von","einem","Dokument","mit","dem","Namen","Datenbank","verwendet","wird","."],"question":"Den Code des Vorlagentyps der Vorlage abrufen, die von einem Dokument mit dem Namen Datenbank verwendet wird."},{"db_id":"pets_1","query":"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","query_toks":["SELECT","avg","(","pet_age",")",",","max","(","pet_age",")",",","pettype","FROM","pets","GROUP","BY","pettype"],"query_toks_no_value":["select","avg","(","pet_age",")",",","max","(","pet_age",")",",","pettype","from","pets","group","by","pettype"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,12,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,13,false],null]],[1,[0,[0,13,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Das","Durchschnitts-","und","H\u00f6chstalter","f\u00fcr","jeden","Haustiertyp","ermitteln","."],"question":"Das Durchschnitts- und H\u00f6chstalter f\u00fcr jeden Haustiertyp ermitteln."},{"db_id":"world_1","query":"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","query_toks":["SELECT","Name",",","population",",","HeadOfState","FROM","country","ORDER","BY","SurfaceArea","DESC","LIMIT","1"],"query_toks_no_value":["select","name",",","population",",","headofstate","from","country","order","by","surfacearea","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,12,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,14,false],null]],[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","Bev\u00f6lkerung",",","Name","und","F\u00fchrer","des","Landes","mit","der","gr\u00f6\u00dften","Fl\u00e4che","?"],"question":"Wie lauten Bev\u00f6lkerung, Name und F\u00fchrer des Landes mit der gr\u00f6\u00dften Fl\u00e4che?"},{"db_id":"course_teach","query":"SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2","query_toks":["SELECT","Hometown","FROM","teacher","GROUP","BY","Hometown","HAVING","COUNT","(","*",")",">","=","2"],"query_toks_no_value":["select","hometown","from","teacher","group","by","hometown","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,7,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Aus","welchen","St\u00e4dten","stammen","mindestens","zwei","Lehrer","?"],"question":"Aus welchen St\u00e4dten stammen mindestens zwei Lehrer?"},{"db_id":"world_1","query":"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","query_toks":["SELECT","Name",",","population",",","HeadOfState","FROM","country","ORDER","BY","SurfaceArea","DESC","LIMIT","1"],"query_toks_no_value":["select","name",",","population",",","headofstate","from","country","order","by","surfacearea","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,12,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,14,false],null]],[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","den","Namen",",","die","Bev\u00f6lkerung","und","das","Staatschef","f\u00fcr","das","Land","mit","der","gr\u00f6\u00dften","Fl\u00e4che","."],"question":"Geben Sie den Namen, die Bev\u00f6lkerung und das Staatschef f\u00fcr das Land mit der gr\u00f6\u00dften Fl\u00e4che."},{"db_id":"flight_2","query":"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"","query_toks":["SELECT","T1.FlightNo","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.SourceAirport","=","T2.AirportCode","WHERE","T2.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","t1",".","flightno","from","flights","as","t1","join","airports","as","t2","on","t1",".","sourceairport","=","t2",".","airportcode","where","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["``","Wie","viele","Fl\u00fcge","starten","von","der","Stadt","''","``","Aberdeen","''","?"],"question":"\"Wie viele Fl\u00fcge starten von der Stadt\" \"Aberdeen\"?"},{"db_id":"orchestra","query":"SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","T1.Name","FROM","conductor","AS","T1","JOIN","orchestra","AS","T2","ON","T1.Conductor_ID","=","T2.Conductor_ID","GROUP","BY","T2.Conductor_ID","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name","from","conductor","as","t1","join","orchestra","as","t2","on","t1",".","conductor_id","=","t2",".","conductor_id","group","by","t2",".","conductor_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Den","Namen","des","Dirigenten","anzeigen",",","der","die","meisten","Orchester","dirigiert","hat","."],"question":"Den Namen des Dirigenten anzeigen, der die meisten Orchester dirigiert hat."},{"db_id":"student_transcripts_tracking","query":"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","count","(","*",")",",","student_course_id","FROM","Transcript_Contents","GROUP","BY","student_course_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","count","(","*",")",",","student_course_id","from","transcript_contents","group","by","student_course_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",10]]},"groupBy":[[0,55,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,55,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","oft","kann","das","Ergebnis","einer","Kursanmeldung","h\u00f6chstens","in","verschiedenen","Transkripten","angezeigt","werden","?","Zeigen","Sie","auch","die","ID","der","Kursanmeldung","an","."],"question":"Wie oft kann das Ergebnis einer Kursanmeldung h\u00f6chstens in verschiedenen Transkripten angezeigt werden? Zeigen Sie auch die ID der Kursanmeldung an."},{"db_id":"student_transcripts_tracking","query":"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","query_toks":["SELECT","T1.course_name",",","T1.course_id","FROM","Courses","AS","T1","JOIN","Sections","AS","T2","ON","T1.course_id","=","T2.course_id","GROUP","BY","T1.course_id","HAVING","count","(","*",")","<","=","2"],"query_toks_no_value":["select","t1",".","course_name",",","t1",".","course_id","from","courses","as","t1","join","sections","as","t2","on","t1",".","course_id","=","t2",".","course_id","group","by","t1",".","course_id","having","count","(","*",")","<","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,24,false],null]],"table_units":[["table_unit",1],["table_unit",4]]},"groupBy":[[0,10,false]],"having":[[false,6,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","und","IDs","von","Kursen","mit","h\u00f6chstens","2","Abschnitten","?"],"question":"Wie lauten die Namen und IDs von Kursen mit h\u00f6chstens 2 Abschnitten?"},{"db_id":"car_1","query":"SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)","query_toks":["SELECT","T1.model","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","WHERE","T2.Weight","<","(","SELECT","avg","(","Weight",")","FROM","CARS_DATA",")"],"query_toks_no_value":["select","t1",".","model","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","where","t2",".","weight","<","(","select","avg","(","weight",")","from","cars_data",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,4,[0,[0,21,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,21,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Welches","Fahrzeugmodell","hat","einem","geringeren","Gewicht","als","der","Durchschnitt","?"],"question":"Welches Fahrzeugmodell hat einem geringeren Gewicht als der Durchschnitt?"},{"db_id":"student_transcripts_tracking","query":"SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'","query_toks":["SELECT","cell_mobile_number","FROM","Students","WHERE","first_name","=","'Timmothy","'","AND","last_name","=","'Ward","'"],"query_toks_no_value":["select","cell_mobile_number","from","students","where","first_name","=","value","and","last_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,38,false],null]]]],"union":null,"where":[[false,2,[0,[0,35,false],null],"\"Timmothy\"",null],"and",[false,2,[0,[0,37,false],null],"\"Ward\"",null]]},"question_toks":["Wie","lautet","die","Telefonnummer","des","Mannes","mit","dem","Vornamen","Timmothy","und","dem","Nachnamen","Ward","?"],"question":"Wie lautet die Telefonnummer des Mannes mit dem Vornamen Timmothy und dem Nachnamen Ward?"},{"db_id":"car_1","query":"SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;","query_toks":["SELECT","T1.horsepower","FROM","CARS_DATA","AS","T1","ORDER","BY","T1.accelerate","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","horsepower","from","cars_data","as","t1","order","by","t1",".","accelerate","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,22,false],null]]],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","die","PS-Leistung","des","Wagens","mit","der","h\u00f6chsten","Beschleunigung","?"],"question":"Wie hoch ist die PS-Leistung des Wagens mit der h\u00f6chsten Beschleunigung?"},{"db_id":"world_1","query":"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"","query_toks":["SELECT","avg","(","LifeExpectancy",")","FROM","country","WHERE","Region","=","``","Central","Africa","''"],"query_toks_no_value":["select","avg","(","lifeexpectancy",")","from","country","where","region","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Central Africa\"",null]]},"question_toks":["Wie","hoch","ist","die","durchschnittliche","Lebenserwartung","der","Menschen","in","Zentralafrika","?"],"question":"Wie hoch ist die durchschnittliche Lebenserwartung der Menschen in Zentralafrika?"},{"db_id":"real_estate_properties","query":"SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1","query_toks":["SELECT","property_name","FROM","Properties","WHERE","property_type_code","=","``","House","''","UNION","SELECT","property_name","FROM","Properties","WHERE","property_type_code","=","``","Apartment","''","AND","room_count",">","1"],"query_toks_no_value":["select","property_name","from","properties","where","property_type_code","=","value","union","select","property_name","from","properties","where","property_type_code","=","value","and","room_count",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Apartment\"",null],"and",[false,3,[0,[0,15,false],null],1.0,null]]},"where":[[false,2,[0,[0,10,false],null],"\"House\"",null]]},"question_toks":["Wie","lauten","die","Namen","von","Eigentum",",","bei","denen","es","sich","entweder","um","H\u00e4user","oder","Wohnungen","mit","mehr","als","1","Zimmer","handelt","?"],"question":"Wie lauten die Namen von Eigentum, bei denen es sich entweder um H\u00e4user oder Wohnungen mit mehr als 1 Zimmer handelt?"},{"db_id":"employee_hire_evaluation","query":"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","query_toks":["SELECT","count","(","*",")",",","t2.name","FROM","hiring","AS","t1","JOIN","shop","AS","t2","ON","t1.shop_id","=","t2.shop_id","GROUP","BY","t2.name"],"query_toks_no_value":["select","count","(","*",")",",","t2",".","name","from","hiring","as","t1","join","shop","as","t2","on","t1",".","shop_id","=","t2",".","shop_id","group","by","t2",".","name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,5,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Die","Anzahl","der","in","jedem","Gesch\u00e4ft","eingestellten","Mitarbeiter","ermitteln",";","auch","den","Namen","des","Gesch\u00e4fts","anzeigen","."],"question":"Die Anzahl der in jedem Gesch\u00e4ft eingestellten Mitarbeiter ermitteln; auch den Namen des Gesch\u00e4fts anzeigen."},{"db_id":"singer","query":"SELECT Name FROM singer WHERE Citizenship != \"France\"","query_toks":["SELECT","Name","FROM","singer","WHERE","Citizenship","!","=","``","France","''"],"query_toks_no_value":["select","name","from","singer","where","citizenship","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,7,[0,[0,5,false],null],"\"France\"",null]]},"question_toks":["Wie","lauten","die","Namen","der","S\u00e4nger",",","die","keine","franz\u00f6sischen","Staatsb\u00fcrger","sind","?"],"question":"Wie lauten die Namen der S\u00e4nger, die keine franz\u00f6sischen Staatsb\u00fcrger sind?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id ,  version_number ,  template_type_code FROM Templates","query_toks":["SELECT","template_id",",","version_number",",","template_type_code","FROM","Templates"],"query_toks_no_value":["select","template_id",",","version_number",",","template_type_code","from","templates"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","IDs",",","die","Versionsnummern","und","die","Typcodes","f\u00fcr","jede","Vorlage","?"],"question":"Wie lauten die IDs, die Versionsnummern und die Typcodes f\u00fcr jede Vorlage?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.degree_program_id",",","T1.degree_summary_name","FROM","Degree_Programs","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.degree_program_id","=","T2.degree_program_id","GROUP","BY","T1.degree_program_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","degree_program_id",",","t1",".","degree_summary_name","from","degree_programs","as","t1","join","student_enrolment","as","t2","on","t1",".","degree_program_id","=","t2",".","degree_program_id","group","by","t1",".","degree_program_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","die","Programm-ID","und","die","Zusammenfassung","des","Abschlusses",",","f\u00fcr","den","die","meisten","Studierenden","eingeschrieben","sind","?"],"question":"Wie lautet die Programm-ID und die Zusammenfassung des Abschlusses, f\u00fcr den die meisten Studierenden eingeschrieben sind?"},{"db_id":"wta_1","query":"SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'","query_toks":["SELECT","first_name",",","birth_date","FROM","players","WHERE","country_code","=","'USA","'"],"query_toks_no_value":["select","first_name",",","birth_date","from","players","where","country_code","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,6,false],null],"\"USA\"",null]]},"question_toks":["Den","Vornamen","und","das","Geburtsdatum","aller","Spieler","aus","dem","Land","mit","dem","Code","USA","auflisten","."],"question":"Den Vornamen und das Geburtsdatum aller Spieler aus dem Land mit dem Code USA auflisten."},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRLINES","AS","T2","ON","T1.Airline","=","T2.uid","WHERE","T2.Airline","=","``","JetBlue","Airways","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airlines","as","t2","on","t1",".","airline","=","t2",".","uid","where","t2",".","airline","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"JetBlue Airways\"",null]]},"question_toks":["Wie","viele","Flugverbindungen","besitzt","die","Fluggesellschaft","'JetBlue","Airways","'","?"],"question":"Wie viele Flugverbindungen besitzt die Fluggesellschaft 'JetBlue Airways'?"},{"db_id":"museum_visit","query":"SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1","query_toks":["SELECT","sum","(","t2.Total_spent",")","FROM","visitor","AS","t1","JOIN","visit","AS","t2","ON","t1.id","=","t2.visitor_id","WHERE","t1.Level_of_membership","=","1"],"query_toks_no_value":["select","sum","(","t2",".","total_spent",")","from","visitor","as","t1","join","visit","as","t2","on","t1",".","id","=","t2",".","visitor_id","where","t1",".","level_of_membership","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,5,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],1.0,null]]},"question_toks":["Wie","hoch","sind","die","Gesamtkosten","f\u00fcr","die","Eintrittskarten","der","Besucher",",","deren","Mitgliedsstufe","1","ist","?"],"question":"Wie hoch sind die Gesamtkosten f\u00fcr die Eintrittskarten der Besucher, deren Mitgliedsstufe 1 ist?"},{"db_id":"dog_kennels","query":"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","query_toks":["SELECT","T1.owner_id",",","T1.zip_code","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id","JOIN","Treatments","AS","T3","ON","T2.dog_id","=","T3.dog_id","GROUP","BY","T1.owner_id","ORDER","BY","sum","(","T3.cost_of_treatment",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","owner_id",",","t1",".","zip_code","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","join","treatments","as","t3","on","t2",".","dog_id","=","t3",".","dog_id","group","by","t1",".","owner_id","order","by","sum","(","t3",".","cost_of_treatment",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,49,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Besitzer","hat","insgesamt","am","meisten","Geld","f\u00fcr","seine","Hunde","ausgegeben","?","Zeigen","Sie","die","Besitzer-ID","und","Postleitzahl","an","."],"question":"Welcher Besitzer hat insgesamt am meisten Geld f\u00fcr seine Hunde ausgegeben? Zeigen Sie die Besitzer-ID und Postleitzahl an."},{"db_id":"world_1","query":"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")","query_toks":["SELECT","avg","(","LifeExpectancy",")","FROM","country","WHERE","Name","NOT","IN","(","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","AND","T2.IsOfficial","=","``","T","''",")"],"query_toks_no_value":["select","avg","(","lifeexpectancy",")","from","country","where","name","not","in","(","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","t2",".","isofficial","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,15,false],null]]]],"union":null,"where":[[true,8,[0,[0,9,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},null]]},"question_toks":["Die","durchschnittliche","Lebenserwartung","von","L\u00e4ndern","angeben",",","in","denen","Englisch","nicht","die","Amtssprache","ist","."],"question":"Die durchschnittliche Lebenserwartung von L\u00e4ndern angeben, in denen Englisch nicht die Amtssprache ist."},{"db_id":"car_1","query":"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';","query_toks":["SELECT","count","(","*",")","FROM","CAR_MAKERS","AS","T1","JOIN","COUNTRIES","AS","T2","ON","T1.Country","=","T2.CountryId","WHERE","T2.CountryName","=","'france","'",";"],"query_toks_no_value":["select","count","(","*",")","from","car_makers","as","t1","join","countries","as","t2","on","t1",".","country","=","t2",".","countryid","where","t2",".","countryname","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"france\"",null]]},"question_toks":["Wie","hoch","ist","die","Anzahl","der","Anbieter","von","Pflegedienstleistungen","in","Frankreich","?"],"question":"Wie hoch ist die Anzahl der Anbieter von Pflegedienstleistungen in Frankreich?"},{"db_id":"wta_1","query":"SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50","query_toks":["SELECT","country_code","FROM","players","GROUP","BY","country_code","HAVING","count","(","*",")",">","50"],"query_toks_no_value":["select","country_code","from","players","group","by","country_code","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[[false,3,[0,[3,0,false],null],50.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","Codes","der","L\u00e4nder","mit","mehr","als","50","Spielern","."],"question":"Finde die Codes der L\u00e4nder mit mehr als 50 Spielern."},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","JOIN","AIRLINES","AS","T3","ON","T3.uid","=","T1.Airline","WHERE","T2.City","=","``","Aberdeen","''","AND","T3.Airline","=","``","United","Airlines","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","join","airlines","as","t3","on","t3",".","uid","=","t1",".","airline","where","t2",".","city","=","value","and","t3",".","airline","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null],"and",[false,2,[0,[0,2,false],null],"\"United Airlines\"",null]]},"question_toks":["Z\u00e4hle","die","Zahl","der","Fl\u00fcge","von","United","Airlines",",","die","in","Aberdeen","ankommen","."],"question":"Z\u00e4hle die Zahl der Fl\u00fcge von United Airlines, die in Aberdeen ankommen."},{"db_id":"concert_singer","query":"SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1","query_toks":["SELECT","count","(","*",")","FROM","concert","AS","T1","JOIN","stadium","AS","T2","ON","T1.stadium_id","=","T2.stadium_id","ORDER","BY","T2.Capacity","DESC","LIMIT","1"],"query_toks_no_value":["select","count","(","*",")","from","concert","as","t1","join","stadium","as","t2","on","t1",".","stadium_id","=","t2",".","stadium_id","order","by","t2",".","capacity","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,4,false],null]]],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Ermitteln","Sie","die","Anzahl","der","Konzerte",",","die","in","dem","Stadion","mit","der","h\u00f6chsten","Kapazit\u00e4t","stattfanden","."],"question":"Ermitteln Sie die Anzahl der Konzerte, die in dem Stadion mit der h\u00f6chsten Kapazit\u00e4t stattfanden."},{"db_id":"student_transcripts_tracking","query":"SELECT count(*) FROM Courses","query_toks":["SELECT","count","(","*",")","FROM","Courses"],"query_toks_no_value":["select","count","(","*",")","from","courses"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Kurse","sind","insgesamt","aufgef\u00fchrt","?"],"question":"Wie viele Kurse sind insgesamt aufgef\u00fchrt?"},{"db_id":"car_1","query":"SELECT count(*) FROM CONTINENTS;","query_toks":["SELECT","count","(","*",")","FROM","CONTINENTS",";"],"query_toks_no_value":["select","count","(","*",")","from","continents"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Kontinente","gibt","es","?"],"question":"Wie viele Kontinente gibt es?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(DISTINCT department_id) FROM Degree_Programs","query_toks":["SELECT","count","(","DISTINCT","department_id",")","FROM","Degree_Programs"],"query_toks_no_value":["select","count","(","distinct","department_id",")","from","degree_programs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,19,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Fachbereiche","bieten","einen","Abschluss","an","?"],"question":"Wie viele Fachbereiche bieten einen Abschluss an?"},{"db_id":"tvshow","query":"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","query_toks":["SELECT","LANGUAGE",",","count","(","*",")","FROM","TV_Channel","GROUP","BY","LANGUAGE","ORDER","BY","count","(","*",")","ASC","LIMIT","1",";"],"query_toks_no_value":["select","language",",","count","(","*",")","from","tv_channel","group","by","language","order","by","count","(","*",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,4,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Die","Sprache","auflisten",",","in","der","die","geringste","Anzahl","von","TV-Kan\u00e4len","verwendet","wird",".","Auflisten","der","Sprache","und","der","Nummer","des","TV-Kanals","."],"question":"Die Sprache auflisten, in der die geringste Anzahl von TV-Kan\u00e4len verwendet wird. Auflisten der Sprache und der Nummer des TV-Kanals."},{"db_id":"network_1","query":"SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)","query_toks":["SELECT","avg","(","grade",")","FROM","Highschooler","WHERE","id","IN","(","SELECT","T1.student_id","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id",")"],"query_toks_no_value":["select","avg","(","grade",")","from","highschooler","where","id","in","(","select","t1",".","student_id","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,3,false],null]]]],"union":null,"where":[[false,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","ist","die","Durchschnittsnote","von","Studierenden",",","die","Freunde","haben","?"],"question":"Wie ist die Durchschnittsnote von Studierenden, die Freunde haben?"},{"db_id":"world_1","query":"SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","T1.Continent","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","GROUP","BY","T1.Continent","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","continent","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","group","by","t1",".","continent","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Kontinent","hat","die","meisten","unterschiedlichen","Sprachen","?"],"question":"Welcher Kontinent hat die meisten unterschiedlichen Sprachen?"},{"db_id":"singer","query":"SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1","query_toks":["SELECT","Name","FROM","singer","ORDER","BY","Net_Worth_Millions","DESC","LIMIT","1"],"query_toks_no_value":["select","name","from","singer","order","by","net_worth_millions","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,4,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","der","Name","des","S\u00e4ngers","mit","dem","h\u00f6chsten","Wert","?"],"question":"Was ist der Name des S\u00e4ngers mit dem h\u00f6chsten Wert?"},{"db_id":"world_1","query":"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")","query_toks":["SELECT","avg","(","LifeExpectancy",")","FROM","country","WHERE","Name","NOT","IN","(","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","AND","T2.IsOfficial","=","``","T","''",")"],"query_toks_no_value":["select","avg","(","lifeexpectancy",")","from","country","where","name","not","in","(","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","and","t2",".","isofficial","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,15,false],null]]]],"union":null,"where":[[true,8,[0,[0,9,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null],"and",[false,2,[0,[0,25,false],null],"\"T\"",null]]},null]]},"question_toks":["Wie","hoch","ist","die","durchschnittliche","Lebenserwartung","in","den","L\u00e4ndern",",","in","denen","Englisch","nicht","die","Amtssprache","ist","?"],"question":"Wie hoch ist die durchschnittliche Lebenserwartung in den L\u00e4ndern, in denen Englisch nicht die Amtssprache ist?"},{"db_id":"flight_2","query":"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"","query_toks":["SELECT","Abbreviation","FROM","AIRLINES","WHERE","Airline","=","``","JetBlue","Airways","''"],"query_toks_no_value":["select","abbreviation","from","airlines","where","airline","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"JetBlue Airways\"",null]]},"question_toks":["Was","ist","die","Abk\u00fcrzung","f\u00fcr","Jetblue","Airways","?"],"question":"Was ist die Abk\u00fcrzung f\u00fcr Jetblue Airways?"},{"db_id":"student_transcripts_tracking","query":"SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T2.department_name",",","T1.department_id","FROM","Degree_Programs","AS","T1","JOIN","Departments","AS","T2","ON","T1.department_id","=","T2.department_id","GROUP","BY","T1.department_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","department_name",",","t1",".","department_id","from","degree_programs","as","t1","join","departments","as","t2","on","t1",".","department_id","=","t2",".","department_id","group","by","t1",".","department_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,19,false],null],[0,14,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dft","die","Abteilung","mit","der","h\u00f6chsten","Anzahl","von","Abschl\u00fcssen","f\u00fcr","jede","Abteilungs-ID","?"],"question":"Wie hei\u00dft die Abteilung mit der h\u00f6chsten Anzahl von Abschl\u00fcssen f\u00fcr jede Abteilungs-ID?"},{"db_id":"poker_player","query":"SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000","query_toks":["SELECT","T1.Name","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","WHERE","T2.Earnings",">","300000"],"query_toks_no_value":["select","t1",".","name","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","where","t2",".","earnings",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,3,[0,[0,6,false],null],300000.0,null]]},"question_toks":["Gib","die","Namen","von","Pokerspielern","an",",","deren","Verdienst","\u00fcber","300000","liegt","."],"question":"Gib die Namen von Pokerspielern an, deren Verdienst \u00fcber 300000 liegt."},{"db_id":"tvshow","query":"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;","query_toks":["SELECT","count","(","DISTINCT","series_name",")",",","count","(","DISTINCT","content",")","FROM","TV_Channel",";"],"query_toks_no_value":["select","count","(","distinct","series_name",")",",","count","(","distinct","content",")","from","tv_channel"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,2,true],null]],[3,[0,[0,5,true],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verschiedene","Serien","und","Inhalte","sind","in","der","TV-Kanaltabelle","aufgelistet","?"],"question":"Wie viele verschiedene Serien und Inhalte sind in der TV-Kanaltabelle aufgelistet?"},{"db_id":"dog_kennels","query":"SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )","query_toks":["SELECT","name","FROM","Dogs","WHERE","dog_id","NOT","IN","(","SELECT","dog_id","FROM","Treatments","GROUP","BY","dog_id","HAVING","sum","(","cost_of_treatment",")",">","1000",")"],"query_toks_no_value":["select","name","from","dogs","where","dog_id","not","in","(","select","dog_id","from","treatments","group","by","dog_id","having","sum","(","cost_of_treatment",")",">","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[[true,8,[0,[0,20,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[[0,45,false]],"having":[[false,3,[0,[4,49,false],null],1000.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,45,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Was","sind","die","Namen","der","Hunde",",","f\u00fcr","die","der","Besitzer","mehr","als","1000","f\u00fcr","die","Behandlung","ausgegeben","hat","?"],"question":"Was sind die Namen der Hunde, f\u00fcr die der Besitzer mehr als 1000 f\u00fcr die Behandlung ausgegeben hat?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'","query_toks":["SELECT","document_id","FROM","Paragraphs","WHERE","paragraph_text","=","'Brazil","'","INTERSECT","SELECT","document_id","FROM","Paragraphs","WHERE","paragraph_text","=","'Ireland","'"],"query_toks_no_value":["select","document_id","from","paragraphs","where","paragraph_text","=","value","intersect","select","document_id","from","paragraphs","where","paragraph_text","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,16,false],null],"\"Ireland\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[[false,2,[0,[0,16,false],null],"\"Brazil\"",null]]},"question_toks":["Die","Dokument-ID","mit","den","Absatztexten","'Brasilien","'","und","'Irland","'","anzeigen","."],"question":"Die Dokument-ID mit den Absatztexten 'Brasilien' und 'Irland' anzeigen."},{"db_id":"wta_1","query":"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","query_toks":["SELECT","winner_name",",","loser_name","FROM","matches","ORDER","BY","minutes","DESC","LIMIT","1"],"query_toks_no_value":["select","winner_name",",","loser_name","from","matches","order","by","minutes","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Die","Namen","von","Verlierer","und","Gewinner","ermitteln",",","die","in","der","Partie","mit","der","gr\u00f6\u00dften","Anzahl","von","Minuten","gespielt","haben","."],"question":"Die Namen von Verlierer und Gewinner ermitteln, die in der Partie mit der gr\u00f6\u00dften Anzahl von Minuten gespielt haben."},{"db_id":"network_1","query":"SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)","query_toks":["SELECT","min","(","grade",")","FROM","Highschooler","WHERE","id","NOT","IN","(","SELECT","T1.student_id","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id",")"],"query_toks_no_value":["select","min","(","grade",")","from","highschooler","where","id","not","in","(","select","t1",".","student_id","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,3,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Welches","ist","die","niedrigste","Klasse","von","Studierenden",",","die","keine","Freunde","haben","?"],"question":"Welches ist die niedrigste Klasse von Studierenden, die keine Freunde haben?"},{"db_id":"orchestra","query":"SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1","query_toks":["SELECT","Year_of_Founded","FROM","orchestra","AS","T1","JOIN","performance","AS","T2","ON","T1.Orchestra_ID","=","T2.Orchestra_ID","GROUP","BY","T2.Orchestra_ID","HAVING","COUNT","(","*",")",">","1"],"query_toks_no_value":["select","year_of_founded","from","orchestra","as","t1","join","performance","as","t2","on","t1",".","orchestra_id","=","t2",".","orchestra_id","group","by","t2",".","orchestra_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,13,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,13,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Zeig","die","Gr\u00fcndungsjahre","von","Orchestern",",","die","mehr","als","eine","Auff\u00fchrung","gegeben","haben","."],"question":"Zeig die Gr\u00fcndungsjahre von Orchestern, die mehr als eine Auff\u00fchrung gegeben haben."},{"db_id":"wta_1","query":"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","winner_name",",","winner_rank_points","FROM","matches","GROUP","BY","winner_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","winner_name",",","winner_rank_points","from","matches","group","by","winner_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,34,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,34,false],null]],[0,[0,[0,36,false],null]]]],"union":null,"where":[]},"question_toks":["Den","Namen","und","die","Rangfolge","der","Gewinner",",","die","die","meisten","Male","gewonnen","haben",",","ermitteln","."],"question":"Den Namen und die Rangfolge der Gewinner, die die meisten Male gewonnen haben, ermitteln."},{"db_id":"network_1","query":"SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes","query_toks":["SELECT","student_id","FROM","Friend","INTERSECT","SELECT","liked_id","FROM","Likes"],"query_toks_no_value":["select","student_id","from","friend","intersect","select","liked_id","from","likes"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Die","IDs","von","Gymnasiasten","zeigen",",","die","Freunde","haben","und","auch","von","jemand","anderem","beliebt","sind","."],"question":"Die IDs von Gymnasiasten zeigen, die Freunde haben und auch von jemand anderem beliebt sind."},{"db_id":"dog_kennels","query":"SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1","query_toks":["SELECT","T1.treatment_type_description","FROM","Treatment_types","AS","T1","JOIN","Treatments","AS","T2","ON","T1.treatment_type_code","=","T2.treatment_type_code","GROUP","BY","T1.treatment_type_code","ORDER","BY","sum","(","cost_of_treatment",")","ASC","LIMIT","1"],"query_toks_no_value":["select","t1",".","treatment_type_description","from","treatment_types","as","t1","join","treatments","as","t2","on","t1",".","treatment_type_code","=","t2",".","treatment_type_code","group","by","t1",".","treatment_type_code","order","by","sum","(","cost_of_treatment",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,47,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[4,49,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","mir","die","Beschreibung","des","Behandlungstyps",",","dessen","Gesamtkosten","am","niedrigsten","sind","."],"question":"Gib mir die Beschreibung des Behandlungstyps, dessen Gesamtkosten am niedrigsten sind."},{"db_id":"wta_1","query":"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","query_toks":["SELECT","T1.country_code",",","T1.first_name","FROM","players","AS","T1","JOIN","rankings","AS","T2","ON","T1.player_id","=","T2.player_id","ORDER","BY","T2.tours","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","country_code",",","t1",".","first_name","from","players","as","t1","join","rankings","as","t2","on","t1",".","player_id","=","t2",".","player_id","order","by","t2",".","tours","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,41,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,43,false],null]]],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Den","Vornamen","und","den","L\u00e4ndercode","des","Spielers","ermitteln",",","der","die","meisten","Tourneen","absolviert","hat","."],"question":"Den Vornamen und den L\u00e4ndercode des Spielers ermitteln, der die meisten Tourneen absolviert hat. "},{"db_id":"concert_singer","query":"SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015","query_toks":["SELECT","count","(","*",")","FROM","concert","WHERE","YEAR","=","2014","OR","YEAR","=","2015"],"query_toks_no_value":["select","count","(","*",")","from","concert","where","year","=","value","or","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,19,false],null],2014.0,null],"or",[false,2,[0,[0,19,false],null],2015.0,null]]},"question_toks":["Wie","viele","Konzerte","erfolgten","2014","oder","2015","?"],"question":"Wie viele Konzerte erfolgten 2014 oder 2015?"},{"db_id":"student_transcripts_tracking","query":"SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.course_name","FROM","Courses","AS","T1","JOIN","Student_Enrolment_Courses","AS","T2","ON","T1.course_id","=","T2.course_id","GROUP","BY","T1.course_name","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","course_name","from","courses","as","t1","join","student_enrolment_courses","as","t2","on","t1",".","course_id","=","t2",".","course_id","group","by","t1",".","course_name","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,50,false],null]],"table_units":[["table_unit",1],["table_unit",8]]},"groupBy":[[0,11,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dft","der","Kurs","mit","den","meisten","eingeschriebenen","Studierenden","?"],"question":"Wie hei\u00dft der Kurs mit den meisten eingeschriebenen Studierenden?"},{"db_id":"employee_hire_evaluation","query":"SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000","query_toks":["SELECT","district","FROM","shop","WHERE","Number_products","<","3000","INTERSECT","SELECT","district","FROM","shop","WHERE","Number_products",">","10000"],"query_toks_no_value":["select","district","from","shop","where","number_products","<","value","intersect","select","district","from","shop","where","number_products",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],10000.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,4,[0,[0,9,false],null],3000.0,null]]},"question_toks":["In","welchem","Bezirk","gibt","es","sowohl","L\u00e4den","mit","weniger","als","3000","Produkten","als","auch","L\u00e4den","mit","mehr","als","10000","Produkten","?"],"question":"In welchem Bezirk gibt es sowohl L\u00e4den mit weniger als 3000 Produkten als auch L\u00e4den mit mehr als 10000 Produkten?"},{"db_id":"flight_2","query":"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"","query_toks":["SELECT","City",",","Country","FROM","AIRPORTS","WHERE","AirportName","=","``","Alton","''"],"query_toks_no_value":["select","city",",","country","from","airports","where","airportname","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[0,[0,[0,8,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"Alton\"",null]]},"question_toks":["Gib","die","Stadt","und","das","Land","f\u00fcr","den","Flughafen","Alton","an","."],"question":"Gib die Stadt und das Land f\u00fcr den Flughafen Alton an."},{"db_id":"course_teach","query":"SELECT Name FROM teacher WHERE Hometown != \"Little Lever Urban Distric\"","query_toks":["SELECT","Name","FROM","teacher","WHERE","Hometown","!","=","``","Little","Lever","Urban","Distric","''"],"query_toks_no_value":["select","name","from","teacher","where","hometown","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,7,[0,[0,7,false],null],"\"Little Lever Urban Distric\"",null]]},"question_toks":["``","Nennen","Sie","die","LehrerInnen",",","deren","Heimatstadt","nicht","``","''","Little","Lever","Urban","District","''","''","ist","''","."],"question":"\" Nennen Sie die LehrerInnen, deren Heimatstadt nicht \"\"Little Lever Urban District\"\" ist\"."},{"db_id":"tvshow","query":"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","query_toks":["SELECT","T1.series_name",",","T1.country","FROM","TV_Channel","AS","T1","JOIN","cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.directed_by","=","'Michael","Chang","'","INTERSECT","SELECT","T1.series_name",",","T1.country","FROM","TV_Channel","AS","T1","JOIN","cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.directed_by","=","'Ben","Jones","'"],"query_toks_no_value":["select","t1",".","series_name",",","t1",".","country","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","directed_by","=","value","intersect","select","t1",".","series_name",",","t1",".","country","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","directed_by","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Michael Chang\"",null]]},"question_toks":["Den","Seriennamen","und","das","Land","des","Fernsehsenders","herausfinden",",","der","einige","Zeichentrickfilme","unter","der","Regie","von","Ben","Jones","und","Michael","Chang","spielt","?"],"question":"Den Seriennamen und das Land des Fernsehsenders herausfinden, der einige Zeichentrickfilme unter der Regie von Ben Jones und Michael Chang spielt?"},{"db_id":"world_1","query":"SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"","query_toks":["SELECT","Population",",","Region","FROM","country","WHERE","Name","=","``","Angola","''"],"query_toks_no_value":["select","population",",","region","from","country","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,14,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Angola\"",null]]},"question_toks":["Was","sind","die","Gebiete","und","die","Bev\u00f6lkerungszahl","Angolas","?"],"question":"Was sind die Gebiete und die Bev\u00f6lkerungszahl Angolas?"},{"db_id":"world_1","query":"SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')","query_toks":["SELECT","DISTINCT","T2.Name","FROM","country","AS","T1","JOIN","city","AS","T2","ON","T2.CountryCode","=","T1.Code","WHERE","T1.Continent","=","'Europe","'","AND","T1.Name","NOT","IN","(","SELECT","T3.Name","FROM","country","AS","T3","JOIN","countrylanguage","AS","T4","ON","T3.Code","=","T4.CountryCode","WHERE","T4.IsOfficial","=","'T","'","AND","T4.Language","=","'English","'",")"],"query_toks_no_value":["select","distinct","t2",".","name","from","country","as","t1","join","city","as","t2","on","t2",".","countrycode","=","t1",".","code","where","t1",".","continent","=","value","and","t1",".","name","not","in","(","select","t3",".","name","from","country","as","t3","join","countrylanguage","as","t4","on","t3",".","code","=","t4",".","countrycode","where","t4",".","isofficial","=","value","and","t4",".","language","=","value",")"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,8,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Europe\"",null],"and",[true,8,[0,[0,9,false],null],{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,25,false],null],"\"T\"",null],"and",[false,2,[0,[0,24,false],null],"\"English\"",null]]},null]]},"question_toks":["Wie","lauten","die","Namen","von","St\u00e4dten","in","Europa",",","f\u00fcr","die","Englisch","nicht","die","Amtssprache","ist","?"],"question":"Wie lauten die Namen von St\u00e4dten in Europa, f\u00fcr die Englisch nicht die Amtssprache ist?"},{"db_id":"singer","query":"SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1","query_toks":["SELECT","T1.Name","FROM","singer","AS","T1","JOIN","song","AS","T2","ON","T1.Singer_ID","=","T2.Singer_ID","GROUP","BY","T1.Name","HAVING","COUNT","(","*",")",">","1"],"query_toks_no_value":["select","t1",".","name","from","singer","as","t1","join","song","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","group","by","t1",".","name","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,2,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Namen","der","S\u00e4nger",",","die","mehr","als","ein","Lied","haben","?"],"question":"Welches sind die Namen der S\u00e4nger, die mehr als ein Lied haben?"},{"db_id":"course_teach","query":"SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1","query_toks":["SELECT","Hometown","FROM","teacher","ORDER","BY","Age","ASC","LIMIT","1"],"query_toks_no_value":["select","hometown","from","teacher","order","by","age","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","der","Heimatort","des","j\u00fcngsten","Lehrers","?"],"question":"Welches ist der Heimatort des j\u00fcngsten Lehrers?"},{"db_id":"student_transcripts_tracking","query":"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","count","(","*",")",",","student_course_id","FROM","Transcript_Contents","GROUP","BY","student_course_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","count","(","*",")",",","student_course_id","from","transcript_contents","group","by","student_course_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",10]]},"groupBy":[[0,55,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,55,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","oft","taucht","ein","Kurs","maximal","in","verschiedenen","Transkripten","auf",",","und","wie","lautet","die","ID","f\u00fcr","die","Einschreibung","in","diesem","Kurs","?"],"question":"Wie oft taucht ein Kurs maximal in verschiedenen Transkripten auf, und wie lautet die ID f\u00fcr die Einschreibung in diesem Kurs?"},{"db_id":"pets_1","query":"SELECT weight FROM pets ORDER BY pet_age LIMIT 1","query_toks":["SELECT","weight","FROM","pets","ORDER","BY","pet_age","LIMIT","1"],"query_toks_no_value":["select","weight","from","pets","order","by","pet_age","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,13,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Das","Gewicht","des","j\u00fcngsten","Hundes","ermitteln","."],"question":"Das Gewicht des j\u00fcngsten Hundes ermitteln."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Paragraphs","query_toks":["SELECT","count","(","*",")","FROM","Paragraphs"],"query_toks_no_value":["select","count","(","*",")","from","paragraphs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Abs\u00e4tze","insgesamt","?"],"question":"Wie viele Abs\u00e4tze insgesamt?"},{"db_id":"wta_1","query":"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","query_toks":["SELECT","T1.country_code",",","T1.first_name","FROM","players","AS","T1","JOIN","matches","AS","T2","ON","T1.player_id","=","T2.winner_id","WHERE","T2.tourney_name","=","'WTA","Championships","'","INTERSECT","SELECT","T1.country_code",",","T1.first_name","FROM","players","AS","T1","JOIN","matches","AS","T2","ON","T1.player_id","=","T2.winner_id","WHERE","T2.tourney_name","=","'Australian","Open","'"],"query_toks_no_value":["select","t1",".","country_code",",","t1",".","first_name","from","players","as","t1","join","matches","as","t2","on","t1",".","player_id","=","t2",".","winner_id","where","t2",".","tourney_name","=","value","intersect","select","t1",".","country_code",",","t1",".","first_name","from","players","as","t1","join","matches","as","t2","on","t1",".","player_id","=","t2",".","winner_id","where","t2",".","tourney_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,32,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,32,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,27,false],null],"\"Australian Open\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,27,false],null],"\"WTA Championships\"",null]]},"question_toks":["Wie","lauten","L\u00e4ndercode","und","Vorname","der","Spieler",",","die","sowohl","bei","den","WTA-Turniermeisterschaften","als","auch","bei","den","Australian","Open","gewonnen","haben","?"],"question":"Wie lauten L\u00e4ndercode und Vorname der Spieler, die sowohl bei den WTA-Turniermeisterschaften als auch bei den Australian Open gewonnen haben?"},{"db_id":"course_teach","query":"SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2","query_toks":["SELECT","T2.Name","FROM","course_arrange","AS","T1","JOIN","teacher","AS","T2","ON","T1.Teacher_ID","=","T2.Teacher_ID","GROUP","BY","T2.Name","HAVING","COUNT","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","name","from","course_arrange","as","t1","join","teacher","as","t2","on","t1",".","teacher_id","=","t2",".","teacher_id","group","by","t2",".","name","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,4,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,5,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","Lehrer",",","die","mindestens","zwei","Kurse","unterrichten","?"],"question":"Wie lauten die Namen der Lehrer, die mindestens zwei Kurse unterrichten?"},{"db_id":"dog_kennels","query":"SELECT DISTINCT breed_code ,  size_code FROM dogs","query_toks":["SELECT","DISTINCT","breed_code",",","size_code","FROM","dogs"],"query_toks_no_value":["select","distinct","breed_code",",","size_code","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,23,false],null]],[0,[0,[0,24,false],null]]]],"union":null,"where":[]},"question_toks":["Die","verschiedenen","Rassentyp-","und","Gr\u00f6\u00dfentyp-Kombinationen","f\u00fcr","Hunde","feststellen","."],"question":"Die verschiedenen Rassentyp- und Gr\u00f6\u00dfentyp-Kombinationen f\u00fcr Hunde feststellen."},{"db_id":"dog_kennels","query":"SELECT count(DISTINCT dog_id) FROM Treatments","query_toks":["SELECT","count","(","DISTINCT","dog_id",")","FROM","Treatments"],"query_toks_no_value":["select","count","(","distinct","dog_id",")","from","treatments"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,45,true],null]]]],"union":null,"where":[]},"question_toks":["Die","Anzahl","der","Hunde","z\u00e4hlen",",","die","eine","Behandlung","durchlaufen","haben","."],"question":"Die Anzahl der Hunde z\u00e4hlen, die eine Behandlung durchlaufen haben."},{"db_id":"wta_1","query":"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","query_toks":["SELECT","T1.first_name",",","T1.country_code",",","T1.birth_date","FROM","players","AS","T1","JOIN","matches","AS","T2","ON","T1.player_id","=","T2.winner_id","ORDER","BY","T2.winner_rank_points","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","country_code",",","t1",".","birth_date","from","players","as","t1","join","matches","as","t2","on","t1",".","player_id","=","t2",".","winner_id","order","by","t2",".","winner_rank_points","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,32,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,36,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,6,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Vorname",",","der","L\u00e4ndercode","und","das","Geburtsdatum","des","Spielers","mit","den","meisten","Siegesrangpunkten","in","allen","Wettbewerben","?"],"question":"Wie lautet der Vorname, der L\u00e4ndercode und das Geburtsdatum des Spielers mit den meisten Siegesrangpunkten in allen Wettbewerben?"},{"db_id":"museum_visit","query":"SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1","query_toks":["SELECT","museum_id",",","name","FROM","museum","ORDER","BY","num_of_staff","DESC","LIMIT","1"],"query_toks_no_value":["select","museum_id",",","name","from","museum","order","by","num_of_staff","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,3,false],null]]],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Identifizieren","Sie","die","ID","und","den","Namen","des","Museums",",","das","die","meisten","Mitarbeiter","hat","?"],"question":"Identifizieren Sie die ID und den Namen des Museums, das die meisten Mitarbeiter hat?"},{"db_id":"world_1","query":"SELECT Continent FROM country WHERE Name  =  \"Anguilla\"","query_toks":["SELECT","Continent","FROM","country","WHERE","Name","=","``","Anguilla","''"],"query_toks_no_value":["select","continent","from","country","where","name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,2,[0,[0,9,false],null],"\"Anguilla\"",null]]},"question_toks":["Zu","welchem","Kontinent","geh\u00f6rt","Anguilla","?"],"question":"Zu welchem Kontinent geh\u00f6rt Anguilla?"},{"db_id":"wta_1","query":"SELECT min(loser_rank) FROM matches","query_toks":["SELECT","min","(","loser_rank",")","FROM","matches"],"query_toks_no_value":["select","min","(","loser_rank",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[2,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","ist","die","beste","Rangfolge","der","Verlierer","\u00fcber","alle","Partien","hinweg","?"],"question":"Welches ist die beste Rangfolge der Verlierer \u00fcber alle Partien hinweg?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.student_id",",","T1.first_name",",","T1.middle_name",",","T1.last_name",",","count","(","*",")",",","T1.student_id","FROM","Students","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.student_id","=","T2.student_id","GROUP","BY","T1.student_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","student_id",",","t1",".","first_name",",","t1",".","middle_name",",","t1",".","last_name",",","count","(","*",")",",","t1",".","student_id","from","students","as","t1","join","student_enrolment","as","t2","on","t1",".","student_id","=","t2",".","student_id","group","by","t1",".","student_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,47,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,32,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,32,false],null]],[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]],[3,[0,[0,0,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Vor-",",","Mittel-","und","Nachname","sowie","der","ID","und","die","Anzahl","der","Einschreibungen","f\u00fcr","den","Studenten",",","der","sich","am","h\u00e4ufigsten","in","einem","Studiengang","eingeschrieben","hat","?"],"question":"Wie lautet der Vor-, Mittel- und Nachname sowie der ID und die Anzahl der Einschreibungen f\u00fcr den Studenten, der sich am h\u00e4ufigsten in einem Studiengang eingeschrieben hat?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5","query_toks":["SELECT","version_number",",","template_type_code","FROM","Templates","WHERE","version_number",">","5"],"query_toks_no_value":["select","version_number",",","template_type_code","from","templates","where","version_number",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,3,[0,[0,4,false],null],5.0,null]]},"question_toks":["Wie","lautet","die","Seriennummer","und","der","Code","des","Vorlagentyps","f\u00fcr","die","Vorlage","mit","einer","Seriennummer","h\u00f6her","als","5","?"],"question":"Wie lautet die Seriennummer und der Code des Vorlagentyps f\u00fcr die Vorlage mit einer Seriennummer h\u00f6her als 5?"},{"db_id":"dog_kennels","query":"SELECT date_arrived ,  date_departed FROM Dogs","query_toks":["SELECT","date_arrived",",","date_departed","FROM","Dogs"],"query_toks_no_value":["select","date_arrived",",","date_departed","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,30,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Das","An-","und","Abreisedatum","f\u00fcr","alle","Hunde","auflisten","."],"question":"Das An- und Abreisedatum f\u00fcr alle Hunde auflisten."},{"db_id":"student_transcripts_tracking","query":"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","query_toks":["SELECT","T1.first_name",",","T1.middle_name",",","T1.last_name",",","T1.student_id","FROM","Students","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.student_id","=","T2.student_id","GROUP","BY","T1.student_id","HAVING","count","(","*",")","=","2"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","middle_name",",","t1",".","last_name",",","t1",".","student_id","from","students","as","t1","join","student_enrolment","as","t2","on","t1",".","student_id","=","t2",".","student_id","group","by","t1",".","student_id","having","count","(","*",")","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,47,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,32,false]],"having":[[false,2,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Vor-",",","Mittel-","und","Nachnamen","sowie","die","IDs","aller","Studierenden",",","die","sich","in","einem","Semester","in","2","Studieng\u00e4ngen","eingeschrieben","haben","?"],"question":"Wie lauten die Vor-, Mittel- und Nachnamen sowie die IDs aller Studierenden, die sich in einem Semester in 2 Studieng\u00e4ngen eingeschrieben haben?"},{"db_id":"pets_1","query":"SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'","query_toks":["SELECT","count","(","*",")","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid","JOIN","pets","AS","T3","ON","T2.petid","=","T3.petid","WHERE","T1.sex","=","'F","'","AND","T3.pettype","=","'dog","'"],"query_toks_no_value":["select","count","(","*",")","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid","join","pets","as","t3","on","t2",".","petid","=","t3",".","petid","where","t1",".","sex","=","value","and","t3",".","pettype","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"F\"",null],"and",[false,2,[0,[0,12,false],null],"\"dog\"",null]]},"question_toks":["Die","Anzahl","der","Hunde",",","die","von","Studentinnen","aufgezogen","werden","(","mit","Geschlecht","F",")","."],"question":"Die Anzahl der Hunde, die von Studentinnen aufgezogen werden (mit Geschlecht F)."},{"db_id":"tvshow","query":"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;","query_toks":["SELECT","Country",",","count","(","*",")","FROM","TV_Channel","GROUP","BY","Country","ORDER","BY","count","(","*",")","DESC","LIMIT","1",";"],"query_toks_no_value":["select","country",",","count","(","*",")","from","tv_channel","group","by","country","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dft","das","Land","mit","den","meisten","Fernsehkan\u00e4len","und","wie","viele","hat","es","?"],"question":"Wie hei\u00dft das Land mit den meisten Fernsehkan\u00e4len und wie viele hat es?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.DestAirport","=","T2.AirportCode","JOIN","AIRPORTS","AS","T3","ON","T1.SourceAirport","=","T3.AirportCode","WHERE","T2.City","=","``","Ashley","''","AND","T3.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airports","as","t2","on","t1",".","destairport","=","t2",".","airportcode","join","airports","as","t3","on","t1",".","sourceairport","=","t3",".","airportcode","where","t2",".","city","=","value","and","t3",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Ashley\"",null],"and",[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Wie","viele","Flugzeuge","starten","von","der","Stadt","'Aberdeen","'","und","haben","das","Ziel","Stadt","'Ashley","'","?"],"question":"Wie viele Flugzeuge starten von der Stadt 'Aberdeen' und haben das Ziel Stadt 'Ashley'?"},{"db_id":"wta_1","query":"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","query_toks":["SELECT","sum","(","tours",")",",","ranking_date","FROM","rankings","GROUP","BY","ranking_date"],"query_toks_no_value":["select","sum","(","tours",")",",","ranking_date","from","rankings","group","by","ranking_date"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,39,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,43,false],null]],[0,[0,[0,39,false],null]]]],"union":null,"where":[]},"question_toks":["Die","Gesamtanzahl","der","Ausfl\u00fcge","f\u00fcr","jedes","Ranking-Datum","ermitteln","."],"question":"Die Gesamtanzahl der Ausfl\u00fcge f\u00fcr jedes Ranking-Datum ermitteln."},{"db_id":"world_1","query":"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"","query_toks":["SELECT","sum","(","SurfaceArea",")","FROM","country","WHERE","Continent","=","``","Asia","''","OR","Continent","=","``","Europe","''"],"query_toks_no_value":["select","sum","(","surfacearea",")","from","country","where","continent","=","value","or","continent","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Asia\"",null],"or",[false,2,[0,[0,10,false],null],"\"Europe\"",null]]},"question_toks":["Die","gesamte","von","L\u00e4ndern","in","Asien","oder","Europa","bedeckte","Fl\u00e4che","angeben","."],"question":"Die gesamte von L\u00e4ndern in Asien oder Europa bedeckte Fl\u00e4che angeben."},{"db_id":"tvshow","query":"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"","query_toks":["SELECT","package_option",",","series_name","FROM","TV_Channel","WHERE","hight_definition_TV","=","``","yes","''"],"query_toks_no_value":["select","package_option",",","series_name","from","tv_channel","where","hight_definition_tv","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"yes\"",null]]},"question_toks":["Die","Paketauswahl","und","den","Seriennamen","des","Fernsehsenders","feststellen",",","der","\u00fcber","hochaufl\u00f6sendes","Fernsehen","verf\u00fcgt","."],"question":"Die Paketauswahl und den Seriennamen des Fernsehsenders feststellen, der \u00fcber hochaufl\u00f6sendes Fernsehen verf\u00fcgt."},{"db_id":"battle_death","query":"SELECT avg(injured) FROM death","query_toks":["SELECT","avg","(","injured",")","FROM","death"],"query_toks_no_value":["select","avg","(","injured",")","from","death"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,18,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","die","durchschnittliche","Anzahl","der","jeweils","verursachten","Verletzungen","?"],"question":"Wie hoch ist die durchschnittliche Anzahl der jeweils verursachten Verletzungen?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'","query_toks":["SELECT","count","(","*",")","FROM","Documents","AS","T1","JOIN","Templates","AS","T2","ON","T1.Template_ID","=","T2.Template_ID","WHERE","T2.Template_Type_Code","=","'PPT","'"],"query_toks_no_value":["select","count","(","*",")","from","documents","as","t1","join","templates","as","t2","on","t1",".","template_id","=","t2",".","template_id","where","t2",".","template_type_code","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"PPT\"",null]]},"question_toks":["Wie","viele","Dokumente","verwenden","die","Vorlage","mit","dem","Typencode","'PPT","'","?"],"question":"Wie viele Dokumente verwenden die Vorlage mit dem Typencode 'PPT'?"},{"db_id":"tvshow","query":"SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";","query_toks":["SELECT","count","(","*",")","FROM","Cartoon","WHERE","Written_by","=","``","Joseph","Kuhr","''",";"],"query_toks_no_value":["select","count","(","*",")","from","cartoon","where","written_by","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],"\"Joseph Kuhr\"",null]]},"question_toks":["Wie","viele","Karikaturen","hat","Joseph","Kuhr","verfasst","?"],"question":"Wie viele Karikaturen hat Joseph Kuhr verfasst?"},{"db_id":"orchestra","query":"SELECT Name FROM conductor WHERE Nationality != 'USA'","query_toks":["SELECT","Name","FROM","conductor","WHERE","Nationality","!","=","'USA","'"],"query_toks_no_value":["select","name","from","conductor","where","nationality","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,7,[0,[0,4,false],null],"\"USA\"",null]]},"question_toks":["``","Die","Namen","von","Dirigenten","abrufen",",","die","nicht","die","Nationalit\u00e4t","``","''","USA","''","''","haben","''","."],"question":"\"Die Namen von Dirigenten abrufen, die nicht die Nationalit\u00e4t \"\"USA\"\" haben\"."},{"db_id":"tvshow","query":"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","query_toks":["SELECT","count","(","*",")",",","Directed_by","FROM","cartoon","GROUP","BY","Directed_by"],"query_toks_no_value":["select","count","(","*",")",",","directed_by","from","cartoon","group","by","directed_by"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,21,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,21,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Karikaturen","hat","jeder","Regisseur","verfasst","?"],"question":"Wie viele Karikaturen hat jeder Regisseur verfasst?"},{"db_id":"wta_1","query":"SELECT count(*) ,  country_code FROM players GROUP BY country_code","query_toks":["SELECT","count","(","*",")",",","country_code","FROM","players","GROUP","BY","country_code"],"query_toks_no_value":["select","count","(","*",")",",","country_code","from","players","group","by","country_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Spieler","stammen","aus","jedem","Land","?"],"question":"Wie viele Spieler stammen aus jedem Land?"},{"db_id":"concert_singer","query":"SELECT avg(capacity) ,  max(capacity) FROM stadium","query_toks":["SELECT","avg","(","capacity",")",",","max","(","capacity",")","FROM","stadium"],"query_toks_no_value":["select","avg","(","capacity",")",",","max","(","capacity",")","from","stadium"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,4,false],null]],[1,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","die","durchschnittliche","und","maximale","Kapazit\u00e4t","aller","Stadien","?"],"question":"Wie hoch ist die durchschnittliche und maximale Kapazit\u00e4t aller Stadien?"},{"db_id":"voter_1","query":"SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'","query_toks":["SELECT","contestant_name","FROM","contestants","WHERE","contestant_name","!","=","'Jessie","Alloway","'"],"query_toks_no_value":["select","contestant_name","from","contestants","where","contestant_name","!","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,7,[0,[0,4,false],null],"\"Jessie Alloway\"",null]]},"question_toks":["Wie","lauten","die","Namen","der","Kandidatinnen",",","deren","Namen","nicht","``","Jessie","Alloway","''","lauten","?"],"question":"Wie lauten die Namen der Kandidatinnen, deren Namen nicht \"Jessie Alloway\" lauten?"},{"db_id":"student_transcripts_tracking","query":"SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'","query_toks":["SELECT","DISTINCT","T2.semester_id","FROM","Degree_Programs","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.degree_program_id","=","T2.degree_program_id","WHERE","degree_summary_name","=","'Master","'","INTERSECT","SELECT","DISTINCT","T2.semester_id","FROM","Degree_Programs","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.degree_program_id","=","T2.degree_program_id","WHERE","degree_summary_name","=","'Bachelor","'"],"query_toks_no_value":["select","distinct","t2",".","semester_id","from","degree_programs","as","t1","join","student_enrolment","as","t2","on","t1",".","degree_program_id","=","t2",".","degree_program_id","where","degree_summary_name","=","value","intersect","select","distinct","t2",".","semester_id","from","degree_programs","as","t1","join","student_enrolment","as","t2","on","t1",".","degree_program_id","=","t2",".","degree_program_id","where","degree_summary_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,46,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"Bachelor\"",null]]},"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,46,false],null]]]],"union":null,"where":[[false,2,[0,[0,20,false],null],"\"Master\"",null]]},"question_toks":["Finden","Sie","das","Semester",",","in","dem","sowohl","Master-","als","auch","Bachelor-Studenten","immatrikuliert","wurden","."],"question":"Finden Sie das Semester, in dem sowohl Master- als auch Bachelor-Studenten immatrikuliert wurden."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","query_toks":["SELECT","T1.template_type_code",",","count","(","*",")","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id","GROUP","BY","T1.template_type_code"],"query_toks_no_value":["select","t1",".","template_type_code",",","count","(","*",")","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id","group","by","t1",".","template_type_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Alle","Codes","der","Vorlagenarten","und","die","Anzahl","der","Dokumente",",","die","jede","Art","verwenden",",","anzeigen","."],"question":"Alle Codes der Vorlagenarten und die Anzahl der Dokumente, die jede Art verwenden, anzeigen."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Documents","query_toks":["SELECT","count","(","*",")","FROM","Documents"],"query_toks_no_value":["select","count","(","*",")","from","documents"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Die","Anzahl","der","Dokumente","z\u00e4hlen","."],"question":"Die Anzahl der Dokumente z\u00e4hlen."},{"db_id":"network_1","query":"SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4","query_toks":["SELECT","grade","FROM","Highschooler","GROUP","BY","grade","HAVING","count","(","*",")",">","=","4"],"query_toks_no_value":["select","grade","from","highschooler","group","by","grade","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[[false,5,[0,[3,0,false],null],4.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Alle","Noten",",","die","mindestens","4","Sch\u00fcler","haben",",","anzeigen","."],"question":"Alle Noten, die mindestens 4 Sch\u00fcler haben, anzeigen."},{"db_id":"dog_kennels","query":"SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )","query_toks":["SELECT","count","(","*",")","FROM","Dogs","WHERE","age","<","(","SELECT","avg","(","age",")","FROM","Dogs",")"],"query_toks_no_value":["select","count","(","*",")","from","dogs","where","age","<","(","select","avg","(","age",")","from","dogs",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,4,[0,[0,26,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,26,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Die","Anzahl","der","Hunde","eines","Alters","unter","dem","Durchschnitt","ermitteln","."],"question":"Die Anzahl der Hunde eines Alters unter dem Durchschnitt ermitteln."},{"db_id":"car_1","query":"SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );","query_toks":["SELECT","COUNT","(","*",")","FROM","(","SELECT","T1.CountryId",",","COUNT","(","*",")","FROM","COUNTRIES","AS","T1","JOIN","CAR_MAKERS","AS","T2","ON","T1.CountryId","=","T2.Country","GROUP","BY","T1.CountryId","HAVING","count","(","*",")",">","2",")",";"],"query_toks_no_value":["select","count","(","*",")","from","(","select","t1",".","countryid",",","count","(","*",")","from","countries","as","t1","join","car_makers","as","t2","on","t1",".","countryid","=","t2",".","country","group","by","t1",".","countryid","having","count","(","*",")",">","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["sql",{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,9,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,3,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]}]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["In","wie","vielen","L\u00e4ndern","existieren","mehr","als","2","Autohersteller","?"],"question":"In wie vielen L\u00e4ndern existieren mehr als 2 Autohersteller?"},{"db_id":"tvshow","query":"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"","query_toks":["SELECT","package_option",",","series_name","FROM","TV_Channel","WHERE","hight_definition_TV","=","``","yes","''"],"query_toks_no_value":["select","package_option",",","series_name","from","tv_channel","where","hight_definition_tv","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,7,false],null],"\"yes\"",null]]},"question_toks":["Was","sind","die","Paketm\u00f6glichkeiten","und","der","Name","der","Serie","f\u00fcr","den","Fernsehkanal",",","der","hochaufl\u00f6sendes","Fernsehen","unterst\u00fctzt","?"],"question":"Was sind die Paketm\u00f6glichkeiten und der Name der Serie f\u00fcr den Fernsehkanal, der hochaufl\u00f6sendes Fernsehen unterst\u00fctzt?"},{"db_id":"flight_2","query":"SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)","query_toks":["SELECT","AirportName","FROM","Airports","WHERE","AirportCode","NOT","IN","(","SELECT","SourceAirport","FROM","Flights","UNION","SELECT","DestAirport","FROM","Flights",")"],"query_toks_no_value":["select","airportname","from","airports","where","airportcode","not","in","(","select","sourceairport","from","flights","union","select","destairport","from","flights",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[true,8,[0,[0,6,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},"where":[]},null]]},"question_toks":["Welche","Flugh\u00e4fen","haben","keine","abfliegenden","oder","ankommenden","Fl\u00fcge","?"],"question":"Welche Flugh\u00e4fen haben keine abfliegenden oder ankommenden Fl\u00fcge?"},{"db_id":"tvshow","query":"SELECT max(SHARE) , min(SHARE) FROM TV_series;","query_toks":["SELECT","max","(","SHARE",")",",","min","(","SHARE",")","FROM","TV_series",";"],"query_toks_no_value":["select","max","(","share",")",",","min","(","share",")","from","tv_series"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[1,[0,[0,14,false],null]],[2,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","der","maximale","und","minimale","Sendeanteil","f\u00fcr","die","Fernsehserie","?"],"question":"Wie hoch ist der maximale und minimale Sendeanteil f\u00fcr die Fernsehserie?"},{"db_id":"world_1","query":"SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000","query_toks":["SELECT","name","FROM","city","WHERE","Population","BETWEEN","160000","AND","900000"],"query_toks_no_value":["select","name","from","city","where","population","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,1,[0,[0,5,false],null],160000.0,900000.0]]},"question_toks":["Welches","sind","die","St\u00e4dte",",","deren","Einwohnerzahl","zwischen","160000","und","900000","liegt","?"],"question":"Welches sind die St\u00e4dte, deren Einwohnerzahl zwischen 160000 und 900000 liegt?"},{"db_id":"student_transcripts_tracking","query":"SELECT section_name ,  section_description FROM Sections","query_toks":["SELECT","section_name",",","section_description","FROM","Sections"],"query_toks_no_value":["select","section_name",",","section_description","from","sections"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]],[0,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","und","Beschreibungen","f\u00fcr","alle","Abschnitte","?"],"question":"Wie lauten die Namen und Beschreibungen f\u00fcr alle Abschnitte?"},{"db_id":"dog_kennels","query":"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","query_toks":["SELECT","T1.professional_id",",","T1.cell_number","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","ON","T1.professional_id","=","T2.professional_id","GROUP","BY","T1.professional_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t1",".","professional_id",",","t1",".","cell_number","from","professionals","as","t1","join","treatments","as","t2","on","t1",".","professional_id","=","t2",".","professional_id","group","by","t1",".","professional_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,33,false],null],[0,46,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,33,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,33,false],null]],[0,[0,[0,43,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Fachkr\u00e4fte","haben","mindestens","zwei","Arten","von","Behandlungen","durchgef\u00fchrt","?","F\u00fchren","Sie","den","Berufsausweis","und","das","Mobiltelefon","auf","."],"question":"Welche Fachkr\u00e4fte haben mindestens zwei Arten von Behandlungen durchgef\u00fchrt? F\u00fchren Sie den Berufsausweis und das Mobiltelefon auf."},{"db_id":"network_1","query":"SELECT name ,  grade FROM Highschooler","query_toks":["SELECT","name",",","grade","FROM","Highschooler"],"query_toks_no_value":["select","name",",","grade","from","highschooler"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Namen","und","Zensuren","jedes","High-School-Sch\u00fclers","?"],"question":"Welches sind die Namen und Zensuren jedes High-School-Sch\u00fclers?"},{"db_id":"car_1","query":"SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';","query_toks":["SELECT","T1.Accelerate","FROM","CARS_DATA","AS","T1","JOIN","CAR_NAMES","AS","T2","ON","T1.Id","=","T2.MakeId","WHERE","T2.Make","=","'amc","hornet","sportabout","(","sw",")","'",";"],"query_toks_no_value":["select","t1",".","accelerate","from","cars_data","as","t1","join","car_names","as","t2","on","t1",".","id","=","t2",".","makeid","where","t2",".","make","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,16,false],null],[0,13,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,22,false],null]]]],"union":null,"where":[[false,2,[0,[0,15,false],null],"\"amc hornet sportabout (sw)\"",null]]},"question_toks":["Wie","hoch","ist","die","Beschleunigung","des","Autos","der","Marke","amc","hornet","sportabout","(","sw",")","?"],"question":"Wie hoch ist die Beschleunigung des Autos der Marke amc hornet sportabout (sw)?"},{"db_id":"voter_1","query":"SELECT count(*) FROM area_code_state","query_toks":["SELECT","count","(","*",")","FROM","area_code_state"],"query_toks_no_value":["select","count","(","*",")","from","area_code_state"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Staaten","gibt","es","?"],"question":"Wie viele Staaten gibt es?"},{"db_id":"car_1","query":"SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;","query_toks":["SELECT","DISTINCT","T2.Model","FROM","CAR_NAMES","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Model","=","T2.Model","JOIN","CAR_MAKERS","AS","T3","ON","T2.Maker","=","T3.Id","JOIN","CARS_DATA","AS","T4","ON","T1.MakeId","=","T4.Id","WHERE","T3.FullName","=","'General","Motors","'","OR","T4.weight",">","3500",";"],"query_toks_no_value":["select","distinct","t2",".","model","from","car_names","as","t1","join","model_list","as","t2","on","t1",".","model","=","t2",".","model","join","car_makers","as","t3","on","t2",".","maker","=","t3",".","id","join","cars_data","as","t4","on","t1",".","makeid","=","t4",".","id","where","t3",".","fullname","=","value","or","t4",".","weight",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,14,false],null],[0,12,false],null]],"table_units":[["table_unit",4],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,8,false],null],"\"General Motors\"",null],"or",[false,3,[0,[0,21,false],null],3500.0,null]]},"question_toks":["Welches","sind","die","verschiedenen","Modelle",",","die","entweder","vom","Autohersteller","General","Motors","hergestellt","wurden","oder","mehr","als","3500","St\u00fcck","wogen","?"],"question":"Welches sind die verschiedenen Modelle, die entweder vom Autohersteller General Motors hergestellt wurden oder mehr als 3500 St\u00fcck wogen?"},{"db_id":"dog_kennels","query":"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","query_toks":["SELECT","T1.owner_id",",","T1.zip_code","FROM","Owners","AS","T1","JOIN","Dogs","AS","T2","ON","T1.owner_id","=","T2.owner_id","JOIN","Treatments","AS","T3","ON","T2.dog_id","=","T3.dog_id","GROUP","BY","T1.owner_id","ORDER","BY","sum","(","T3.cost_of_treatment",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","owner_id",",","t1",".","zip_code","from","owners","as","t1","join","dogs","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","join","treatments","as","t3","on","t2",".","dog_id","=","t3",".","dog_id","group","by","t1",".","owner_id","order","by","sum","(","t3",".","cost_of_treatment",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,21,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[[0,10,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[4,49,false],null]]],"select":[false,[[0,[0,[0,10,false],null]],[0,[0,[0,16,false],null]]]],"union":null,"where":[]},"question_toks":["Die","Besitzer","ID","und","Postleitzahl","des","Inhabers","finden",",","der","insgesamt","das","meiste","Geld","f\u00fcr","seine","Hunde","ausgegeben","hat","."],"question":"Die Besitzer ID und Postleitzahl des Inhabers finden, der insgesamt das meiste Geld f\u00fcr seine Hunde ausgegeben hat."},{"db_id":"student_transcripts_tracking","query":"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.address_id",",","T1.line_1",",","T1.line_2","FROM","Addresses","AS","T1","JOIN","Students","AS","T2","ON","T1.address_id","=","T2.current_address_id","GROUP","BY","T1.address_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","address_id",",","t1",".","line_1",",","t1",".","line_2","from","addresses","as","t1","join","students","as","t2","on","t1",".","address_id","=","t2",".","current_address_id","group","by","t1",".","address_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,33,false],null]],"table_units":[["table_unit",0],["table_unit",6]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Adresse","weist","derzeit","die","meisten","Studierenden","auf","?","F\u00fchren","Sie","die","Adress-ID","und","alle","Leitungen","auf","."],"question":"Welche Adresse weist derzeit die meisten Studierenden auf? F\u00fchren Sie die Adress-ID und alle Leitungen auf."},{"db_id":"car_1","query":"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","query_toks":["SELECT","T1.FullName",",","T1.Id",",","count","(","*",")","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","GROUP","BY","T1.Id",";"],"query_toks_no_value":["select","t1",".","fullname",",","t1",".","id",",","count","(","*",")","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","group","by","t1",".","id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,6,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","vollst\u00e4ndige","Name","jedes","Autoherstellers",",","zusammen","mit","seiner","ID","und","wie","viele","Modelle","er","herstellt","?"],"question":"Wie lautet der vollst\u00e4ndige Name jedes Autoherstellers, zusammen mit seiner ID und wie viele Modelle er herstellt?"},{"db_id":"wta_1","query":"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","query_toks":["SELECT","avg","(","ranking",")",",","T1.first_name","FROM","players","AS","T1","JOIN","rankings","AS","T2","ON","T1.player_id","=","T2.player_id","GROUP","BY","T1.first_name"],"query_toks_no_value":["select","avg","(","ranking",")",",","t1",".","first_name","from","players","as","t1","join","rankings","as","t2","on","t1",".","player_id","=","t2",".","player_id","group","by","t1",".","first_name"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,41,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[[0,2,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,40,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","durchschnittliche","Rangliste","f\u00fcr","jeden","Spieler","und","seinen","Vornamen","."],"question":"Finde die durchschnittliche Rangliste f\u00fcr jeden Spieler und seinen Vornamen."},{"db_id":"flight_2","query":"SELECT count(*) FROM AIRLINES","query_toks":["SELECT","count","(","*",")","FROM","AIRLINES"],"query_toks_no_value":["select","count","(","*",")","from","airlines"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hoch","ist","die","Gesamtanzahl","der","Fluggesellschaften","?"],"question":"Wie hoch ist die Gesamtanzahl der Fluggesellschaften?"},{"db_id":"tvshow","query":"SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2","query_toks":["SELECT","id","FROM","tv_channel","GROUP","BY","country","HAVING","count","(","*",")",">","2"],"query_toks_no_value":["select","id","from","tv_channel","group","by","country","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","IDs","aller","Fernsehsender",",","die","mehr","als","2","Fernsehkan\u00e4le","empfangen","?"],"question":"Wie lauten die IDs aller Fernsehsender, die mehr als 2 Fernsehkan\u00e4le empfangen?"},{"db_id":"wta_1","query":"SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","YEAR","FROM","matches","GROUP","BY","YEAR","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","year","from","matches","group","by","year","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,38,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,38,false],null]]]],"union":null,"where":[]},"question_toks":["Das","Jahr","bestimmen",",","in","dem","die","meisten","Spiele","stattgefunden","haben","."],"question":"Das Jahr bestimmen, in dem die meisten Spiele stattgefunden haben."},{"db_id":"orchestra","query":"SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)","query_toks":["SELECT","Orchestra","FROM","orchestra","WHERE","Orchestra_ID","NOT","IN","(","SELECT","Orchestra_ID","FROM","performance",")"],"query_toks_no_value":["select","orchestra","from","orchestra","where","orchestra_id","not","in","(","select","orchestra_id","from","performance",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[true,8,[0,[0,6,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,13,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Die","die","Namen","von","Orchestern","auflisten",",","die","noch","nicht","auftraten","."],"question":"Die die Namen von Orchestern auflisten, die noch nicht auftraten."},{"db_id":"flight_2","query":"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"","query_toks":["SELECT","T1.FlightNo","FROM","FLIGHTS","AS","T1","JOIN","AIRPORTS","AS","T2","ON","T1.SourceAirport","=","T2.AirportCode","WHERE","T2.City","=","``","Aberdeen","''"],"query_toks_no_value":["select","t1",".","flightno","from","flights","as","t1","join","airports","as","t2","on","t1",".","sourceairport","=","t2",".","airportcode","where","t2",".","city","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,12,false],null],[0,6,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,5,false],null],"\"Aberdeen\"",null]]},"question_toks":["Gib","die","Flugnummern","der","Fl\u00fcge","an",",","die","von","Aberdeen","abgehen","."],"question":"Gib die Flugnummern der Fl\u00fcge an, die von Aberdeen abgehen."},{"db_id":"singer","query":"SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Citizenship","FROM","singer","GROUP","BY","Citizenship","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","citizenship","from","singer","group","by","citizenship","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Die","h\u00e4ufigste","Staatsangeh\u00f6rigkeit","der","S\u00e4ngerinnen","und","S\u00e4nger","bitte","angeben","."],"question":"Die h\u00e4ufigste Staatsangeh\u00f6rigkeit der S\u00e4ngerinnen und S\u00e4nger bitte angeben."},{"db_id":"course_teach","query":"SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Hometown","FROM","teacher","GROUP","BY","Hometown","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","hometown","from","teacher","group","by","hometown","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,7,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","h\u00e4ufigsten","Heimatst\u00e4dte","bei","Lehrern","?"],"question":"Welches sind die h\u00e4ufigsten Heimatst\u00e4dte bei Lehrern?"},{"db_id":"tvshow","query":"SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";","query_toks":["SELECT","Content","FROM","TV_Channel","WHERE","series_name","=","``","Sky","Radio","''",";"],"query_toks_no_value":["select","content","from","tv_channel","where","series_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Sky Radio\"",null]]},"question_toks":["Welchen","Inhalt","hat","die","Serie","Sky","Radio","?"],"question":"Welchen Inhalt hat die Serie Sky Radio?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS","AS","T1","JOIN","AIRLINES","AS","T2","ON","T1.Airline","=","T2.uid","WHERE","T2.Airline","=","``","JetBlue","Airways","''"],"query_toks_no_value":["select","count","(","*",")","from","flights","as","t1","join","airlines","as","t2","on","t1",".","airline","=","t2",".","uid","where","t2",".","airline","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,10,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"JetBlue Airways\"",null]]},"question_toks":["Gib","die","Zahl","der","Fl\u00fcge","von","Jetblue","Airways","an","."],"question":"Gib die Zahl der Fl\u00fcge von Jetblue Airways an."},{"db_id":"dog_kennels","query":"SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1","query_toks":["SELECT","cost_of_treatment","FROM","Treatments","ORDER","BY","date_of_treatment","DESC","LIMIT","1"],"query_toks_no_value":["select","cost_of_treatment","from","treatments","order","by","date_of_treatment","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,48,false],null]]],"select":[false,[[0,[0,[0,49,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","mir","die","Kosten","der","zuletzt","durchgef\u00fchrten","Behandlung","."],"question":"Zeige mir die Kosten der zuletzt durchgef\u00fchrten Behandlung."},{"db_id":"tvshow","query":"SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')","query_toks":["SELECT","package_option","FROM","TV_Channel","WHERE","id","NOT","IN","(","SELECT","channel","FROM","cartoon","WHERE","directed_by","=","'Ben","Jones","'",")"],"query_toks_no_value":["select","package_option","from","tv_channel","where","id","not","in","(","select","channel","from","cartoon","where","directed_by","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[true,8,[0,[0,1,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null]]},null]]},"question_toks":["Was","sind","die","Paketm\u00f6glichkeiten","aller","Fernsehsender",",","die","keine","Zeichentrickfilme","unter","der","Regie","von","Ben","Jones","spielen","?"],"question":"Was sind die Paketm\u00f6glichkeiten aller Fernsehsender, die keine Zeichentrickfilme unter der Regie von Ben Jones spielen?"},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","CVO","''","EXCEPT","SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","APG","''"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value","except","select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"APG\"",null]]},"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"CVO\"",null]]},"question_toks":["Welche","Fluggesellschaften","haben","Abfl\u00fcge","von","CVO",",","aber","nicht","von","APG-Flugh\u00e4fen","?"],"question":"Welche Fluggesellschaften haben Abfl\u00fcge von CVO, aber nicht von APG-Flugh\u00e4fen?"},{"db_id":"dog_kennels","query":"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","query_toks":["SELECT","DISTINCT","T1.first_name",",","T1.last_name","FROM","Professionals","AS","T1","JOIN","Treatments","AS","T2","WHERE","cost_of_treatment","<","(","SELECT","avg","(","cost_of_treatment",")","FROM","Treatments",")"],"query_toks_no_value":["select","distinct","t1",".","first_name",",","t1",".","last_name","from","professionals","as","t1","join","treatments","as","t2","where","cost_of_treatment","<","(","select","avg","(","cost_of_treatment",")","from","treatments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,35,false],null]],[0,[0,[0,40,false],null]]]],"union":null,"where":[[false,4,[0,[0,49,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,49,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Wie","lauten","Vor-","und","Nachname","der","Fachkr\u00e4fte",",","die","eine","Behandlung","mit","unterdurchschnittlichen","Kosten","durchgef\u00fchrt","haben","?"],"question":"Wie lauten Vor- und Nachname der Fachkr\u00e4fte, die eine Behandlung mit unterdurchschnittlichen Kosten durchgef\u00fchrt haben?"},{"db_id":"dog_kennels","query":"SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )","query_toks":["SELECT","count","(","*",")","FROM","Professionals","WHERE","professional_id","NOT","IN","(","SELECT","professional_id","FROM","Treatments",")"],"query_toks_no_value":["select","count","(","*",")","from","professionals","where","professional_id","not","in","(","select","professional_id","from","treatments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,33,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,46,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finde","die","Zahl","der","Professionellen",",","die","keine","Hunde","behandelt","haben","."],"question":"Finde die Zahl der Professionellen, die keine Hunde behandelt haben."},{"db_id":"flight_2","query":"SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.City","FROM","AIRPORTS","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.AirportCode","=","T2.DestAirport","GROUP","BY","T1.City","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","city","from","airports","as","t1","join","flights","as","t2","on","t1",".","airportcode","=","t2",".","destairport","group","by","t1",".","city","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,13,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Stadt","hat","den","am","meisten","frequentierten","Zielflughafen","?"],"question":"Welche Stadt hat den am meisten frequentierten Zielflughafen?"},{"db_id":"concert_singer","query":"SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id","query_toks":["SELECT","T2.concert_name",",","T2.theme",",","count","(","*",")","FROM","singer_in_concert","AS","T1","JOIN","concert","AS","T2","ON","T1.concert_id","=","T2.concert_id","GROUP","BY","T2.concert_id"],"query_toks_no_value":["select","t2",".","concert_name",",","t2",".","theme",",","count","(","*",")","from","singer_in_concert","as","t1","join","concert","as","t2","on","t1",".","concert_id","=","t2",".","concert_id","group","by","t2",".","concert_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,20,false],null],[0,15,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]],[0,[0,[0,17,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","Name","und","Thema","von","allen","Konzerten","und","die","Anzahl","der","S\u00e4nger","bei","jedem","Konzert","."],"question":"Zeige Name und Thema von allen Konzerten und die Anzahl der S\u00e4nger bei jedem Konzert."},{"db_id":"concert_singer","query":"SELECT DISTINCT country FROM singer WHERE age  >  20","query_toks":["SELECT","DISTINCT","country","FROM","singer","WHERE","age",">","20"],"query_toks_no_value":["select","distinct","country","from","singer","where","age",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],20.0,null]]},"question_toks":["Welches","sind","die","eigenst\u00e4ndigen","L\u00e4nder",",","aus","denen","S\u00e4nger","\u00fcber","zwanzig","Jahre","kommen","?"],"question":"Welches sind die eigenst\u00e4ndigen L\u00e4nder, aus denen S\u00e4nger \u00fcber zwanzig Jahre kommen?"},{"db_id":"wta_1","query":"SELECT count(*) FROM players","query_toks":["SELECT","count","(","*",")","FROM","players"],"query_toks_no_value":["select","count","(","*",")","from","players"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Die","Gesamtanzahl","der","Spieler","feststellen","."],"question":"Die Gesamtanzahl der Spieler feststellen."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(DISTINCT template_id) FROM Documents","query_toks":["SELECT","count","(","DISTINCT","template_id",")","FROM","Documents"],"query_toks_no_value":["select","count","(","distinct","template_id",")","from","documents"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,10,true],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hle","die","unterschiedlichen","Vorlagen",",","die","f\u00fcr","Dokumente","verwendet","werden","."],"question":"Z\u00e4hle die unterschiedlichen Vorlagen, die f\u00fcr Dokumente verwendet werden."},{"db_id":"world_1","query":"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")","query_toks":["SELECT","COUNT","(","*",")","FROM","(","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","INTERSECT","SELECT","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","WHERE","T2.Language","=","``","Dutch","''",")"],"query_toks_no_value":["select","count","(","*",")","from","(","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value","intersect","select","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","where","t2",".","language","=","value",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["sql",{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Dutch\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]}]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Staaten","verwenden","Englisch","und","Niederl\u00e4ndisch","?"],"question":"Wie viele Staaten verwenden Englisch und Niederl\u00e4ndisch?"},{"db_id":"car_1","query":"SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';","query_toks":["SELECT","DISTINCT","T1.Maker","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","JOIN","CAR_NAMES","AS","T3","ON","T2.model","=","T3.model","JOIN","CARS_DATA","AS","T4","ON","T3.MakeId","=","T4.id","WHERE","T4.year","=","'1970","'",";"],"query_toks_no_value":["select","distinct","t1",".","maker","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","join","car_names","as","t3","on","t2",".","model","=","t3",".","model","join","cars_data","as","t4","on","t3",".","makeid","=","t4",".","id","where","t4",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],"\"1970\"",null]]},"question_toks":["Suche","die","Namen","der","Hersteller",",","die","im","Jahre","1970","Autos","produzierten","."],"question":"Suche die Namen der Hersteller, die im Jahre 1970 Autos produzierten."},{"db_id":"orchestra","query":"SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1","query_toks":["SELECT","Name","FROM","conductor","ORDER","BY","Year_of_Work","DESC","LIMIT","1"],"query_toks_no_value":["select","name","from","conductor","order","by","year_of_work","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["F\u00fchre","den","Namen","des","Dirigenten","mit","den","meisten","Arbeitsjahren","auf","."],"question":"F\u00fchre den Namen des Dirigenten mit den meisten Arbeitsjahren auf."},{"db_id":"dog_kennels","query":"SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )","query_toks":["SELECT","avg","(","age",")","FROM","Dogs","WHERE","dog_id","IN","(","SELECT","dog_id","FROM","Treatments",")"],"query_toks_no_value":["select","avg","(","age",")","from","dogs","where","dog_id","in","(","select","dog_id","from","treatments",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,26,false],null]]]],"union":null,"where":[[false,8,[0,[0,20,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,45,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Welches","ist","das","Durchschnittsalter","der","Hunde",",","die","irgendeiner","Behandlung","unterzogen","wurden","?"],"question":"Welches ist das Durchschnittsalter der Hunde, die irgendeiner Behandlung unterzogen wurden? "},{"db_id":"poker_player","query":"SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC","query_toks":["SELECT","Name",",","Birth_Date","FROM","people","ORDER","BY","Name","ASC"],"query_toks_no_value":["select","name",",","birth_date","from","people","order","by","name","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","und","Geburtsdaten","von","Personen",",","geordnet","nach","ihren","Namen","in","alphabetischer","Reihenfolge","?"],"question":"Wie lauten die Namen und Geburtsdaten von Personen, geordnet nach ihren Namen in alphabetischer Reihenfolge?"},{"db_id":"world_1","query":"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"","query_toks":["SELECT","CountryCode","FROM","countrylanguage","EXCEPT","SELECT","CountryCode","FROM","countrylanguage","WHERE","LANGUAGE","=","``","English","''"],"query_toks_no_value":["select","countrycode","from","countrylanguage","except","select","countrycode","from","countrylanguage","where","language","=","value"],"sql":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,23,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","die","L\u00e4ndercodes","wieder","von","L\u00e4ndern",",","in","denen","kein","Englisch","gesprochen","wird","."],"question":"Gib die L\u00e4ndercodes wieder von L\u00e4ndern, in denen kein Englisch gesprochen wird."},{"db_id":"pets_1","query":"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","query_toks":["SELECT","DISTINCT","T1.fname",",","T1.age","FROM","student","AS","T1","JOIN","has_pet","AS","T2","ON","T1.stuid","=","T2.stuid"],"query_toks_no_value":["select","distinct","t1",".","fname",",","t1",".","age","from","student","as","t1","join","has_pet","as","t2","on","t1",".","stuid","=","t2",".","stuid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,9,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","verschiedenen","Vornamen","und","das","Alter","der","Studenten",",","die","Haustiere","haben","?"],"question":"Wie lauten die verschiedenen Vornamen und das Alter der Studenten, die Haustiere haben?"},{"db_id":"dog_kennels","query":"SELECT date_arrived ,  date_departed FROM Dogs","query_toks":["SELECT","date_arrived",",","date_departed","FROM","Dogs"],"query_toks_no_value":["select","date_arrived",",","date_departed","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,30,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","Ankunftsdaten","und","Abgangsdaten","aller","Hunde","?"],"question":"Was sind die Ankunftsdaten und Abgangsdaten aller Hunde?"},{"db_id":"course_teach","query":"SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1","query_toks":["SELECT","Hometown","FROM","teacher","ORDER","BY","Age","ASC","LIMIT","1"],"query_toks_no_value":["select","hometown","from","teacher","order","by","age","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,6,false],null]]],"select":[false,[[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Woher","kommt","der","j\u00fcngste","Lehrer","?"],"question":"Woher kommt der j\u00fcngste Lehrer? "},{"db_id":"wta_1","query":"SELECT avg(loser_age) ,  avg(winner_age) FROM matches","query_toks":["SELECT","avg","(","loser_age",")",",","avg","(","winner_age",")","FROM","matches"],"query_toks_no_value":["select","avg","(","loser_age",")",",","avg","(","winner_age",")","from","matches"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,9,false],null]],[5,[0,[0,28,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Durchschnittsalter","der","Verlierer","und","Gewinner","\u00fcber","alle","Partien","?"],"question":"Welches sind die Durchschnittsalter der Verlierer und Gewinner \u00fcber alle Partien?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'","query_toks":["SELECT","Other_Details","FROM","Paragraphs","WHERE","paragraph_text","=","'Korea","'"],"query_toks_no_value":["select","other_details","from","paragraphs","where","paragraph_text","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,17,false],null]]]],"union":null,"where":[[false,2,[0,[0,16,false],null],"\"Korea\"",null]]},"question_toks":["Zeige","die","Absatzdetails","des","Paragraphen","mit","dem","Text","``","Korea","''","."],"question":"Zeige die Absatzdetails des Paragraphen mit dem Text \"Korea\"."},{"db_id":"voter_1","query":"SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC","query_toks":["SELECT","contestant_number",",","contestant_name","FROM","contestants","ORDER","BY","contestant_name","DESC"],"query_toks_no_value":["select","contestant_number",",","contestant_name","from","contestants","order","by","contestant_name","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,4,false],null]]],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Die","Nummern","und","Namen","der","Teilnehmer","auflisten",",","absteigend","nach","Teilnehmernamen","geordnet","."],"question":"Die Nummern und Namen der Teilnehmer auflisten, absteigend nach Teilnehmernamen geordnet."},{"db_id":"tvshow","query":"SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'","query_toks":["SELECT","country","FROM","TV_Channel","EXCEPT","SELECT","T1.country","FROM","TV_Channel","AS","T1","JOIN","cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T2.written_by","=","'Todd","Casey","'"],"query_toks_no_value":["select","country","from","tv_channel","except","select","t1",".","country","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t2",".","written_by","=","value"],"sql":{"except":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,22,false],null],"\"Todd Casey\"",null]]},"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Fernsehsender","in","welchen","L\u00e4ndern","spielen","keinen","von","Todd","Casey","verfassten","Zeichentrickfilm","?"],"question":"Welche Fernsehsender in welchen L\u00e4ndern spielen keinen von Todd Casey verfassten Zeichentrickfilm?"},{"db_id":"car_1","query":"SELECT count(*) FROM CONTINENTS;","query_toks":["SELECT","count","(","*",")","FROM","CONTINENTS",";"],"query_toks_no_value":["select","count","(","*",")","from","continents"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Kontinente","gibt","es","?"],"question":"Wie viele Kontinente gibt es?"},{"db_id":"tvshow","query":"SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";","query_toks":["SELECT","Title","FROM","Cartoon","WHERE","Directed_by","=","``","Ben","Jones","''",";"],"query_toks_no_value":["select","title","from","cartoon","where","directed_by","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null]]},"question_toks":["``","Alle","Karikaturen","unter","der","Regie","von","Ben","Jones","auflisten",".","''"],"question":"\"Alle Karikaturen unter der Regie von Ben Jones auflisten.\""},{"db_id":"car_1","query":"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;","query_toks":["SELECT","T1.FullName",",","T1.Id","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","GROUP","BY","T1.Id","HAVING","count","(","*",")",">","3",";"],"query_toks_no_value":["select","t1",".","fullname",",","t1",".","id","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","group","by","t1",".","id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,6,false]],"having":[[false,3,[0,[3,0,false],null],3.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,8,false],null]],[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","und","Bezeichnungen","aller","Hersteller","mit","mehr","als","3","Modellen","?"],"question":"Wie lauten die Namen und Bezeichnungen aller Hersteller mit mehr als 3 Modellen?"},{"db_id":"battle_death","query":"SELECT name ,  tonnage FROM ship ORDER BY name DESC","query_toks":["SELECT","name",",","tonnage","FROM","ship","ORDER","BY","name","DESC"],"query_toks_no_value":["select","name",",","tonnage","from","ship","order","by","name","desc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":["desc",[[0,[0,9,false],null]]],"select":[false,[[0,[0,[0,9,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","die","Namen","und","die","Tonnage","in","absteigender","alphabetischer","Ordnung","der","Namen","auf","."],"question":"Liste die Namen und die Tonnage in absteigender alphabetischer Ordnung der Namen auf."},{"db_id":"car_1","query":"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;","query_toks":["SELECT","T1.Model","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","WHERE","T2.Cylinders","=","4","ORDER","BY","T2.horsepower","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","model","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","where","t2",".","cylinders","=","value","order","by","t2",".","horsepower","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,2,[0,[0,18,false],null],4.0,null]]},"question_toks":["Welches","Modell","hat","bei","allen","4-Zylinder-Autos","die","meisten","PS","?"],"question":"Welches Modell hat bei allen 4-Zylinder-Autos die meisten PS?"},{"db_id":"car_1","query":"SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';","query_toks":["SELECT","DISTINCT","T1.Maker","FROM","CAR_MAKERS","AS","T1","JOIN","MODEL_LIST","AS","T2","ON","T1.Id","=","T2.Maker","JOIN","CAR_NAMES","AS","T3","ON","T2.model","=","T3.model","JOIN","CARS_DATA","AS","T4","ON","T3.MakeId","=","T4.id","WHERE","T4.year","=","'1970","'",";"],"query_toks_no_value":["select","distinct","t1",".","maker","from","car_makers","as","t1","join","model_list","as","t2","on","t1",".","id","=","t2",".","maker","join","car_names","as","t3","on","t2",".","model","=","t3",".","model","join","cars_data","as","t4","on","t3",".","makeid","=","t4",".","id","where","t4",".","year","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,11,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,7,false],null]]]],"union":null,"where":[[false,2,[0,[0,23,false],null],"\"1970\"",null]]},"question_toks":["Welches","sind","die","Namen","der","verschiedenen","Autohersteller",",","die","1970","ein","Auto","produzierten","?"],"question":"Welches sind die Namen der verschiedenen Autohersteller, die 1970 ein Auto produzierten?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT count(*) FROM Documents","query_toks":["SELECT","count","(","*",")","FROM","Documents"],"query_toks_no_value":["select","count","(","*",")","from","documents"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Dokumente","verf\u00fcgen","wir","?"],"question":"Wie viele Dokumente verf\u00fcgen wir?"},{"db_id":"orchestra","query":"SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC","query_toks":["SELECT","Major_Record_Format","FROM","orchestra","GROUP","BY","Major_Record_Format","ORDER","BY","COUNT","(","*",")","ASC"],"query_toks_no_value":["select","major_record_format","from","orchestra","group","by","major_record_format","order","by","count","(","*",")","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,11,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","bitte","die","Aufnahmeformate","von","Orchestern","aufsteigender","Ordnung","der","Anzahl","."],"question":"Zeige bitte die Aufnahmeformate von Orchestern aufsteigender Ordnung der Anzahl."},{"db_id":"dog_kennels","query":"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.owner_id",",","T2.first_name",",","T2.last_name","FROM","Dogs","AS","T1","JOIN","Owners","AS","T2","ON","T1.owner_id","=","T2.owner_id","GROUP","BY","T1.owner_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","owner_id",",","t2",".","first_name",",","t2",".","last_name","from","dogs","as","t1","join","owners","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","group","by","t1",".","owner_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,21,false],null],[0,10,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[[0,21,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,21,false],null]],[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Welcher","Besitzer","hat","die","meisten","Hunde","?","Liste","die","Besitzer-ID",",","Vorname","und","Nachname","auf","."],"question":"Welcher Besitzer hat die meisten Hunde? Liste die Besitzer-ID, Vorname und Nachname auf."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1","query_toks":["SELECT","template_id","FROM","Documents","GROUP","BY","template_id","HAVING","count","(","*",")",">","1"],"query_toks_no_value":["select","template_id","from","documents","group","by","template_id","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,10,false]],"having":[[false,3,[0,[3,0,false],null],1.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,10,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","Vorlagen-IDs","aller","Vorlagen",",","die","in","mehr","als","einem","einzigen","Dokument","verwendet","werden","?"],"question":"Welches sind die Vorlagen-IDs aller Vorlagen, die in mehr als einem einzigen Dokument verwendet werden?"},{"db_id":"world_1","query":"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1","query_toks":["SELECT","T1.Name",",","T1.Population","FROM","city","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.CountryCode","=","T2.CountryCode","WHERE","T2.Language","=","``","English","''","ORDER","BY","T1.Population","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","name",",","t1",".","population","from","city","as","t1","join","countrylanguage","as","t2","on","t1",".","countrycode","=","t2",".","countrycode","where","t2",".","language","=","value","order","by","t1",".","population","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,23,false],null]],"table_units":[["table_unit",0],["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,5,false],null]]],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"English\"",null]]},"question_toks":["Finden","Sie","die","Stadt","mit","der","gr\u00f6\u00dften","Bev\u00f6lkerung",",","die","Englisch","verwendet","."],"question":"Finden Sie die Stadt mit der gr\u00f6\u00dften Bev\u00f6lkerung, die Englisch verwendet. "},{"db_id":"network_1","query":"SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4","query_toks":["SELECT","grade","FROM","Highschooler","GROUP","BY","grade","HAVING","count","(","*",")",">","=","4"],"query_toks_no_value":["select","grade","from","highschooler","group","by","grade","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,3,false]],"having":[[false,5,[0,[3,0,false],null],4.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Welche","Schuljahre","umfassen","4","oder","mehr","Gymnasiasten","?"],"question":"Welche Schuljahre umfassen 4 oder mehr Gymnasiasten?"},{"db_id":"poker_player","query":"SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000","query_toks":["SELECT","T1.Name","FROM","people","AS","T1","JOIN","poker_player","AS","T2","ON","T1.People_ID","=","T2.People_ID","WHERE","T2.Earnings",">","300000"],"query_toks_no_value":["select","t1",".","name","from","people","as","t1","join","poker_player","as","t2","on","t1",".","people_id","=","t2",".","people_id","where","t2",".","earnings",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,7,false],null],[0,2,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,3,[0,[0,6,false],null],300000.0,null]]},"question_toks":["Wie","lauten","die","Namen","von","Pokerspielern",",","deren","Verdienst","h\u00f6her","als","300000","ist","?"],"question":"Wie lauten die Namen von Pokerspielern, deren Verdienst h\u00f6her als 300000 ist? "},{"db_id":"car_1","query":"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;","query_toks":["SELECT","T1.Model","FROM","CAR_NAMES","AS","T1","JOIN","CARS_DATA","AS","T2","ON","T1.MakeId","=","T2.Id","ORDER","BY","T2.horsepower","ASC","LIMIT","1",";"],"query_toks_no_value":["select","t1",".","model","from","car_names","as","t1","join","cars_data","as","t2","on","t1",".","makeid","=","t2",".","id","order","by","t2",".","horsepower","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,13,false],null],[0,16,false],null]],"table_units":[["table_unit",4],["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,20,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","Modell","des","Autos","verf\u00fcgt","\u00fcber","die","Mindest-PS","?"],"question":"Welches Modell des Autos verf\u00fcgt \u00fcber die Mindest-PS?"},{"db_id":"orchestra","query":"SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC","query_toks":["SELECT","Major_Record_Format","FROM","orchestra","GROUP","BY","Major_Record_Format","ORDER","BY","COUNT","(","*",")","ASC"],"query_toks_no_value":["select","major_record_format","from","orchestra","group","by","major_record_format","order","by","count","(","*",")","asc"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,11,false]],"having":[],"intersect":null,"limit":null,"orderBy":["asc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","die","wichtigsten","Plattenformate","von","Orchestern",",","sortiert","nach","ihrer","H\u00e4ufigkeit","?"],"question":"Welches sind die wichtigsten Plattenformate von Orchestern, sortiert nach ihrer H\u00e4ufigkeit? "},{"db_id":"world_1","query":"SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"","query_toks":["SELECT","sum","(","Population",")","FROM","city","WHERE","District","=","``","Gelderland","''"],"query_toks_no_value":["select","sum","(","population",")","from","city","where","district","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,5,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"Gelderland\"",null]]},"question_toks":["Wie","hoch","ist","die","Gesamtbev\u00f6lkerung","des","Bezirks","Gelderland","?"],"question":"Wie hoch ist die Gesamtbev\u00f6lkerung des Bezirks Gelderland?"},{"db_id":"student_transcripts_tracking","query":"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","query_toks":["SELECT","T2.transcript_date",",","T1.transcript_id","FROM","Transcript_Contents","AS","T1","JOIN","Transcripts","AS","T2","ON","T1.transcript_id","=","T2.transcript_id","GROUP","BY","T1.transcript_id","HAVING","count","(","*",")",">","=","2"],"query_toks_no_value":["select","t2",".","transcript_date",",","t1",".","transcript_id","from","transcript_contents","as","t1","join","transcripts","as","t2","on","t1",".","transcript_id","=","t2",".","transcript_id","group","by","t1",".","transcript_id","having","count","(","*",")",">","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,56,false],null],[0,52,false],null]],"table_units":[["table_unit",10],["table_unit",9]]},"groupBy":[[0,56,false]],"having":[[false,5,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,53,false],null]],[0,[0,[0,56,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","das","Datum","und","die","Identifikationsnummer","des","Transkripts","mit","mindestens","2","Kursresultaten","."],"question":"Zeige das Datum und die Identifikationsnummer des Transkripts mit mindestens 2 Kursresultaten."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"","query_toks":["SELECT","document_name",",","template_id","FROM","Documents","WHERE","Document_Description","LIKE","``","%","w","%","''"],"query_toks_no_value":["select","document_name",",","template_id","from","documents","where","document_description","like","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,10,false],null]]]],"union":null,"where":[[false,9,[0,[0,12,false],null],"\"%w%\"",null]]},"question_toks":["Rufen","Sie","die","Namen","und","Vorlagen-IDs","f\u00fcr","Dokumente","ab",",","die","den","Buchstaben","w","in","ihrer","Beschreibung","enthalten","."],"question":"Rufen Sie die Namen und Vorlagen-IDs f\u00fcr Dokumente ab, die den Buchstaben w in ihrer Beschreibung enthalten."},{"db_id":"orchestra","query":"SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID","query_toks":["SELECT","T1.Name",",","T2.Orchestra","FROM","conductor","AS","T1","JOIN","orchestra","AS","T2","ON","T1.Conductor_ID","=","T2.Conductor_ID"],"query_toks_no_value":["select","t1",".","name",",","t2",".","orchestra","from","conductor","as","t1","join","orchestra","as","t2","on","t1",".","conductor_id","=","t2",".","conductor_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","die","Namen","von","Dirigenten","und","der","Orchester",",","die","sie","dirigiert","haben","?"],"question":"Zeige die Namen von Dirigenten und der Orchester, die sie dirigiert haben?"},{"db_id":"car_1","query":"SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;","query_toks":["SELECT","T2.CountryName","FROM","CAR_MAKERS","AS","T1","JOIN","COUNTRIES","AS","T2","ON","T1.Country","=","T2.CountryId","GROUP","BY","T1.Country","ORDER","BY","Count","(","*",")","DESC","LIMIT","1",";"],"query_toks_no_value":["select","t2",".","countryname","from","car_makers","as","t1","join","countries","as","t2","on","t1",".","country","=","t2",".","countryid","group","by","t1",".","country","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,9,false],null],[0,3,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,9,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,4,false],null]]]],"union":null,"where":[]},"question_toks":["Was","der","Name","des","Landes","mit","den","meisten","Autoherstellern","?"],"question":"Was der Name des Landes mit den meisten Autoherstellern?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2","query_toks":["SELECT","document_id","FROM","Paragraphs","GROUP","BY","document_id","HAVING","count","(","*",")","BETWEEN","1","AND","2"],"query_toks_no_value":["select","document_id","from","paragraphs","group","by","document_id","having","count","(","*",")","between","value","and","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,15,false]],"having":[[false,1,[0,[3,0,false],null],1.0,2.0]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","Dokument-ID","mit","1","bis","2","Abs\u00e4tzen","?"],"question":"Was ist die Dokument-ID mit 1 bis 2 Abs\u00e4tzen?"},{"db_id":"flight_2","query":"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"","query_toks":["SELECT","Airline",",","Abbreviation","FROM","AIRLINES","WHERE","Country","=","``","USA","''"],"query_toks_no_value":["select","airline",",","abbreviation","from","airlines","where","country","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[[false,2,[0,[0,4,false],null],"\"USA\"",null]]},"question_toks":["Welches","sind","die","Namen","der","Fluglinien","und","deren","Abk\u00fcrzungen","in","den","USA","?"],"question":"Welches sind die Namen der Fluglinien und deren Abk\u00fcrzungen in den USA?"},{"db_id":"dog_kennels","query":"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.owner_id",",","T2.first_name",",","T2.last_name","FROM","Dogs","AS","T1","JOIN","Owners","AS","T2","ON","T1.owner_id","=","T2.owner_id","GROUP","BY","T1.owner_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","owner_id",",","t2",".","first_name",",","t2",".","last_name","from","dogs","as","t1","join","owners","as","t2","on","t1",".","owner_id","=","t2",".","owner_id","group","by","t1",".","owner_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,21,false],null],[0,10,false],null]],"table_units":[["table_unit",5],["table_unit",4]]},"groupBy":[[0,21,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,21,false],null]],[0,[0,[0,11,false],null]],[0,[0,[0,12,false],null]]]],"union":null,"where":[]},"question_toks":["Die","Besitzer-ID",",","den","Vornamen","und","den","Nachnamen","des","Besitzers",",","der","die","meisten","Hunde","hat",",","abrufen","."],"question":"Die Besitzer-ID, den Vornamen und den Nachnamen des Besitzers, der die meisten Hunde hat, abrufen."},{"db_id":"tvshow","query":"SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";","query_toks":["SELECT","Title","FROM","Cartoon","WHERE","Directed_by","=","``","Ben","Jones","''","OR","Directed_by","=","``","Brandon","Vietti","''",";"],"query_toks_no_value":["select","title","from","cartoon","where","directed_by","=","value","or","directed_by","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[[false,2,[0,[0,21,false],null],"\"Ben Jones\"",null],"or",[false,2,[0,[0,21,false],null],"\"Brandon Vietti\"",null]]},"question_toks":["Listen","Sie","die","Titel","aller","Cartoons","auf",",","bei","denen","``","Ben","Jones","''","oder","Brandon","Vietti","''","Regie","f\u00fchrten","."],"question":"Listen Sie die Titel aller Cartoons auf, bei denen \"Ben Jones\" oder Brandon Vietti\" Regie f\u00fchrten."},{"db_id":"battle_death","query":"SELECT name ,  date FROM battle","query_toks":["SELECT","name",",","date","FROM","battle"],"query_toks_no_value":["select","name",",","date","from","battle"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]],[0,[0,[0,3,false],null]]]],"union":null,"where":[]},"question_toks":["Listen","Sie","f\u00fcr","jede","Schlacht","den","Namen",",","das","Datum","und","das","Ergebnis","auf","."],"question":"Listen Sie f\u00fcr jede Schlacht den Namen, das Datum und das Ergebnis auf."},{"db_id":"employee_hire_evaluation","query":"SELECT sum(bonus) FROM evaluation","query_toks":["SELECT","sum","(","bonus",")","FROM","evaluation"],"query_toks_no_value":["select","sum","(","bonus",")","from","evaluation"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[4,[0,[0,17,false],null]]]],"union":null,"where":[]},"question_toks":["Finde","die","gesamte","Menge","an","Bonus","heraus","in","allen","Evaluierungen","."],"question":"Finde die gesamte Menge an Bonus heraus in allen Evaluierungen."},{"db_id":"singer","query":"SELECT Birth_Year ,  Citizenship FROM singer","query_toks":["SELECT","Birth_Year",",","Citizenship","FROM","singer"],"query_toks_no_value":["select","birth_year",",","citizenship","from","singer"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,3,false],null]],[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","sind","das","Geburtsjahr","und","die","Staatsangeh\u00f6rigkeit","der","S\u00e4ngerInnen","?"],"question":"Welches sind das Geburtsjahr und die Staatsangeh\u00f6rigkeit der S\u00e4ngerInnen?"},{"db_id":"poker_player","query":"SELECT count(*) FROM poker_player","query_toks":["SELECT","count","(","*",")","FROM","poker_player"],"query_toks_no_value":["select","count","(","*",")","from","poker_player"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Poker-Spieler","gibt","es","?"],"question":"Wie viele Poker-Spieler gibt es?"},{"db_id":"wta_1","query":"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","query_toks":["SELECT","count","(","*",")",",","YEAR","FROM","matches","GROUP","BY","YEAR"],"query_toks_no_value":["select","count","(","*",")",",","year","from","matches","group","by","year"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,38,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,38,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Partien","fanden","in","jedem","Jahr","statt","?"],"question":"Wie viele Partien fanden in jedem Jahr statt?"},{"db_id":"dog_kennels","query":"SELECT email_address ,  cell_number ,  home_phone FROM professionals","query_toks":["SELECT","email_address",",","cell_number",",","home_phone","FROM","professionals"],"query_toks_no_value":["select","email_address",",","cell_number",",","home_phone","from","professionals"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,41,false],null]],[0,[0,[0,43,false],null]],[0,[0,[0,42,false],null]]]],"union":null,"where":[]},"question_toks":["Liste","die","E-Mails",",","Mobilnummern","und","h\u00e4uslichen","Telefonnummern","auf","von","allen","Professionellen","."],"question":"Liste die E-Mails, Mobilnummern und h\u00e4uslichen Telefonnummern auf von allen Professionellen."},{"db_id":"student_transcripts_tracking","query":"SELECT course_description FROM Courses WHERE course_name  =  'math'","query_toks":["SELECT","course_description","FROM","Courses","WHERE","course_name","=","'math","'"],"query_toks_no_value":["select","course_description","from","courses","where","course_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,12,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"math\"",null]]},"question_toks":["Wie","lauten","die","Beschreibungen","f\u00fcr","alle","Mathematikkurse","?"],"question":"Wie lauten die Beschreibungen f\u00fcr alle Mathematikkurse?"},{"db_id":"network_1","query":"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id","query_toks":["SELECT","student_id",",","count","(","*",")","FROM","Likes","GROUP","BY","student_id"],"query_toks_no_value":["select","student_id",",","count","(","*",")","from","likes","group","by","student_id"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,6,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Z\u00e4hle","die","Likes","f\u00fcr","jede","Studenten-ID","."],"question":"Z\u00e4hle die Likes f\u00fcr jede Studenten-ID."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","query_toks":["SELECT","template_type_code",",","count","(","*",")","FROM","Templates","GROUP","BY","template_type_code"],"query_toks_no_value":["select","template_type_code",",","count","(","*",")","from","templates","group","by","template_type_code"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Zeige","alle","Vorlagentyp-Codes","und","die","Anzahl","der","jeweiligen","Vorlagen","an","."],"question":"Zeige alle Vorlagentyp-Codes und die Anzahl der jeweiligen Vorlagen an. "},{"db_id":"singer","query":"SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955","query_toks":["SELECT","Citizenship","FROM","singer","WHERE","Birth_Year","<","1945","INTERSECT","SELECT","Citizenship","FROM","singer","WHERE","Birth_Year",">","1955"],"query_toks_no_value":["select","citizenship","from","singer","where","birth_year","<","value","intersect","select","citizenship","from","singer","where","birth_year",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,3,[0,[0,3,false],null],1955.0,null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[[false,4,[0,[0,3,false],null],1945.0,null]]},"question_toks":["Die","gemeinsame","Staatsangeh\u00f6rigkeit","von","S\u00e4ngern","mit","Geburtsjahr","vor","1945","und","nach","1955","zeigen","."],"question":"Die gemeinsame Staatsangeh\u00f6rigkeit von S\u00e4ngern mit Geburtsjahr vor 1945 und nach 1955 zeigen."},{"db_id":"student_transcripts_tracking","query":"SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'","query_toks":["SELECT","T1.first_name","FROM","Students","AS","T1","JOIN","Addresses","AS","T2","ON","T1.permanent_address_id","=","T2.address_id","WHERE","T2.country","=","'Haiti","'","UNION","SELECT","first_name","FROM","Students","WHERE","cell_mobile_number","=","'09700166582","'"],"query_toks_no_value":["select","t1",".","first_name","from","students","as","t1","join","addresses","as","t2","on","t1",".","permanent_address_id","=","t2",".","address_id","where","t2",".","country","=","value","union","select","first_name","from","students","where","cell_mobile_number","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,34,false],null],[0,1,false],null]],"table_units":[["table_unit",6],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]]]],"union":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],"\"09700166582\"",null]]},"where":[[false,2,[0,[0,8,false],null],"\"Haiti\"",null]]},"question_toks":["Suche","den","Vornamen","der","Studenten",",","die","permanent","im","Land","Haiti","wohnen","oder","die","Mobilnummer","09700166582","haben","."],"question":"Suche den Vornamen der Studenten, die permanent im Land Haiti wohnen oder die Mobilnummer 09700166582 haben."},{"db_id":"employee_hire_evaluation","query":"SELECT count(*) FROM employee","query_toks":["SELECT","count","(","*",")","FROM","employee"],"query_toks_no_value":["select","count","(","*",")","from","employee"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","Angestellte","gibt","es","?"],"question":"Wie viele Angestellte gibt es?"},{"db_id":"student_transcripts_tracking","query":"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.degree_program_id",",","T1.degree_summary_name","FROM","Degree_Programs","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.degree_program_id","=","T2.degree_program_id","GROUP","BY","T1.degree_program_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","degree_program_id",",","t1",".","degree_summary_name","from","degree_programs","as","t1","join","student_enrolment","as","t2","on","t1",".","degree_program_id","=","t2",".","degree_program_id","group","by","t1",".","degree_program_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,18,false],null],[0,45,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[[0,18,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,18,false],null]],[0,[0,[0,20,false],null]]]],"union":null,"where":[]},"question_toks":["Ermitteln","Sie","das","Studiengang",",","in","dem","die","meisten","Studenten","eingeschrieben","sind",".","Listen","Sie","sowohl","die","ID","als","auch","die","Zusammenfassung","auf","."],"question":"Ermitteln Sie das Studiengang, in dem die meisten Studenten eingeschrieben sind. Listen Sie sowohl die ID als auch die Zusammenfassung auf."},{"db_id":"dog_kennels","query":"SELECT avg(age) FROM Dogs","query_toks":["SELECT","avg","(","age",")","FROM","Dogs"],"query_toks_no_value":["select","avg","(","age",")","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,26,false],null]]]],"union":null,"where":[]},"question_toks":["Berechne","das","Durchschnittsalter","aller","Hunde","."],"question":"Berechne das Durchschnittsalter aller Hunde."},{"db_id":"student_transcripts_tracking","query":"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","query_toks":["SELECT","T1.first_name",",","T1.middle_name",",","T1.last_name",",","T1.student_id","FROM","Students","AS","T1","JOIN","Student_Enrolment","AS","T2","ON","T1.student_id","=","T2.student_id","GROUP","BY","T1.student_id","HAVING","count","(","*",")","=","2"],"query_toks_no_value":["select","t1",".","first_name",",","t1",".","middle_name",",","t1",".","last_name",",","t1",".","student_id","from","students","as","t1","join","student_enrolment","as","t2","on","t1",".","student_id","=","t2",".","student_id","group","by","t1",".","student_id","having","count","(","*",")","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,32,false],null],[0,47,false],null]],"table_units":[["table_unit",6],["table_unit",7]]},"groupBy":[[0,32,false]],"having":[[false,2,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]],[0,[0,[0,32,false],null]]]],"union":null,"where":[]},"question_toks":["Wer","ist","in","einem","Semester","in","2","Studieng\u00e4ngen","immatrikuliert","?","Liste","den","Vornamen",",","den","Mittel-","und","Nachnamen","und","die","ID","auf","."],"question":"Wer ist in einem Semester in 2 Studieng\u00e4ngen immatrikuliert? Liste den Vornamen, den Mittel- und Nachnamen und die ID auf."},{"db_id":"network_1","query":"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"","query_toks":["SELECT","T3.name","FROM","Friend","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","JOIN","Highschooler","AS","T3","ON","T1.friend_id","=","T3.id","WHERE","T2.name","=","``","Kyle","''"],"query_toks_no_value":["select","t3",".","name","from","friend","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","join","highschooler","as","t3","on","t1",".","friend_id","=","t3",".","id","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,4,false],null],[0,1,false],null]],"table_units":[["table_unit",1],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Gebe","die","Namen","der","Freunde","des","Gymnasiasten","Kyle","zur\u00fcck","."],"question":"Gebe die Namen der Freunde des Gymnasiasten Kyle zur\u00fcck."},{"db_id":"battle_death","query":"SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'","query_toks":["SELECT","count","(","*",")","FROM","ship","WHERE","disposition_of_ship","=","'Captured","'"],"query_toks_no_value":["select","count","(","*",")","from","ship","where","disposition_of_ship","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,13,false],null],"\"Captured\"",null]]},"question_toks":["Wie","viele","Schiffe","wurden","am","Ende","``","gefangen","genommen","''","?"],"question":"Wie viele Schiffe wurden am Ende \"gefangen genommen\"?"},{"db_id":"singer","query":"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","query_toks":["SELECT","T2.Title",",","T1.Name","FROM","singer","AS","T1","JOIN","song","AS","T2","ON","T1.Singer_ID","=","T2.Singer_ID"],"query_toks_no_value":["select","t2",".","title",",","t1",".","name","from","singer","as","t1","join","song","as","t2","on","t1",".","singer_id","=","t2",".","singer_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,7,false],null]],[0,[0,[0,2,false],null]]]],"union":null,"where":[]},"question_toks":["Titel","von","Liedern","und","Namen","von","S\u00e4ngern","anzeigen","."],"question":"Titel von Liedern und Namen von S\u00e4ngern anzeigen."},{"db_id":"car_1","query":"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","query_toks":["SELECT","T1.ContId",",","T1.Continent",",","count","(","*",")","FROM","CONTINENTS","AS","T1","JOIN","COUNTRIES","AS","T2","ON","T1.ContId","=","T2.Continent","GROUP","BY","T1.ContId",";"],"query_toks_no_value":["select","t1",".","contid",",","t1",".","continent",",","count","(","*",")","from","continents","as","t1","join","countries","as","t2","on","t1",".","contid","=","t2",".","continent","group","by","t1",".","contid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,5,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","L\u00e4nder","gibt","es","auf","jedem","Kontinent","?","Liste","die","Kontinentbezeichnung",",","den","Namen","des","Kontinents","und","die","Anzahl","der","L\u00e4nder","auf","."],"question":"Wie viele L\u00e4nder gibt es auf jedem Kontinent? Liste die Kontinentbezeichnung, den Namen des Kontinents und die Anzahl der L\u00e4nder auf."},{"db_id":"tvshow","query":"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";","query_toks":["SELECT","T2.Episode","FROM","TV_Channel","AS","T1","JOIN","TV_series","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T1.series_name","=","``","Sky","Radio","''",";"],"query_toks_no_value":["select","t2",".","episode","from","tv_channel","as","t1","join","tv_series","as","t2","on","t1",".","id","=","t2",".","channel","where","t1",".","series_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,18,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Sky Radio\"",null]]},"question_toks":["``","Listen","Sie","die","Episode","aller","auf","dem","Fernsehkanal","gezeigten","TV-Serien","mit","dem","Seriennamen","``","''","Sky","Radio","''","auf",".","''"],"question":"\"Listen Sie die Episode aller auf dem Fernsehkanal gezeigten TV-Serien mit dem Seriennamen \"\"Sky Radio\" auf.\""},{"db_id":"car_1","query":"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","query_toks":["SELECT","T1.ContId",",","T1.Continent",",","count","(","*",")","FROM","CONTINENTS","AS","T1","JOIN","COUNTRIES","AS","T2","ON","T1.ContId","=","T2.Continent","GROUP","BY","T1.ContId",";"],"query_toks_no_value":["select","t1",".","contid",",","t1",".","continent",",","count","(","*",")","from","continents","as","t1","join","countries","as","t2","on","t1",".","contid","=","t2",".","continent","group","by","t1",".","contid"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,5,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[[0,1,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,1,false],null]],[0,[0,[0,2,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Gib","f\u00fcr","jeden","Kontinent","seine","Bezeichnung",",","seinen","Namen","und","die","Anzahl","seiner","L\u00e4nder","an","."],"question":"Gib f\u00fcr jeden Kontinent seine Bezeichnung, seinen Namen und die Anzahl seiner L\u00e4nder an."},{"db_id":"world_1","query":"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode","query_toks":["SELECT","count","(","*",")",",","max","(","Percentage",")","FROM","countrylanguage","WHERE","LANGUAGE","=","``","Spanish","''","GROUP","BY","CountryCode"],"query_toks_no_value":["select","count","(","*",")",",","max","(","percentage",")","from","countrylanguage","where","language","=","value","group","by","countrycode"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",3]]},"groupBy":[[0,23,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[1,[0,[0,26,false],null]]]],"union":null,"where":[[false,2,[0,[0,24,false],null],"\"Spanish\"",null]]},"question_toks":["Die","Anzahl","der","L\u00e4nder","z\u00e4hlen",",","in","denen","Spanisch","die","\u00fcberwiegend","gesprochene","Sprache","ist","."],"question":"Die Anzahl der L\u00e4nder z\u00e4hlen, in denen Spanisch die \u00fcberwiegend gesprochene Sprache ist."},{"db_id":"singer","query":"SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000","query_toks":["SELECT","DISTINCT","T1.Name","FROM","singer","AS","T1","JOIN","song","AS","T2","ON","T1.Singer_ID","=","T2.Singer_ID","WHERE","T2.Sales",">","300000"],"query_toks_no_value":["select","distinct","t1",".","name","from","singer","as","t1","join","song","as","t2","on","t1",".","singer_id","=","t2",".","singer_id","where","t2",".","sales",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,8,false],null]],"table_units":[["table_unit",0],["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,3,[0,[0,9,false],null],300000.0,null]]},"question_toks":["Zeigen","Sie","eindeutige","Namen","von","S\u00e4ngern","an",",","die","Lieder","mit","mehr","als","300000","verkauften","Liedern","haben","."],"question":"Zeigen Sie eindeutige Namen von S\u00e4ngern an, die Lieder mit mehr als 300000 verkauften Liedern haben."},{"db_id":"world_1","query":"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","query_toks":["SELECT","COUNT","(","T2.Language",")",",","T1.Name","FROM","country","AS","T1","JOIN","countrylanguage","AS","T2","ON","T1.Code","=","T2.CountryCode","GROUP","BY","T1.Name","HAVING","COUNT","(","*",")",">","2"],"query_toks_no_value":["select","count","(","t2",".","language",")",",","t1",".","name","from","country","as","t1","join","countrylanguage","as","t2","on","t1",".","code","=","t2",".","countrycode","group","by","t1",".","name","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,23,false],null]],"table_units":[["table_unit",2],["table_unit",3]]},"groupBy":[[0,9,false]],"having":[[false,3,[0,[3,0,false],null],2.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,24,false],null]],[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Namen","der","L\u00e4nder",",","die","mehr","als","2","Sprachen","sprechen",",","und","wie","viele","Sprachen","sprechen","sie","?"],"question":"Wie lauten die Namen der L\u00e4nder, die mehr als 2 Sprachen sprechen, und wie viele Sprachen sprechen sie?"},{"db_id":"wta_1","query":"SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50","query_toks":["SELECT","country_code","FROM","players","GROUP","BY","country_code","HAVING","count","(","*",")",">","50"],"query_toks_no_value":["select","country_code","from","players","group","by","country_code","having","count","(","*",")",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,6,false]],"having":[[false,3,[0,[3,0,false],null],50.0,null]],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lauten","die","Codes","von","L\u00e4ndern","mit","mehr","als","50","Spielern","?"],"question":"Wie lauten die Codes von L\u00e4ndern mit mehr als 50 Spielern?"},{"db_id":"real_estate_properties","query":"SELECT count(*) FROM Other_Available_Features","query_toks":["SELECT","count","(","*",")","FROM","Other_Available_Features"],"query_toks_no_value":["select","count","(","*",")","from","other_available_features"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viele","verf\u00fcgbare","Funktionen","gibt","es","insgesamt","?"],"question":"Wie viele verf\u00fcgbare Funktionen gibt es insgesamt?"},{"db_id":"world_1","query":"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District","query_toks":["SELECT","count","(","*",")",",","District","FROM","city","WHERE","Population",">","(","SELECT","avg","(","Population",")","FROM","city",")","GROUP","BY","District"],"query_toks_no_value":["select","count","(","*",")",",","district","from","city","where","population",">","(","select","avg","(","population",")","from","city",")","group","by","district"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,4,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]],[0,[0,[0,4,false],null]]]],"union":null,"where":[[false,3,[0,[0,5,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[5,[0,[0,5,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Finden","Sie","in","jedem","Bezirk","die","Anzahl","der","St\u00e4dte",",","deren","Bev\u00f6lkerung","gr\u00f6\u00dfer","ist","als","die","durchschnittliche","Einwohnerzahl","der","St\u00e4dte","?"],"question":"Finden Sie in jedem Bezirk die Anzahl der St\u00e4dte, deren Bev\u00f6lkerung gr\u00f6\u00dfer ist als die durchschnittliche Einwohnerzahl der St\u00e4dte?"},{"db_id":"dog_kennels","query":"SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )","query_toks":["SELECT","count","(","*",")","FROM","Owners","WHERE","owner_id","NOT","IN","(","SELECT","owner_id","FROM","Dogs",")"],"query_toks_no_value":["select","count","(","*",")","from","owners","where","owner_id","not","in","(","select","owner_id","from","dogs",")"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[true,8,[0,[0,10,false],null],{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,21,false],null]]]],"union":null,"where":[]},null]]},"question_toks":["Ermitteln","Sie","die","Anzahl","der","Besitzer",",","die","im","Moment","keine","Hunde","besitzen","."],"question":"Ermitteln Sie die Anzahl der Besitzer, die im Moment keine Hunde besitzen."},{"db_id":"car_1","query":"SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;","query_toks":["SELECT","Model","FROM","CAR_NAMES","GROUP","BY","Model","ORDER","BY","count","(","*",")","DESC","LIMIT","1",";"],"query_toks_no_value":["select","model","from","car_names","group","by","model","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[[0,14,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,14,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","Modell","hat","die","vielf\u00e4ltigsten","Varianten","?"],"question":"Welches Modell hat die vielf\u00e4ltigsten Varianten?"},{"db_id":"student_transcripts_tracking","query":"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","query_toks":["SELECT","first_name",",","middle_name",",","last_name","FROM","Students","ORDER","BY","date_first_registered","ASC","LIMIT","1"],"query_toks_no_value":["select","first_name",",","middle_name",",","last_name","from","students","order","by","date_first_registered","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,41,false],null]]],"select":[false,[[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","der","Vor-",",","Mittel-","und","Nachname","des","ersten","Studierenden",",","der","sich","einschreibt","?"],"question":"Wie lautet der Vor-, Mittel- und Nachname des ersten Studierenden, der sich einschreibt?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","query_toks":["SELECT","T1.template_type_code",",","count","(","*",")","FROM","Templates","AS","T1","JOIN","Documents","AS","T2","ON","T1.template_id","=","T2.template_id","GROUP","BY","T1.template_type_code"],"query_toks_no_value":["select","t1",".","template_type_code",",","count","(","*",")","from","templates","as","t1","join","documents","as","t2","on","t1",".","template_id","=","t2",".","template_id","group","by","t1",".","template_type_code"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,3,false],null],[0,10,false],null]],"table_units":[["table_unit",1],["table_unit",2]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","verschiedenen","Codes","f\u00fcr","Vorlagentypen","und","wie","viele","Dokumente","verwenden","jeden","Typ","?"],"question":"Was sind die verschiedenen Codes f\u00fcr Vorlagentypen und wie viele Dokumente verwenden jeden Typ?"},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","T1.document_id",",","T2.document_name","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_id","=","T2.document_id","GROUP","BY","T1.document_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t1",".","document_id",",","t2",".","document_name","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","group","by","t1",".","document_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[[0,15,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,15,false],null]],[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","die","ID","und","den","Namen","des","Dokuments","mit","den","meisten","Abs\u00e4tzen","zur\u00fcck","."],"question":"Geben Sie die ID und den Namen des Dokuments mit den meisten Abs\u00e4tzen zur\u00fcck."},{"db_id":"singer","query":"SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1","query_toks":["SELECT","Citizenship","FROM","singer","GROUP","BY","Citizenship","ORDER","BY","COUNT","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","citizenship","from","singer","group","by","citizenship","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",0]]},"groupBy":[[0,5,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Was","ist","die","h\u00e4ufigste","Staatsb\u00fcrgerschaft","von","S\u00e4ngern","?"],"question":"Was ist die h\u00e4ufigste Staatsb\u00fcrgerschaft von S\u00e4ngern? "},{"db_id":"dog_kennels","query":"SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs","query_toks":["SELECT","first_name","FROM","Professionals","UNION","SELECT","first_name","FROM","Owners","EXCEPT","SELECT","name","FROM","Dogs"],"query_toks_no_value":["select","first_name","from","professionals","union","select","first_name","from","owners","except","select","name","from","dogs"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,35,false],null]]]],"union":{"except":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,25,false],null]]]],"union":null,"where":[]},"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]]]],"union":null,"where":[]},"where":[]},"question_toks":["Welche","Vornamen","werden","f\u00fcr","Profis","oder","Besitzer","verwendet",",","aber","nicht","als","Hundenamen","verwendet","?"],"question":"Welche Vornamen werden f\u00fcr Profis oder Besitzer verwendet, aber nicht als Hundenamen verwendet?"},{"db_id":"network_1","query":"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"","query_toks":["SELECT","count","(","*",")","FROM","Likes","AS","T1","JOIN","Highschooler","AS","T2","ON","T1.student_id","=","T2.id","WHERE","T2.name","=","``","Kyle","''"],"query_toks_no_value":["select","count","(","*",")","from","likes","as","t1","join","highschooler","as","t2","on","t1",".","student_id","=","t2",".","id","where","t2",".","name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,6,false],null],[0,1,false],null]],"table_units":[["table_unit",2],["table_unit",0]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Kyle\"",null]]},"question_toks":["Geben","Sie","die","Anzahl","der","Likes","zur\u00fcck",",","die","der","Gymnasiast","namens","Kyle","hat","."],"question":"Geben Sie die Anzahl der Likes zur\u00fcck, die der Gymnasiast namens Kyle hat."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT DISTINCT template_type_code FROM Templates","query_toks":["SELECT","DISTINCT","template_type_code","FROM","Templates"],"query_toks_no_value":["select","distinct","template_type_code","from","templates"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[true,[[0,[0,[0,5,false],null]]]],"union":null,"where":[]},"question_toks":["Was","sind","die","verschiedenen","Vorlagentypencodes","?"],"question":"Was sind die verschiedenen Vorlagentypencodes?"},{"db_id":"student_transcripts_tracking","query":"SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'","query_toks":["SELECT","cell_mobile_number","FROM","Students","WHERE","first_name","=","'Timmothy","'","AND","last_name","=","'Ward","'"],"query_toks_no_value":["select","cell_mobile_number","from","students","where","first_name","=","value","and","last_name","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,38,false],null]]]],"union":null,"where":[[false,2,[0,[0,35,false],null],"\"Timmothy\"",null],"and",[false,2,[0,[0,37,false],null],"\"Ward\"",null]]},"question_toks":["Wie","lautet","die","Mobiltelefonnummer","des","Studenten","namens","Timothy","Ward","?"],"question":"Wie lautet die Mobiltelefonnummer des Studenten namens Timothy Ward?"},{"db_id":"wta_1","query":"SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016","query_toks":["SELECT","count","(","*",")","FROM","matches","WHERE","YEAR","=","2013","OR","YEAR","=","2016"],"query_toks_no_value":["select","count","(","*",")","from","matches","where","year","=","value","or","year","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",1]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,2,[0,[0,38,false],null],2013.0,null],"or",[false,2,[0,[0,38,false],null],2016.0,null]]},"question_toks":["Geben","Sie","die","Anzahl","aller","Spiele","an",",","die","in","den","Jahren","2013","oder","2016","stattgefunden","haben","."],"question":"Geben Sie die Anzahl aller Spiele an, die in den Jahren 2013 oder 2016 stattgefunden haben."},{"db_id":"student_transcripts_tracking","query":"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","query_toks":["SELECT","first_name",",","middle_name",",","last_name","FROM","Students","ORDER","BY","date_first_registered","ASC","LIMIT","1"],"query_toks_no_value":["select","first_name",",","middle_name",",","last_name","from","students","order","by","date_first_registered","asc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[0,41,false],null]]],"select":[false,[[0,[0,[0,35,false],null]],[0,[0,[0,36,false],null]],[0,[0,[0,37,false],null]]]],"union":null,"where":[]},"question_toks":["Wer","ist","der","erste","Student",",","der","sich","registriert","?","Geben","Sie","den","Vornamen",",","den","zweiten","Vornamen","und","den","Nachnamen","an","."],"question":"Wer ist der erste Student, der sich registriert? Geben Sie den Vornamen, den zweiten Vornamen und den Nachnamen an."},{"db_id":"tvshow","query":"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";","query_toks":["SELECT","T2.Title","FROM","TV_Channel","AS","T1","JOIN","Cartoon","AS","T2","ON","T1.id","=","T2.Channel","WHERE","T1.series_name","=","``","Sky","Radio","''",";"],"query_toks_no_value":["select","t2",".","title","from","tv_channel","as","t1","join","cartoon","as","t2","on","t1",".","id","=","t2",".","channel","where","t1",".","series_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,25,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,20,false],null]]]],"union":null,"where":[[false,2,[0,[0,2,false],null],"\"Sky Radio\"",null]]},"question_toks":["``","Listen","Sie","den","Titel","aller","im","TV-Kanal","gezeigten","Zeichentrickfilme","mit","dem","Seriennamen","``","''","Sky","Radio","''","''","auf","."],"question":"\"Listen Sie den Titel aller im TV-Kanal gezeigten Zeichentrickfilme mit dem Seriennamen \"\"Sky Radio\"\" auf."},{"db_id":"pets_1","query":"SELECT petid ,  weight FROM pets WHERE pet_age  >  1","query_toks":["SELECT","petid",",","weight","FROM","pets","WHERE","pet_age",">","1"],"query_toks_no_value":["select","petid",",","weight","from","pets","where","pet_age",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,11,false],null]],[0,[0,[0,14,false],null]]]],"union":null,"where":[[false,3,[0,[0,13,false],null],1.0,null]]},"question_toks":["Welches","Identit\u00e4tsmerkmal","und","Gewicht","hat","jedes","Haustier",",","das","\u00e4lter","als","1","Jahr","ist","?"],"question":"Welches Identit\u00e4tsmerkmal und Gewicht hat jedes Haustier, das \u00e4lter als 1 Jahr ist?"},{"db_id":"flight_2","query":"SELECT count(*) FROM FLIGHTS","query_toks":["SELECT","count","(","*",")","FROM","FLIGHTS"],"query_toks_no_value":["select","count","(","*",")","from","flights"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[]},"question_toks":["Geben","Sie","die","Anzahl","der","Fl\u00fcge","zur\u00fcck","."],"question":"Geben Sie die Anzahl der Fl\u00fcge zur\u00fcck."},{"db_id":"cre_Doc_Template_Mgt","query":"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"","query_toks":["SELECT","T1.paragraph_text","FROM","Paragraphs","AS","T1","JOIN","Documents","AS","T2","ON","T1.document_id","=","T2.document_id","WHERE","T2.document_name","=","``","Customer","reviews","''"],"query_toks_no_value":["select","t1",".","paragraph_text","from","paragraphs","as","t1","join","documents","as","t2","on","t1",".","document_id","=","t2",".","document_id","where","t2",".","document_name","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,15,false],null],[0,9,false],null]],"table_units":[["table_unit",3],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,16,false],null]]]],"union":null,"where":[[false,2,[0,[0,11,false],null],"\"Customer reviews\"",null]]},"question_toks":["``","Alle","Absatztexte","f\u00fcr","das","Dokument","''","``","Kundenbewertungen","''","anzeigen",".","''"],"question":"\"Alle Absatztexte f\u00fcr das Dokument\" \"Kundenbewertungen\" anzeigen.\""},{"db_id":"concert_singer","query":"SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","YEAR","FROM","concert","GROUP","BY","YEAR","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","year","from","concert","group","by","year","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[[0,19,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,19,false],null]]]],"union":null,"where":[]},"question_toks":["Welches","Jahr","hat","die","meisten","Konzerte","?"],"question":"Welches Jahr hat die meisten Konzerte?"},{"db_id":"dog_kennels","query":"SELECT state FROM Owners INTERSECT SELECT state FROM Professionals","query_toks":["SELECT","state","FROM","Owners","INTERSECT","SELECT","state","FROM","Professionals"],"query_toks_no_value":["select","state","from","owners","intersect","select","state","from","professionals"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",4]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[],"table_units":[["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,38,false],null]]]],"union":null,"where":[]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,15,false],null]]]],"union":null,"where":[]},"question_toks":["In","welchen","Bundesstaaten","leben","sowohl","Eigent\u00fcmer","als","auch","Fachleute","?"],"question":"In welchen Bundesstaaten leben sowohl Eigent\u00fcmer als auch Fachleute?"},{"db_id":"dog_kennels","query":"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","query_toks":["SELECT","T1.date_of_treatment",",","T2.first_name","FROM","Treatments","AS","T1","JOIN","Professionals","AS","T2","ON","T1.professional_id","=","T2.professional_id"],"query_toks_no_value":["select","t1",".","date_of_treatment",",","t2",".","first_name","from","treatments","as","t1","join","professionals","as","t2","on","t1",".","professional_id","=","t2",".","professional_id"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,46,false],null],[0,33,false],null]],"table_units":[["table_unit",7],["table_unit",6]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,48,false],null]],[0,[0,[0,35,false],null]]]],"union":null,"where":[]},"question_toks":["Listen","Sie","das","Datum","jeder","Behandlung","auf",",","zusammen","mit","dem","Vornamen","der","Fachperson",",","die","sie","durchgef\u00fchrt","hat","."],"question":"Listen Sie das Datum jeder Behandlung auf, zusammen mit dem Vornamen der Fachperson, die sie durchgef\u00fchrt hat."},{"db_id":"car_1","query":"SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;","query_toks":["SELECT","count","(","*",")","FROM","CARS_DATA","WHERE","horsepower",">","150",";"],"query_toks_no_value":["select","count","(","*",")","from","cars_data","where","horsepower",">","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",5]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[3,[0,[0,0,false],null]]]],"union":null,"where":[[false,3,[0,[0,20,false],null],150.0,null]]},"question_toks":["Wie","viele","Autos","mit","mehr","als","150","Pferdest\u00e4rken","gibt","es","?"],"question":"Wie viele Autos mit mehr als 150 Pferdest\u00e4rken gibt es?"},{"db_id":"voter_1","query":"SELECT vote_id ,  phone_number ,  state FROM votes","query_toks":["SELECT","vote_id",",","phone_number",",","state","FROM","votes"],"query_toks_no_value":["select","vote_id",",","phone_number",",","state","from","votes"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,5,false],null]],[0,[0,[0,6,false],null]],[0,[0,[0,7,false],null]]]],"union":null,"where":[]},"question_toks":["Listen","Sie","die","Stimmerkennungen",",","Telefonnummern","und","Zust\u00e4nde","aller","Stimmen","auf","."],"question":"Listen Sie die Stimmerkennungen, Telefonnummern und Zust\u00e4nde aller Stimmen auf."},{"db_id":"world_1","query":"SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"","query_toks":["SELECT","Name","FROM","country","WHERE","continent","=","``","Europe","''","AND","Population","=","``","80000","''"],"query_toks_no_value":["select","name","from","country","where","continent","=","value","and","population","=","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[[false,2,[0,[0,10,false],null],"\"Europe\"",null],"and",[false,2,[0,[0,14,false],null],"\"80000\"",null]]},"question_toks":["Wie","lauten","die","Namen","der","L\u00e4nder","des","Kontinents","Europa","mit","einer","Bev\u00f6lkerung","von","80000","Einwohnern","?"],"question":"Wie lauten die Namen der L\u00e4nder des Kontinents Europa mit einer Bev\u00f6lkerung von 80000 Einwohnern?"},{"db_id":"employee_hire_evaluation","query":"SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1","query_toks":["SELECT","t2.name","FROM","hiring","AS","t1","JOIN","shop","AS","t2","ON","t1.shop_id","=","t2.shop_id","GROUP","BY","t1.shop_id","ORDER","BY","count","(","*",")","DESC","LIMIT","1"],"query_toks_no_value":["select","t2",".","name","from","hiring","as","t1","join","shop","as","t2","on","t1",".","shop_id","=","t2",".","shop_id","group","by","t1",".","shop_id","order","by","count","(","*",")","desc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,11,false],null],[0,5,false],null]],"table_units":[["table_unit",2],["table_unit",1]]},"groupBy":[[0,11,false]],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[3,0,false],null]]],"select":[false,[[0,[0,[0,6,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","hei\u00dft","das","Gesch\u00e4ft",",","das","die","gr\u00f6\u00dfte","Anzahl","von","Mitarbeitern","einstellt","?"],"question":"Wie hei\u00dft das Gesch\u00e4ft, das die gr\u00f6\u00dfte Anzahl von Mitarbeitern einstellt?"},{"db_id":"dog_kennels","query":"SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1","query_toks":["SELECT","cost_of_treatment","FROM","Treatments","ORDER","BY","date_of_treatment","DESC","LIMIT","1"],"query_toks_no_value":["select","cost_of_treatment","from","treatments","order","by","date_of_treatment","desc","limit","value"],"sql":{"except":null,"from":{"conds":[],"table_units":[["table_unit",7]]},"groupBy":[],"having":[],"intersect":null,"limit":1,"orderBy":["desc",[[0,[0,48,false],null]]],"select":[false,[[0,[0,[0,49,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","viel","kostet","die","aktuellste","Behandlung","?"],"question":"Wie viel kostet die aktuellste Behandlung?"},{"db_id":"flight_2","query":"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"","query_toks":["SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","APG","''","INTERSECT","SELECT","T1.Airline","FROM","AIRLINES","AS","T1","JOIN","FLIGHTS","AS","T2","ON","T1.uid","=","T2.Airline","WHERE","T2.SourceAirport","=","``","CVO","''"],"query_toks_no_value":["select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value","intersect","select","t1",".","airline","from","airlines","as","t1","join","flights","as","t2","on","t1",".","uid","=","t2",".","airline","where","t2",".","sourceairport","=","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":{"except":null,"from":{"conds":[[false,2,[0,[0,1,false],null],[0,10,false],null]],"table_units":[["table_unit",0],["table_unit",2]]},"groupBy":[],"having":[],"intersect":null,"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"CVO\"",null]]},"limit":null,"orderBy":[],"select":[false,[[0,[0,[0,2,false],null]]]],"union":null,"where":[[false,2,[0,[0,12,false],null],"\"APG\"",null]]},"question_toks":["Welche","Fluggesellschaften","haben","Abfl\u00fcge","sowohl","von","APG-","als","auch","von","CVO-Flugh\u00e4fen","?"],"question":"Welche Fluggesellschaften haben Abfl\u00fcge sowohl von APG- als auch von CVO-Flugh\u00e4fen?"},{"db_id":"dog_kennels","query":"SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1","query_toks":["SELECT","T1.treatment_type_description","FROM","Treatment_types","AS","T1","JOIN","Treatments","AS","T2","ON","T1.treatment_type_code","=","T2.treatment_type_code","GROUP","BY","T1.treatment_type_code","ORDER","BY","sum","(","cost_of_treatment",")","ASC","LIMIT","1"],"query_toks_no_value":["select","t1",".","treatment_type_description","from","treatment_types","as","t1","join","treatments","as","t2","on","t1",".","treatment_type_code","=","t2",".","treatment_type_code","group","by","t1",".","treatment_type_code","order","by","sum","(","cost_of_treatment",")","asc","limit","value"],"sql":{"except":null,"from":{"conds":[[false,2,[0,[0,8,false],null],[0,47,false],null]],"table_units":[["table_unit",3],["table_unit",7]]},"groupBy":[[0,8,false]],"having":[],"intersect":null,"limit":1,"orderBy":["asc",[[0,[4,49,false],null]]],"select":[false,[[0,[0,[0,9,false],null]]]],"union":null,"where":[]},"question_toks":["Wie","lautet","die","Beschreibung","der","Behandlungsart",",","die","insgesamt","am","preisg\u00fcnstigsten","ist","?"],"question":"Wie lautet die Beschreibung der Behandlungsart, die insgesamt am preisg\u00fcnstigsten ist?"}]